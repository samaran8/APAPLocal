* @ValidationCode : MjotMTczNzg5ODM4ODpDcDEyNTI6MTY4MTk3OTU5Nzc2MTpJVFNTOi0xOi0xOjk1MToxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 20 Apr 2023 14:03:17
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 951
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOEB
SUBROUTINE REDO.AP.GEN.NCF.UNMAP(STMT.ID,R.STMT.RECORD)
*-----------------------------------------------------------------------------
*DESCRIPTION:
*------------
*This Routine will select all the charges generated during the COB
*routine
* Input/Output:
*--------------
* IN  : -NA-
* OUT : Y.STMT.LIST
*
* Dependencies:
*---------------
* CALLS : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference            Description
* 25-FEB-2012        Prabhu.N       ODR-2009-10-0321     Initial Creation
*
* 13-APR-2023     Conversion tool    R22 Auto conversion       No changes
* 13-APR-2023      Harishvikram C   Manual R22 conversion      CALL routine format modified
*--------------------------------------------------------------------------------
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.DATES
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.REDO.L.NCF.UNMAPPED
    $INSERT I_F.REDO.L.NCF.STATUS
    $INSERT I_F.REDO.NCF.ISSUED
    $INSERT I_F.REDO.COB.NCF.CHARGES
    $INSERT I_F.REDO.L.NCF.STOCK


    GOSUB INIT
    GOSUB PROCESS
RETURN
****
INIT:
****

    FN.FUNDS.TRANSFER='F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER=''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)


    FN.REDO.L.NCF.UNMAPPED='F.REDO.L.NCF.UNMAPPED'
    F.REDO.L.NCF.UNMAPPED =''
    CALL OPF(FN.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED)

    FN.REDO.L.NCF.STATUS='F.REDO.L.NCF.STATUS'
    F.REDO.L.NCF.STATUS=''
    CALL OPF(FN.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS)

    FN.REDO.NCF.ISSUED='F.REDO.NCF.ISSUED'
    F.REDO.NCF.ISSUED =''
    CALL OPF(FN.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED)

    FN.REDO.L.NCF.STOCK='F.REDO.L.NCF.STOCK'
    F.REDO.L.NCF.STOCK=''
    CALL OPF(FN.REDO.L.NCF.STOCK,F.REDO.L.NCF.STOCK)

    FN.REDO.COB.NCF.CHARGES='F.REDO.COB.NCF.CHARGES'
    CALL CACHE.READ(FN.REDO.COB.NCF.CHARGES,'SYSTEM',R.REDO.COB.NCF.CHARGES,ERR)

    Y.NCF.TXN.LIST       =R.REDO.COB.NCF.CHARGES<RC.NCF.TXN.CODE>
    Y.STMT.TXN           =R.STMT.RECORD<AC.STE.TRANSACTION.CODE>

    Y.CUSTOMER       =R.STMT.RECORD<AC.STE.CUSTOMER.ID>
    Y.TRANSACTION.CODE=R.STMT.RECORD<AC.STE.TRANSACTION.CODE>
    Y.TRANSACTION.REF=R.STMT.RECORD<AC.STE.TRANS.REFERENCE>
    Y.DATE           =R.STMT.RECORD<AC.STE.VALUE.DATE>
    Y.ACCOUNT.ID     =R.STMT.RECORD<AC.STE.ACCOUNT.NUMBER>
*    Y.NCF.UM.ID= Y.ACCOUNT.ID : '.' : Y.DATE : '.' : Y.TANSACTION.CODE
RETURN


PROCESS:

    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        CALL F.READ(FN.FUNDS.TRANSFER,ID.NEW,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,ERR)
*   PGM.VERSION='FUNDS.TRANSFER'      ; * PACS00528405
        APPLICATION='FUNDS.TRANSFER'
        MATBUILD R.FUNDS.TRANSFER FROM R.NEW
        MATPARSE R.NEW FROM R.FUNDS.TRANSFER
        PAY.TYPE = R.NEW(FT.INWARD.PAY.TYPE)
        PAY.TYPE = FIELD(PAY.TYPE,'-',1)
        IF PAY.TYPE EQ 'STO' THEN
            FT.ID = ID.NEW
            CALL APAP.TAM.REDO.STO.NCF.UPDATE(VAR.NCF.REQ,VAR.CURRENCY,VAR.CHARGE.AMOUNT,VAR.TAX.AMOUNT) ;*Manual R22 conversion
            CALL EB.ROUND.AMOUNT(VAR.CURRENCY,VAR.CHARGE.AMOUNT,'','')
            CALL EB.ROUND.AMOUNT(VAR.CURRENCY,VAR.TAX.AMOUNT,'','')
            IF VAR.NCF.REQ EQ 'YES' THEN
                LRF.APP='FUNDS.TRANSFER'
                LRF.FIELD='L.NCF.NUMBER'
                LRF.POS=''
                CALL MULTI.GET.LOC.REF(LRF.APP,LRF.FIELD,LRF.POS)
                POS.FT.NCF.NO      = LRF.POS<1,1>
                Y.FT.NCF.NUM = R.NEW(FT.LOCAL.REF)<1,POS.FT.NCF.NO>
                IF NOT(Y.FT.NCF.NUM) THEN
                    GOSUB PROCESS.NCF
                    R.NEW(FT.LOCAL.REF)<1,POS.FT.NCF.NO>=L.NCF.NUMBER
                END
            END
            CALL F.MATWRITE(FN.FUNDS.TRANSFER,FT.ID,MAT R.NEW,STD.ORDER.REC.SIZE)
        END
        ELSE
            GOSUB NON.STO.PROCESS
        END
    END ELSE
        GOSUB NON.STO.PROCESS
    END
RETURN

*---------------
NON.STO.PROCESS:
*--------------
    LOCATE Y.STMT.TXN IN Y.NCF.TXN.LIST<1,1> SETTING Y.TXN.POS ELSE
        RETURN
    END

    IF R.STMT.RECORD<AC.STE.CURRENCY> EQ LCCY THEN
        VAR.CHARGE.AMOUNT =R.STMT.RECORD<AC.STE.AMOUNT.LCY>
        VAR.TXN.CHARGE    =R.STMT.RECORD<AC.STE.AMOUNT.LCY>
    END
    ELSE
        VAR.CHARGE.AMOUNT =R.STMT.RECORD<AC.STE.AMOUNT.FCY>
        VAR.TXN.CHARGE    =R.STMT.RECORD<AC.STE.AMOUNT.FCY>
    END
    VAR.CHARGE.AMOUNT=ABS(VAR.CHARGE.AMOUNT)
    CALL EB.ROUND.AMOUNT(R.STMT.RECORD<AC.STE.CURRENCY>,VAR.CHARGE.AMOUNT,'','')
    GOSUB PROCESS.NCF

RETURN

PROCESS.NCF:

    GOSUB FORM.NCF.DATA
RETURN

FORM.NCF.DATA:

    NCF.ISSUE.ID=Y.CUSTOMER:'.':Y.DATE:'.':Y.TRANSACTION.REF
    Y.CNT=1
    CALL APAP.TAM.REDO.NCF.PERF.RTN(Y.CNT,Y.NCF.NO.LIST) ;*Manual R22 conversion
    IF Y.NCF.NO.LIST THEN
        L.NCF.NUMBER=Y.NCF.NO.LIST
        GOSUB UPDATE.TABLE.ISSUED
    END ELSE
        GOSUB UPDATE.TABLE.UNMAPPED
    END
RETURN
UPDATE.TABLE.ISSUED:

    R.REDO.NCF.ISSUED<ST.IS.TXN.ID>       =R.STMT.RECORD<AC.STE.TRANS.REFERENCE>
    R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>=VAR.CHARGE.AMOUNT
    R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>   =VAR.TAX.AMOUNT
    R.REDO.NCF.ISSUED<ST.IS.DATE>         =Y.DATE
    R.REDO.NCF.ISSUED<ST.IS.CUSTOMER>     =Y.CUSTOMER
    R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>      =Y.ACCOUNT.ID
    R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>          =R.STMT.RECORD<AC.STE.TRANSACTION.CODE>
    R.REDO.NCF.ISSUED<ST.IS.NCF>          =L.NCF.NUMBER
    CALL F.WRITE(FN.REDO.NCF.ISSUED,NCF.ISSUE.ID,R.REDO.NCF.ISSUED)
    R.REDO.L.NCF.STATUS<NCF.ST.STATUS>        ='AVAILABLE'
    GOSUB UPDATE.TABLE.STATUS

RETURN

UPDATE.TABLE.STATUS:

    R.REDO.L.NCF.STATUS<NCF.ST.TRANSACTION.ID>=R.STMT.RECORD<AC.STE.TRANS.REFERENCE>
    R.REDO.L.NCF.STATUS<NCF.ST.CUSTOMER.ID>   =Y.CUSTOMER
    R.REDO.L.NCF.STATUS<NCF.ST.DATE>          =Y.DATE
    R.REDO.L.NCF.STATUS<NCF.ST.CHARGE.AMOUNT> =VAR.CHARGE.AMOUNT
    R.REDO.L.NCF.STATUS<NCF.ST.TAX.AMOUNT>    =VAR.TAX.AMOUNT
    R.REDO.L.NCF.STATUS<NCF.ST.NCF>           =L.NCF.NUMBER
    CALL F.WRITE(FN.REDO.L.NCF.STATUS,NCF.ISSUE.ID,R.REDO.L.NCF.STATUS)
RETURN

UPDATE.TABLE.UNMAPPED:
    R.REDO.L.NCF.UNMAPPED<ST.UN.TXN.ID>       =R.STMT.RECORD<AC.STE.TRANS.REFERENCE>
    R.REDO.L.NCF.UNMAPPED<ST.UN.CHARGE.AMOUNT>=VAR.CHARGE.AMOUNT
    R.REDO.L.NCF.UNMAPPED<ST.UN.TAX.AMOUNT>   =VAR.TAX.AMOUNT
    R.REDO.L.NCF.UNMAPPED<ST.UN.TXN.TYPE>     =R.STMT.RECORD<AC.STE.TRANSACTION.CODE>
    R.REDO.L.NCF.UNMAPPED<ST.UN.DATE>         =Y.DATE
    R.REDO.L.NCF.UNMAPPED<ST.UN.CUSTOMER>     =Y.CUSTOMER
    R.REDO.L.NCF.UNMAPPED<ST.UN.ACCOUNT>      =Y.ACCOUNT.ID
    CALL F.WRITE(FN.REDO.L.NCF.UNMAPPED,NCF.ISSUE.ID,R.REDO.L.NCF.UNMAPPED)
    R.REDO.L.NCF.STATUS<NCF.ST.STATUS>        ='UNAVAILABLE'
    GOSUB UPDATE.TABLE.STATUS

RETURN
END
