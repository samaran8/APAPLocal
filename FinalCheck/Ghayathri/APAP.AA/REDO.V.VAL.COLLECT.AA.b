$PACKAGE APAP.AA ;*MANUAL R22 CODE CONVERSION
SUBROUTINE REDO.V.VAL.COLLECT.AA
      
*-----------------------------------------------------------------------------------
* Modification History:
* DATE                 WHO                  REFERENCE                    DESCRIPTION
* 29/03/2023         SURESH        MANUAL R22 CODE CONVERSION     Package Name added APAP.AA
* 29/03/2023         Conversion Tool        AUTO R22 CODE CONVERSION       FM TO @FM,SM TO @SM,VM TO @VM,BILL.CNT++ TO  BILL.CNT += 1,VAR.BILL.CNT++ TO  VAR.BILL.CNT += 1
*-----------------------------------------------------------------------------------
*--------------------------------------------------------------------------------
*Company   Name    :Asociacion Popular de Ahorros y Prestamos
*Developed By      :PRABHU N
*Program   Name    :REDO.V.VAL.COLLECT.AA
*---------------------------------------------------------------------------------

*DESCRIPTION       :It is a validation routine is used to update the bill details and overdue amount
* ----------------------------------------------------------------------------------
*Modification Details:
*=====================
*   Date               who             Reference            Description
* 29-06-2010         PRABHU N        ODR-2010-08-0017    Initial Creation
* 10-11-2010         JEEVA T         ODR-2010-08-0017    Baselined after few logic changes
* 10-08-2010         MARIMUTHU S     PACS00094144
* 15-10-2011         MARIMUTHU S     PACS00126000
* 16-05-2012         MARIMUTHU S     PACS00197550        Penalty charges and interst handled
* 18-07-2012         MARIMUTHU S     PACS00208258
* 19-02-2018         GOPALA KRISHNAN R  PACS00640625        For the version REDO.PART.TT.PROCESS,CREATE
*                                                           should show correct information in corresponding fields
*-------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.OVERDUE
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.REDO.TT.PROCESS
    $INSERT I_F.REDO.PART.TT.PROCESS
    $INSERT I_F.REDO.MULTI.TXN.PROCESS
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.REDO.H.AA.DIS.CHG
    $INSERT I_F.REDO.APAP.PROPERTY.PARAM

    IF MESSAGE EQ 'VAL' THEN
        RETURN
    END

    GOSUB INIT
    GOSUB PROCESS
RETURN

******
INIT:
******

    FN.AA.ACCOUNT.DETAILS ='F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS  =''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)

    FN.AA.BILL.DETAILS ='F.AA.BILL.DETAILS'
    F.AA.BILL.DETAILS  = ''
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)

    FN.AA.ARRANGEMENT = 'F.AA.ARRANGEMENT'
    F.AA.ARRANGEMENT = ''
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.CUSTOMER = 'F.CUSTOMER'
    F.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    FN.REDO.H.AA.DIS.CHG = 'F.REDO.H.AA.DIS.CHG'
    F.REDO.H.AA.DIS.CHG = ''

    FN.REDO.APAP.PROPERTY.PARAM = 'F.REDO.APAP.PROPERTY.PARAM'
    F.REDO.APAP.PROPERTY.PARAM = ''
    CALL OPF(FN.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM)

    VAR.OS.AMOUNT  = ''
    BILL.CNT       = ''

    LR.APP  = 'AA.PRD.DES.OVERDUE'
    LR.FLDS = 'L.LOAN.STATUS.1':@VM:'L.LOAN.COND' ;*AUTO R22 CODE CONVERSION
    LR.POS  = ''
    CALL MULTI.GET.LOC.REF(LR.APP,LR.FLDS,LR.POS)
    CHANGE @VM TO @FM IN LR.POS ;*AUTO R22 CODE CONVERSION
    OD.LOAN.STATUS.POS = LR.POS<1>
    OD.LOAN.COND.POS   =  LR.POS<2>

RETURN

*********
PROCESS:
*********

    VAR.AA.ID = COMI
    R.NEW(PAY.PART.TT.CURRENCY) = ''
    R.NEW(PAY.PART.TT.TRAN.TYPE) = ''
    R.NEW(PAY.PART.TT.AMOUNT) = ''
    R.NEW(PAY.PART.TT.VALUE.DATE) = ''
    R.NEW(PAY.PART.TT.NO.OF.INSTALLMENT) = ''
    R.NEW(PAY.PART.TT.REMARKS) = ''

    IF VAR.AA.ID[1,2] NE 'AA' THEN
        CALL F.READ(FN.ACCOUNT,VAR.AA.ID,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
        VAR.AA.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>
        Y.CUS = R.ACCOUNT<AC.CUSTOMER>
    END

    CALL F.READ(FN.AA.ARRANGEMENT,VAR.AA.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ARR.ERR)
    Y.PRD.GRP = R.AA.ARRANGEMENT<AA.ARR.PRODUCT.GROUP>
    IF Y.CUS EQ '' THEN
        Y.CUS = R.AA.ARRANGEMENT<AA.ARR.CUSTOMER>
    END

    VAR.OS.AC.AMOUNT = 0 ; VAR.OS.PR.AMT = 0 ; VAR.OS.PS.AMT = 0

    CALL CACHE.READ(FN.REDO.H.AA.DIS.CHG,'SYSTEM',R.REDO.H.AA.DIS.CHG,CHG.ERR)
    Y.RET.CHQ.CHG = R.REDO.H.AA.DIS.CHG<REDO.DIS.CHG.RET.CHQ.CHARGE>

    CALL F.READ(FN.REDO.APAP.PROPERTY.PARAM,Y.PRD.GRP,R.REDO.APAP.PROP.PARAM,F.REDO.APAP.PROPERTY.PARAM,ERR.PROP.PAR)
    Y.PEN.CHG = R.REDO.APAP.PROP.PARAM<PROP.PARAM.PENALTY.ARREAR>

    CALL F.READ(FN.AA.ARRANGEMENT,VAR.AA.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ERR)
    CALL F.READ(FN.AA.ACCOUNT.DETAILS,VAR.AA.ID,R.AA.ACCOUNT.DETAILS ,F.AA.ACCOUNT.DETAILS,ERR)

    VAR.BILL.LIST        =R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID>
    VAR.BILL.STATUS.LIST = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.STATUS>
    VAR.SET.STATUS.LIST  = R.AA.ACCOUNT.DETAILS<AA.AD.SET.STATUS>
    CHANGE @SM TO @FM IN VAR.BILL.LIST ;*AUTO R22 CODE CONVERSION
    CHANGE @VM TO @FM IN VAR.BILL.LIST
    CHANGE @SM TO @FM IN VAR.BILL.STATUS.LIST
    CHANGE @VM TO @FM IN VAR.BILL.STATUS.LIST
    CHANGE @SM TO @FM IN VAR.SET.STATUS.LIST
    CHANGE @VM TO @FM IN VAR.SET.STATUS.LIST
    VAR.BILL.LIST.SIZE=DCOUNT(VAR.BILL.LIST,@FM)
    BILL.CNT=1
    VAR.BILL.CNT=0
    VAR.OS.AMOUNT= 0
    CHARGE.FLAG = ''
    LOOP
        VAR.BILL.LIST.ID = VAR.BILL.LIST<BILL.CNT>
        VAR.SET.STATUS   = VAR.SET.STATUS.LIST<BILL.CNT>
        VAR.BILL.STATUS  = VAR.BILL.STATUS.LIST<BILL.CNT>
        IF VAR.SET.STATUS EQ 'UNPAID' THEN
* PACS00126000 -S
            CALL F.READ(FN.AA.BILL.DETAILS,VAR.BILL.LIST.ID,R.AA.BILL.DETAILS,F.AA.BILL.DETAILS,ERR)
            Y.PS.PROPS = R.AA.BILL.DETAILS<AA.BD.PROPERTY>
            Y.CHG.PROPS = R.REDO.H.AA.DIS.CHG<REDO.DIS.CHG.PROPERTY.NAME>
            GOSUB SEARCH.DISB.CHG

            LOCATE 'ACCOUNT' IN Y.PS.PROPS<1,1> SETTING POS.PS THEN
                VAR.OS.AC.AMOUNT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PS>
                VAR.BILL.CNT += 1 ;*AUTO R22 CODE CONVERSION
            END ELSE
                LOCATE 'ACCOUNTTC' IN Y.PS.PROPS<1,1> SETTING POS.PS THEN
                    VAR.OS.AC.AMOUNT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PS>
                    VAR.BILL.CNT += 1 ;*AUTO R22 CODE CONVERSION
                END
            END

            LOCATE 'PRINCIPALINT' IN Y.PS.PROPS<1,1> SETTING POS.PR THEN
                VAR.OS.PR.AMT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PR>
            END ELSE
                LOCATE 'PRINCIPALINTTC' IN Y.PS.PROPS<1,1> SETTING POS.PR THEN
                    VAR.OS.PR.AMT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PR>
                END
            END

            LOCATE 'PENALTINT' IN Y.PS.PROPS<1,1> SETTING POS.PN THEN
                VAR.OS.PN.AMT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PN>
            END ELSE
                LOCATE 'PRINCIPALINTTCC' IN Y.PS.PROPS<1,1> SETTING POS.PN THEN
                    VAR.OS.PN.AMT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PN>
                END
            END

            LOCATE Y.PEN.CHG IN Y.PS.PROPS<1,1> SETTING POS.PC THEN
                VAR.OS.PC.AMT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PC>
            END ELSE
                LOCATE 'COMISIONTC' IN Y.PS.PROPS<1,1> SETTING POS.PC THEN
                    VAR.OS.PC.AMT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,POS.PC>
                    CHARGE.FLAG = '1'
                END
            END

* PACS00126000 -E
        END
    WHILE BILL.CNT LE VAR.BILL.LIST.SIZE
        BILL.CNT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    PROP.CLASS  = 'OVERDUE'
    PROPERTY    = ''
    R.Condition = ''
    ERR.MSG     = ''
    EFF.DATE    = ''
    CALL REDO.CRR.GET.CONDITIONS(VAR.AA.ID,EFF.DATE,PROP.CLASS,PROPERTY,R.Condition,ERR.MSG)

    LOAN.STATUS = R.Condition<AA.OD.LOCAL.REF,OD.LOAN.STATUS.POS>
    LOAN.COND   = R.Condition<AA.OD.LOCAL.REF,OD.LOAN.COND.POS>

    CHANGE @SM TO @VM IN LOAN.STATUS  ;*AUTO R22 CODE CONVERSION
    CHANGE @SM TO @VM IN LOAN.COND  ;*AUTO R22 CODE CONVERSION

    Y.LN.ST.DP = LOAN.STATUS
    Y.LN.CND.DP = LOAN.COND

    GOSUB GET.DESCRIPTIONS.ST

    IF APPLICATION EQ 'REDO.TT.PROCESS' THEN
        R.NEW(TT.PRO.NO.OF.OD.BILLS) = VAR.BILL.CNT
        R.NEW(TT.PRO.TOT.AMT.OVRDUE) = VAR.OS.AMOUNT
        R.NEW(TT.PRO.LOAN.STATUS)    = LOAN.STATUS
        R.NEW(TT.PRO.LOAN.CONDITION) = LOAN.COND
    END
    IF APPLICATION EQ 'REDO.PART.TT.PROCESS' THEN
        R.NEW(PAY.PART.TT.CURRENCY) = R.AA.ARRANGEMENT<AA.ARR.CURRENCY>
        R.NEW(PAY.PART.TT.VALUE.DATE) = TODAY
        R.NEW(PAY.PART.TT.NO.OF.OD.BILLS) = VAR.BILL.CNT
* PACS00126000 -S
        R.NEW(PAY.PART.TT.TOT.AMT.OVRDUE) = VAR.OS.AMOUNT

        IF CHARGE.FLAG EQ '1' THEN
            R.NEW(PAY.PART.TT.CHARGE.AMT) = VAR.OS.PC.AMT
        END ELSE
            R.NEW(PAY.PART.TT.CHARGE.AMT) = VAR.OS.AMOUNT - (VAR.OS.AC.AMOUNT + VAR.OS.PR.AMT + VAR.OS.PN.AMT + VAR.OS.PC.AMT)
        END

        R.NEW(PAY.PART.TT.PRINCIPAL.AMT) = VAR.OS.AC.AMOUNT
        R.NEW(PAY.PART.TT.PRINCIPAL.INT) = VAR.OS.PR.AMT
        R.NEW(PAY.PART.TT.PENALTY.INT) = VAR.OS.PN.AMT

        IF CHARGE.FLAG EQ '1' THEN
            R.NEW(PAY.PART.TT.PENALTY.CHG) = '0'
        END ELSE
            R.NEW(PAY.PART.TT.PENALTY.CHG) = VAR.OS.PC.AMT
        END

* PACS00126000 -E
        R.NEW(PAY.PART.TT.LOAN.STATUS.1)    = LOAN.STATUS
        R.NEW(PAY.PART.TT.LOAN.CONDITION) = LOAN.COND
        R.NEW(PAY.PART.TT.LOAN.STATUS.1.DUP) = Y.LN.ST.DP
        R.NEW(PAY.PART.TT.LOAN.CONDITION.DUP) = Y.LN.CND.DP
    END
    IF APPLICATION EQ 'REDO.MULTI.TXN.PROCESS' THEN
        R.NEW(MUL.TXN.PRO.NO.OF.OD.BILLS) = VAR.BILL.CNT
        R.NEW(MUL.TXN.PRO.TOT.AMT.OVRDUE) = VAR.OS.AMOUNT
        R.NEW(MUL.TXN.PRO.LOAN.STATUS)    = LOAN.STATUS
        R.NEW(MUL.TXN.PRO.LOAN.CONDITION) = LOAN.COND
    END
    CALL F.READ(FN.AA.ARRANGEMENT,VAR.AA.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ARR.ERR)
    COMI = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID>


    CALL F.READ(FN.CUSTOMER,Y.CUS,R.CUSTOMER,F.CUSTOMER,CUS.ERR)
    Y.NAME = R.CUSTOMER<EB.CUS.SHORT.NAME,1>
    IF Y.NAME EQ '' THEN
        Y.NAME = R.CUSTOMER<EB.CUS.SHORT.NAME,2>
    END

    ENRI.VALUE = Y.NAME
* CR.FIELD = AF:'.':AV
    CR.FIELD = 1
    FILD.EN = ''
    CALL REFRESH.FIELD(CR.FIELD,FILD.EN)
    LOCATE CR.FIELD IN T.FIELDNO<1> SETTING CR.POS THEN
        T.ENRI<CR.POS> = ENRI.VALUE
        COMI.ENRI = ENRI.VALUE
    END
    OFS$ENRI<CR.POS> = ENRI.VALUE

RETURN

GET.DESCRIPTIONS.ST:


    Y.LOOKUP.ID   = "L.LOAN.STATUS.1"
    Y.ST.CNT = DCOUNT(LOAN.STATUS,@VM) ; Y.FL.ST = '' ; LOAN.STATUS.DUP = ''  ;*AUTO R22 CODE CONVERSION
    LOOP
    WHILE Y.ST.CNT GT 0 DO
        Y.FL.ST += 1
        Y.LOOOKUP.VAL = LOAN.STATUS<1,Y.FL.ST>
        Y.DESC.VAL    = ''
        CALL REDO.EB.LOOKUP.LIST(Y.LOOKUP.ID,Y.LOOOKUP.VAL,Y.DESC.VAL,RES1,RES2)
        IF LOAN.STATUS.DUP EQ '' THEN
            LOAN.STATUS.DUP = Y.DESC.VAL
        END ELSE
            LOAN.STATUS.DUP<-1> = Y.DESC.VAL
        END
        Y.ST.CNT -= 1
    REPEAT
    LOAN.STATUS.DUP = CHANGE(LOAN.STATUS.DUP,@FM,@VM)  ;*AUTO R22 CODE CONVERSION
    LOAN.STATUS = LOAN.STATUS.DUP


    Y.LOOKUP.ID   = "L.LOAN.COND"
    Y.CD.CNT = DCOUNT(LOAN.COND,@VM) ; Y.FL.CD = '' ; LOAN.COND.DUP = '' ;*AUTO R22 CODE CONVERSION
    LOOP
    WHILE Y.CD.CNT GT 0 DO
        Y.FL.CD += 1
        Y.LOOOKUP.VAL = LOAN.COND<1,Y.FL.CD>
        Y.DESC.VAL    = ''
        CALL REDO.EB.LOOKUP.LIST(Y.LOOKUP.ID,Y.LOOOKUP.VAL,Y.DESC.VAL,RES1,RES2)
        IF LOAN.COND.DUP EQ '' THEN
            LOAN.COND.DUP = Y.DESC.VAL
        END ELSE
            LOAN.COND.DUP<-1> = Y.DESC.VAL
        END
        Y.CD.CNT -= 1
    REPEAT

    LOAN.COND.DUP = CHANGE(LOAN.COND.DUP,@FM,@VM) ;*AUTO R22 CODE CONVERSION
    LOAN.COND = LOAN.COND.DUP

RETURN

SEARCH.DISB.CHG:

* PACS00126000 -S
    Y.CNT.BL.PR = DCOUNT(Y.PS.PROPS,@VM) ;*AUTO R22 CODE CONVERSION
    FLG.BL = ''
    LOOP
    WHILE Y.CNT.BL.PR GT 0 DO
        FLG.BL += 1
        Y.SN.PROP = Y.PS.PROPS<1,FLG.BL>
        LOCATE Y.SN.PROP IN Y.CHG.PROPS<1,1> SETTING POS.BL ELSE
            VAR.OS.AMOUNT += R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,FLG.BL>
        END
        Y.CNT.BL.PR -= 1
    REPEAT
* PACS00126000 - E

RETURN

***************************************************************************
END
******************************************************************
