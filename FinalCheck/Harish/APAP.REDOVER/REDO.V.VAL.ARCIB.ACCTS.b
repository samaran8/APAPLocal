* @ValidationCode : MjotMTkyMDkxOTA1ODpDcDEyNTI6MTY4MTM3MjkxMjQxNDpzYW1hcjotMTotMTowOjA6ZmFsc2U6Ti9BOkRFVl8yMDIxMDguMDotMTotMQ==
* @ValidationInfo : Timestamp         : 13 Apr 2023 13:31:52
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : samar
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.V.VAL.ARCIB.ACCTS
*------------
*DESCRIPTION:
*------------
*This routine is attached as a validation routine to the version TELLER,REDO.CR.CARD.ACCT.TFR
*it will default USD account in ACCOUNT.2if currency is USD and if currency is DOP then it will
*default DOP Account in ACCOUNT.2

*--------------
* Input/Output:
*--------------
* IN  : -NA-
* OUT : -NA-

*--------------
* Dependencies:
*---------------
* CALLS : -NA-
* CALLED BY : -NA-

*------------------
* Revision History:
*------------------
*   Date               who               Reference                      Description
* 16-09-2011        Prabhu.N           PACS00125978                  Initial Creation
*13-04-2023         Conversion Tool    R22 Auto Code conversion      FM TO @FM VM TO @VM
*13-04-2023          Samaran T         R22 Manual Code conversion         No Changes
*------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.STANDING.ORDER
    $INSERT I_F.BENEFICIARY
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.AI.REDO.ARCIB.PARAMETER


    GOSUB MAIN.INITIALISE
    GOSUB GET.INTERNAL.ACCTS

RETURN
*****************
MAIN.INITIALISE:
****************

    FN.ARCIB.PARAM='F.AI.REDO.ARCIB.PARAMETER'
    F.ARCIB.PARAM=''
    CALL OPF(FN.ARCIB.PARAM,F.ARCIB.PARAM)
    BEN.ACCT.NO=''
    BEN.ACCT.NO = R.NEW(ARC.BEN.BEN.ACCT.NO)
    CALL CACHE.READ(FN.ARCIB.PARAM,'SYSTEM',R.ARCIB.PARAM.REC,ARCIB.PARAM.ERR)

    IF NOT(ARCIB.PARAM.ERR) THEN
        AI.PARAM.PROD =R.ARCIB.PARAM.REC<AI.PARAM.PRODUCT>
        AI.PARAM.TYPE=R.ARCIB.PARAM.REC<AI.PARAM.TRANSACTION.TYPE>
    END


    LOCATE 'STANDING.ORDER' IN AI.PARAM.PROD<1,1> SETTING AI.PARAM.PROD.POS THEN
        LOCATE 'THIRD-TRANSFER' IN AI.PARAM.TYPE<1,1> SETTING AI.PARAM.TYPE.POS THEN
            THIRD.TRANSFER.ACCT = R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,AI.PARAM.TYPE.POS>

        END
        LOCATE 'THIRD-PAYMENT' IN AI.PARAM.TYPE<1,1> SETTING AI.PARAM.TYPE.POS THEN
            THIRD.PAYMENT.ACCT  = R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,AI.PARAM.TYPE.POS>
        END

        LOCATE 'OTHER-CARD-PAYMENT' IN AI.PARAM.TYPE<1,1> SETTING AI.PARAM.TYPE.POS THEN
            THIRD.CARD.PAYMENT = R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,AI.PARAM.TYPE.POS>
        END

        LOCATE 'THIRDPARTY-PAYMENT' IN AI.PARAM.TYPE<1,1> SETTING AI.PARAM.TYPE.POS THEN
            THIRDPARTY.PAYMENT.ACCT = R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,AI.PARAM.TYPE.POS>
        END

        LOCATE 'SERVICE-PAYMENT' IN AI.PARAM.TYPE<1,1> SETTING AI.PARAM.TYPE.POS THEN
            SERVICE.PAYMENT.ACCT = R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,AI.PARAM.TYPE.POS>
        END
        Y.ACCT.ARRAY = THIRD.TRANSFER.ACCT:@FM:THIRD.PAYMENT.ACCT:@FM:THIRDPARTY.PAYMENT.ACCT:@FM:SERVICE.PAYMENT.ACCT

    END

    FN.REDO.ACH.WRK = 'F.REDO.ACH.STORE.BANK.ID'
    F.REDO.ACH.WRK = ''
    CALL OPF(FN.REDO.ACH.WRK,F.REDO.ACH.WRK)


    FLD.APP = 'BENEFICIARY'
    FLD.DET = 'L.BEN.ACH.ARCIB':@VM:'L.BEN.BANK':@VM:'L.BEN.PROD.TYPE'
    FLD.POS = ''
    CALL MULTI.GET.LOC.REF(FLD.APP,FLD.DET,FLD.POS)
    ACH.BANK.NAME.POS = FLD.POS<1,1>
    ACH.BANK.ID.POS = FLD.POS<1,2>
    BEN.PROD.TYPE.POS = FLD.POS<1,3>

RETURN

*******************
GET.INTERNAL.ACCTS:
*******************

    ACH.BANK.NAME = R.NEW(ARC.BEN.LOCAL.REF)<1,ACH.BANK.NAME.POS>
    IF ACH.BANK.NAME THEN
        CHANGE ' ' TO '' IN ACH.BANK.NAME

        CALL F.READ(FN.REDO.ACH.WRK,ACH.BANK.NAME,R.ACH.BANK.ID,F.REDO.ACH.WRK,ACH.WRK.ERR)

        IF NOT(ACH.WRK.ERR) THEN
            R.NEW(ARC.BEN.LOCAL.REF)<1,ACH.BANK.ID.POS>=R.ACH.BANK.ID

        END
    END

    Y.PROD.TYPE = R.NEW(ARC.BEN.LOCAL.REF)<1,BEN.PROD.TYPE.POS>
    BEGIN CASE
        CASE BEN.ACCT.NO EQ '' AND APPLICATION EQ 'BENEFICIARY' AND PGM.VERSION EQ ',AI.REDO.ADD.OTHER.BANK.BEN' AND  (Y.PROD.TYPE EQ 'AC.AHO' OR Y.PROD.TYPE EQ 'AC.CUR')
            R.NEW(ARC.BEN.BEN.ACCT.NO) = THIRD.TRANSFER.ACCT<1>
        CASE BEN.ACCT.NO EQ '' AND APPLICATION EQ 'BENEFICIARY' AND PGM.VERSION EQ ',AI.REDO.ADD.OTHER.BANK.BEN' AND  Y.PROD.TYPE EQ 'LOAN'
            R.NEW(ARC.BEN.BEN.ACCT.NO) = THIRD.PAYMENT.ACCT<1>
        CASE BEN.ACCT.NO EQ '' AND APPLICATION EQ 'BENEFICIARY' AND PGM.VERSION EQ ',AI.REDO.ADD.OTHER.BANK.BEN' AND  Y.PROD.TYPE EQ 'CARDS'
            R.NEW(ARC.BEN.BEN.ACCT.NO) = THIRD.CARD.PAYMENT<1>
    END CASE


    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        IF R.NEW(FT.CREDIT.CURRENCY) EQ 'DOP' THEN
            R.NEW(FT.CREDIT.ACCT.NO)=R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,1>

        END ELSE
            IF R.NEW(FT.CREDIT.CURRENCY) EQ 'USD' THEN
                R.NEW(FT.CREDIT.ACCT.NO)=R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,2>
            END


        END

    END

    IF APPLICATION EQ 'STANDING.ORDER' THEN

        IF R.NEW(STO.CURRENCY) EQ 'DOP' THEN
            R.NEW(STO.CPTY.ACCT.NO)=R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,1>

        END ELSE
            IF R.NEW(STO.CURRENCY) EQ 'USD' THEN
                R.NEW(STO.CPTY.ACCT.NO)=R.ARCIB.PARAM.REC<AI.PARAM.ACCOUNT.NO,2>
            END


        END
    END


RETURN

END
