* @ValidationCode : MjoxODA0MjI2MDU0OkNwMTI1MjoxNjgwNzc3NTM1ODE2Om11dGh1Oi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 06 Apr 2023 16:08:55
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : muthu
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.AUTH.SOLICITUD.CK
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: H GANESH
* PROGRAM NAME: REDO.AUTH.SOLICITUD.CK
* ODR NO : ODR-2009-12-0275
*----------------------------------------------------------------------
* DESCRIBTION: This routine will be used to calculate the charge when the CHEQ.STATUS EQ 10
* and attach this routine.REDO.H.SOLICITUD.CK,INPUT.PF,REDO.H.SOLICITUD.CK,INPUT.PJ,
* REDO.H.SOLICITUD.CK,INPUT.PF.ARCIB and REDO.H.SOLICITUD.CK,INPUT.PJ.ARCIB
* IN PARAMETER: NONE
* OUT PARAMETER: NONE
* LINKED WITH:REDO.H.SOLICITUD.CK
*----------------------------------------------------------------------
* Modification History :
*-----------------------
*DATE WHO REFERENCE DESCRIPTION
*19.02.2010 H GANESH ODR-2009-12-0275 INITIAL CREATION
* 22-8-2011 KAVITHA PACS00103350 PACS00103350 FIX
* 23-10-2011 KAVITHA PACS00132219 PACS00132219 FIX
* 06-04-2023	CONVERSION TOOL		AUTO R22 CODE CONVERSION	FM to @FM, VM to @VM, SM to @SM
* 06-04-2023	MUTHUKUMAR M		MANUAL R22 CODE CONVERSION	 NO CHANGE

*----------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.USER
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.CATEG.ENTRY
    $INSERT I_F.TAX
    $INSERT I_F.COMPANY
    $INSERT I_GTS.COMMON
    $INSERT I_F.STOCK.ENTRY
    $INSERT I_F.FT.COMMISSION.TYPE
    $INSERT I_F.REDO.H.SOLICITUD.CK
    $INSERT I_F.CHEQUE.REGISTER
    $INSERT I_F.CHEQUE.ISSUE
    $INSERT I_F.REDO.H.CHEQUE.REGISTER



    GOSUB INIT
    GOSUB LOCAL.REF
    GOSUB UPDATE.FILES
RETURN

******
INIT:
******
    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.FT.COMMISSION.TYPE='F.FT.COMMISSION.TYPE'
    F.FT.COMMISSION.TYPE=''
    CALL OPF(FN.FT.COMMISSION.TYPE,F.FT.COMMISSION.TYPE)

    FN.CHEQUE.REGISTER='F.CHEQUE.REGISTER'
    F.CHEQUE.REGISTER=''
    CALL OPF(FN.CHEQUE.REGISTER,F.CHEQUE.REGISTER)

    TOT.TAX.AMT = ''

    FN.CHEQUE.ISSUE='F.CHEQUE.ISSUE'
    F.CHEQUE.ISSUE=''
    CALL OPF(FN.CHEQUE.ISSUE,F.CHEQUE.ISSUE)

    FN.REDO.H.CHEQUE.REGISTER='F.REDO.H.CHEQUE.REGISTER'
    F.REDO.H.CHEQUE.REGISTER=''
    CALL OPF(FN.REDO.H.CHEQUE.REGISTER,F.REDO.H.CHEQUE.REGISTER)

    FN.REDO.CONCAT.CHEQUE.REGISTER = 'F.REDO.CONCAT.CHEQUE.REGISTER'
    F.REDO.CONCAT.CHEQUE.REGISTER = ''
    CALL OPF(FN.REDO.CONCAT.CHEQUE.REGISTER,F.REDO.CONCAT.CHEQUE.REGISTER)

    R.REDO.H.CHEQUE.REGISTER=''

    FN.TAX = 'F.TAX'
    F.TAX = ''
    CALL OPF(FN.TAX,F.TAX)

    R.TAX = ''
    FN.USER = 'F.USER'
    F.USER = ''
    CALL OPF(FN.USER,F.USER)

    R.CHQ.ISS=''
    R.ACC.ARR = ''
    OFS.ERR = ''
    UPDATE.CHEQUE.REG = ''

RETURN

*----------------------------------------------------------------------
LOCAL.REF:
*----------------------------------------------------------------------

    LOC.REF.APPLICATION='CHEQUE.ISSUE'
    LOC.REF.FIELDS='L.SOLICITUDCKID'
    LOC.REF.POS=''
    CALL GET.LOC.REF(LOC.REF.APPLICATION,LOC.REF.FIELDS,LOC.REF.POS)

RETURN
*-------------------------------------------
UPDATE.FILES:
*-------------------------------------------
    Y.RECORD.STATUS=R.NEW(REDO.H.SOL.RECORD.STATUS)
    Y.RECORD.STATUS1=R.OLD(REDO.H.SOL.RECORD.STATUS)
    POS.L.SOLICITUDCKID=LOC.REF.POS<1,1>
    IF V$FUNCTION NE 'R' AND Y.RECORD.STATUS EQ 'INAU' OR Y.RECORD.STATUS EQ 'INAO' THEN
        GOSUB UPDATE.AUTHORISE
    END

    IF V$FUNCTION EQ 'A' AND Y.RECORD.STATUS EQ 'RNAU' THEN
        GOSUB UPDATE.REVERSAL
    END
RETURN
*----------------------------------------------------------------------
ID.FORMATION:
*----------------------------------------------------------------------
    Y.ACCOUNT=R.NEW(REDO.H.SOL.ACCOUNT)
    Y.CHEQUE.TYPE=R.NEW(REDO.H.SOL.CHEQUE.TYPE)
    Y.CHQ.REG.ID=Y.CHEQUE.TYPE:".":Y.ACCOUNT
    CALL F.READ(FN.CHEQUE.REGISTER,Y.CHQ.REG.ID,R.CHEQUE.REGISTER,F.CHEQUE.REGISTER,CHQ.ERR)
    R.REDO.CONCAT.CHEQUE.REGISTER =''
    Y.ID.NEW=ID.NEW
    CALL F.READ(FN.REDO.CONCAT.CHEQUE.REGISTER,Y.ID.NEW,R.REDO.CONCAT.CHEQUE.REGISTER,F.REDO.CONCAT.CHEQUE.REGISTER,CONCAT.ERR)
    IF R.REDO.CONCAT.CHEQUE.REGISTER EQ '' THEN
        UPDATE.CHEQUE.REG = 'YES'

        IF R.CHEQUE.REGISTER NE '' THEN
            Y.LAST.EVENT.SEQ = R.CHEQUE.REGISTER<CHEQUE.REG.LAST.EVENT.SEQ>
        END
        ELSE
            Y.LAST.EVENT.SEQ = '0'
        END

    END ELSE
        Y.CONCAT.SEQ = R.REDO.CONCAT.CHEQUE.REGISTER<1>
    END


RETURN
*----------------------------------------------------------------------
UPDATE.AUTHORISE:
*----------------------------------------------------------------------

    GOSUB ID.FORMATION
    IF Y.CONCAT.SEQ THEN
        Y.SEQ.NO=Y.CONCAT.SEQ
    END ELSE
        Y.SEQ.NO=Y.LAST.EVENT.SEQ+1
    END
    Y.SEQ.NO=FMT(Y.SEQ.NO,"R%7")
    CHEQ.ISS.ID=Y.CHEQUE.TYPE:".":Y.ACCOUNT:".":Y.SEQ.NO
    R.CHQ.ISS<CHEQUE.IS.CHEQUE.STATUS> = R.NEW(REDO.H.SOL.CHEQUE.STATUS)
    Y.CHQ.STATUS =R.NEW(REDO.H.SOL.CHEQUE.STATUS)
    Y.REC.STATUS=R.NEW(REDO.H.SOL.RECORD.STATUS)
    R.CHQ.ISS<CHEQUE.IS.LOCAL.REF,POS.L.SOLICITUDCKID>=ID.NEW
    IF R.NEW(REDO.H.SOL.CHEQUE.STATUS) EQ 90 THEN
        R.CHQ.ISS<CHEQUE.IS.CHQ.NO.START>=R.NEW(REDO.H.SOL.CHQ.NO.START)
        R.CHQ.ISS<CHEQUE.IS.ISSUE.DATE>=TODAY
        R.CHQ.ISS<CHEQUE.IS.NUMBER.ISSUED>=R.NEW(REDO.H.SOL.CANT.CK)
    END
    OFSFUNCT = 'I'
    GOSUB OFS

*PACS00103350-S
    IF UPDATE.CHEQUE.REG EQ 'YES' THEN
        GOSUB UPDATE.CHEQUE.REGISTER
    END
*PACS00103350-E
*-------------------------------------------
*UPDATING REDO.H.CHEQUE.REGISTER
*-------------------------------------------

    Y.CHECK.STATUS=R.NEW(REDO.H.SOL.CHEQUE.STATUS)
    IF Y.CHECK.STATUS EQ 10 THEN
        GOSUB UPDATE.REDO.CHEQ.REGISTER
        IF R.NEW(REDO.H.SOL.WAIVE.CHARGES) NE 'YES' THEN
            GOSUB GENERATE.STMT.ENTRIES
            GOSUB TAX.AMOUNT
        END
    END
    IF Y.CHECK.STATUS EQ 85 THEN

        Y.CHQ.START.NO = R.NEW(REDO.H.SOL.CHQ.NO.START)
        Y.REDO.H.CHEQ.REGISTER=Y.CHEQUE.TYPE:".":Y.ACCOUNT
        R.REDO.H.CHEQUE.REGISTER=''
        CALL F.READ(FN.REDO.H.CHEQUE.REGISTER,Y.REDO.H.CHEQ.REGISTER,R.REDO.H.CHEQUE.REGISTER,F.REDO.H.CHEQUE.REGISTER,CHEQ.REG.ERR)
        Y.SERIES = R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS>
        Y.SERIES.CNT = DCOUNT(Y.SERIES,@VM)
        Y.VAR1=1
        LOOP
        WHILE Y.VAR1 LE Y.SERIES.CNT
            IF Y.CHQ.START.NO EQ FIELD(Y.SERIES<1,Y.VAR1>,'-',1) THEN
                R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS,Y.VAR1> = '-'
            END
            Y.VAR1 += 1 ;*AUTO R22 CODE CONVERSION
        REPEAT

        OFSFUNCT = 'I'
        GOSUB OFS1
    END

RETURN
*----------------------------------------------------------------------
UPDATE.REVERSAL:
*----------------------------------------------------------------------

    GOSUB ID.FORMATION
    IF Y.CONCAT.SEQ THEN
        Y.SEQ.NO=Y.CONCAT.SEQ
    END ELSE
        IF Y.LAST.EVENT.SEQ EQ 0 THEN
            Y.LAST.EVENT.SEQ += 1 ;*AUTO R22 CODE CONVERSION
        END
        Y.SEQ.NO=Y.LAST.EVENT.SEQ
    END
    Y.SEQ.NO=FMT(Y.SEQ.NO,"R%7")
    CHEQ.ISS.ID=Y.CHEQUE.TYPE:".":Y.ACCOUNT:".":Y.SEQ.NO
    CALL F.READ(FN.CHEQUE.ISSUE,CHEQ.ISS.ID,R.CHQ.ISS,F.CHEQUE.ISSUE,CHEQ.ERR)
    Y.CHEQUE.STATUS = R.CHQ.ISS<CHEQUE.IS.CHEQUE.STATUS>
    IF Y.CHEQUE.STATUS NE 90 THEN
        R.CHQ.ISS=''
        R.CHQ.ISS<CHEQUE.IS.CHEQUE.STATUS> = '90'
        R.CHQ.ISS<CHEQUE.IS.ISSUE.DATE>=TODAY
        R.CHQ.ISS<CHEQUE.IS.NUMBER.ISSUED> = R.NEW(REDO.H.SOL.CANT.CK)
        R.CHQ.ISS<CHEQUE.IS.CHQ.NO.START> = R.NEW(REDO.H.SOL.CHQ.NO.START)
        OFSFUNCT = 'I'
        GOSUB OFS
    END
    OFSFUNCT = 'R'
    GOSUB OFS

    Y.CHQ.START.NO = R.NEW(REDO.H.SOL.CHQ.NO.START)
    Y.REDO.H.CHEQ.REGISTER=Y.CHEQUE.TYPE:".":Y.ACCOUNT
    R.REDO.H.CHEQUE.REGISTER=''
    CALL F.READ(FN.REDO.H.CHEQUE.REGISTER,Y.REDO.H.CHEQ.REGISTER,R.REDO.H.CHEQUE.REGISTER,F.REDO.H.CHEQUE.REGISTER,CHEQ.REG.ERR)
    Y.SERIES = R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS>
    Y.SERIES.CNT = DCOUNT(Y.SERIES,@VM)
    Y.VAR1=1
    LOOP
    WHILE Y.VAR1 LE Y.SERIES.CNT
        IF Y.CHQ.START.NO EQ FIELD(Y.SERIES<1,Y.VAR1>,'-',1) THEN
            R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS,Y.VAR1> = '-'
        END
        Y.VAR1 += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    OFSFUNCT = 'I'
    GOSUB OFS1



RETURN
*----------------------------------------------------------------------
OFS:
*----------------------------------------------------------------------
    APP.NAME = 'CHEQUE.ISSUE'
    PROCESS = 'PROCESS'
    OFSVERSION = 'CHEQUE.ISSUE,CREATE.NEW'
    GTSMODE = ''
    NO.OF.AUTH = '0'
    TRANSACTION.ID = CHEQ.ISS.ID
    OFSRECORD = ''
    OFS.MSG.ID =''
    OFS.SOURCE.ID = 'REDO.CHQ.ISSUE'
    OFS.ERR = ''
    Y.GTSMODE=GTSMODE
    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCT,PROCESS,OFSVERSION,Y.GTSMODE,NO.OF.AUTH,TRANSACTION.ID,R.CHQ.ISS,OFSRECORD)
    CALL OFS.POST.MESSAGE(OFSRECORD,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)
RETURN
*----------------------------------------------------------------------
UPDATE.REDO.CHEQ.REGISTER:
*----------------------------------------------------------------------


    Y.REDO.H.CHEQ.REGISTER=Y.CHEQUE.TYPE:".":Y.ACCOUNT
    CALL F.READ(FN.REDO.H.CHEQUE.REGISTER,Y.REDO.H.CHEQ.REGISTER,R.REDO.H.CHEQUE.REGISTER,F.REDO.H.CHEQUE.REGISTER,ERR.REDO.CHQ.REG)
    Y.CHQ.START.NO=R.NEW(REDO.H.SOL.CHQ.NO.START)
    Y.CHQ.END.NO=Y.CHQ.START.NO+R.NEW(REDO.H.SOL.CANT.CK)-1
    IF Y.CHEQUE.TYPE EQ 'DDAF' THEN
        Y.CHQ.END.NO =FMT(Y.CHQ.END.NO,"R%4")
    END
    IF Y.CHEQUE.TYPE EQ 'DDA' THEN
        Y.CHQ.END.NO =FMT(Y.CHQ.END.NO,"R%6")
    END

    IF R.REDO.H.CHEQUE.REGISTER EQ '' THEN
        R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS,1>=Y.CHQ.START.NO:"-":Y.CHQ.END.NO
        OFSFUNCT = 'I'
        GOSUB OFS1
    END
    ELSE
        EXIST.CHEQ.NUM=R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS>
        IF Y.CHEQUE.TYPE EQ 'DDAF' THEN
            EXIST.CHEQ.NUM<1,-1> = Y.CHQ.START.NO:"-":FMT(Y.CHQ.START.NO+R.NEW(REDO.H.SOL.CANT.CK)-1,"R%4")
        END
        IF Y.CHEQUE.TYPE EQ 'DDA' THEN
            EXIST.CHEQ.NUM<1,-1> = Y.CHQ.START.NO:"-":FMT(Y.CHQ.START.NO+R.NEW(REDO.H.SOL.CANT.CK)-1,"R%6")
        END
        R.REDO.H.CHEQUE.REGISTER = ''
        R.REDO.H.CHEQUE.REGISTER<CHEQ.REG.CHEQUE.NOS>=EXIST.CHEQ.NUM
        OFSFUNCT = 'I'
        GOSUB OFS1
    END
RETURN
*----------------------------------------------------------------------
OFS1:
*----------------------------------------------------------------------
    APP.NAME = 'REDO.H.CHEQUE.REGISTER'
    PROCESS = 'PROCESS'
    OFSVERSION = 'REDO.H.CHEQUE.REGISTER,CREATE.NEW'
    GTSMODE = ''
    NO.OF.AUTH = '0'
    TRANSACTION.ID =Y.REDO.H.CHEQ.REGISTER
    OFSRECORD = ''
    OFS.MSG.ID =''
    OFS.SOURCE.ID = 'REDO.CHQ.ISSUE'
    OFS.ERR = ''
    Y.GTSMODE=GTSMODE
    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCT,PROCESS,OFSVERSION,Y.GTSMODE,NO.OF.AUTH,TRANSACTION.ID,R.REDO.H.CHEQUE.REGISTER,OFSRECORD)
    CALL OFS.POST.MESSAGE(OFSRECORD,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)
RETURN
*------------------------------------------------------------------------
GENERATE.STMT.ENTRIES:
*------------------------------------------------------------------------


    ACC.ID = R.NEW(REDO.H.SOL.ACCOUNT)
    CALL F.READ(FN.ACCOUNT,ACC.ID,R.ACCT,F.ACCOUNT,ACC.ERR)
    MONTO.CNT = DCOUNT(R.NEW(REDO.H.SOL.MONTO.CK),@VM)
    VAR1 = 1
    LOOP
    WHILE VAR1 LE MONTO.CNT
        IN.TXN.AMT = R.NEW(REDO.H.SOL.MONTO.CK)<1,VAR1>
        FT.COMM.ID = R.NEW(REDO.H.SOL.COSTO.CK)<1,VAR1>
        CALL CACHE.READ(FN.FT.COMMISSION.TYPE, FT.COMM.ID, R.COMM, COMM.ERR) ;*AUTO R22 CODE CONVERSION
        IF NOT(COMM.ERR) THEN
            R.COMM.STMT.ARR = ''
            R.COMM.STMT.ARR<AC.STE.ACCOUNT.NUMBER> = ACC.ID
            R.COMM.STMT.ARR<AC.STE.COMPANY.CODE> = ID.COMPANY
            R.COMM.STMT.ARR<AC.STE.AMOUNT.LCY> = -1*IN.TXN.AMT
            R.COMM.STMT.ARR<AC.STE.TRANSACTION.CODE>=R.COMM<FT4.TXN.CODE.DR>
            R.COMM.STMT.ARR<AC.STE.THEIR.REFERENCE>= ID.NEW
            R.COMM.STMT.ARR<AC.STE.CUSTOMER.ID>=R.ACCT<AC.CUSTOMER>
            R.COMM.STMT.ARR<AC.STE.ACCOUNT.OFFICER>= R.ACCT<AC.ACCOUNT.OFFICER>
            R.COMM.STMT.ARR<AC.STE.PRODUCT.CATEGORY>= R.ACCT<AC.CATEGORY>
            R.COMM.STMT.ARR<AC.STE.VALUE.DATE>= TODAY
            R.COMM.STMT.ARR<AC.STE.CURRENCY>= R.ACCT<AC.CURRENCY>
            R.COMM.STMT.ARR<AC.STE.EXCHANGE.RATE>=''
            R.COMM.STMT.ARR<AC.STE.CURRENCY.MARKET>= "1"
            R.COMM.STMT.ARR<AC.STE.TRANS.REFERENCE>= ID.NEW
            R.COMM.STMT.ARR<AC.STE.SYSTEM.ID>= "AC"
            R.COMM.STMT.ARR<AC.STE.BOOKING.DATE>= TODAY
            Y.AMT.LCY= R.NEW(REDO.H.SOL.MONTO.CK)<1,VAR1>
            IF Y.AMT.LCY NE "0" AND Y.AMT.LCY NE '' THEN
                R.COMM.STMT.ARR = CHANGE(R.COMM.STMT.ARR,@VM,@SM)
                R.COMM.STMT.ARR = CHANGE(R.COMM.STMT.ARR,@FM,@VM)
                R.ACC.ARR<-1> = R.COMM.STMT.ARR
            END
            GOSUB RAISE.CATG.ENTRIES
            VAR1+=1
        END
    REPEAT

RETURN
*---------------------------------------------------------------------------
RAISE.CATG.ENTRIES:
*---------------------------------------------------------------------------

    R.CATEG.ENT = ''
    R.CATEG.ENT<AC.CAT.ACCOUNT.NUMBER> = ''
    R.CATEG.ENT<AC.CAT.COMPANY.CODE> = ID.COMPANY
    R.CATEG.ENT<AC.CAT.AMOUNT.LCY> = IN.TXN.AMT
    R.CATEG.ENT<AC.CAT.TRANSACTION.CODE> = R.COMM<FT4.TXN.CODE.CR>
    R.CATEG.ENT<AC.CAT.CUSTOMER.ID>= R.ACCT<AC.CUSTOMER>
    R.CATEG.ENT<AC.CAT.DEPARTMENT.CODE>=R.USER<EB.USE.DEPARTMENT.CODE>
    R.CATEG.ENT<AC.CAT.PL.CATEGORY>= R.COMM<FT4.CATEGORY.ACCOUNT>
    R.CATEG.ENT<AC.CAT.PRODUCT.CATEGORY>=R.ACCT<AC.CATEGORY>
    R.CATEG.ENT<AC.CAT.VALUE.DATE>= TODAY
    R.CATEG.ENT<AC.CAT.CURRENCY> =R.ACCT<AC.CURRENCY>
    R.CATEG.ENT<AC.CAT.EXCHANGE.RATE>=''
    R.CATEG.ENT<AC.CAT.CURRENCY.MARKET>= "1"
    R.CATEG.ENT<AC.CAT.TRANS.REFERENCE>= ID.NEW
    R.CATEG.ENT<AC.CAT.SYSTEM.ID>= "AC"
    R.CATEG.ENT<AC.CAT.BOOKING.DATE>= TODAY
    R.CATEG.ENT<AC.CAT.NARRATIVE>= ''
    R.CATEG.ENT = CHANGE(R.CATEG.ENT,@VM,@SM)
    R.CATEG.ENT = CHANGE(R.CATEG.ENT,@FM,@VM)
    R.ACC.ARR<-1> = R.CATEG.ENT
RETURN
*------------------------------------------------------------------------------
TAX.AMOUNT:
*------------------------------------------------------------------------------

    ACC.ID = R.NEW(REDO.H.SOL.ACCOUNT)
    CALL F.READ(FN.ACCOUNT,ACC.ID,R.ACCT,F.ACCOUNT,ACC.ERR)

    TAX.CODE = R.NEW(REDO.H.SOL.TAX)
    TOT.TAX.AMT = R.NEW(REDO.H.SOL.TAX.AMOUNT)
    IF TOT.TAX.AMT THEN

        CALL CACHE.READ(FN.TAX, TAX.CODE, R.TAX, TAX.ERR) ;*AUTO R22 CODE CONVERSION
        CATEGORY = R.TAX<EB.TAX.CATEGORY>
        DR.TRANS.CODE = R.TAX<EB.TAX.TR.CODE.DR>
        CR.TRANS.CODE = R.TAX<EB.TAX.TR.CODE.CR>
        R.COMM.STMT.ARR = ''

        R.COMM.STMT.ARR<AC.STE.ACCOUNT.NUMBER> = ACC.ID
        R.COMM.STMT.ARR<AC.STE.COMPANY.CODE> = ID.COMPANY
        R.COMM.STMT.ARR<AC.STE.AMOUNT.LCY> = -1*TOT.TAX.AMT
        R.COMM.STMT.ARR<AC.STE.TRANSACTION.CODE> =DR.TRANS.CODE
        R.COMM.STMT.ARR<AC.STE.THEIR.REFERENCE>= ID.NEW
        R.COMM.STMT.ARR<AC.STE.CUSTOMER.ID> =R.ACCT<AC.CUSTOMER>
        R.COMM.STMT.ARR<AC.STE.ACCOUNT.OFFICER> = R.ACCT<AC.ACCOUNT.OFFICER>
        R.COMM.STMT.ARR<AC.STE.PRODUCT.CATEGORY> = R.ACCT<AC.CATEGORY>
        R.COMM.STMT.ARR<AC.STE.VALUE.DATE> = TODAY
        R.COMM.STMT.ARR<AC.STE.CURRENCY> = R.ACCT<AC.CURRENCY>
        R.COMM.STMT.ARR<AC.STE.EXCHANGE.RATE>=''
        R.COMM.STMT.ARR<AC.STE.CURRENCY.MARKET>='1'
        R.COMM.STMT.ARR<AC.STE.TRANS.REFERENCE>=ID.NEW
        R.COMM.STMT.ARR<AC.STE.SYSTEM.ID> = "AC"
        R.COMM.STMT.ARR<AC.STE.BOOKING.DATE> = TODAY
        R.COMM.STMT.ARR = CHANGE(R.COMM.STMT.ARR,@VM,@SM)
        R.COMM.STMT.ARR = CHANGE(R.COMM.STMT.ARR,@FM,@VM)
        R.ACC.ARR<-1> = R.COMM.STMT.ARR
        GOSUB RAISE.TAX.CATG.ENTRIES
        CALL EB.ACCOUNTING("AC","SAO",R.ACC.ARR,'')
    END

RETURN
*---------------------------------------------------------------------
RAISE.TAX.CATG.ENTRIES:
*---------------------------------------------------------------------
*PACS00132219-S
    R.STMT.ENT = ''
    ACCOUNT.NO = R.ACCT<AC.CURRENCY>:CATEGORY:"0001"

    R.STMT.ENT<AC.STE.ACCOUNT.NUMBER> = ACCOUNT.NO
    R.STMT.ENT<AC.STE.COMPANY.CODE>=ID.COMPANY
    R.STMT.ENT<AC.STE.AMOUNT.LCY> = TOT.TAX.AMT
    R.STMT.ENT<AC.STE.TRANSACTION.CODE> = CR.TRANS.CODE
    R.STMT.ENT<AC.STE.CUSTOMER.ID> = R.ACCT<AC.CUSTOMER>
    R.STMT.ENT<AC.STE.DEPARTMENT.CODE> = R.USER<EB.USE.DEPARTMENT.CODE>
    R.STMT.ENT<AC.STE.PRODUCT.CATEGORY> = R.ACCT<AC.CATEGORY>
    R.STMT.ENT<AC.STE.VALUE.DATE> = TODAY
    R.STMT.ENT<AC.STE.CURRENCY> = R.ACCT<AC.CURRENCY>
    R.STMT.ENT<AC.STE.EXCHANGE.RATE> = ''
    R.STMT.ENT<AC.STE.CURRENCY.MARKET> = "1"
    R.STMT.ENT<AC.STE.TRANS.REFERENCE> = ID.NEW
    R.STMT.ENT<AC.STE.SYSTEM.ID> = "AC"
    R.STMT.ENT<AC.STE.BOOKING.DATE> = TODAY
    R.STMT.ENT<AC.STE.NARRATIVE> ='CR.TAX.COMM'

    R.STMT.ENT = CHANGE(R.STMT.ENT,@VM,@SM)
    R.STMT.ENT = CHANGE(R.STMT.ENT,@FM,@VM)

    R.ACC.ARR<-1> = R.STMT.ENT
*PACS00132219-E
RETURN
*------------------
UPDATE.CHEQUE.REGISTER:

    R.CHEQUE.REGISTER<CHEQUE.REG.LAST.EVENT.SEQ> = Y.SEQ.NO
    CALL F.WRITE(FN.CHEQUE.REGISTER,Y.CHQ.REG.ID,R.CHEQUE.REGISTER)
    R.REDO.CONCAT.CHEQUE.REGISTER<1> = Y.SEQ.NO
    Y.ID.NEW=ID.NEW
    CALL F.WRITE(FN.REDO.CONCAT.CHEQUE.REGISTER,Y.ID.NEW,R.REDO.CONCAT.CHEQUE.REGISTER)

RETURN
*------------------
END
