* @ValidationCode : MjotMTM2OTMzMjYwMDpDcDEyNTI6MTY4MTgyODAwNjA2OTpJVFNTOi0xOi0xOjkyNjoxOmZhbHNlOk4vQTpERVZfMjAyMTA4LjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 18 Apr 2023 19:56:46
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 926
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
SUBROUTINE REDO.CARD.REQUEST.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.CARD.REQUEST.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Description  : This is a authorisation routine to update fields in REDO.CARD.REG.STOCK
*Linked With  : Application REDO.CARD.REG.STOCK
*In Parameter : N/A
*Out Parameter: N/A
*--------------------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 18 SEP 2010    Swaminathan.S.R       ODR-2010-03-0400        Initial Creation
* 6 JUN 2011     KAVITHA               PACS00024249            PACS00024249 FIX
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*11-04-2023            CONVERSION TOOL                AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM = TO EQ
*11-04-2023          jayasurya H                       MANUAL R22 CODE CONVERSION            NO CHANGES
*--------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.BRANCH.REQ.STOCK
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.CARD.REG.STOCK

*--------------------------------------------------------------------------------------------------------
**********
MAIN.PARA:
**********

    GOSUB OPEN.PARA
    GOSUB PROCESS.PARA

RETURN
*--------------------------------------------------------------------------------------------------------
**********
OPEN.PARA:
**********
* In this para of code file variables are initialised and opened

    LOC.ID.FLAG = ''
    LOC.RET.FLAG = ''
    LOC.RECEIVE.FLAG = ''
    FN.REDO.CARD.SERIES.PARAM = 'F.REDO.CARD.SERIES.PARAM'
    F.REDO.CARD.SERIES.PARAM = ''
    CALL OPF(FN.REDO.CARD.SERIES.PARAM,F.REDO.CARD.SERIES.PARAM)


    FN.BRANCH.REQ.STOCK = 'F.REDO.BRANCH.REQ.STOCK'
    F.BRANCH.REQ.STOCK = ''
    CALL OPF(FN.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK)

    FN.STOCK.REGISTER='F.REDO.STOCK.REGISTER'
    F.STOCK.REGISTER=''
    CALL OPF(FN.STOCK.REGISTER,F.STOCK.REGISTER)


    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)


RETURN
*------------------------------------------------------------------------------------------------------------
***************
PROCESS.PARA:
***************



    AGENCY.CODE = R.NEW(REDO.CARD.REQ.AGENCY)

    CALL CACHE.READ('F.REDO.CARD.SERIES.PARAM','SYSTEM',R.REDO.CARD.SERIES.PARAM,PARAM.ERR)

    Y.RECEIVE.DEPT.CODE = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.RECEIVE.DEPT.CODE>

    VIRGIN.DEPT = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.VIRGIN.DEPT.CODE>

    Y.TOT.CARD.TYPES = DCOUNT(R.NEW(REDO.CARD.REQ.CARD.TYPE),@VM)
    FETCH.ALL.CARD.TYPE = R.NEW(REDO.CARD.REQ.CARD.TYPE)
    CHANGE @VM TO @FM IN FETCH.ALL.CARD.TYPE

    Y.INIT.COUNT = 1
    LOOP
    WHILE Y.INIT.COUNT LE Y.TOT.CARD.TYPES

        FETCH.CURR.TYPE = FETCH.ALL.CARD.TYPE<Y.INIT.COUNT>
        IF Y.RECEIVE.DEPT.CODE EQ '' THEN
            AF = REDO.CARD.REQ.CARD.SERIES.ID
            AV = 1
            ETEXT = "EB-SERIES.PARAM.DEPT"
            CALL STORE.END.ERROR
        END


        IF V$FUNCTION EQ "R" OR R.NEW(REDO.CARD.REQ.RECORD.STATUS) EQ "RNAU" OR R.NEW(REDO.CARD.REQ.STATUS) EQ '4' OR  R.NEW(REDO.CARD.REQ.STATUS) EQ '5' THEN ;*AUTO R22 CODE CONVERSION
            GOSUB UPDATE.BRANCH.STK
        END

        Y.INIT.COUNT +=1
    REPEAT
RETURN
*--------------------------------------------------------------------------------------------------------------------
UPDATE.BRANCH.STK:


    CARD.TYPE.FETCH = R.NEW(REDO.CARD.REQ.CARD.SERIES.ID)<1,Y.INIT.COUNT>
    ACCEPT.QTY = R.NEW(REDO.CARD.REQ.REGOFF.ACCEPTQTY)<1,Y.INIT.COUNT>

    CALL F.READU(FN.REDO.CARD.REG.STOCK,CARD.TYPE.FETCH,R.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK,STOCK.ERR,"")
    CARD.AVAIL.BAL = R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL>
    CARD.SERIES.FETCH = R.NEW(REDO.CARD.REQ.CARD.SERIES.ID)<1,Y.INIT.COUNT>
    ORDER.QTY = R.NEW(REDO.CARD.REQ.BRANCH.ORDERQTY)<1,Y.INIT.COUNT>

    IF V$FUNCTION NE "R" AND R.NEW(REDO.CARD.REQ.RECORD.STATUS) NE "RNAU" THEN

        IF R.NEW(REDO.CARD.REQ.STATUS) EQ '4' THEN
            REQUEST.DATE = TODAY
            REQ.DATE = TODAY:"-":CARD.TYPE.FETCH
            CALL F.READU(FN.BRANCH.REQ.STOCK,REQ.DATE,R.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK,STK.ENT.ERR,'P')

            GOSUB REQUEST.UPDATE.TABLE
            R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CURRENT.QTY
        END

        IF R.NEW(REDO.CARD.REQ.STATUS) EQ '5' THEN
            REQUEST.DATE = TODAY
            REQ.DATE = TODAY:"-":CARD.TYPE.FETCH
            CALL F.READU(FN.BRANCH.REQ.STOCK,REQ.DATE,R.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK,STK.ENT.ERR,'P')
            GOSUB RECEIVE.UPDATE.TABLE
            R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL - ACCEPT.QTY
        END
    END ELSE
        IF R.NEW(REDO.CARD.REQ.STATUS) LE '4' THEN
            RETURN
        END
        REQUEST.DATE = TODAY
        REQ.DATE = REQUEST.DATE:"-":CARD.TYPE.FETCH
        CALL F.READU(FN.BRANCH.REQ.STOCK,REQ.DATE,R.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK,STK.ENT.ERR,'P')
        GOSUB UPDATE.REVERSAL.DETAILS
        R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL - ORDER.QTY
    END

    CALL F.WRITE(FN.REDO.CARD.REG.STOCK,CARD.TYPE.FETCH,R.REDO.CARD.REG.STOCK)

    CALL F.WRITE(FN.BRANCH.REQ.STOCK,REQ.DATE,R.BRANCH.REQ.STOCK)


RETURN
*-----------------------------------------------------------------------------------------------------------------------------
REQUEST.UPDATE.TABLE:

    IF R.BRANCH.REQ.STOCK THEN
        LOC.RECEIVE.FLAG = "Y"
    END
    GOSUB UPDATE.ACCEPT.QTY

RETURN
*-----------------------------------------
RECEIVE.UPDATE.TABLE:

    FINAL.AVAIL.QTY = ''
    LOOP.REST.CNT = ''
    REQ.POS = ''
    TOT.CNTR = ''

    IF R.BRANCH.REQ.STOCK THEN
        FETCH.REQ.ID = R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID>
        CHANGE @VM TO @FM IN FETCH.REQ.ID
        LOC.ID.FLAG = 'Y'
        TOT.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK>,@VM)
        IF TOT.CNTR LT 1 THEN
            TOT.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD>,@VM)
        END
        LOOP.REST.CNT = TOT.CNTR

        LOCATE ID.NEW IN FETCH.REQ.ID SETTING REQ.POS THEN
            R.BRANCH.REQ.STOCK<BRAN.STK.DELIVERED,REQ.POS> = ACCEPT.QTY
            FINAL.AVAIL.QTY = R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS> - ACCEPT.QTY
            R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS> = FINAL.AVAIL.QTY
            GOSUB UPDATE.REST.MV

        END ELSE
            GOSUB BELOW.ARRIVE.VALUES
        END
    END ELSE
        GOSUB BELOW.ARRIVE.VALUES
    END

RETURN
*-----------------------------------------
BELOW.ARRIVE.VALUES:

    IF LOC.ID.FLAG EQ 'Y' THEN
        TOT.CNTR += 1
    END ELSE
        TOT.CNTR = 1
    END

    R.BRANCH.REQ.STOCK<BRAN.STK.DELIVERED,TOT.CNTR> = ACCEPT.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE> = FETCH.CURR.TYPE
    R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,TOT.CNTR> = CARD.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID,TOT.CNTR> = ID.NEW
    R.BRANCH.REQ.STOCK<BRAN.STK.AGENCY,TOT.CNTR> = AGENCY.CODE
    R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,TOT.CNTR> = CARD.AVAIL.BAL - ACCEPT.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.TXN.DATE> = TODAY

RETURN
*--------------
UPDATE.ACCEPT.QTY:
    TOT.REC.CNTR = ''
    IF LOC.RECEIVE.FLAG EQ 'Y' THEN ;* AUTO R22 CODE CONVERSION
        TOT.REC.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK>,@VM)
        IF TOT.REC.CNTR LT 1 THEN
            TOT.REC.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD>,@VM)
        END
        TOT.REC.CNTR += 1
    END ELSE
        TOT.REC.CNTR = 1
    END

    CURRENT.QTY = CARD.AVAIL.BAL + ORDER.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE> = FETCH.CURR.TYPE
    R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,TOT.REC.CNTR> = CARD.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.QTY.REQUEST,TOT.REC.CNTR> = ORDER.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID,TOT.REC.CNTR> = ID.NEW
    R.BRANCH.REQ.STOCK<BRAN.STK.AGENCY,TOT.REC.CNTR> = AGENCY.CODE
    R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,TOT.REC.CNTR> = CURRENT.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.TXN.DATE> = REQUEST.DATE

RETURN
*-----------------------------------------
UPDATE.REVERSAL.DETAILS:

    FINAL.AVAIL.QTY = ''
    LOOP.REST.CNT = ''
    REQ.POS = ''
    TOT.RET.CNTR = ''

    IF R.BRANCH.REQ.STOCK THEN
        FETCH.REQ.ID = R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID>
        CHANGE @VM TO @FM IN FETCH.REQ.ID
        TOT.RET.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK>,@VM)
        IF TOT.RET.CNTR LT 1 THEN
            TOT.RET.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD>,@VM)
        END
        LOOP.REST.CNT = TOT.RET.CNTR

        LOC.RET.FLAG = 'Y'

        LOCATE ID.NEW IN FETCH.REQ.ID SETTING REQ.POS THEN
            R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,REQ.POS> = ORDER.QTY
            FINAL.AVAIL.QTY = R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS> - ORDER.QTY
            R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS> = FINAL.AVAIL.QTY
            GOSUB UPDATE.REST.MV

        END ELSE
            GOSUB BELOW.ARRIVE.VALUES.RET
        END
    END ELSE
        GOSUB BELOW.ARRIVE.VALUES.RET
    END


RETURN
*--------
BELOW.ARRIVE.VALUES.RET:

    IF LOC.RET.FLAG EQ 'Y' THEN ;* AUTO R22 CODE CONVERSION
        TOT.RET.CNTR += 1
    END ELSE
        TOT.RET.CNTR = 1
    END

    R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,TOT.RET.CNTR > = ORDER.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE> = FETCH.CURR.TYPE
    R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,TOT.RET.CNTR > = CARD.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID,TOT.RET.CNTR > = ID.NEW
    R.BRANCH.REQ.STOCK<BRAN.STK.AGENCY,TOT.RET.CNTR > = AGENCY.CODE
    R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,TOT.RET.CNTR > = CARD.AVAIL.BAL - ORDER.QTY
    R.BRANCH.REQ.STOCK<BRAN.STK.TXN.DATE> = TODAY


RETURN
*--------
UPDATE.REST.MV:

    REST.MV.CNTR = REQ.POS + 1
    LOOP
    WHILE REST.MV.CNTR LE LOOP.REST.CNT

        REST.QTY.REQUEST = ''
        REST.LOST.VALUE = ''
        REST.DAMAGE.VAL = ''
        REST.RETURN.VALUE = ''
        REST.DELIVERED =  ''
        REST.CURRENT.QTY = ''

        R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,REST.MV.CNTR> = FINAL.AVAIL.QTY
        REST.QTY.REQUEST = R.BRANCH.REQ.STOCK<BRAN.STK.QTY.REQUEST,REST.MV.CNTR>
        REST.LOST.VALUE = R.BRANCH.REQ.STOCK<BRAN.STK.LOST,REST.MV.CNTR>
        REST.DAMAGE.VAL = R.BRANCH.REQ.STOCK<BRAN.STK.DAMAGE,REST.MV.CNTR>
        REST.RETURN.VALUE = R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,REST.MV.CNTR>
        REST.DELIVERED = R.BRANCH.REQ.STOCK<BRAN.STK.DELIVERED,REST.MV.CNTR>
        REST.CURRENT.QTY = FINAL.AVAIL.QTY + REST.QTY.REQUEST - REST.LOST.VALUE - REST.DAMAGE.VAL - REST.RETURN.VALUE - REST.DELIVERED
        R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REST.MV.CNTR> = REST.CURRENT.QTY
        FINAL.AVAIL.QTY = REST.CURRENT.QTY

        REST.MV.CNTR += 1
    REPEAT

RETURN
*--------
END
