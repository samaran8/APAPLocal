* @ValidationCode : Mjo2ODc1Nzc4MzM6Q3AxMjUyOjE2ODE4MjgwMDM3MDk6SVRTUzotMTotMToxMzQwOjE6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 18 Apr 2023 19:56:43
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1340
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
SUBROUTINE REDO.CARD.DMG.EMBOSS.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.CARD.DAMAGE.VIRGIN.VALIDATE
*--------------------------------------------------------------------------------------------------------
*Description  : Defaulting the Values for the REDO.CARD.DAMAGE.VIRGIN
*Linked With  : Application REDO.CARD.DAMAGE
*In Parameter : N/A
*Out Parameter: N/A
*--------------------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 19 MAY 2011     JEEVA T               ODR-2010-03-0400        Initail Draft
*6 JUN 2011       KAVITHA               PACS00024249            PACS00024249 FIX
* 11-04-2023      CONVERSION TOOL       AUTO R22 CODE CONVERSION   VM TO @VM , FM TO @FM
* 11-04-2023      jayasurya H           MANUAL R22 CODE CONVERSION NO CHANGES
*--------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.COMPANY
    $INSERT I_F.REDO.CARD.DMG.EMBOSS
    $INSERT I_REDO.CRD.DMG.LST.COMMON
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_System
    $INSERT I_F.REDO.CARD.REG.STOCK
    $INSERT I_F.REDO.BRANCH.REQ.STOCK

*--------------------------------------------------------------------------------------------------------
**********
MAIN.PARA:
**********


    GOSUB OPEN.PARA
    GOSUB PROCESS.PARA
    IF R.NEW(DMG.LST.MOVE.FROM.INIT) EQ 'YES' THEN
        CURRENT.GETSTK.VAL=''
        CURRENT.GETSTK.VAL= Y.ID.NEW:'@':R.NEW(DMG.LST.REG.ID) : '@' : Y.CARD.TYPE.NEW :'@': Y.LOST.LIST :'@': Y.DAMAGE.LIST :'@':Y.CARD.TYPE.NEW
        CALL  System.setVariable('CURRENT.GETSTK',CURRENT.GETSTK.VAL)
        CALL EB.SET.NEXT.TASK("REDO.STOCK.ENTRY,MV.INIT I F3")
    END

    R.NEW(DMG.LST.TIME.ENTRY) =TODAY
RETURN
*--------------------------------------------------------------------------------------------------------
**********
OPEN.PARA:
**********
* In this para of code file variables are initialised and opened

    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)

    LOC.RET.FLAG = ''

    FN.BRANCH.REQ.STOCK = 'F.REDO.BRANCH.REQ.STOCK'
    F.BRANCH.REQ.STOCK = ''
    CALL OPF(FN.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK)

    FN.CARD.TYPE = 'F.CARD.TYPE'
    F.CARD.TYPE = ''
    CALL OPF(FN.CARD.TYPE,F.CARD.TYPE)

    FN.REDO.STOCK.REGISTER = 'F.REDO.STOCK.REGISTER'
    F.REDO.STOCK.REGISTER = ''
    CALL OPF(FN.REDO.STOCK.REGISTER,F.REDO.STOCK.REGISTER)

    FN.REDO.CARD.REQ = 'F.REDO.CARD.REQUEST'
    F.REDO.CARD.REQ = ''
    CALL OPF(FN.REDO.CARD.REQ,F.REDO.CARD.REQ)

    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)
    Y.ID.NEW=ID.NEW
RETURN
*--------------------------------------------------------------------------------------------------------
*************
PROCESS.PARA:
*************
* Main processing section
    CALL F.READ(FN.REDO.CARD.REQ,Y.ID.NEW,R.REDO.CARD.REQ,F.REDO.CARD.REQ,ERR)
    AGENCY = R.REDO.CARD.REQ<REDO.CARD.REQ.AGENCY>

    Y.ID = R.NEW(DMG.LST.REG.ID)
    CALL F.READU(FN.REDO.STOCK.REGISTER,Y.ID,R.REDO.STOCK.REGISTER,F.REDO.STOCK.REGISTER,Y.ERR,'')
    Y.STOCK.SERIES.ID = R.REDO.STOCK.REGISTER<STK.REG.SERIES.ID>
    Y.STOCK.SERIES.BAL = R.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL>
    Y.LOST.LIST = R.NEW(DMG.LST.LOST)
    Y.DAMAGE.LIST = R.NEW(DMG.LST.DAMAGE)
    GOSUB CARD.TYPE.CHECK

RETURN
*--------------------------------------------------------------------------------------------------------
CARD.TYPE.CHECK:
*--------------------------------------------------------------------------------------------------------

    Y.CARD.TYPE.NEW = R.NEW(DMG.LST.CARD.TYPE)
    Y.CARD.SERIES = R.NEW(DMG.LST.SERIES)
    Y.COUNT = DCOUNT(Y.CARD.TYPE.NEW,@VM)
    Y.CNT = 1
    CRD.TYPE.REQ=R.REDO.CARD.REQUEST<REDO.CARD.REQ.CARD.TYPE>
    CRD.CNT.REQ=R.REDO.CARD.REQUEST<REDO.CARD.REQ.REGOFF.ACCEPTQTY>
    LOOP
    WHILE Y.CNT LE Y.COUNT
        Y.SERIES.VAL =  Y.CARD.SERIES<1,Y.CNT>
        Y.CRD.TYPE=Y.CARD.TYPE.NEW<1,Y.CNT>
        Y.CRD.SERIES = Y.CARD.SERIES<1,Y.CNT>
        Y.LOST.VAL = Y.LOST.LIST<1,Y.CNT>
        Y.DAMAGE.VAL = Y.DAMAGE.LIST<1,Y.CNT>
        GOSUB CHECK.STOCK.REG
        GOSUB UPDATE.BRANCH.STK

        Y.LOST.VAL = ''
        Y.DAMAGE.VAL = ''


        LOCATE Y.SERIES.VAL IN R.NEW(DMG.LST.OLD.SERIES)<1,1> SETTING OLD.POS THEN

            R.NEW(DMG.LST.OLD.LOST)<1,OLD.POS>=R.NEW(DMG.LST.OLD.LOST)<1,OLD.POS>+  Y.LOST.LIST<1,Y.CNT>
            R.NEW(DMG.LST.OLD.DAMAGE)<1,OLD.POS>=R.NEW(DMG.LST.OLD.DAMAGE)<1,OLD.POS>+Y.DAMAGE.LIST<1,Y.CNT>


            R.NEW(DMG.LST.OLD.LOST.DESC)<1,OLD.POS>=R.NEW(DMG.LST.LOST.DESC)<1,Y.CNT>
            R.NEW(DMG.LST.OLD.DAM.DESC)<1,OLD.POS>=R.NEW(DMG.LST.DAM.DESC)<1,Y.CNT>

        END ELSE

            R.NEW(DMG.LST.OLD.SERIES)<1,-1>=Y.SERIES.VAL
            R.NEW(DMG.LST.OLD.CARD.TYPE)<1,-1>=Y.CRD.TYPE
            R.NEW(DMG.LST.OLD.LOST)<1,-1>=  Y.LOST.LIST<1,Y.CNT>
            R.NEW(DMG.LST.OLD.DAMAGE)<1,-1>=Y.DAMAGE.LIST<1,Y.CNT>

            R.NEW(DMG.LST.OLD.LOST.DESC)<1,-1>=R.NEW(DMG.LST.LOST.DESC)<1,Y.CNT>
            R.NEW(DMG.LST.OLD.DAM.DESC)<1,-1>= R.NEW(DMG.LST.DAM.DESC)<1,Y.CNT>

        END
        Y.CNT += 1
    REPEAT


    R.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL> = SUM(R.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL>)
    CALL F.WRITE(FN.REDO.STOCK.REGISTER,Y.ID,R.REDO.STOCK.REGISTER)
    CALL F.WRITE(FN.REDO.CARD.REQUEST,Y.ID.NEW,R.REDO.CARD.REQUEST)


    R.NEW(DMG.LST.SERIES) =''
    R.NEW(DMG.LST.CARD.TYPE) =''
    R.NEW(DMG.LST.LOST) = ''
    R.NEW(DMG.LST.DAMAGE) =''

    R.NEW(DMG.LST.LOST.DESC) = ''
    R.NEW(DMG.LST.DAM.DESC) = ''



RETURN
*--------------------------------------------------------------------------------------------------------
CHECK.STOCK.REG:
*--------------------------------------------------------------------------------------------------------

    LOCATE Y.SERIES.VAL IN Y.STOCK.SERIES.ID<1,1> SETTING POS1 THEN

        Y.TOT = Y.LOST.VAL + Y.DAMAGE.VAL
        R.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL,POS1> = Y.STOCK.SERIES.BAL<1,POS1> - Y.TOT
*R.REDO.CARD.REQUEST
        LOCATE Y.CRD.TYPE IN  CRD.TYPE.REQ<1,1> SETTING POS.CRD THEN
            R.REDO.CARD.REQUEST<REDO.CARD.REQ.REGOFF.ACCEPTQTY,POS.CRD>=R.REDO.CARD.REQUEST<REDO.CARD.REQ.REGOFF.ACCEPTQTY,POS.CRD>-Y.TOT
        END

    END

RETURN
*-------------------------------------------------
UPDATE.BRANCH.STK:
*PACS00024249-S



    CALL F.READU(FN.REDO.CARD.REG.STOCK,Y.SERIES.VAL,R.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK,STOCK.ERR,"")
    CARD.AVAIL.BAL = R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL>

    CONCAT.FILE.ID = TODAY:"-":Y.SERIES.VAL
    CALL F.READU(FN.BRANCH.REQ.STOCK,CONCAT.FILE.ID,R.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK,STK.ENT.ERR,'P')
    IF R.BRANCH.REQ.STOCK THEN
        LOC.RET.FLAG = 'Y'
        FETCH.REQ.ID = R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID>
        CHANGE @VM TO @FM IN FETCH.REQ.ID
        ASS.FETCH.REQ.ID = FETCH.REQ.ID

        FETCH.SERIES = R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE>
        CHANGE @VM TO @FM IN FETCH.SERIES
        TOT.RET.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK>,@VM)

        IF TOT.RET.CNTR LT 1 THEN
            TOT.RET.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD>,@VM)
        END

        LOOP.REST.CNT = TOT.RET.CNTR

        LOCATE Y.ID.NEW IN ASS.FETCH.REQ.ID SETTING REQ.POS THEN
            GET.INT.STK = R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,REQ.POS>
            FETCH.LOST.VAL = R.BRANCH.REQ.STOCK<BRAN.STK.LOST,REQ.POS>

            IF FETCH.LOST.VAL THEN
                FETCH.LOST.VAL += Y.LOST.VAL
            END ELSE
                FETCH.LOST.VAL = Y.LOST.VAL
            END

            R.BRANCH.REQ.STOCK<BRAN.STK.LOST,REQ.POS> = FETCH.LOST.VAL

            FETCH.DAM.VAL =  R.BRANCH.REQ.STOCK<BRAN.STK.DAMAGE,REQ.POS>

            IF FETCH.DAM.VAL THEN
                FETCH.DAM.VAL += Y.DAMAGE.VAL
            END ELSE
                FETCH.DAM.VAL = Y.DAMAGE.VAL
            END

            R.BRANCH.REQ.STOCK<BRAN.STK.DAMAGE,REQ.POS> = FETCH.DAM.VAL

            CURR.QTY = R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS>
            FINAL.AVAIL.QTY = CURR.QTY - Y.LOST.VAL - Y.DAMAGE.VAL
            R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS> = FINAL.AVAIL.QTY

            GOSUB UPDATE.REST.MV

        END ELSE
            GOSUB UPDATE.NEW.REC
        END
    END ELSE
        GOSUB UPDATE.NEW.REC
    END


    CARD.AVAIL.BAL = CARD.AVAIL.BAL - Y.LOST.VAL - Y.DAMAGE.VAL
    R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL

    CALL F.WRITE(FN.REDO.CARD.REG.STOCK,Y.SERIES.VAL,R.REDO.CARD.REG.STOCK)

    CALL F.WRITE(FN.BRANCH.REQ.STOCK,CONCAT.FILE.ID,R.BRANCH.REQ.STOCK)

RETURN
*--------------
UPDATE.NEW.REC:
    IF LOC.RET.FLAG EQ 'Y' THEN ;*AUTO R22 CODE CONVERSION
        TOT.RET.CNTR += 1
    END ELSE
        TOT.RET.CNTR = 1
    END

    R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE> = Y.CRD.TYPE
    R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,TOT.RET.CNTR> = CARD.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.LOST,TOT.RET.CNTR> =  Y.LOST.VAL
    R.BRANCH.REQ.STOCK<BRAN.STK.DAMAGE,TOT.RET.CNTR> = Y.DAMAGE.VAL
    R.BRANCH.REQ.STOCK<BRAN.STK.AGENCY,TOT.RET.CNTR> = AGENCY
    R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID,TOT.RET.CNTR> = Y.ID.NEW
    R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,TOT.RET.CNTR> = CARD.AVAIL.BAL - Y.LOST.VAL - Y.DAMAGE.VAL
    R.BRANCH.REQ.STOCK<BRAN.STK.TXN.DATE> = TODAY
RETURN
*------------
UPDATE.REST.MV:

    REST.MV.CNTR = REQ.POS + 1
    LOOP
    WHILE REST.MV.CNTR LE LOOP.REST.CNT

        REST.QTY.REQUEST = ''
        REST.LOST.VALUE = ''
        REST.DAMAGE.VAL = ''
        REST.RETURN.VALUE = ''
        REST.DELIVERED =  ''
        REST.CURRENT.QTY = ''

        R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,REST.MV.CNTR> = FINAL.AVAIL.QTY
        REST.QTY.REQUEST = R.BRANCH.REQ.STOCK<BRAN.STK.QTY.REQUEST,REST.MV.CNTR>
        REST.LOST.VALUE = R.BRANCH.REQ.STOCK<BRAN.STK.LOST,REST.MV.CNTR>
        REST.DAMAGE.VAL = R.BRANCH.REQ.STOCK<BRAN.STK.DAMAGE,REST.MV.CNTR>
        REST.RETURN.VALUE = R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,REST.MV.CNTR>
        REST.DELIVERED = R.BRANCH.REQ.STOCK<BRAN.STK.DELIVERED,REST.MV.CNTR>
        REST.CURRENT.QTY = FINAL.AVAIL.QTY + REST.QTY.REQUEST - REST.LOST.VALUE - REST.DAMAGE.VAL - REST.RETURN.VALUE - REST.DELIVERED
        R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REST.MV.CNTR> = REST.CURRENT.QTY
        FINAL.AVAIL.QTY = REST.CURRENT.QTY

        REST.MV.CNTR += 1

    REPEAT

RETURN
*------------
*PACS00024249-E

END
