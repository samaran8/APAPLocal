* @ValidationCode : MjotNjA2MzI2MzYyOkNwMTI1MjoxNjgyMDczMzg1MTc5OklUU1M6LTE6LTE6MTY0NDoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 21 Apr 2023 16:06:25
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1644
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOENQ
SUBROUTINE REDO.NOFILE.STMT.FT.LIST.TXN(Y.FINAL.ARRAY)
*-----------------------------------------------------------------------------
* Company Name : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* Developed By : Prabhu N
* Program Name : REDO.NOFILE.STMT.FT.LIST.TXN
*-----------------------------------------------------------------------------
* Description : This Nofile routine will get required details of Customer Accts
* Linked with :
*-----------------------------------------------------------------------------

*MODIFICATION HISTORY:
*
* DATE              WHO                REFERENCE                 DESCRIPTION
* 13-APR-2023     Conversion tool   R22 Auto conversion   FM TO @FM, VM to @VM, -- to -=
* 13-APR-2023      Harishvikram C   Manual R22 conversion      No changes
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_System
    $INSERT I_EB.EXTERNAL.COMMON
    $INSERT I_F.CUSTOMER.ACCOUNT
    $INSERT I_F.REDO.APAP.STO.DUPLICATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.FT.TXN.TYPE.CONDITION
    $INSERT I_F.STANDING.ORDER
    $INSERT I_F.AA.REFERENCE.DETAILS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.ACTIVITY
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.TRANSACTION
    $INSERT I_F.AI.REDO.ARCIB.PARAMETER


*---------*
MAIN.PARA:
*---------*
    GOSUB INITIALISE
    GOSUB OPEN.FILES
    GOSUB PROCESS
    GOSUB SORT.DETAILS
RETURN
*----------*
INITIALISE:
*----------*
    FN.FUNDS.TRANSFER.EXCEP = "F.FUNDS.TRANSFER$HIS"
    F.FUNDS.TRANSFER.EXCEP = ''
    FN.FT.TXN.TYPE.CONDITION = 'F.FT.TXN.TYPE.CONDITION'
    F.FT.TXN.TYPE.CONDITION = ''
    FN.STO.DUP.EXCEP = 'F.REDO.APAP.STO.DUPLICATE$HIS'
    F.STO.DUP.EXCEP = ''
    FN.STANDING.ORDER.EXCEP = 'F.STANDING.ORDER$NAU'
    F.STANDING.ORDER.EXCEP = ''
    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER = ''
    FN.AA.REFERENCE.DETAILS = 'F.AA.REFERENCE.DETAILS'
    F.AA.REFERENCE.DETAILS = ''
    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    FN.AA.ACTIVITY = 'F.AA.ACTIVITY'
    F.AA.ACTIVITY = ''

    FN.AA.ARRANGEMENT.ACTIVITY = 'F.AA.ARRANGEMENT.ACTIVITY'
    F.AA.ARRANGEMENT.ACTIVITY = ''

    FN.STMT.ENTRY = 'F.STMT.ENTRY'
    F.STMT.ENTRY = ''
    FN.TRANSACTION = 'F.TRANSACTION'
    F.TRANSACTION = ''

    FN.AI.REDO.ARCIB.PARAMETER = 'F.AI.REDO.ARCIB.PARAMETER'
    F.AI.REDO.ARCIB.PARAMETER = ''


RETURN
*----------*
OPEN.FILES:
*----------*
    CALL OPF(FN.FUNDS.TRANSFER.EXCEP,F.FUNDS.TRANSFER.EXCEP)
    CALL OPF(FN.FT.TXN.TYPE.CONDITION,F.FT.TXN.TYPE.CONDITION)
    CALL OPF(FN.STO.DUP.EXCEP,F.STO.DUP.EXCEP)
    CALL OPF(FN.STANDING.ORDER.EXCEP,F.STANDING.ORDER.EXCEP)
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)
    CALL OPF(FN.AA.REFERENCE.DETAILS,F.AA.REFERENCE.DETAILS)
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.AA.ACTIVITY,F.AA.ACTIVITY)
    CALL OPF(FN.AA.ARRANGEMENT.ACTIVITY,F.AA.ARRANGEMENT.ACTIVITY)
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)
    CALL OPF(FN.TRANSACTION,F.TRANSACTION)
    CALL OPF(FN.AI.REDO.ARCIB.PARAMETER,F.AI.REDO.ARCIB.PARAMETER)

    CALL CACHE.READ(FN.AI.REDO.ARCIB.PARAMETER,'SYSTEM',R.AI.REDO.ARCIB.PARAMETER,ARCIB.ERR)
    Y.MIG.PARAM.CODE = R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.MIGRATION.CODE>
    CHANGE @VM TO @FM IN Y.MIG.PARAM.CODE

    LREF.APP = 'FUNDS.TRANSFER'
    LREF.FIELDS = 'L.ACTUAL.VERSIO'
    LREF.POS=''
    CALL GET.LOC.REF(LREF.APP,LREF.FIELDS,LREF.POS)

    Y.SORT.ARR = ''

RETURN

*--------*
PROCESS:
*--------*

    Y.VAR.ACCOUNT = System.getVariable('CURRENT.ACCT.NO')
    IF E EQ "EB-UNKNOWN.VARIABLE" THEN ;*R22 Auto conversion-START
        Y.VAR.ACCOUNT = ""
    END					;*R22 Auto conversion-END


    CALL F.READ(FN.ACCOUNT,Y.VAR.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERR)
    Y.ARRANGEMENT.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>
    CALL F.READ(FN.AA.REFERENCE.DETAILS,Y.ARRANGEMENT.ID,R.AA.REFERENCE.DETAILS,F.AA.REFERENCE.DETAILS,AA.REFERENCE.DETAILS.ERR)
    Y.TRANS.REF = R.AA.REFERENCE.DETAILS<AA.REF.TRANS.REF>
    Y.AAA.TRANS.REF = R.AA.REFERENCE.DETAILS<AA.REF.AAA.ID>
    Y.MAX.TRANS.REF = DCOUNT(Y.TRANS.REF,@VM)
    Y.TRANS.REF.CNT = 0

    LOOP
        Y.DEBIT.AMOUNT = ''
        Y.CREDIT.AMOUNT = ''
        Y.DESCRIPTION = ''
    WHILE Y.TRANS.REF.CNT LT Y.MAX.TRANS.REF
        Y.TRANS.REF.ID = Y.TRANS.REF<1,Y.MAX.TRANS.REF>
        Y.AAA.REF.ID = Y.AAA.TRANS.REF<1,Y.MAX.TRANS.REF>
        CALL F.READ(FN.FUNDS.TRANSFER,Y.TRANS.REF.ID,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FT.ERR)
        CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY,Y.AAA.REF.ID,R.AA.ARRANGEMENT.ACTIVITY,F.AA.ARRANGEMENT.ACTIVITY,AAA.ERR)
        Y.ACT.ACTIVITY = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ACTIVITY>
        Y.STMT.NO = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.STMT.NOS,1>:'0001'
        CALL F.READ(FN.STMT.ENTRY,Y.STMT.NO,R.STMT.ENTRY,F.STMT.ENTRY,STMT.ENTRY.ERR)
        Y.SE.TXN.CODE = R.STMT.ENTRY<AC.STE.TRANSACTION.CODE>
        LOCATE Y.SE.TXN.CODE IN Y.MIG.PARAM.CODE SETTING Y.MIG.POS THEN
            CONTINUE
        END
        CALL CACHE.READ(FN.TRANSACTION, Y.SE.TXN.CODE, R.TRANSACTION, TRANSACTION.ERR) ;*R22 Auto conversion
        Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,LNGG>
        IF NOT(Y.DESCRIPTION) THEN
            Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,1>
        END
        IF FT.ERR THEN
            GOSUB FT.HIST.READ
        END ELSE
            GOSUB FT.LIVE.READ
        END
        Y.MAX.TRANS.REF -= 1
    REPEAT

RETURN
*************
FT.HIST.READ:
*************
    CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.EXCEP,Y.TRANS.REF.ID,R.FUNDS.TRANSFER.EXCEP,FT.HIS.ERR)

    Y.TRANSACTION.TYPE = R.FUNDS.TRANSFER.EXCEP<FT.TRANSACTION.TYPE>

    CALL CACHE.READ(FN.FT.TXN.TYPE.CONDITION, Y.TRANSACTION.TYPE, R.FT.TXN.TYPE.CONDITION, FTTC.ERR) ;*R22 Auto conversion

    Y.DATE.TIME = R.FUNDS.TRANSFER.EXCEP<FT.DATE.TIME>
    Y.CREDIT.VALUE.DATE = R.FUNDS.TRANSFER.EXCEP<FT.CREDIT.VALUE.DATE>
    Y.DEBIT.ACCT.NO = R.FUNDS.TRANSFER.EXCEP<FT.DEBIT.ACCT.NO>
    Y.CREDIT.ACCT.NO = R.FUNDS.TRANSFER.EXCEP<FT.CREDIT.ACCT.NO>
    IF Y.DEBIT.ACCT.NO EQ Y.VAR.ACCOUNT THEN
        Y.DEBIT.AMOUNT = R.FUNDS.TRANSFER.EXCEP<FT.DEBIT.AMOUNT>
        IF NOT(Y.DEBIT.AMOUNT) THEN
            Y.DEBIT.AMOUNT = R.FUNDS.TRANSFER.EXCEP<FT.CREDIT.AMOUNT>
        END
        Y.ACCT.NO = Y.DEBIT.ACCT.NO

        Y.FTTC.TXN.CODE = R.FT.TXN.TYPE.CONDITION<FT6.STO.TXN.CODE.CR>
        CALL CACHE.READ(FN.TRANSACTION, Y.FTTC.TXN.CODE, R.TRANSACTION, TRANSACTION.ERR) ;*R22 Auto conversion
        Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,LNGG>
        IF NOT(Y.DESCRIPTION) THEN
            Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,1>
        END

    END ELSE
        Y.CREDIT.AMOUNT = R.FUNDS.TRANSFER.EXCEP<FT.DEBIT.AMOUNT>
        IF NOT(Y.CREDIT.AMOUNT) THEN
            Y.CREDIT.AMOUNT = R.FUNDS.TRANSFER.EXCEP<FT.CREDIT.AMOUNT>
        END
        Y.ACCT.NO = Y.CREDIT.ACCT.NO
        Y.FTTC.TXN.CODE = R.FT.TXN.TYPE.CONDITION<FT6.STO.TXN.CODE.DR>
        CALL CACHE.READ(FN.TRANSACTION, Y.FTTC.TXN.CODE, R.TRANSACTION, TRANSACTION.ERR) ;*R22 Auto conversion
        Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,LNGG>
        IF NOT(Y.DESCRIPTION) THEN
            Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,1>
        END
    END
    Y.CURRENCY = R.FUNDS.TRANSFER.EXCEP<FT.CREDIT.CURRENCY>
    Y.VERSION = R.FUNDS.TRANSFER.EXCEP<FT.LOCAL.REF,LREF.POS>
    Y.CREDIT.CUSTOMER=R.FUNDS.TRANSFER.EXCEP<FT.CREDIT.CUSTOMER>

    Y.TRANS.REF.ID = FIELD(Y.TRANS.REF.ID,';',1)

    LIST.FT.EXCEP<-1> = Y.CREDIT.VALUE.DATE:"*":Y.DESCRIPTION:"*":Y.TRANS.REF.ID:"*":Y.CURRENCY:"*":Y.DEBIT.AMOUNT:"*":Y.CREDIT.AMOUNT:"*":Y.CREDIT.CUSTOMER:"*":Y.ACCT.NO:"*":Y.STMT.NO:@FM:Y.TRANS.REF.ID
    Y.SORT.ARR<-1> = Y.TRANS.REF.ID


RETURN
*************
FT.LIVE.READ:
*************
    Y.TRANSACTION.TYPE = R.FUNDS.TRANSFER<FT.TRANSACTION.TYPE>
    CALL CACHE.READ(FN.FT.TXN.TYPE.CONDITION, Y.TRANSACTION.TYPE, R.FT.TXN.TYPE.CONDITION, FTTC.ERR) ;*R22 Auto conversion


    Y.DATE.TIME = R.FUNDS.TRANSFER<FT.DATE.TIME>
    Y.CREDIT.VALUE.DATE = R.FUNDS.TRANSFER<FT.CREDIT.VALUE.DATE>
    Y.DEBIT.ACCT.NO = R.FUNDS.TRANSFER<FT.DEBIT.ACCT.NO>
    Y.CREDIT.ACCT.NO = R.FUNDS.TRANSFER<FT.CREDIT.ACCT.NO>

    IF Y.DEBIT.ACCT.NO EQ Y.VAR.ACCOUNT THEN
        Y.DEBIT.AMOUNT = R.FUNDS.TRANSFER<FT.DEBIT.AMOUNT>
        IF NOT(Y.DEBIT.AMOUNT) THEN
            Y.DEBIT.AMOUNT = R.FUNDS.TRANSFER<FT.CREDIT.AMOUNT>
        END
        Y.ACCT.NO = Y.DEBIT.ACCT.NO

        Y.FTTC.TXN.CODE = R.FT.TXN.TYPE.CONDITION<FT6.STO.TXN.CODE.CR>
        CALL CACHE.READ(FN.TRANSACTION, Y.FTTC.TXN.CODE, R.TRANSACTION, TRANSACTION.ERR) ;*R22 Auto conversion
        Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,LNGG>
        IF NOT(Y.DESCRIPTION) THEN
            Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,1>
        END

    END ELSE
        Y.CREDIT.AMOUNT = R.FUNDS.TRANSFER<FT.DEBIT.AMOUNT>
        IF NOT(Y.CREDIT.AMOUNT) THEN
            Y.CREDIT.AMOUNT = R.FUNDS.TRANSFER<FT.CREDIT.AMOUNT>
        END

        Y.FTTC.TXN.CODE = R.FT.TXN.TYPE.CONDITION<FT6.STO.TXN.CODE.DR>
        CALL CACHE.READ(FN.TRANSACTION, Y.FTTC.TXN.CODE, R.TRANSACTION, TRANSACTION.ERR) ;*R22 Auto conversion
        Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,LNGG>
        IF NOT(Y.DESCRIPTION) THEN
            Y.DESCRIPTION = R.TRANSACTION<AC.TRA.NARRATIVE,1>
        END

        Y.ACCT.NO = Y.CREDIT.ACCT.NO
    END

    Y.CURRENCY = R.FUNDS.TRANSFER<FT.CREDIT.CURRENCY>
    Y.VERSION = R.FUNDS.TRANSFER<FT.LOCAL.REF,LREF.POS>
    Y.CREDIT.CUSTOMER=R.FUNDS.TRANSFER<FT.CREDIT.CUSTOMER>


    LIST.FT.EXCEP<-1> = Y.CREDIT.VALUE.DATE:"*":Y.DESCRIPTION:"*":Y.TRANS.REF.ID:"*":Y.CURRENCY:"*":Y.DEBIT.AMOUNT:"*":Y.CREDIT.AMOUNT:"*":Y.CREDIT.CUSTOMER:"*":Y.CREDIT.ACCT.NO:"*":Y.STMT.NO:@FM:Y.TRANS.REF.ID
    Y.SORT.ARR<-1> = Y.TRANS.REF.ID
RETURN
*************
SORT.DETAILS:
*************
    Y.SORT.ARR = SORT(Y.SORT.ARR)
    Y.SORT.COUNT = DCOUNT(Y.SORT.ARR,@FM)
    Y.SORT.START = 1
    LOOP
    WHILE Y.SORT.START LE Y.SORT.COUNT
        Y.ARR.ID = Y.SORT.ARR<Y.SORT.COUNT>
        IF Y.ARR.ID THEN
            LOCATE Y.ARR.ID IN LIST.FT.EXCEP SETTING Y.FM.POS THEN
                Y.DATA<-1> = LIST.FT.EXCEP<Y.FM.POS-1>
                DEL LIST.FT.EXCEP<Y.FM.POS>
                DEL LIST.FT.EXCEP<Y.FM.POS-1>
            END
        END
        Y.SORT.COUNT -= 1
    REPEAT
    Y.FINAL.ARRAY = FIELD(Y.DATA,@FM,1,5)
RETURN
END
