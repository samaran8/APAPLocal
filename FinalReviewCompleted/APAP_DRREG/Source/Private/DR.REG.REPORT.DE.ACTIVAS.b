* @ValidationCode : MjoyMTc0MDA0NzI6Q3AxMjUyOjE2ODA3NjQ1NjAwNTQ6YWppdGg6LTE6LTE6MDowOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 06 Apr 2023 12:32:40
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ajith
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.DRREG
*
*-----------------------------------------------------------------------------
*MODIFICATION HISTORY:
*---------------------------------------------------------------------------------------
*DATE               WHO                       REFERENCE                 DESCRIPTION
*06-04-2023       CONVERSION TOOLS            AUTO R22 CODE CONVERSION   CONVERT into CHANGE , VM to @VM
*06-04-2023       AJITHKUMAR                  MANUAL R22 CODE CONVERSION NO CHANGE
*----------------------------------------------------------------------------------------




*-----------------------------------------------------------------------------
SUBROUTINE DR.REG.REPORT.DE.ACTIVAS
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_F.AA.INTEREST

    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.AA.ACCOUNT.DETAILS

    $INSERT I_F.DR.REGREP.PARAM

*-------------------------------------------------------------------
* This report reports consolidated all the disbursement done one loans
* accoording to loan type, loan term and interest rate.
*
*----------------------------------------------------------------------------

    GOSUB INIT.PARA
    IF PROCESS.GO.AHEAD THEN
        GOSUB SEL.PARA
        GOSUB PROC.PARA
    END
    GOSUB WRITE.REPORT

RETURN

PROC.PARA:
*----------
    LOOP
        REMOVE ARR.ACT.ID FROM ARR.LIST SETTING ACCTENT.POS
    WHILE  ARR.ACT.ID NE ''
        REP.LINE =  ''  ; REP.LINE.PT1 = '' ; REP.LINE.PT2 = '' ; REP.LINE.PT3 = ''
        GOSUB READ.RECORDS
        IF ACT.GOAHEAD THEN
            GOSUB GET.VALUES
            SORT.ID = LOAN.GROUP:'-':LOAN.CURR : '*':LN.TERM:'*':INT.RATE
            GOSUB SORT.PARA
            IF INT.RATE LT PROD.RATE THEN

                LOAN.GROUP = 'PREFERENTIAL'
                SORT.ID = LOAN.GROUP:'-':LOAN.CURR : '*':LN.TERM:'*':INT.RATE
                GOSUB SORT.PARA
            END
        END
    REPEAT
RETURN

SORT.PARA:
*----------

    SRTPOS = ''
    LOCATE SORT.ID IN SORT.KEY<1> BY 'AR' SETTING SRTPOS THEN
        SORT.ARRAY<SRTPOS,2> += 1 ;* Assumption there is only one disbursement for a loan in a day else should maintain a arrangement array
        SORT.ARRAY<SRTPOS,3> += R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.TXN.AMOUNT>
    END ELSE
        INS SORT.ID BEFORE SORT.KEY<SRTPOS>
        INS SORT.ID BEFORE SORT.ARRAY<SRTPOS>
        SORT.ARRAY<SRTPOS,2> = 1  ;* Assumption there is only one disbursement for a loan in a day else should maintain a arrangement array
        SORT.ARRAY<SRTPOS,3> = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.TXN.AMOUNT>
    END
RETURN


WRITE.REPORT:
*--------------

    CHANGE @VM TO '*' IN SORT.ARRAY ;*R22 AUTO CODE CONVERSION
    SRT.ARR.CNT = DCOUNT(SORT.KEY,@FM)
    FOR IREP = 1 TO SRT.ARR.CNT
        WRITESEQ SORT.ARRAY<IREP> TO F.REGREPORT ELSE PRINT 'ERROR ON WRITE'
    NEXT IREP

RETURN

GET.VALUES:
*-----------
    PR.BALANCE = ''  ; INT.RATE.LVL = '' ; INT.RATE = '' ; PROD.RATE = ''
    TIER.AMOUNT = ''

    LOAN.GROUP = R.AA.ARRANGEMENT<AA.ARR.PRODUCT.GROUP>
    LOAN.CURR =  R.AA.ARRANGEMENT<AA.ARR.CURRENCY>

    GOSUB CALC.TERM
    GOSUB GET.LOAN.TERM.CODE
    TERM =  YDAYS
    GOSUB GET.RATE

    PROD.ID =  R.AA.ARRANGEMENT<AA.ARR.PRODUCT>
    GOSUB GET.PRODUCT.RATE

RETURN

GET.RATE:
*-----------

* Only level type of interest used in APAP.
    INT.RATE.LVL = R.AA.ARR.INTEREST<AA.INT.EFFECTIVE.RATE>
    TIER.AMOUNT = R.AA.ARR.INTEREST<AA.INT.TIER.AMOUNT>
    NO.OF.LEV = DCOUNT(INT.RATE.LVL,@VM)
    IF NO.OF.LEV GT 1 THEN
        GOSUB GET.BALANCE
        FOR ILVL = 1 TO NO.OF.LEV
            IF TIER.AMOUNT<1,ILVL> EQ '' OR TIER.AMOUNT<1,ILVL> GT PR.BALANCE THEN
                INT.RATE = INT.RATE.LVL<1,ILVL>
            END
        NEXT ILVL
    END ELSE
        INT.RATE =  INT.RATE.LVL<1,1>
    END

RETURN


GET.PRODUCT.RATE:
*----------------
    PROD.RATE = ''  ; INT.RATE.LVL = '' ; TIER.AMOUNT = ''
    LOCATE PROD.ID IN PROD.KEY.ARRAY<1> BY 'AR' SETTING PROD.POS THEN
        PROD.RATE.ARRAY = PROD.RATE.REC.ARRAY<PROD.POS>
        PROD.RATE.ARRAY = RAISE(PROD.RATE.ARRAY)
    END ELSE
        PRODUCT.OR.PROPERTY = 'PROPERTY'
        STAGE =  3      ;* PUBLISHED
        PRODUCT.ID = PROD.ID
        CONDITION.ID = ''
        P.CURRENCY = LOAN.CURR
        DATE.TXN = TODAY
        VAL.ERR0R = ''
        PROPERTY.ID = 'PRINCIPALINT'
        CALL AA.GET.PRODUCT.PROPERTY.RECORD(PRODUCT.OR.PROPERTY, STAGE, PRODUCT.ID, PROPERTY.ID, CONDITION.ID, P.CURRENCY,'', DATE.TXN,PROD.RATE.ARRAY, VAL.ERROR)
        INS PROD.ID  BEFORE PROD.KEY.ARRAY<PROD.POS>
        INS LOWER(PROD.RATE.ARRAY) BEFORE PROD.RATE.REC.ARRAY<PROD.POS>
    END

*    PROD.RATE.ARRAY = RAISE(PROD.RATE.ARRAY)
* Only FIXED RATE USED IN APAP
    TIER.AMOUNT = PROD.RATE.ARRAY<AA.INT.TIER.AMOUNT>
    BEGIN CASE

        CASE TIER.AMOUNT NE ''
            IF PR.BALANCE EQ '' THEN
                GOSUB GET.BALANCE
            END
            INT.RATE.LVL = PROD.RATE.ARRAY<AA.INT.FIXED.RATE>
            NO.OF.LEV = DCOUNT(INT.RATE.LVL,@VM) ;*R22 AUTO CODE CONVERSION
            FOR ILVL = 1 TO NO.OF.LEV
                IF TIER.AMOUNT<1,ILVL> EQ '' OR TIER.AMOUNT<1,ILVL> GT PR.BALANCE THEN
                    PROD.RATE = INT.RATE.LVL<1,ILVL>
                END
            NEXT ILVL
        CASE 1
            PROD.RATE = PROD.RATE.ARRAY<AA.INT.FIXED.RATE>
            IF PROD.RATE.ARRAY<AA.INT.MARGIN.OPER> EQ 'ADD' THEN
                PROD.RATE += PROD.RATE.ARRAY<AA.INT.MARGIN.RATE>
            END
    END CASE
RETURN

CALC.TERM:
*----------
* Calculate term for the disbursement.

    Y.REGION =  '' ; ST.DATE = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.EFFECTIVE.DATE> ; END.DATE = R.AA.ACCOUNT.DETAILS<AA.AD.MATURITY.DATE>
    YDAYS = ''
    CALL CDD (Y.REGION,ST.DATE,END.DATE,YDAYS)
    GOSUB GET.LOAN.TERM.CODE

RETURN

GET.LOAN.TERM.CODE:
*-----------------

    BEGIN CASE

        CASE YDAYS LT 90
            LN.TERM  =  '0-90 DAYS'
        CASE YDAYS GE 90 AND YDAYS LE 180
            LN.TERM = '90-180 DAYS'
        CASE YDAYS GT 180 AND YDAYS LE 360
            LN.TERM = '181-360 DAYS'
        CASE YDAYS GT 360 AND YDAYS LE 730
            LN.TERM =  '361-730 DAYS'
        CASE YDAYS GT 730 AND YDAYS LE 1825
            LN.TERM = 'Over 5 Year'

    END CASE

RETURN

GET.BALANCE:
*-----------

    PROPERTY =  'ACCOUNT'
    PROP.BALANCE = '' ; INIT.STATUS =  'CUR' ; PROPBAL.TYPES = 'CURACCOUNT'
    R.AA.ARR.OVERDUE =  '' ; OD.STATUS = '' ; INI.STATUS = ''
    CALL DR.GET.AA.PROP.BALANCE(AA.ACC.ID,PROPERTY,R.AA.ARR.OVERDUE,OD.STATUS,INIT.STATUS,PROP.BALANCE,PROPBAL.TYPES)
    PR.BALANCE =  ABS(PROP.BALANCE)

RETURN



READ.RECORDS:
*-------------

    R.AA.ARRANGEMENT.ACTIVITY = '' ; ACT.GOAHEAD = 1

*  READ R.AA.ARRANGEMENT.ACTIVITY FROM F.AA.ARRANGEMENT.ACTIVITY,ARR.ACT.ID THEN ;*Tus Start
    CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY,ARR.ACT.ID,R.AA.ARRANGEMENT.ACTIVITY,F.AA.ARRANGEMENT.ACTIVITY,R.AA.ARRANGEMENT.ACTIVITY.ERR)
    IF R.AA.ARRANGEMENT.ACTIVITY THEN  ;* Tus End
        IF R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ACTIVITY.CLASS> EQ 'LENDING-DISBURSE-TERM.AMOUNT' THEN
            ARR.ID =   R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ARRANGEMENT>
            R.AA.ARRANGEMENT = ''
*      READ R.AA.ARRANGEMENT FROM F.AA.ARRANGEMENT,ARR.ID ELSE NULL ;*Tus Start
            CALL F.READ(FN.AA.ARRANGEMENT,ARR.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,R.AA.ARRANGEMENT.ERR);*Tus End

            AA.ACC.ID =   R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID>
            R.AA.ACCOUNT.DETAILS = ''

*      READ R.AA.ACCOUNT.DETAILS FROM F.AA.ACCOUNT.DETAILS,ARR.ID ELSE NULL ;*Tus Start
            CALL F.READ(FN.AA.ACCOUNT.DETAILS,ARR.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,R.AA.ACCOUNT.DETAILS.ERR);*Tus End

            R.AA.ARR.XREF = ''


*      READ R.AA.ARR.XREF FROM F.AA.ARRANGEMENT.DATED.XREF,ARR.ID ELSE NULL ;*Tus Start
            CALL F.READ(FN.AA.ARRANGEMENT.DATED.XREF,ARR.ID,R.AA.ARR.XREF,F.AA.ARRANGEMENT.DATED.XREF,R.AA.ARR.XREF.ERR);*Tus End

* Get latest interest property.id
            INT.POS = ''
            LOCATE 'PRINCIPALINT' IN R.AA.ARR.XREF<1,1> SETTING INT.POS THEN
                AA.ARR.INT.ID = ARR.ID:'-PRINCIPALINT-':R.AA.ARR.XREF<2,INT.POS,1>
                R.AA.ARR.INTEREST = ''
*        READ R.AA.ARR.INTEREST FROM F.AA.ARR.INTEREST,AA.ARR.INT.ID ELSE NULL ;*Tus Start
                CALL F.READ(FN.AA.ARR.INTEREST,AA.ARR.INT.ID,R.AA.ARR.INTEREST,F.AA.ARR.INTEREST,R.AA.ARR.INTEREST.ERR);*Tus End

            END
        END ELSE
            ACT.GOAHEAD = 0
        END
    END
RETURN

SEL.PARA:
**********
    SEL.CMD = 'SELECT ': FN.AA.ARRANGEMENT.ACTIVITY :' WITH @ID LIKE AAACT' : CO.JUL.DATE : '...'
*' WITH ACTIVITY.CLASS EQ LENDING-DISBURSE-TERM.AMOUNT'
*    SEL.CMD := ' AND WITH @ID LIKE AAACT' : CO.JUL.DATE : '...'
    CALL EB.READLIST(SEL.CMD,ARR.LIST,'','','')

RETURN

INIT.PARA:
**********

    PROCESS.GO.AHEAD =  1
    CUS.LOC.POS = '' ; SORT.KEY = '' ; SORT.ARRAY = ''
    PROD.KEY.ARRAY =  '' ; PROD.RATE.REC.ARRAY = ''
    CO.JUL.DATE = R.DATES(EB.DAT.JULIAN.DATE)
    CO.JUL.DATE[1,2] = ''

    GOSUB OPEN.FILES

    PROC.DATE =  TODAY
    PROC.DATE =  PROC.DATE[7,2]: '/':PROC.DATE[5,2] : '/' : PROC.DATE[1,4]
    REGREP.SYS.ID =  'SYSTEM'  ; R.REGREP.SYSTEM  = '' ; ERR.REGREP.SYSTEM = ''

    CALL F.READ(FN.DR.REGREP.PARAM,REGREP.SYS.ID,R.REGREP.SYSTEM,F.DR.REGREP.PARAM,ERR.REGREP.SYSTEM)
    IF ERR.REGREP.SYSTEM EQ '' THEN

        REGREP.FILE.PATH =  R.REGREP.SYSTEM<DR.REG.REPORT.PATH>
        REPORT.ID =  'REP.REG.REPORT.DE.ACTIVAS.' : TODAY
        OPENSEQ REGREP.FILE.PATH,REPORT.ID TO F.REGREPORT ELSE PRINT 'ERROR ON OPEN'

    END ELSE
        PROCESS.GO.AHEAD = 0

    END

RETURN


OPEN.FILES:
*---------------

    FN.AA.ARRANGEMENT = 'F.AA.ARRANGEMENT'
    F.AA.ARRANGEMENT = ''
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.AA.ARRANGEMENT.ACTIVITY = 'F.AA.ARRANGEMENT.ACTIVITY'
    F.AA.ARRANGEMENT.ACTIVITY = ''
    CALL OPF(FN.AA.ARRANGEMENT.ACTIVITY,F.AA.ARRANGEMENT.ACTIVITY)

    FN.AA.ACCOUNT.DETAILS = 'F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS = ''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)

    FN.AA.ARR.ACCOUNT =  'F.AA.ARR.ACCOUNT'
    F.AA.ARR.ACCOUNT = ''
    CALL OPF(FN.AA.ARR.ACCOUNT,F.AA.ARR.ACCOUNT)

    FN.AA.ARRANGEMENT.DATED.XREF  = 'F.AA.ARRANGEMENT.DATED.XREF'
    F.AA.ARRANGEMENT.DATED.XREF = ''
    CALL OPF(FN.AA.ARRANGEMENT.DATED.XREF,F.AA.ARRANGEMENT.DATED.XREF)

    FN.AA.ARR.INTEREST = 'F.AA.ARR.INTEREST'
    F.AA.ARR.INTEREST = ''
    CALL OPF(FN.AA.ARR.INTEREST,F.AA.ARR.INTEREST)

    FN.DR.REGREP.PARAM = 'F.DR.REGREP.PARAM'
    F.DR.REGREP.PARAM = ''
    CALL OPF(FN.DR.REGREP.PARAM,F.DR.REGREP.PARAM)

RETURN
