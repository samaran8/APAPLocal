* @ValidationCode : MjotNDg3MjE4NDc1OkNwMTI1MjoxNjgxODI4MDA1MDM4OklUU1M6LTE6LTE6MTEzNzoxOmZhbHNlOk4vQTpERVZfMjAyMTA4LjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 18 Apr 2023 19:56:45
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1137
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
SUBROUTINE REDO.CARD.LOST.INTRANSIT
*--------------------------------------------------------------------------------
*Company   Name    :Asociacion Popular de Ahorros y Prestamos
*Developed By      :GANESH.R
*Program   Name    :REDO.CARD.LOST.INTRANSIT
*---------------------------------------------------------------------------------

*DESCRIPTION       :This program is used to get the Stock details which are lost and update in REDO.STOCK.REGISTER
*                   and update Card Numbers

*LINKED WITH       :
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*11-04-2023            CONVERSION TOOL                AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM and I++ to I=+1
*11-04-2023          jayasurya H                       MANUAL R22 CODE CONVERSION            NO CHANGES
* ----------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.REDO.STOCK.ENTRY
    $INSERT I_F.REDO.CARD.NUMBERS
    $INSERT I_F.REDO.CARD.GENERATION
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.CARD.NO.LOCK


    GOSUB OPENFILE
    GOSUB PROCESS
RETURN

OPENFILE:

    FN.CARD.GEN = 'F.REDO.CARD.GENERATION'
    F.CARD.GEN  = ''
    CALL OPF(FN.CARD.GEN,F.CARD.GEN)

    FN.CARD.NUMBER = 'F.REDO.CARD.NUMBERS'
    F.CARD.NUMBER = ''
    CALL OPF(FN.CARD.NUMBER,F.CARD.NUMBER)

    FN.STOCK.REGISTER = 'F.REDO.STOCK.REGISTER'
    F.STOCK.REGISTER  = ''
    CALL OPF(FN.STOCK.REGISTER,F.STOCK.REGISTER)

    FN.CARD.SERIES = 'F.REDO.CARD.SERIES.PARAM'
    F.CARD.SERIES  = ''
    CALL OPF(FN.CARD.SERIES,F.CARD.SERIES)

    FN.REDO.CARD.NO.LOCK = 'F.REDO.CARD.NO.LOCK'
    F.REDO.CARD.NO.LOCK = ''
    CALL OPF(FN.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK)

RETURN

PROCESS:

    Y.STATUS = R.NEW(REDO.CARD.REQ.STATUS)
    IF Y.STATUS EQ 7 THEN
        GOSUB GET.DETAILS
    END

RETURN

GET.DETAILS:
    Y.AGENCY              = R.NEW(REDO.CARD.REQ.AGENCY)
    Y.CARD.TYPES          = R.NEW(REDO.CARD.REQ.CARD.TYPE)
    Y.ACCPT.QTY           = R.NEW(REDO.CARD.REQ.REGOFF.ACCEPTQTY)
    Y.CARD.GEN.ID         = ID.NEW
    Y.CARD.SERIES.LIST    = R.NEW(REDO.CARD.REQ.CARD.SERIES.ID)
    GOSUB READ.CARD.GEN
    GOSUB READ.CARD.SERIES
    Y.TRANSIT.DEPT.CODE   = R.CARD.SERIES<REDO.CARD.SERIES.PARAM.TRANSIT.DEPT.CODE>
    Y.CARD.TYPE.CNT       = DCOUNT(Y.CARD.TYPES,@VM)
    Y.CARD.GEN.TYPES      = R.CARD.GEN<REDO.CARD.GEN.CARD.TYPE>

*Looping each Card type and getting the Card Numbers

    Y.CARD.INIT = 1
    LOOP
        REMOVE Y.CARD FROM Y.CARD.TYPES SETTING Y.CARD.POS
    WHILE Y.CARD.INIT LE Y.CARD.TYPE.CNT
        LOCATE Y.CARD IN Y.CARD.GEN.TYPES<1,1> SETTING Y.GEN.CARD.POS THEN
            Y.GET.CARD.NOS = R.CARD.GEN<REDO.CARD.GEN.CARD.NUMBERS,Y.GEN.CARD.POS>
        END
        Y.CARD.NO.ID = Y.CARD:'.':Y.AGENCY
        GOSUB READ.CARD.NUMBERS
        Y.CARD.STATUS = R.CARD.NUMBER<REDO.CARD.NUM.STATUS>
        CHANGE @VM TO @FM IN Y.CARD.STATUS

        Y.STOCK.ID = 'CARD.':ID.COMPANY:'-':Y.TRANSIT.DEPT.CODE
        GOSUB READ.STOCK.REGISTER
        Y.STOCK.SERIES.LIST = R.STOCK.REGISTER<STK.REG.SERIES.ID>
        CARD.NOS.LIST = R.CARD.NUMBER<REDO.CARD.NUM.CARD.NUMBER>
        CHANGE @VM TO @FM IN CARD.NOS.LIST

        GOSUB READ.CARD.NO.LOCK
        GOSUB UPDATE.CARD.DETAILS

        LOCATE "AVAILABLE" IN Y.CARD.STATUS SETTING STAT.POS THEN
            R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1> = R.CARD.NUMBER<REDO.CARD.NUM.CARD.NUMBER,STAT.POS>
        END

        CALL F.WRITE(FN.REDO.CARD.NO.LOCK,Y.CARD.NO.ID,R.REDO.CARD.NO.LOCK)


        Y.SERIES.ID = Y.CARD.SERIES.LIST<1,Y.CARD.INIT>
        GOSUB UPDATE.STOCK.REGISTER
        Y.CARD.INIT += 1
    REPEAT

RETURN

UPDATE.CARD.DETAILS:
*Updating the Card numbers as Lost intransit
    Y.NUM.INIT      = 1
    Y.CARD.CNT      = DCOUNT(Y.GET.CARD.NOS,@SM)
    LOOP
        REMOVE Y.CARD.NO FROM Y.GET.CARD.NOS SETTING Y.CARD.NO.POS
    WHILE Y.NUM.INIT LE Y.CARD.CNT
        LOCATE Y.CARD.NO IN CARD.NOS.LIST SETTING Y.CARD.NUM.POS THEN
            R.CARD.NUMBER<REDO.CARD.NUM.STATUS,Y.CARD.NUM.POS> = "LOST"
*            CALL F.WRITE(FN.CARD.NUMBER,Y.CARD.NO.ID,R.CARD.NUMBER)
            GOSUB UPDATE.CARD.NO.LOCK

        END
        Y.NUM.INIT += 1
    REPEAT
    CALL F.WRITE(FN.CARD.NUMBER,Y.CARD.NO.ID,R.CARD.NUMBER)
RETURN

UPDATE.STOCK.REGISTER:
    CHANGE @VM TO @FM IN Y.STOCK.SERIES.LIST

    LOCATE Y.SERIES.ID IN Y.STOCK.SERIES.LIST SETTING Y.SERIES.POS THEN
        R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.POS> = R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.POS> - Y.ACCPT.QTY<1,Y.CARD.INIT>
        R.STOCK.REGISTER<STK.REG.STO.REG.BAL> = R.STOCK.REGISTER<STK.REG.STO.REG.BAL> - Y.ACCPT.QTY<1,Y.CARD.INIT>

* PACS00755208 - S
        IF R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.POS> LT '0' THEN
            R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.POS> = '0'
        END
* PACS00755208 - E

        CALL F.WRITE(FN.STOCK.REGISTER,Y.STOCK.ID,R.STOCK.REGISTER)
    END
RETURN

UPDATE.CARD.NO.LOCK:
    LOCATE Y.CARD.NO IN R.REDO.CARD.NO.LOCK SETTING CARD.NO.POS THEN
        DEL R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,CARD.NO.POS>
    END

RETURN

READ.CARD.GEN:
    CALL F.READ(FN.CARD.GEN,Y.CARD.GEN.ID,R.CARD.GEN,F.CARD.GEN,CARD.ERR)
RETURN

READ.CARD.NUMBERS:
    CALL F.READ(FN.CARD.NUMBER,Y.CARD.NO.ID,R.CARD.NUMBER,F.CARD.NUMBER,NUMBER.ERR)
RETURN

READ.STOCK.REGISTER:
    CALL F.READ(FN.STOCK.REGISTER,Y.STOCK.ID,R.STOCK.REGISTER,F.STOCK.REGISTER,REG.ERR)
RETURN

READ.CARD.SERIES:

*  CALL F.READ(FN.CARD.SERIES,'SYSTEM',R.CARD.SERIES,F.CARD.SERIES,SERIES.ERR) ;*Tus Start
    CALL CACHE.READ(FN.CARD.SERIES,'SYSTEM',R.CARD.SERIES,SERIES.ERR) ;* Tus End
RETURN

READ.CARD.NO.LOCK:
    CALL F.READ(FN.REDO.CARD.NO.LOCK,Y.CARD.NO.ID,R.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK,CARD.LOCK.ERR)
RETURN
END
