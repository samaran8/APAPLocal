* @ValidationCode : MjotMTQ2MjE4MDgyMTpDcDEyNTI6MTY4MjU5ODAwOTYxMTpzYW1hcjotMTotMTowOjE6ZmFsc2U6Ti9BOkRFVl8yMDIxMDguMDotMTotMQ==
* @ValidationInfo : Timestamp         : 27 Apr 2023 17:50:09
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : samar
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
SUBROUTINE LATAM.CARD.ORDER.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : LATAM.CARD.ORDER.AUTH
*--------------------------------------------------------------------------------------------------------
*Description  : Authorisation routine for LATAM.CARD.ORDER
*Linked With  : LATAM.CARD.ORDER
*In Parameter : N/A
*Out Parameter: N/A
*--------------------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 9 Aug 2010       ANIES               ODR-2010-03-0400          Initial Creation
*15 Oct 2010       GANESH              ODR-2010-08-0467          C.15 INTERFACE
*13-MAY-2011       KAVITHA             ODR-2010-08-0467          PACS00055017  FIX
*20 MAY 2011       KAVITHA             PACS00024249              REDO.STOCK.REGISTER count decreases as per new stock management design
*27 MAY 2011       KAVITHA             PACS00063156              PACS00063156 FIX
*10 JUN 2011       KAVITHA             PACS00063138              PACS00063138 FIX
*16 JUN 2011       KAVITHA             PACS00072694              PROSPECT DETAILS ADDED
*6 JUL 2011        KAVITHA             PACS00079591              PACS00079591 FIX
*12JUL 2011        KAVITHA             PACS00082671              ISSUE FIX FOR PACS00082671
*15 JUL 2011       KAVITHA             PACS00082440              PACS00082440 FIX
*03-AUG-2011       JEEVA T             TDN7 - change             TDN7 Update
*25 NOV 2011       KAVITHA             PACS00141812              PACS00141812 FIX
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*06-04-2023            CONVERSION TOOL                AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM, = TO EQ, INCLUDE TO INSERT
*06-04-2023          jayasurya H                       MANUAL R22 CODE CONVERSION            CALL RTN METHOD ADDED
*--------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CARD.CHARGE
    $INSERT I_F.CARD.TYPE
    $INSERT I_F.LOCKING
    $INSERT I_F.DATES
    $INSERT I_F.PAYMENT.STOP.TYPE

    $INSERT I_F.CARD.STATUS
    $INSERT I_F.COMPANY
    $INSERT I_F.AZ.ACCOUNT
    $INSERT I_F.CARD.REPAYMENT.DATE
    $INSERT I_F.CARD.BILL.CLOSE.DATE
    $INSERT I_F.STOCK.REGISTER
    $INSERT I_F.STOCK.PARAMETER
    $INSERT I_F.MNEMONIC.COMPANY
    $INSERT I_F.MNEMONIC.DAO
    $INSERT I_F.DEPT.ACCT.OFFICER
    $INSERT I_F.LOCAL.TABLE
    $INSERT I_F.AZ.PRODUCT.PARAMETER
    $INSERT I_GTS.COMMON
*   $INSERT I_F.COMPANY ;*AUTO R22 CODE CONVERSION
    $INSERT I_F.CUSTOMER
    $INSERT JBC.h ;*AUTO R22 CODE CONVERSION
    $INSERT I_TSS.COMMON
*   $INSERT I_F.DATES ;*AUTO R22 CODE CONVERSION
    $INSERT I_F.USER
*---------End of core---------------------
    $INSERT I_F.LATAM.CARD.ORDER
    $INSERT I_F.LATAM.CARD.CLASS.CODE
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.REDO.APAP.H.PARAMETER
    $INSERT I_F.REDO.CARD.NUMBERS
    $INSERT I_F.LATAM.CARD.REGISTER
    $INSERT I_F.REDO.CARD.BIN
    $INSERT I_F.REDO.STOCK.QTY.COUNT
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.CARD.RENEWAL
    $INSERT I_F.REDO.CARD.REG.STOCK
    $INSERT I_F.REDO.PREEMBOSS.STOCK
    $INSERT I_F.REDO.CARD.NO.LOCK
*   $INSERT I_F.REDO.CARD.REQUEST ;*AUTO R22 CODE CONVERSION
    $USING APAP.REDOCHNLS

*-----------------------------------------------------------------------

    GOSUB INIT.PARA
    GOSUB PROCESS.PARA

    GOSUB UPDATE.CARD.RENEWAL

    CALL LATAM.V.AUTH.UPD.FILES
*PACS00956041 - Start
    GOSUB UPDATE.REDO.CARD.NOS.AND.LOCK
*PACS00956041 - End
RETURN
*----------------------------------------------------------------------
INIT.PARA:

    GET.REQUEST.CUST = ''

    RENEWAL.CNTR = 0 ; REISSUE.CNTR = 0 ;    CardIndicator = ''

*PACS00082440-S
    FN.REDO.PREEMBOSS.STOCK = 'F.REDO.PREEMBOSS.STOCK'
    F.REDO.PREEMBOSS.STOCK = ''
    CALL OPF(FN.REDO.PREEMBOSS.STOCK,F.REDO.PREEMBOSS.STOCK)
*PACS00082440-E

    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)

    FN.CARD.RENEW = 'F.REDO.CARD.RENEWAL'
    F.CARD.RENEW = ''
    CALL OPF(FN.CARD.RENEW,F.CARD.RENEW)

    FN.REDO.STK.REG = 'F.REDO.STOCK.REGISTER'
    F.REDO.STK.REG = ''
    CALL OPF(FN.REDO.STK.REG,F.REDO.STK.REG)

    FN.COMPANY='F.COMPANY'
    F.COMPANY=''
    CALL OPF(FN.COMPANY,F.COMPANY)

    FN.REDO.CARD.NUMBERS='F.REDO.CARD.NUMBERS'
    F.REDO.CARD.NUMBERS=''
    CALL OPF(FN.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS)

    FN.LATAM.CARD.REGISTER='F.LATAM.CARD.REGISTER'
    F.LATAM.CARD.REGISTER=''
    CALL OPF(FN.LATAM.CARD.REGISTER,F.LATAM.CARD.REGISTER)

    FN.CUSTOMER='F.CUSTOMER'
    F.CUSTOMER=''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    FN.REDO.INTERFACE.MON.TYPE='F.REDO.INTERFACE.MON.TYPE'
    F.REDO.INTERFACE.MON.TYPE=''
    CALL OPF(FN.REDO.INTERFACE.MON.TYPE,F.REDO.INTERFACE.MON.TYPE)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.REDO.CARD.BIN = 'F.REDO.CARD.BIN'
    F.REDO.CARD.BIN = ''
    CALL OPF(FN.REDO.CARD.BIN,F.REDO.CARD.BIN)

    FN.CARD.TYPE = 'F.CARD.TYPE'
    F.CARD.TYPE = ''
    CALL OPF(FN.CARD.TYPE,F.CARD.TYPE)

    LOC.REF.APPLICATION="COMPANY":@FM:"CARD.TYPE"
    LOC.REF.FIELDS='L.CO.BOOK':@FM:'L.CT.BIN':@VM:'L.CT.REN.FREQ'
    LOC.REF.POS=''
    CALL MULTI.GET.LOC.REF(LOC.REF.APPLICATION,LOC.REF.FIELDS,LOC.REF.POS)
    POS.L.CO.BOOK=LOC.REF.POS<1,1>
    POS.L.CT.BIN = LOC.REF.POS<2,1>
    POS.L.CT.REN.FREQ=LOC.REF.POS<2,2>
    Y.ENT.ID = ''

    FN.REDO.STOCK.QTY.COUNT = 'F.REDO.STOCK.QTY.COUNT'
    F.REDO.STOCK.QTY.COUNT = ''
    CALL OPF(FN.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT)

    FN.DATES = 'F.DATES'
    F.DATES = ''
    CALL OPF(FN.DATES,F.DATES)

    FN.REDO.CARD.NO.LOCK = 'F.REDO.CARD.NO.LOCK'
    F.REDO.CARD.NO.LOCK = ''
    CALL OPF(FN.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK)

    FN.REDO.CARD.REQUEST='F.REDO.CARD.REQUEST'
    F.REDO.CARD.REQUEST=''
    CALL OPF(FN.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST)

    LATAM.ID=ID.NEW
    Pan = FIELD(LATAM.ID,'.',2)
RETURN
*-----------------------------------------------------------------------
PROCESS.PARA:



    IF R.NEW(CARD.IS.CARD.STATUS) EQ '90' THEN
        GOSUB PROCESS.NEW     ;* newly added
********** NEW LOGIC FOR TDN7 REPORT  START

*PACS00082671 -S
        Y.DATE = TODAY
        Y.SERIES = R.NEW(CARD.IS.STOCK.SERIERS.ID)

**PACS00082440-S
        Y.CURR.NO = R.NEW(CARD.IS.CURR.NO)

*        IF Y.CURR.NO EQ 1 THEN
        GOSUB PREEMBOSS.STOCK.QTY

*PACS00082440-E

        GOSUB GET.STOCK.ID

        CALL F.READU(FN.REDO.STOCK.QTY.COUNT,Y.STOCK.QTY.COUNT.ID,R.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT,Y.ERR.QTY,'')
        IF R.REDO.STOCK.QTY.COUNT THEN
            Y.STK.COUNT.VM = DCOUNT(R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY>,@VM)
            LOCATE Y.DATE IN R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,1> SETTING POS.ISSU THEN
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.ISSUED,POS.ISSU> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.ISSUED,POS.ISSU> + 1
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.ISSU> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.ISSU> - 1
            END ELSE
                Y.STK.COUNT.VM.1 = Y.STK.COUNT.VM + 1
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.ISSUED,Y.STK.COUNT.VM.1> = 1
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,Y.STK.COUNT.VM.1> = Y.DATE
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM.1> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM> - 1
            END

        END

        CALL F.WRITE(FN.REDO.STOCK.QTY.COUNT,Y.STOCK.QTY.COUNT.ID,R.REDO.STOCK.QTY.COUNT)
*       END
*PACS00082671-E

********** NEW LOGIC FOR TDN7 REPORT END
    END

    IF R.NEW(CARD.IS.STMT.NO) EQ 'VAL' THEN ;*AUTO R22 CODE CONVERSION
        CALL EB.ACCOUNTING('CC','AUT', '', '')
    END
*---------------------------------------------End of core-----------------------------------------------
* This section contain the code to reissue the card

    GOSUB CARD.EMBOSS

    ISSUE.NO = ''
    ISSUE.INDICATOR = ""
    TYPE.OF.CARD = ''
    REISSUE.CHARGE = ''
    TYPE.OF.CARD = R.NEW(CARD.IS.TYPE.OF.CARD)
    ISSUE.INDICATOR = R.NEW(CARD.IS.ISSUE.INDICATOR)
    ISSUE.STAGE = R.NEW(CARD.IS.ISSUE.STAGE)
    CARD.STATUS = R.NEW(CARD.IS.CARD.STATUS)
    BLOCK.STAT = R.NEW(CARD.IS.BLOCK.STATUS)
    REISSUE.CHARGE = R.NEW(CARD.IS.CHARGES)
    REASON = R.NEW(CARD.IS.REISS.REASON)
    CURRENT.REC.ID = ID.NEW

    IF ISSUE.INDICATOR EQ 'REISSUE' AND (CARD.STATUS EQ 92 OR CARD.STATUS EQ 52) THEN

        ISSUE.NO = R.NEW(CARD.IS.ISSUE.NUMBER)

        GOSUB FORM.CARD.REQUEST.OFS.MSG

    END

*CALL APAP.REDORETAIL.LATAM.CARD.ORDER.SPLIT.AUTH
    CALL APAP.REDORETAIL.latamCardOrderSplitAuth();*MANUAL R22 CODE CONVERSION

RETURN
*-----------------------------Local part---------------------------------------
FORM.CARD.ORDER.OFS.MSG:
*-----------------------------
*


    APP.NAME = "LATAM.CARD.ORDER"
    OFSFUNCT = 'I'
    PROCESS  = 'PROCESS'
    OFSVERSION = 'LATAM.CARD.ORDER,':TYPE.OF.CARD
    Y.GTSMODE = ''
    NO.OF.AUTH = ''
    TRANSACTION.ID = R.NEW(CARD.IS.CARD.TYPE):'.NEW'
    RECORD = ''
    OFSRECORD = ''
    CARD.CCY = R.NEW(CARD.IS.CURRENCY)
    MATBUILD RECORD FROM R.NEW

    CARD.CHARGE = R.NEW(CARD.IS.CHARGES)
    IF CARD.CHARGE THEN
        RECORD<CARD.IS.CHARGES> = CARD.CCY:CARD.CHARGE
    END

    RECORD<CARD.IS.CARD.START.NO> =""
    RECORD<CARD.IS.BLOCK.STATUS> = ""

    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCT,PROCESS,OFSVERSION,Y.GTSMODE,NO.OF.AUTH,TRANSACTION.ID,RECORD,OFSRECORD)
    IF ISSUE.NO EQ 'DIFFERENT' THEN
        OFSRECORD=OFSRECORD:'CURRENCY:1:1=':CARD.CCY
    END
    OFS.SOURCE.ID = 'DEBIT.CARD'
    OFS.MSG.ID = ''
    OFS.MSG.ERR = ''
    CALL OFS.POST.MESSAGE(OFSRECORD,OFS.MSG.ID,OFS.SOURCE.ID,OFS.MSG.ERR)

RETURN

*-------------------------------------------------------------------------
***********
PROCESS.NEW:
***********
    U.NEW = ''
    U.OLD = ''
    U.RET = ''
    SAVE.I.NO = ''
    U.ACCT.FLAG = 0

    U.NEW = R.NEW(CARD.IS.ACCOUNT)
    U.OLD = R.OLD(CARD.IS.ACCOUNT)

** This will not work in jbase

    U.RET = NES(U.NEW,U.OLD)

    CHANGE @VM TO '~' IN U.RET
    IF INDEX(U.RET,'1',1) THEN
        U.ACCT.FLAG = 1
    END
*
    SAVEID.NEW = ID.NEW
    SAVE.I.NO = R.NEW(V-7)
    IF R.NEW(V-7) GT 1 THEN
        R.NEW(V-7) = ''
    END

    U.CARD.VALID = 0

    ID.NEW = SAVEID.NEW
    IF SAVE.I.NO NE '' THEN
        R.NEW(V-7) = SAVE.I.NO
    END
RETURN
*------------------------------------------------------------------------------------------
*************************
FORM.CARD.REQUEST.OFS.MSG:
*************************
*PACS00063138 -S


    R.REQ.RECORD = ''
    R.REQ.RECORD<REDO.CARD.REQ.AGENCY> = R.NEW(CARD.IS.CO.CODE)
    R.REQ.RECORD<REDO.CARD.REQ.CARD.TYPE,1> = FIELD(ID.NEW,'.',1)
    R.REQ.RECORD<REDO.CARD.REQ.BRANCH.ORDERQTY,1> = '1'


*PACS00079591-S
    R.REQ.RECORD<REDO.CARD.REQ.PERS.CARD,1> = 'URGENTE'
*PACS00079591-E

    IF TYPE.OF.CARD EQ "PRINCIPAL" THEN
        GET.REQUEST.CUST = R.NEW(CARD.IS.CUSTOMER.NO)<1,1>
    END ELSE
        GET.REQUEST.CUST = R.NEW(CARD.IS.CUSTOMER.NO)<1,2>
    END

    R.REQ.RECORD<REDO.CARD.REQ.CUSTOMER.NO,1,1> = GET.REQUEST.CUST
    R.REQ.RECORD<REDO.CARD.REQ.ACCOUNT.NO,1,1> = R.NEW(CARD.IS.ACCOUNT)<1,1>

*PACS00094453-S
    R.REQ.RECORD<REDO.CARD.REQ.CUSTOMER.NAME,1,1> = R.NEW(CARD.IS.NAME.ON.PLASTIC)<1,1>
*PACS00094453-E

    R.REQ.RECORD<REDO.CARD.REQ.VAULT.QTY,1> = ISSUE.NO:":":ID.NEW
    R.REQ.RECORD<REDO.CARD.REQ.COMMENTS,1> = "Reissue of card : ":ID.NEW
*PACS00072694-S
    R.REQ.RECORD<REDO.CARD.REQ.PROSPECT.ID> = R.NEW(CARD.IS.PROSPECT.ID)
*PACS00072694-E
    R.REQ.RECORD<REDO.CARD.REQ.TYPE.OF.CARD> = TYPE.OF.CARD

    GET.PRIN.CARD.NO = R.NEW(CARD.IS.CARD.NUMBER)<1,2>

    FINDSTR '.' IN GET.PRIN.CARD.NO SETTING DOT.POS THEN
        PRIN.CARD.NO = FIELD(GET.PRIN.CARD.NO,".",2)

    END ELSE
        PRIN.CARD.NO = GET.PRIN.CARD.NO
    END

    R.REQ.RECORD<REDO.CARD.REQ.PRIMARY.CARD> = PRIN.CARD.NO

    R.REQ.RECORD<REDO.CARD.REQ.STATUS,1> = "1"
    R.REQ.RECORD<REDO.CARD.REQ.DATE> = TODAY
    Y.OFSVERSION = "REDO.CARD.REQUEST,OFS"
    Y.APP.NAME =  "REDO.CARD.REQUEST"
    Y.OFSFUNCT = 'I'
    Y.PROCESS = "PROCESS"
    Y.GTSMODE = ""
    Y.NO.OF.AUTH = "0"
    Y.TRANSACTION.ID = ""
    Y.OFSRECORD = ""

    CALL OFS.BUILD.RECORD(Y.APP.NAME,Y.OFSFUNCT,Y.PROCESS,Y.OFSVERSION,Y.GTSMODE,Y.NO.OF.AUTH,Y.TRANSACTION.ID,R.REQ.RECORD,Y.OFSRECORD)

    Y.MSG = Y.OFSRECORD
    Y.MSG.KEY = ""
    Y.OFS.SOURCE.ID = "DEBIT.CARD"
    Y.OPTIONS = ""

    CALL OFS.POST.MESSAGE(Y.MSG,Y.MSG.KEY,Y.OFS.SOURCE.ID,Y.OPTIONS)

*PACS00063138 -E
RETURN
*----------------------------------------------------------------------
CARD.EMBOSS:
*-----------------------------------------------------------------------
*----------------C.15 STARTS-------------

*    LATAM.ID = ID.NEW
    Y.CARD.TYPE = FIELD(LATAM.ID,'.',1)
    CALL F.READ(FN.CARD.TYPE,Y.CARD.TYPE,R.CARD.TYPE,F.CARD.TYPE,Y.ERR.CARD.TYPE)
    IF R.CARD.TYPE THEN
        Y.BIN.ID = R.CARD.TYPE<CARD.TYPE.LOCAL.REF,POS.L.CT.BIN>
    END
    CALL F.READ(FN.REDO.CARD.BIN,Y.BIN.ID,R.REDO.CARD.BIN,F.REDO.CARD.BIN,Y.ERR.CARD.BIN)

*!!!!!!!!!!!!!renewal frequency calculation!!!!!!!!!!!!!

    IF R.NEW(CARD.IS.CARD.STATUS) EQ 90 THEN
        REN.FREQ=R.CARD.TYPE<CARD.TYPE.LOCAL.REF,POS.L.CT.REN.FREQ>

        Y.EXP.DATE =R.NEW(CARD.IS.EXPIRY.DATE)

        CALL CDT(REGION,Y.EXP.DATE,'-':REN.FREQ:'C')

        R.NEW(CARD.IS.RENEWAL.DATE)=Y.EXP.DATE

    END

*!!!!!!!!!!!!!renewal frequency calculation ends!!!!!!!!

    IF R.REDO.CARD.BIN NE '' THEN
        Y.ENT.ID = R.REDO.CARD.BIN<REDO.CARD.BIN.ENTITY.ID>
    END
    CALL CACHE.READ('F.REDO.APAP.H.PARAMETER','SYSTEM',R.APAP.PARAM,PARAM.ERR)
    Y.DEM=R.APAP.PARAM<PARAM.DELIMITER>
******************
    Y.CARD.REQUEST.DESC = R.APAP.PARAM<PARAM.CARD.REQ.DESC>
    Y.NEW.EXPIRY.DATE.DESC = R.APAP.PARAM<PARAM.EXPIRY.DATE.DESC>
    Y.CMS.CARD.REQUEST.DESC = R.APAP.PARAM<PARAM.CMS.CARD.DESC>
    Y.CMS.ACT.REQUEST.DESC =  R.APAP.PARAM<PARAM.CMS.ACC.DESC>
    Y.EXP.REC.DESC = R.APAP.PARAM<PARAM.EXP.REC.DESC>
    Y.DATE.TIME=R.NEW(CARD.IS.DATE.TIME)
    ActivityDate='20':Y.DATE.TIME[1,6]
******************
    ACTIVATION = "APAP_EMBOZADO_WEBSERVICES"      ;*Activation key
    EX.USER=OPERATOR
    EX.PC= TSS$CLIENTIP
    ID.PROC=ID.NEW
    SEL.CMD='SELECT ':FN.REDO.INTERFACE.MON.TYPE:' WITH MNEMONIC EQ REJ'
    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',SEL.NOR,SEL.RET)
    MON.TP.REJ=SEL.LIST<1>

    Y.CARD.STATUS = R.NEW(CARD.IS.CARD.STATUS)
    Y.OLD.CARD.STATUS = R.OLD(CARD.IS.CARD.STATUS)
    Y.RESP.CODE.DESB=R.APAP.PARAM<PARAM.RESP.CODE.DESB>
    Y.RESP.CODE=R.APAP.PARAM<PARAM.RESP.CODE>
    CHANGE @VM TO @FM IN Y.RESP.CODE.DESB
    CHANGE @VM TO @FM IN Y.RESP.CODE

    LOCATE 'UNABLE.TO.PROCESS' IN Y.RESP.CODE.DESB SETTING POS1 THEN
        Y.UNABLE.TO.PROCESS=Y.RESP.CODE<POS1>
    END
    LOCATE 'SYSTEM.ERROR' IN Y.RESP.CODE.DESB SETTING POS2 THEN
        Y.SYSTEM.ERROR.CODE=Y.RESP.CODE<POS2>
    END


    IF Y.CARD.STATUS EQ 90 THEN
        GOSUB UPDATE.CMS.CARD.REQUEST.WEB.SERVICES
    END
    GOSUB ASSIGN.NEW.EXPIRY.DATE.REQUEST.WEB.SERVICES

    Y.CURR.NO = R.NEW(CARD.IS.CURR.NO)
**********ADDED FOR REPORT
    IF R.NEW(CARD.IS.CARD.STATUS) EQ '90' THEN
        R.NEW(CARD.IS.ISSUE.TIME) = OCONV(TIME(),"MTS")
    END
RETURN

*--------------------------------------------------------------------
ASSIGN.NEW.EXPIRY.DATE.REQUEST.WEB.SERVICES:
*--------------------------------------------------------------------

    DESC=''
    RESPONSE.CODE=''
    NEW.STATUS=R.NEW(CARD.IS.CARD.STATUS)
    OLD.STATUS=R.OLD(CARD.IS.CARD.STATUS)
*    IF OLD.EXP.DATE NE '' THEN
    IF NEW.STATUS EQ '94' AND OLD.STATUS EQ '90' THEN
        EXP.DATE  = R.NEW(CARD.IS.EXPIRY.DATE)
        UserId    = OPERATOR
        StationId = TSS$CLIENTIP

        INPUT_PARAM ='IST_AssignNewExpiryDateRequest':Y.DEM:Pan:Y.DEM:EXP.DATE:Y.DEM:UserId:Y.DEM:StationId
        ERROR.CODE = CALLJEE (ACTIVATION,INPUT_PARAM)
        RESPONSE.CODE =FIELD(INPUT_PARAM,Y.DEM,4)
        IF RESPONSE.CODE NE '' THEN
            R.NEW(CARD.IS.NED.RESPONSE.CODE)<1,1> = RESPONSE.CODE
            R.NEW(CARD.IS.NED.RESPONSE.DESC)<1,1> = Y.NEW.EXPIRY.DATE.DESC
        END
        LOCATE 'APPROVED' IN Y.RESP.CODE.DESB SETTING POS3 THEN
            Y.APPROVED.CODE=Y.RESP.CODE<POS3>
        END
        INT.CODE='EMB002'
        INT.TYPE='ONLINE'
        IF FIELD(INPUT_PARAM,':',1) EQ 'FAILED' THEN
            DESC='Java API Failure'
*CALL APAP.REDOCHNSL.REDO.INTERFACE.REC.ACT(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC)
            CALL APAP.REDOCHNLS.redoInterfaceRecAct(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC) ;*MANUAL R22 CODE CONVERSION
            E='EB-UPD.NO.PROC.DISP'
            RETURN
        END
        IF RESPONSE.CODE NE Y.APPROVED.CODE THEN

            LOCATE RESPONSE.CODE IN Y.RESP.CODE SETTING Y.POS.2 THEN
                DESC=Y.RESP.CODE.DESB<Y.POS.2>
            END
*CALL APAP.REDOCHNSL.REDO.INTERFACE.REC.ACT(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC)
            CALL APAP.REDOCHNLS.redoInterfaceRecAct(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC);*MANUAL R22 CODE CONVERSION
            E='EB-UPD.NO.PROC.DISP'
        END
    END
*    END

RETURN
*--------------------------------------------------------------------
UPDATE.CMS.CARD.REQUEST.WEB.SERVICES:
*--------------------------------------------------------------------

*    Pan = FIELD(LATAM.ID,'.',2)

    DESC=''
    EXP.DATE = R.APAP.PARAM<PARAM.NULL.VALUE.IND>
*   EXP.DATE = R.NEW(CARD.IS.EXPIRY.DATE)
    IF R.NEW(CARD.IS.TYPE.OF.CARD) EQ "PRINCIPAL" THEN
        CardIndicator= R.APAP.PARAM<PARAM.PRINCIPAL.IND>
    END ELSE
        CardIndicator=R.APAP.PARAM<PARAM.ADITIONAL.IND>
    END

    IF NOT(R.REDO.CARD.NUMBERS) THEN
        GOSUB GET.STOCK.ID
    END


*Y.REG.ID
*Y.EMB.TYPE
*Y.PER.TYPE
*Y.TYP.OF.CARD

*webservice ISTTSF_UpdateCMSCardRequest need not to be called when the card is not preemboss addicional card
*This is called here only to update the card indicator field

    IF Y.EMB.TYPE NE 'PREEMBOZADA' AND Y.TYP.OF.CARD NE 'ADICIONAL' THEN

        RETURN

    END

*Y.REG.ID

*    CALL F.READ(FN.REDO.CARD.REQUEST,Y.REG.ID,R.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST,REQ.ERRR)



    IF Y.PER.TYPE EQ 'URGENTE' THEN
        EmbossingType:=11
    END ELSE
        EmbossingType:=10
    END

    CardIssueDate = Y.GEN.CARD


    EmbossedName = ' '
    MagneticStripName = 'VISA CARDHOLDER'



    INPUT_PARAM ='ISTTSF_UpdateCMSCardRequest':Y.DEM:Pan:Y.DEM:EXP.DATE:Y.DEM:CardIndicator:Y.DEM:CardIssueDate:Y.DEM:EmbossedName:Y.DEM:MagneticStripName:Y.DEM:EmbossingType

    ERROR.CODE = CALLJEE (ACTIVATION,INPUT_PARAM)
    RESPONSE.CODE =FIELD(INPUT_PARAM,Y.DEM,3)
    IF RESPONSE.CODE NE '' THEN
        R.NEW(CARD.IS.UCC.RESPONSE.CODE)<1,1> = RESPONSE.CODE
        R.NEW(CARD.IS.UCC.RESPONSE.DESC)<1,1> = Y.CMS.CARD.REQUEST.DESC
    END
    INT.CODE='EMB003'
    INT.TYPE='ONLINE'
    IF FIELD(INPUT_PARAM,':',1) EQ 'FAILED' THEN
        DESC='Java API Failure'
*CALL APAP.REDOCHNSL.REDO.INTERFACE.REC.ACT(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC)
        CALL APAP.REDOCHNLS.redoInterfaceRecAct(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC) ;*MANUAL R22 CODE CONVERSION
        RETURN
    END

    IF RESPONSE.CODE EQ Y.UNABLE.TO.PROCESS OR RESPONSE.CODE EQ Y.SYSTEM.ERROR.CODE  THEN
        LOCATE RESPONSE.CODE IN Y.RESP.CODE SETTING Y.POS.2 THEN
            DESC=Y.RESP.CODE.DESB<Y.POS.2>
        END
*CALL APAP.REDOCHNSL.REDO.INTERFACE.REC.ACT(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC)
        CALL APAP.REDOCHNLS.redoInterfaceRecAct(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP.REJ,DESC,REC.CON,EX.USER,EX.PC) ;*MANUAL R22 CODE CONVERSION
    END

RETURN
*----------------------------------------------------------------------------------------------------------------------------
UPDATE.CARD.RENEWAL:


*PACS00063156-S

    IF TYPE.OF.CARD EQ "PRINCIPAL" THEN
        Y.CUSTOMER.ID =  R.NEW(CARD.IS.CUSTOMER.NO)<1,1>
    END ELSE
        Y.CUSTOMER.ID =  R.NEW(CARD.IS.CUSTOMER.NO)<1,2>
    END

    Y.ACCOUNT.ID = R.NEW(CARD.IS.ACCOUNT)<1,1>
    CARD.RENW.ID = Y.CUSTOMER.ID:"-":Y.ACCOUNT.ID

    R.CARD.RENEW = ''
    CALL F.READ(FN.CARD.RENEW,CARD.RENW.ID,R.CARD.RENEW,F.CARD.RENEW,REN.ERR)
    IF R.CARD.RENEW THEN
        GET.PREV.CARD = R.CARD.RENEW<REDO.RENEW.PREV.CARD.NO>
        CHANGE @VM TO @FM IN GET.PREV.CARD

        LOCATE ID.NEW IN GET.PREV.CARD SETTING REN.POS THEN
            R.CARD.RENEW<REDO.RENEW.STATUS,REN.POS> = R.NEW(CARD.IS.CARD.STATUS)
            R.CARD.RENEW<REDO.RENEW.EXPIRY.DATE,REN.POS>  = R.NEW(CARD.IS.EXPIRY.DATE)
        END ELSE
            GOSUB APPEND.VALUES
        END
    END ELSE
        GOSUB APPEND.VALUES
    END

    CALL F.WRITE(FN.CARD.RENEW,CARD.RENW.ID,R.CARD.RENEW)

RETURN
*--------------
APPEND.VALUES:

    R.CARD.RENEW<REDO.RENEW.PREV.CARD.NO,-1> = ID.NEW
    R.CARD.RENEW<REDO.RENEW.TYPE.OF.CARD,-1> = TYPE.OF.CARD
    R.CARD.RENEW<REDO.RENEW.EXPIRY.DATE,-1>  = R.NEW(CARD.IS.EXPIRY.DATE)
    R.CARD.RENEW<REDO.RENEW.STATUS,-1> = R.NEW(CARD.IS.CARD.STATUS)


RETURN
*PACS00063156-E
*------------------------
PREEMBOSS.STOCK.QTY:

* *PACS00082440-S
    IF R.NEW(CARD.IS.EMBOSS.TYPE) EQ 'PREEMBOZADA' THEN
        PREEMB.ID = ID.COMPANY:"-":Y.SERIES
        CALL F.READU(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,R.REDO.PREEMBOSS.STOCK,F.REDO.PREEMBOSS.STOCK,PRE.ERROR,"")
        IF R.REDO.PREEMBOSS.STOCK THEN
            R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL> = R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL> - 1
        END
        CALL F.WRITE(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,R.REDO.PREEMBOSS.STOCK)
    END
*PACS00082440-E

RETURN
*---------------
GET.STOCK.ID:
*---------------
    Y.CARD.TYPE.SK = FIELD(ID.NEW,".",1)
    Y.CARD.NUMBERS.VAL =FIELD(ID.NEW,".",2)
    Y.CARD.NUM.ID = Y.CARD.TYPE.SK:".":ID.COMPANY


    CALL F.READ(FN.REDO.CARD.NUMBERS,Y.CARD.NUM.ID,R.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS,Y.ERR.CARD)
    IF R.REDO.CARD.NUMBERS THEN
        Y.CARD.NUM.LIST = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER>
    END
    LOCATE Y.CARD.NUMBERS.VAL IN Y.CARD.NUM.LIST<1,1> SETTING POS.CARD THEN
        Y.REG.ID = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CRD.REQ.ID,POS.CARD>
        Y.EMB.TYPE=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.EMBOSS.TYPE,POS.CARD>
        Y.PER.TYPE=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.PERSONAL.TYPE,POS.CARD>
        Y.TYP.OF.CARD=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.TYPE.OF.CARD,POS.CARD>
        Y.GEN.CARD=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.GEN.DATE,POS.CARD>
    END
    Y.STOCK.QTY.COUNT.ID = Y.REG.ID:"-":Y.SERIES
RETURN
*--------------------------------------------------------------------------------------------------------
UPDATE.REDO.CARD.NOS.AND.LOCK:
*****************************
*updating REDO.CARD.NUMBERS and REDO.CARD.NO.LOCK table

    Y.NEW.CARD.NO = Pan
    Y.CARD.NO.AND.LOCK.ID = Y.CARD.NUM.ID
    IF R.REDO.CARD.NUMBERS THEN

        LOCATE Y.NEW.CARD.NO IN R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,1> SETTING CRD.POS THEN
            Y.REQ.NO=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CRD.REQ.ID,CRD.POS>
            CALL F.READ(FN.REDO.CARD.REQUEST,Y.REQ.NO,R.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST,ERR)
            Y.STATUS=R.REDO.CARD.REQUEST<REDO.CARD.REQ.STATUS>
            IF Y.STATUS EQ 6 THEN
                R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,CRD.POS>='INUSE'
*            CALL F.WRITE(FN.REDO.CARD.NUMBERS,Y.CARD.NO.AND.LOCK.ID,R.REDO.CARD.NUMBERS)
                WRITE R.REDO.CARD.NUMBERS TO F.REDO.CARD.NUMBERS,Y.CARD.NO.AND.LOCK.ID
            END
            ELSE
                E='ST-LATAM.CARD.ID.ERR'
                CALL STORE.END.ERROR
                RETURN
            END
        END


        LOCATE 'AVAILABLE' IN R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,1> SETTING Y.AVAILABLE.CARD.POS THEN
            Y.NXT.AVAILABLE.CARD = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,Y.AVAILABLE.CARD.POS>
        END
        ELSE
            Y.NXT.AVAILABLE.CARD=''
        END

        R.REDO.CARD.NO.LOCK = ''
        REDO.CARD.NO.LOCK.ERR = ''
        CALL F.READU(FN.REDO.CARD.NO.LOCK,Y.CARD.NO.AND.LOCK.ID,R.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK,REDO.CARD.NO.LOCK.ERR,'')

        Y.CARD.LOCK.LIST = R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER>

        Y.NEW.CARD.LOCK.LIST = INSERT(Y.CARD.LOCK.LIST,1,1;Y.NXT.AVAILABLE.CARD)
        R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER> = Y.NEW.CARD.LOCK.LIST

        WRITE R.REDO.CARD.NO.LOCK TO F.REDO.CARD.NO.LOCK,Y.CARD.NO.AND.LOCK.ID

    END

RETURN


*--------------------------------------------------------------------------------------------------------
END
