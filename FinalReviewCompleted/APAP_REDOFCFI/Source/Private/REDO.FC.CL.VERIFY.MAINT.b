* @ValidationCode : MjoyODc0ODM1MjA6VVRGLTg6MTY4MzYxNjA4MzQyMjpJVFNTOi0xOi0xOjEyODU6MTpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 09 May 2023 12:38:03
* @ValidationInfo : Encoding          : UTF-8
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1285
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOFCFI
******************************************************************************
SUBROUTINE REDO.FC.CL.VERIFY.MAINT
******************************************************************************
* Company Name: Asociacion Popular de Ahorro y Prestamo (APAP)
* Developed By: Reginal Temenos Application Management
*-----------------------------------------------------------------------------
* Subroutine Type : SUBROUTINE
* Attached to : FC PROCESS
* Attached as :
* Primary Purpose : Maintenance when updating COLLATERAL.RIGHT in secured loans
*
*
* Incoming : NA
* Outgoing : NA
*-----------------------------------------------------------------------------
* Modification History:
*
* Development for : APAP
* Development by : btorresalbornoz@temenos.com
* Date : 01/06/2011
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*04-04-2023          CONVERSION TOOL                    AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM and I++ to I=+1
*04-04-2023          jayasurya H                      MANUAL R22 CODE CONVERSION        Call method format changed
*-----------------------------------------------------------------------------

*************************************************************************
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.COLLATERAL
    $INSERT I_F.COLLATERAL.RIGHT
    $INSERT I_F.LIMIT

    $INSERT I_F.REDO.FC.LIMIT.AA
    $INSERT I_F.REDO.FC.CL.BALANCE
    $INSERT I_F.REDO.FC.CL.BALANCE.HIS
    $INSERT I_REDO.FC.COMMON
    $USING APAP.AA
*************************************************************************

    GOSUB INITIALISE
    GOSUB OPEN.FILES
    GOSUB CHECK.PRELIM.CONDITIONS
    IF PROCESS.GOAHEAD THEN
        GOSUB PROCESS
    END
RETURN


* =========
INITIALISE:
* =========
    LOOP.CNT = 1
    MAX.LOOPS = 1
    PROCESS.GOAHEAD = 1

    MAINT.LIMIT = R.OLD(COLL.RIGHT.LIMIT.REFERENCE)
    MAIN.COLL.RIGHT = ID.NEW

    YPOS = ''

    FN.REDO.FC.LIMIT.AA = 'F.REDO.FC.LIMIT.AA'
    F.REDO.FC.LIMIT.AA = ''
    R.REDO.FC.LIMIT.AA = ''

    FN.REDO.FC.CL.BALANCE = 'F.REDO.FC.CL.BALANCE'
    F.REDO.FC.CL.BALANCE = ''
    R.REDO.FC.CL.BALANCE = ''

    FN.COLLATERAL = 'F.COLLATERAL'
    F.COLLATERAL = ''
    R.COLLATERAL = ''

    FN.REDO.FC.CL.BALANCE.HIS = 'F.REDO.FC.CL.BALANCE.HIS'
    F.REDO.FC.CL.BALANCE.HIS = ''
    R.REDO.FC.CL.BALANCE.HIS = ''

    FN.LIMIT = 'F.LIMIT'
    F.LIMIT = ''
    R.LIMIT = ''

    FN.COLLATERAL.RIGHT = 'F.COLLATERAL.RIGHT'
    F.COLLATERAL.RIGHT = ''
    R.COLLATERAL.RIGHT = ''

    FN.REDO.FC.CL.BALANCE.HIS = 'F.REDO.FC.CL.BALANCE.HIS'
    F.REDO.FC.CL.BALANCE.HIS = ''
    R.REDO.FC.CL.BALANCE.HIS = ''

    Y.AVAIL.VAL.FIELD.NO = ''
    CALL GET.LOC.REF('COLLATERAL','L.COL.VAL.AVA',Y.AVAIL.VAL.FIELD.NO)

    MAINT.COLL.ID.EXTRA.CHECK=""

RETURN

* =========
OPEN.FILES:
* =========
    CALL OPF(FN.REDO.FC.CL.BALANCE,F.REDO.FC.CL.BALANCE)
    CALL OPF(FN.REDO.FC.LIMIT.AA,F.REDO.FC.LIMIT.AA)
    CALL OPF(FN.LIMIT,F.LIMIT)
    CALL OPF(FN.REDO.FC.CL.BALANCE.HIS,F.REDO.FC.CL.BALANCE.HIS)
RETURN

* ======================
CHECK.PRELIM.CONDITIONS:
* ======================
    LOOP
    WHILE LOOP.CNT LE MAX.LOOPS AND PROCESS.GOAHEAD DO
        BEGIN CASE
            CASE LOOP.CNT EQ 1
        END CASE
        LOOP.CNT +=1
    REPEAT

RETURN

* ======
PROCESS:
* ======

    Y.ERR=""
    ERR.MSJ=""
    CALL F.READ(FN.REDO.FC.LIMIT.AA, MAINT.LIMIT, R.REDO.FC.LIMIT.AA, F.REDO.FC.LIMIT.AA, Y.ERR)
    IF Y.ERR THEN
        ETEXT = "EB-FC-READ.ERROR" : @FM : FN.REDO.FC.LIMIT.AA
        CALL STORE.END.ERROR
    END

    CALL F.READ(FN.REDO.FC.CL.BALANCE,R.REDO.FC.LIMIT.AA,R.REDO.FC.CL.BALANCE,F.REDO.FC.CL.BALANCE,ERR.MSJ)

    IF ERR.MSJ THEN
        ETEXT = "EB-FC-READ.ERROR" : @FM : FN.REDO.FC.CL.BALANCE
        CALL STORE.END.ERROR
    END

    MAINT.AMOUNT = R.REDO.FC.CL.BALANCE<FC.CL.AA.AMOUNT>
    MAINT.AMOUNT.BALANCE = R.REDO.FC.CL.BALANCE<FC.CL.AA.BALANCE>

    MAINT.COLL.ID = R.REDO.FC.CL.BALANCE<FC.CL.COLLATERAL.ID>
    MAINT.COLL.RIGHT.ID = R.REDO.FC.CL.BALANCE<FC.CL.COLLATERAL.RIGHT>
    MAINT.COLL.MG.ORIGINAL = R.REDO.FC.CL.BALANCE<FC.CL.MG.ORIGINAL>
    MAINT.COLL.MG.ACTUAL = R.REDO.FC.CL.BALANCE<FC.CL.MG.ACTUAL>

    GOSUB FIND.COLL
    GOSUB FIND.COLL.EXTRA
    GOSUB FIND.COLL.ID

    Y.COUNT.F = DCOUNT(MAINT.COLL.ID,@VM)
    FOR Y.F = 1 TO Y.COUNT.F
        IF MAINT.COLL.ID<1,Y.F> EQ "" THEN ;* AUTO R22 CODE CONVERSION
            DEL MAINT.COLL.ID<1,Y.F>
        END
    NEXT Y.F

    MAINT.COLL.ID.EXT = MAINT.COLL.ID
    IF MAINT.COLL.ID.XTRAS THEN
        MAINT.COLL.ID.EXT := @VM : MAINT.COLL.ID.XTRAS
    END

    GOSUB READ.COLL
    GOSUB COLL.TOT
    GOSUB MAINT.LOCALIZA
    GOSUB DEL.COLL
    GOSUB CHECK.DATA

    MAINT.COLL.MG.ORIGINAL.TOTAL.T = SUM(MAINT.COLL.MG.ORIGINAL.TOTAL)

    IF MAINT.COLL.MG.ORIGINAL.TOTAL.T GE MAINT.AMOUNT THEN
        GOSUB RECORD.HIS
        GOSUB RETURN.SD
        MAINT.ID.AA = R.REDO.FC.LIMIT.AA


        CALL APAP.AA.redoFcClMaintAa();*R22 Manual Conversion - Call method format changed
    END ELSE
        AF = COLL.RIGHT.LIMIT.REFERENCE
        ETEXT = "EB-FC.DOES.NOT.SUFFICIENT.GUARANTEE"
        CALL STORE.END.ERROR
    END




RETURN

* ========
FIND.COLL:
* ========
    CALL F.READ(FN.LIMIT, MAINT.LIMIT, R.LIMIT, F.LIMIT, Y.ERR)

    IF R.LIMIT THEN
        MAINT.COLL.RIGHT.XTRA = R.LIMIT<LI.COLLAT.RIGHT>
        Y.COUNT.C = DCOUNT(MAINT.COLL.RIGHT.XTRA,@SM)
        MAINT.COLL.RIGHT.XTRA.TO.DEL = MAINT.COLL.RIGHT.XTRA
        CHANGE @SM TO @VM IN MAINT.COLL.RIGHT.XTRA.TO.DEL
        FOR Y.C = 1 TO Y.COUNT.C
            CALL F.READ(FN.COLLATERAL.RIGHT,MAINT.COLL.RIGHT.XTRA.TO.DEL<1,Y.C>,R.COLLATERAL.RIGHT,F.COLLATERAL.RIGHT,ERR.MSJ)
            IF ERR.MSJ THEN
                ETEXT = "EB-FC-READ.ERROR" : @FM : FN.COLLATERAL.RIGHT
                CALL STORE.END.ERROR
            END ELSE
                MAINT.COLL.RIGHT.REF.ID = R.COLLATERAL.RIGHT<COLL.RIGHT.LIMIT.REFERENCE>
                GOSUB DELETE.CR.DATA
            END
        NEXT Y.C
    END

RETURN

* =============
DELETE.CR.DATA:
* =============
    IF MAINT.COLL.RIGHT.REF.ID EQ '' THEN
        LOCATE MAINT.COLL.RIGHT.XTRA.TO.DEL<1,Y.C> IN MAINT.COLL.RIGHT.XTRA<1,1,1> SETTING WPOS THEN
            IF WPOS THEN
                DEL MAINT.COLL.RIGHT.XTRA<1,1,WPOS>
            END
        END
    END

RETURN

* =============
FIND.COLL.EXTRA:
* =============
    Y.COUNT.C = DCOUNT(MAINT.COLL.RIGHT.XTRA,@SM)
    FOR Y.C = 1 TO Y.COUNT.C
        LOCATE MAINT.COLL.RIGHT.XTRA<1,1,Y.C> IN MAINT.COLL.RIGHT.ID<1,1> SETTING XPOS THEN
        END ELSE
            IF MAINT.COLL.RIGHT.XTRAS THEN
                MAINT.COLL.RIGHT.XTRAS := @VM : MAINT.COLL.RIGHT.XTRA<1,1,Y.C>
            END ELSE
                MAINT.COLL.RIGHT.XTRAS = MAINT.COLL.RIGHT.XTRA<1,1,Y.C>
            END
        END

    NEXT Y.C

RETURN

* ==========
FIND.COLL.ID:
* ==========
    IF MAINT.COLL.RIGHT.XTRAS THEN
        MAINT.COLL.ID.XTRAS = MAINT.COLL.RIGHT.XTRAS

        Y.COUNT.ID = DCOUNT(MAINT.COLL.ID.XTRAS,@VM)
        FOR Y.ID = 1 TO Y.COUNT.ID
            MAINT.COLL.ID.XTRAS<1,Y.ID> := ".1"
        NEXT Y.ID
    END

RETURN

* =======
READ.COLL:
* =======
    Y.COUNT = DCOUNT(MAINT.COLL.ID.EXT,@VM)
    FOR Y.I = 1 TO Y.COUNT
        CALL F.READ(FN.COLLATERAL,MAINT.COLL.ID.EXT<1,Y.I>,R.COLLATERAL,F.COLLATERAL,ERR.MSJ)
        IF ERR.MSJ THEN
            ETEXT = "EB-FC-READ.ERROR" : @FM : FN.COLLATERAL
            CALL STORE.END.ERROR
        END ELSE

            COLL.SALDO.DIS<1,Y.I> = R.COLLATERAL<COLL.LOCAL.REF,Y.AVAIL.VAL.FIELD.NO>
        END
    NEXT Y.I

RETURN

* ======
COLL.TOT:
* ======
    Y.COUNT = DCOUNT(COLL.SALDO.DIS,@VM)
    FOR Y.I = 1 TO Y.COUNT
        MAINT.COLL.MG.ORIGINAL.TOT <1,Y.I> = MAINT.COLL.MG.ACTUAL<1,Y.I> + COLL.SALDO.DIS<1,Y.I>
    NEXT Y.I

RETURN

* ============
MAINT.LOCALIZA:
* ============
    LOCATE MAIN.COLL.RIGHT IN MAINT.COLL.RIGHT.ID<1,1> SETTING YPOS THEN
    END

RETURN

* ======
DEL.COLL:
* ======
    MAINT.COLL.MG.ORIGINAL.TOTAL = MAINT.COLL.MG.ORIGINAL.TOT
    DEL MAINT.COLL.MG.ORIGINAL.TOTAL <1,YPOS>

    MAINT.COLL.ID.EXTRA = MAINT.COLL.ID.EXT
    DEL MAINT.COLL.ID.EXTRA <1,YPOS>

    MAINT.COLL.RIGHT.XTRA.ID = MAINT.COLL.RIGHT.XTRA
    CHANGE @SM TO @VM IN MAINT.COLL.RIGHT.XTRA.ID

RETURN

* =======
RETURN.SD:
* =======
    Y.COUNT.C = DCOUNT(MAINT.COLL.ID,@VM)
    FOR Y.C = 1 TO Y.COUNT.C
        CALL F.READU(FN.COLLATERAL,MAINT.COLL.ID<1,Y.C>,R.COLLATERAL,F.COLLATERAL,ERR.MSJ,RTR)
        IF ERR.MSJ THEN
            ETEXT = "EB-FC-READ.ERROR" : @FM : FN.COLLATERAL
            CALL STORE.END.ERROR
        END ELSE
            R.COLLATERAL<COLL.LOCAL.REF,Y.AVAIL.VAL.FIELD.NO>=MAINT.COLL.MG.ORIGINAL.TOT<1,Y.C>
            CALL F.WRITE(FN.COLLATERAL,MAINT.COLL.ID<1,Y.C>,R.COLLATERAL)
        END
    NEXT Y.C

RETURN

* =========
RECORD.HIS:
* =========


    YNO.SEQ = 1
* YNO.SEQ = YNO.SEQ + 1
    YNO.SEQ = FMT(YNO.SEQ,"2'0'R")
    Y.AA.ID.RFBAL = R.REDO.FC.LIMIT.AA:".":YNO.SEQ



    CALL F.READU(FN.REDO.FC.CL.BALANCE.HIS,Y.AA.ID.RFBAL,R.REDO.FC.CL.BALANCE.HIS,F.REDO.FC.CL.BALANCE.HIS,ERR.MSJ,RTR)

    IF ERR.MSJ THEN
        R.REDO.FC.CL.BALANCE.HIS<FC.CL.AA.AMOUNT> = MAINT.AMOUNT
        R.REDO.FC.CL.BALANCE.HIS<FC.CL.AA.BALANCE> = MAINT.AMOUNT.BALANCE
        R.REDO.FC.CL.BALANCE.HIS<FC.CL.COLLATERAL.RIGHT> = MAINT.COLL.RIGHT.ID
        R.REDO.FC.CL.BALANCE.HIS<FC.CL.COLLATERAL.ID> = MAINT.COLL.ID
        R.REDO.FC.CL.BALANCE.HIS<FC.CL.MG.ORIGINAL> = MAINT.COLL.MG.ORIGINAL
        CALL F.WRITE(FN.REDO.FC.CL.BALANCE.HIS,Y.AA.ID.RFBAL,R.REDO.FC.CL.BALANCE.HIS)
    END ELSE

        GOSUB REGISTER.NEW.HIS




    END


RETURN

* =========
REGISTER.NEW.HIS:
* =========



    SELECT.STATEMENT = 'SELECT ':FN.REDO.FC.CL.BALANCE.HIS:' ':'WITH @ID LIKE ':R.REDO.FC.LIMIT.AA:'...':' BY-DSND ':'@ID'
    AA.REDO.FC.CL.LIST = ''
    LIST.NAME = ''
    SELECTED = ''
    SYSTEM.RETURN.CODE = ''
    Y.ID.AA.PRD = ''
    CALL EB.READLIST(SELECT.STATEMENT,AA.REDO.FC.CL.LIST,LIST.NAME,SELECTED,SYSTEM.RETURN.CODE)

    REMOVE Y.ID.AA.RFB FROM AA.REDO.FC.CL.LIST SETTING POS

    Y.AA.SEQ=FIELD(Y.ID.AA.RFB,".",2)
    Y.AA.SEQ += 1
    Y.AA.SEQ = FMT(Y.AA.SEQ,"2'0'R")
    Y.AA.ID.RFBAL = R.REDO.FC.LIMIT.AA:".":Y.AA.SEQ

    R.REDO.FC.CL.BALANCE.HIS<FC.CL.AA.AMOUNT> = MAINT.AMOUNT
    R.REDO.FC.CL.BALANCE.HIS<FC.CL.AA.BALANCE> = MAINT.AMOUNT.BALANCE
    R.REDO.FC.CL.BALANCE.HIS<FC.CL.COLLATERAL.RIGHT> = MAINT.COLL.RIGHT.ID
    R.REDO.FC.CL.BALANCE.HIS<FC.CL.COLLATERAL.ID> = MAINT.COLL.ID
    R.REDO.FC.CL.BALANCE.HIS<FC.CL.MG.ORIGINAL> = MAINT.COLL.MG.ORIGINAL
    CALL F.WRITE(FN.REDO.FC.CL.BALANCE.HIS,Y.AA.ID.RFBAL,R.REDO.FC.CL.BALANCE.HIS)
RETURN

* =========
CHECK.DATA:
* =========

    MAINT.COLL.ID.EXTRA.ORDEN = MAINT.COLL.ID.EXTRA
    Y.COUNT.C = DCOUNT(MAINT.COLL.ID.EXTRA.ORDEN,@VM)
    FOR Y.C = 1 TO Y.COUNT.C

        VAR.IZQ=FIELD(MAINT.COLL.ID.EXTRA.ORDEN<1,Y.C>,".",1)
        VAR.MDE=FIELD(MAINT.COLL.ID.EXTRA.ORDEN<1,Y.C>,".",2)
        VAR.COLL.ID=VAR.IZQ:".":VAR.MDE
        IF MAINT.COLL.ID.EXTRA.CHECK THEN
            MAINT.COLL.ID.EXTRA.CHECK := @VM : VAR.COLL.ID
        END ELSE
            MAINT.COLL.ID.EXTRA.CHECK = VAR.COLL.ID
        END


    NEXT Y.C

RETURN


END
