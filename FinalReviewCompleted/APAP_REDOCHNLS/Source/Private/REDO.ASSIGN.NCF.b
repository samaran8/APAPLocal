* @ValidationCode : MjoxNjgwMjU0Nzg4OkNwMTI1MjoxNjgxNzMzNjg2MDA3OklUU1M6LTE6LTE6MTQ3MToxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 17 Apr 2023 17:44:46
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1471
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOCHNLS
SUBROUTINE REDO.ASSIGN.NCF(Y.NCF.ID,Y.FT.CHARGE.AMT)
*-----------------------------------------------------------------------------
*DESCRIPTION:
*------------
*This routine is used to define fields that will update NCF table based on Interest paid.
*------------------------------------------------------------------------------------------
* Input/Output:
*--------------
* IN  : -NA-
* OUT : -NA-
*
* Dependencies:
*---------------
* CALLS : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference                                    Description
* 14-JUN-2012          Prabhu.N     PACS00167681 and PACS00167681                 Initial Creation
*
* 12-APR-2023     Conversion tool   R22 Auto conversion  		 	            VM to @VM
* 12-APR-2023      Harishvikram C   Manual R22 conversion                       No changes
*--------------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.TELLER
    $INSERT I_F.REDO.AA.INTEREST.CHARGE
    $INSERT I_F.REDO.NCF.ISSUED
    $INSERT I_F.REDO.L.NCF.UNMAPPED
    $INSERT I_F.REDO.L.NCF.STOCK
    $INSERT I_F.REDO.L.NCF.STATUS
*   $INSERT I_F.REDO.L.NCF.STOCK ;*R22 Auto conversion


    GOSUB INITIALISE
    GOSUB GET.NCF
    GOSUB ASSIGN.NCF.FT

RETURN
**********
INITIALISE:
*----------

    FN.REDO.L.NCF.ISSUED='F.REDO.NCF.ISSUED'
    F.REDO.NCF.ISSUED=''
    CALL OPF(FN.REDO.L.NCF.ISSUED,F.REDO.NCF.ISSUED)

    FN.REDO.L.NCF.STATUS='F.REDO.L.NCF.STATUS'
    F.REDO.L.NCF.STATUS=''
    CALL OPF(FN.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS)

    FN.REDO.L.NCF.UNMAPPED='F.REDO.L.NCF.UNMAPPED'
    F.REDO.L.NCF.UNMAPPED =''
    CALL OPF(FN.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED)

    FN.REDO.L.NCF.STOCK='F.REDO.L.NCF.STOCK'
    F.REDO.L.NCF.STOCK=''
    CALL OPF(FN.REDO.L.NCF.STOCK,F.REDO.L.NCF.STOCK)

    FN.FUNDS.TRANSFER='F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER=''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)

    LRF.APP='FUNDS.TRANSFER'
    LRF.FIELD  = 'L.NCF.REQUIRED':@VM:'L.NCF.NUMBER'
    LRF.POS    =''
    CALL MULTI.GET.LOC.REF(LRF.APP,LRF.FIELD,LRF.POS)

    Y.L.NCF.REQ.POS=LRF.POS<1,1>
    Y.NCF.NUM.POS  =LRF.POS<1,2>
RETURN


*----------
GET.NCF:
*----------

    CALL F.READU(FN.REDO.L.NCF.STOCK,'SYSTEM',R.NCF.STOCK,F.REDO.L.NCF.STOCK,ERR.MSJ,RTR)   ;*PACS00182878 - S/E

    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG> GT '0' THEN
        VAR.SER =R.NCF.STOCK<ST.SERIES>
        VAR.BUS.DIV = R.NCF.STOCK<ST.BUSINESS.DIV>
        VAR.PECF =R.NCF.STOCK<ST.PECF>
        VAR.AICF = R.NCF.STOCK<ST.AICF>
        VAR.TCF = R.NCF.STOCK<ST.TCF>
        VAR.SEQ.NO = R.NCF.STOCK<ST.SEQUENCE.NO>
        Y.SEQ.NO = FMT(R.NCF.STOCK<ST.SEQUENCE.NO>,'8"0"R')
        NCF.NUMBER = VAR.SER:VAR.BUS.DIV:VAR.PECF:VAR.AICF:VAR.TCF:Y.SEQ.NO
        VAR.PREV.RANGE=R.NCF.STOCK<ST.PRE.ED.RG.OR>
        VAR.PREV.RANGE=VAR.PREV.RANGE<1,DCOUNT(VAR.PREV.RANGE,@VM)>
        IF R.NCF.STOCK<ST.SEQUENCE.NO> EQ VAR.PREV.RANGE THEN
            R.NCF.STOCK<ST.SEQUENCE.NO>=R.NCF.STOCK<ST.L.STRT.RNGE.ORG>
        END ELSE
            R.NCF.STOCK<ST.SEQUENCE.NO>=R.NCF.STOCK<ST.SEQUENCE.NO>+1
        END
        R.NCF.STOCK<ST.SEQUENCE.NO>=FMT(R.NCF.STOCK<ST.SEQUENCE.NO>,'8"0"R')
        R.NCF.STOCK<ST.NCF.ISSUED.ORG>=R.NCF.STOCK<ST.NCF.ISSUED.ORG>+1
        R.NCF.STOCK<ST.QTY.AVAIL.ORG>=R.NCF.STOCK<ST.QTY.AVAIL.ORG>-1
        IF  R.NCF.STOCK<ST.QTY.AVAIL.ORG> GE R.NCF.STOCK<ST.L.MIN.NCF.ORG>  THEN
            R.NCF.STOCK<ST.NCF.STATUS.ORG>='AVAILABLE'
        END ELSE
            R.NCF.STOCK<ST.NCF.STATUS.ORG>='UNAVAILABLE'
        END
    END

RETURN

*-------------
ASSIGN.NCF.FT:
*-------------
    CALL F.READ(FN.FUNDS.TRANSFER,FIELD(Y.NCF.ID,'.',3),R.FT,F.FUNDS.TRANSFER,ERR)
    CALL F.READ(FN.REDO.L.NCF.ISSUED,Y.NCF.ID,R.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR)
    CALL F.READ(FN.REDO.L.NCF.UNMAPPED,Y.NCF.ID,R.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED,ERR)
    CALL F.READ(FN.REDO.L.NCF.STATUS,Y.NCF.ID,R.NCF.STATUS,F.REDO.L.NCF.STATUS,ERR)

    R.NCF.ISSUED<ST.IS.TXN.ID>=FIELD(Y.NCF.ID,'.',3)
    R.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>=Y.FT.CHARGE.AMT
    R.NCF.ISSUED<ST.IS.ACCOUNT>=ID.NEW
    R.NCF.ISSUED<ST.IS.CUSTOMER>=FIELD(Y.NCF.ID,'.',1)
    R.NCF.ISSUED<ST.IS.TXN.TYPE>=R.FT<FT.TRANSACTION.TYPE>
    R.NCF.ISSUED<ST.IS.DATE>=FIELD(Y.NCF.ID,'.',2)
    NCF.IS.CNT = DCOUNT(R.NCF.ISSUED<ST.IS.NCF>,@VM)
    R.NCF.ISSUED<ST.IS.NCF,NCF.IS.CNT+1>= NCF.NUMBER
    R.NCF.STATUS<NCF.ST.TRANSACTION.ID>=FIELD(Y.NCF.ID,'.',3)
    R.NCF.STATUS<NCF.ST.CUSTOMER.ID>=FIELD(Y.NCF.ID,'.',1)
    R.NCF.STATUS<NCF.ST.STATUS>='AVAILABLE'
    R.NCF.STATUS<NCF.ST.DATE>  =FIELD(Y.NCF.ID,'.',2)
    R.NCF.STATUS<NCF.ST.CHARGE.AMOUNT> = Y.FT.CHARGE.AMT
    NCF.CNT = DCOUNT(R.NCF.STATUS<NCF.ST.NCF>,@VM)
    R.NCF.STATUS<NCF.ST.NCF,NCF.CNT+1>= NCF.NUMBER
    R.NCF.UNMAPPED<ST.UN.TXN.TYPE>=R.FT<FT.TRANSACTION.TYPE>
    R.NCF.UNMAPPED<ST.UN.CHARGE.AMOUNT>= Y.FT.CHARGE.AMT
    R.NCF.UNMAPPED<ST.UN.TXN.ID>=FIELD(Y.NCF.ID,'.',3)
    R.NCF.UNMAPPED<ST.UN.DATE>  =FIELD(Y.NCF.ID,'.',2)
    R.NCF.UNMAPPED<ST.UN.BATCH> ='NO'
    R.NCF.UNMAPPED<ST.UN.ACCOUNT>=ID.NEW
    R.NCF.UNMAPPED<ST.UN.CUSTOMER>=FIELD(Y.NCF.ID,'.',1)

    GOSUB WRITE.NCF
RETURN
*---------
WRITE.NCF:
*---------
    VAR.NCF.REQUIRED=R.FT<FT.LOCAL.REF,Y.L.NCF.REQ.POS>
    IF VAR.NCF.REQUIRED EQ 'YES' THEN
        R.FT<FT.LOCAL.REF,Y.NCF.NUM.POS>=NCF.NUMBER
    END
    CALL F.WRITE(FN.FUNDS.TRANSFER,FIELD(Y.NCF.ID,'.',3),R.FT)
    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG>  GT '0' AND VAR.NCF.REQUIRED EQ 'YES' THEN
        CALL F.WRITE(FN.REDO.L.NCF.ISSUED,Y.NCF.ID,R.NCF.ISSUED)
    END ELSE
        CALL F.WRITE(FN.REDO.L.NCF.UNMAPPED,Y.NCF.ID,R.NCF.UNMAPPED)
    END

    CALL F.WRITE(FN.REDO.L.NCF.STOCK,'SYSTEM',R.NCF.STOCK)
    CALL F.WRITE(FN.REDO.L.NCF.STATUS,Y.NCF.ID,R.NCF.STATUS)
RETURN
END
