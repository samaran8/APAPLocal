* @ValidationCode : MjoxNjE4Mzc5MjE3OkNwMTI1MjoxNjgxMzgwODYzMDY4OklUU1M6LTE6LTE6MTQ0OToxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 13 Apr 2023 15:44:23
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1449
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOCHNLS
SUBROUTINE REDO.IVR.ESTADOCTADEB(R.DATA)
*-----------------------------------------------------------------------------
*DESCRIPTION:
*------------
* This is an Nofile routine to get some data for enquiry REDO.IVR.ESTADOCTADEB
* related to C.3 IVR Interface.
*
* Input/Output:
*--------------
* IN : ACCOUNT.NO,MONTH,YEAR
* OUT : R.DATA (ALL DATA)
*---------------
*-----------------------------------------------------------------------------
* Modification History :
* Date Who Reference Description
* 23-FEB-2011 RMONDRAGON ODR-2011-02-0099 FIRST VERSION
* 13-JUN-2012 RMONDRAGON ODR-2011-02-0099 UPDATE
* 14-MAR-2013 RMONDRAGON ODR-2011-02-0099 UPDATE
* 11-APR-2023     Conversion tool   R22 Auto conversion   VM to @VM, SM to @SM, ++ to +=, R.READ to CACHE.READ
* 11-APR-2023      Harishvikram C   Manual R22 conversion      No changes
*-----------------------------------------------------------------------------
* <region name= Inserts>
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.LATAM.CARD.ORDER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.CURRENCY
    $INSERT I_F.AC.STMT.HANDOFF

    $INSERT I_F.REDO.LY.MASTERPRGDR
    $INSERT I_F.REDO.LY.POINTS
    $INSERT I_F.REDO.LY.POINTS.TOT
* </region>
*-----------------------------------------------------------------------------

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS
RETURN
*
*****
INIT:
*****

    ACCOUNT.NO.POS = ""
    Y.ACCOUNT = "N/A"
    MONTH.POS = ""
    Y.MONTH = ""
    YEAR.POS = ""
    Y.YEAR = ""
    Y.SEL.LATAM.CARD.ORDER = ""
    Y.SEL.LATAM.CARD.ORDER.LIST = ""
    Y.SEL.LATAM.CARD.ORDER.LIST.NO = ""
    LATAM.CARD.ORDER.ERR = ""
    Y.LATAM.CARD.ORDER.ID = ""
    Y.LATAM.CARD.ORDER.REC = ""
    Y.SEL.ACCOUNT = ""
    Y.SEL.ACCOUNT.LIST = ""
    Y.SEL.ACCOUNT.LIST.NO = ""
    ACCOUNT.ERR = ""
    Y.ACCOUNT.ID = ""
    Y.ACCOUNT.REC = ""
    Y.CU.ID = "N/A"
    Y.DAY = ""
    Y.COURT.DATE.REQ = ""
    Y.SEL.AC.STMT.HANDOFF = ""
    Y.SEL.AC.STMT.HANDOFF.LIST = ""
    Y.SEL.AC.STMT.HANDOFF.LIST.NO = ""
    AC.STMT.HANDOFF.ERR = ""
    Y.AC.STMT.HANDOFF.ID = ""
    Y.AC.STMT.HANDOFF.REC = ""

    Y.ISSUE.DATE = "N/A"
    Y.CUST.NAME = "N/A"
    Y.EXP.DATE = "N/A"
    Y.CCY = "N/A"
    Y.CCY.DESC = "N/A"

    Y.BAL.START.MONTH = "N/A"
    Y.BAL.TO.DATE = "N/A"
    Y.BAL.RESERV = "N/A"
    Y.BAL.AVAIL = "N/A"
    Y.DEST.NAME = "N/A"
    Y.COURT.DATE = "N/A"
    Y.ACUM.INT = "N/A"

    Y.LOY.BAL.START = "N/A"
    Y.LOY.PTS.MONTH = "N/A"
    Y.LOY.PTS.USED.MONTH = "N/A"
    Y.LOY.PTS.TO.EXP = "N/A"
    Y.LOY.BAL.END = "N/A"
    Y.CARD.NO = "N/A"

    LREF.APP = 'ACCOUNT'
    LREF.FIELDS = 'L.AC.AV.BAL'
    LREF.POS=''
    CALL GET.LOC.REF(LREF.APP,LREF.FIELDS,LREF.POS)
    L.AC.AV.BAL.POS=LREF.POS<1,1>

RETURN

*********
OPENFILES:
*********

    FN.LATAM.CARD.ORDER = "F.LATAM.CARD.ORDER"
    F.LATAM.CARD.ORDER = ""
    CALL OPF(FN.LATAM.CARD.ORDER,F.LATAM.CARD.ORDER)

    FN.ACCOUNT = "F.ACCOUNT"
    F.ACCOUNT = ""
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.CUSTOMER = "F.CUSTOMER"
    F.CUSTOMER = ""
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    FN.CURRENCY = "F.CURRENCY"
    F.CURRENCY = ""
    CALL OPF(FN.CURRENCY,F.CURRENCY)

    FN.REDO.LY.MASTERPRGDR = "F.REDO.LY.MASTERPRGDR"
    F.REDO.LY.MASTERPRGDR = ""
    CALL OPF(FN.REDO.LY.MASTERPRGDR,F.REDO.LY.MASTERPRGDR)

    FN.REDO.LY.POINTS = 'F.REDO.LY.POINTS'
    F.REDO.LY.POINTS = ''
    CALL OPF(FN.REDO.LY.POINTS,F.REDO.LY.POINTS)

    FN.REDO.LY.POINTS.TOT = 'F.REDO.LY.POINTS.TOT'
    F.REDO.LY.POINTS.TOT = ''
    CALL OPF(FN.REDO.LY.POINTS.TOT,F.REDO.LY.POINTS.TOT)

    FN.AC.STMT.HANDOFF = "F.AC.STMT.HANDOFF"
    F.AC.STMT.HANDOFF = ""
    CALL OPF(FN.AC.STMT.HANDOFF,F.AC.STMT.HANDOFF)

RETURN

********
PROCESS:
********

    LOCATE "CARD.NO" IN D.FIELDS<1> SETTING CARD.NO.POS THEN
        Y.CARD = D.RANGE.AND.VALUE<CARD.NO.POS>
    END

    LOCATE "ACCOUNT.NO" IN D.FIELDS<1> SETTING ACCOUNT.NO.POS THEN
        Y.ACCOUNT = D.RANGE.AND.VALUE<ACCOUNT.NO.POS>
        COMI = Y.ACCOUNT
        CALL IN2POSANT(19,'')
        Y.ACCOUNT = COMI
    END

    LOCATE "MONTH" IN D.FIELDS<1> SETTING MONTH.POS THEN
        Y.MONTH = D.RANGE.AND.VALUE<MONTH.POS>
    END

    LOCATE "YEAR" IN D.FIELDS<1> SETTING YEAR.POS THEN
        Y.YEAR = D.RANGE.AND.VALUE<YEAR.POS>
    END

    IF (NOT(NUM(Y.MONTH))) OR (NOT(NUM(Y.YEAR))) THEN
        R.DATA = "2******************"
        RETURN
    END

    IF Y.MONTH LT 1 AND Y.MONTH GT 12 THEN
        R.DATA = "2******************"
        RETURN
    END

    IF Y.YEAR LT 1 AND Y.YEAR GT 9999 THEN
        R.DATA = "2******************"
        RETURN
    END

    Y.OUT = "N"

    IF Y.CARD EQ "" AND Y.ACCOUNT NE "" THEN
        GOSUB GET.AC.DET
        IF Y.OUT EQ "Y" THEN
            RETURN
        END
        Y.SEL.LATAM.CARD.ORDER = "SELECT ":FN.LATAM.CARD.ORDER:" WITH ACCOUNT EQ ":Y.ACCOUNT
    END

    IF Y.CARD NE "" THEN
        Y.SEL.LATAM.CARD.ORDER = "SELECT ":FN.LATAM.CARD.ORDER:" WITH @ID LIKE ...":Y.CARD
    END

    CALL EB.READLIST(Y.SEL.LATAM.CARD.ORDER,Y.SEL.LATAM.CARD.ORDER.LIST,'',Y.SEL.LATAM.CARD.ORDER.LIST.NO,LATAM.CARD.ORDER.ERR)

    IF Y.SEL.LATAM.CARD.ORDER.LIST.NO EQ "1" THEN
        Y.LATAM.CARD.ORDER.ID = Y.SEL.LATAM.CARD.ORDER.LIST<Y.SEL.LATAM.CARD.ORDER.LIST.NO>
        CALL F.READ(FN.LATAM.CARD.ORDER,Y.LATAM.CARD.ORDER.ID,Y.LATAM.CARD.ORDER.REC,F.LATAM.CARD.ORDER,LATAM.CARD.ORDER.ERR)
        IF Y.LATAM.CARD.ORDER.REC THEN
            Y.ISSUE.DATE = Y.LATAM.CARD.ORDER.REC<CARD.IS.ISSUE.DATE>
            Y.EXP.DATE = Y.LATAM.CARD.ORDER.REC<CARD.IS.EXPIRY.DATE>
            Y.CARD.NO = Y.LATAM.CARD.ORDER.REC<CARD.IS.CARD.NUMBER>
            IF Y.CARD NE "" THEN
                Y.ACCOUNT = Y.LATAM.CARD.ORDER.REC<CARD.IS.ACCOUNT>
                GOSUB GET.AC.DET
                IF Y.OUT EQ "Y" THEN
                    RETURN
                END
            END
        END
    END

    Y.COURT.DATE.REQ = Y.YEAR:Y.MONTH:Y.DAY

    Y.SEL.AC.STMT.HANDOFF = "SELECT ":FN.AC.STMT.HANDOFF:" WITH @ID LIKE ":Y.ACCOUNT:".":Y.COURT.DATE.REQ:"..."
    CALL EB.READLIST(Y.SEL.AC.STMT.HANDOFF,Y.SEL.AC.STMT.HANDOFF.LIST,'',Y.SEL.AC.STMT.HANDOFF.LIST.NO,AC.STMT.HANDOFF.ERR)

    IF Y.SEL.AC.STMT.HANDOFF.LIST.NO EQ "1" THEN
        Y.AC.STMT.HANDOFF.ID = Y.SEL.AC.STMT.HANDOFF.LIST<Y.SEL.AC.STMT.HANDOFF.LIST.NO>
        CALL F.READ(FN.AC.STMT.HANDOFF,Y.AC.STMT.HANDOFF.ID,Y.AC.STMT.HANDOFF.REC,F.AC.STMT.HANDOFF,AC.STMT.HANDOFF.ERR)
        IF Y.AC.STMT.HANDOFF.REC THEN
            Y.BAL.START.MONTH = Y.AC.STMT.HANDOFF.REC<AC.STH.OPENING.BALANCE>
        END
    END

    GOSUB GET.LY.DET

    R.DATA := "1*":Y.ISSUE.DATE:"*":Y.CUST.NAME:"*":Y.EXP.DATE:"*":Y.CCY:"*":Y.CCY.DESC:"*"
    R.DATA := Y.BAL.START.MONTH:"*":Y.BAL.TO.DATE:"*":Y.BAL.RESERV:"*":Y.BAL.AVAIL:"*":Y.DEST.NAME:"*":Y.COURT.DATE:"*":Y.ACUM.INT:"*"
    R.DATA := Y.LOY.BAL.START:"*":Y.LOY.PTS.MONTH:"*":Y.LOY.PTS.USED.MONTH:"*":Y.LOY.PTS.TO.EXP:"*":Y.LOY.BAL.END:"*":Y.CARD.NO

RETURN

*----------
GET.AC.DET:
*----------

    R.ACCOUNT = ""; ACCOUNT.ERR = ""
    CALL F.READ(FN.ACCOUNT,Y.ACCOUNT,Y.ACCOUNT.REC,F.ACCOUNT,ACCOUNT.ERR)
    IF Y.ACCOUNT.REC THEN
        Y.CU.ID = Y.ACCOUNT.REC<AC.CUSTOMER>
        Y.DEST.NAME = Y.ACCOUNT.REC<AC.SHORT.TITLE>
        Y.BAL.AVAIL = Y.ACCOUNT.REC<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
        Y.LOCK.AMT = Y.ACCOUNT.REC<AC.LOCKED.AMOUNT>
        Y.TOT.LOCK.AMT = DCOUNT(Y.LOCK.AMT,@VM)
        Y.CNT = 1
        Y.BAL.RESERV = 0
        LOOP
        WHILE Y.CNT LE Y.TOT.LOCK.AMT
            Y.BAL.RESERV += FIELD(Y.LOCK.AMT,@VM,Y.CNT)
            Y.CNT += 1
        REPEAT
        CALL F.READ(FN.CUSTOMER,Y.CU.ID,Y.CUSTOMER.REC,F.CUSTOMER,CUSTOMER.ERR)
        IF Y.CUSTOMER.REC THEN
            Y.CUST.NAME = Y.CUSTOMER.REC<EB.CUS.NAME.1>
        END
        Y.CCY = Y.ACCOUNT.REC<AC.CURRENCY>
        CALL CACHE.READ(FN.CURRENCY, Y.CCY, Y.CURRENCY.REC, CURRENCY.ERR) ;*R22 Auto conversion
        IF Y.CURRENCY.REC THEN
            Y.CCY.DESC = Y.CURRENCY.REC<EB.CUR.CCY.NAME>
        END
        Y.BAL.TO.DATE = "N/A"
        Y.COURT.DATE = Y.ACCOUNT.REC<AC.OPENING.DATE>
        Y.DAY = Y.COURT.DATE[7,2]
    END ELSE
        Y.OUT = "Y"
        R.DATA = "2******************"
    END

RETURN

*----------
GET.LY.DET:
*----------

    R.REDO.LY.MASTERPRGDR = ""; MAST.ERR = ""
    CALL CACHE.READ(FN.REDO.LY.MASTERPRGDR,"SYSTEM",R.REDO.LY.MASTERPRGDR,MAST.ERR)
    IF R.REDO.LY.MASTERPRGDR THEN
        Y.LY.PRG = R.REDO.LY.MASTERPRGDR<REDO.MASPRG.MASTER.PRG>
    END

    PREV.MTH = Y.MONTH - 1
    IF PREV.MTH EQ 0 THEN
        PREV.MTH = 12
        PREV.YEAR = Y.YEAR - 1
    END ELSE
        PREV.MTH = FMT(PREV.MTH,'R%2')
        PREV.YEAR = Y.YEAR
    END

    NEXT.MTH = Y.MONTH + 1
    IF NEXT.MTH EQ 13 THEN
        NEXT.MTH = 1
        NEXT.YEAR = Y.YEAR + 1
    END ELSE
        NEXT.MTH = FMT(NEXT.MTH,'R%2')
        NEXT.YEAR = Y.YEAR
    END

    Y.LY.PROG.CUS.ID.PREV = Y.CU.ID:Y.LY.PRG:PREV.MTH:PREV.YEAR

    R.REDO.LY.POINTS.TOT = ""; LY.ERR = ""
    CALL F.READ(FN.REDO.LY.POINTS.TOT,Y.LY.PROG.CUS.ID.PREV,R.REDO.LY.POINTS.TOT,F.REDO.LY.POINTS.TOT,LY.ERR)
    IF R.REDO.LY.POINTS.TOT THEN
        Y.LOY.BAL.START = R.REDO.LY.POINTS.TOT<REDO.PT.T.TOT.GEN.POINTS>
    END

    Y.LY.PROG.CUS.ID = Y.CU.ID:Y.LY.PRG:Y.MONTH:Y.YEAR

    R.REDO.LY.POINTS.TOT = ""; LY.ERR = ""
    CALL F.READ(FN.REDO.LY.POINTS.TOT,Y.LY.PROG.CUS.ID,R.REDO.LY.POINTS.TOT,F.REDO.LY.POINTS.TOT,LY.ERR)
    IF R.REDO.LY.POINTS.TOT THEN
        Y.LOY.PTS.MONTH = R.REDO.LY.POINTS.TOT<REDO.PT.T.TOT.GEN.POINTS>
        Y.LOY.PTS.USED.MONTH = R.REDO.LY.POINTS.TOT<REDO.PT.T.TOT.USED.POINTS>
        GOSUB GET.PT.TO.DUE
        Y.LOY.BAL.END = R.REDO.LY.POINTS.TOT<REDO.PT.T.TOT.AVAIL.POINTS>
    END

RETURN

*-------------
GET.PT.TO.DUE:
*-------------

    Y.CONT.TOT.PT = 0
    Y.REDO.LY.PT = ''; LY.PT.ERR =''
    CALL F.READ(FN.REDO.LY.POINTS,Y.CU.ID,Y.REDO.LY.PT,F.REDO.LY.POINTS,LY.PT.ERR)
    Y.REC.ONE.TO.ONE = Y.REDO.LY.PT<REDO.PT.PROGRAM>
    TOT.PRG = ''
    TOT.PRG = DCOUNT(Y.REC.ONE.TO.ONE,@SM)
    TOT.REC = 1
    LOOP
    WHILE TOT.REC LE TOT.PRG DO
        Y.TEMP = Y.REDO.LY.PT<REDO.PT.PROGRAM,1,TOT.REC>
        IF Y.REDO.LY.PT<REDO.PT.PROGRAM,1,TOT.REC> EQ Y.LY.PRG THEN
            GOSUB GET.POINTS
        END
        TOT.REC += 1
    REPEAT

RETURN

*----------
GET.POINTS:
*----------

    Y.EXP.DATE = ''
    Y.EXP.DATE = Y.REDO.LY.PT<REDO.PT.EXP.DATE,1,TOT.REC>
    EXP.DATE.LIMIT = NEXT.YEAR:NEXT.MTH:"01"
    Y.INIT.MONTH = Y.YEAR:Y.MONTH:"01"
    IF Y.EXP.DATE GE Y.INIT.MONTH AND Y.EXP.DATE LT EXP.DATE.LIMIT THEN
        Y.LOY.PTS.TO.EXP += Y.REDO.LY.PT<REDO.PT.QUANTITY,1,TOT.REC>
    END

RETURN

END
