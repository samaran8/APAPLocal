* @ValidationCode : MjoxMTI0NjAyNTQ6Q3AxMjUyOjE2ODExMDM0NTI0NjM6SVRTUzotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 10 Apr 2023 10:40:52
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.AUTOMATIC.ORDER(Y.SR.SEL.LIST)
********************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: Swaminathan.S.R
* PROGRAM NAME: REDO.B.AUTOMATIC.ORDER
*------------------------------------------------------------------------------
*DESCRIPTION:This routine is COB routine to select all STOCK.REGISTER and to reorder automatically based on REORDER.LEVEL. Attach to D990 stage
*-------------------------------------------------------------------------------
*IN PARAMETER: NONE
*OUT PARAMETER: NONE
*LINKED WITH: REDO.B.AUTOMATIC.ORDER
*-----------------------
* Modification History :
*-----------------------
*DATE             WHO                    REFERENCE            DESCRIPTION
*31-07-2010    Swaminathan.S.R        ODR-2010-03-0400      INITIAL CREATION
*17 MAY 2010      JEEVA T             ODR-2010-03-0400      fix for PACS00036010
*20 MAY 2010      KAVITHA             PACS00024249          STOCK.REGISTER CONCEPT CHANGES MADE
*15 JUN 2011      KAVITHA             PACS00082440          PACS00082440 FIX
*12 MAR 2019   GOPALA KRISHNAN R      PACS00739965          ISSUE FIX
* Date                   who                   Reference              
* 10-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION VM TO @VM AND FM TO @FM AND ++ TO += 1
* 10-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*--------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_GTS.COMMON
    $INSERT I_BATCH.FILES
    $INSERT I_F.CARD.TYPE
    $INSERT I_REDO.B.AUTOMATIC.ORDER.COMMON
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.REDO.CARD.REORDER.DEST
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.PREEMBOSS.STOCK



    GOSUB PROCESS
RETURN

*---------
PROCESS:
*---------
*To reorder automatically based on REORDER.LEVEL

*PACS00036010-----
*    Y.SR.SEL.LIST = "CARD.":ID.COMPANY:"-":Y.RECEIVED.BRANCH
*PACS00036010-----


    Y.SR.SEL.LIST.ID = Y.SR.SEL.LIST
*    Y.SR.SEL.LIST = "CARD.":Y.SR.SEL.LIST:"-":Y.RECEIVED.BRANCH
    REDO.STOCK.REG.ID = "CARD.":Y.SR.SEL.LIST:"-":Y.RECEIVED.BRANCH   ;*PACS00739965
    Y.REORDER.LEVEL = ''
    Y.SERIES.BAL = ''
    Y.RECORD = ''
    R.STOCK.REGISTER = ''
    Y.LAST.WORKING.DAY = R.DATES(EB.DAT.LAST.WORKING.DAY)
*    CALL F.READ(FN.STOCK.REGISTER,Y.SR.SEL.LIST,R.STOCK.REGISTER,F.STOCK.REGISTER,Y.ERR.SR)

*    CALL F.READ(FN.REDO.CARD.REORDER.DEST,ID.COMPANY,R.REDO.CARD.REORDER.DEST,F.REDO.CARD.REORDER.DEST,Y.ER.REORDER)


    CALL F.READ(FN.REDO.CARD.REORDER.DEST,Y.SR.SEL.LIST.ID,R.REDO.CARD.REORDER.DEST,F.REDO.CARD.REORDER.DEST,Y.ER.REORDER)

*PACS00024249 -S

    SEL.PREEMB.CMD = "SELECT ":FN.REDO.PREEMBOSS.STOCK:" WITH @ID LIKE ":Y.SR.SEL.LIST.ID:"..."
    CALL EB.READLIST(SEL.PREEMB.CMD,SEL.PREEMB.LIST,'',NO.PREEMB.REC,PGM.ERR)


*PACS00024249 -E

    LOOP
        REMOVE Y.PREEMBOSS.ID FROM SEL.PREEMB.LIST SETTING PREEMB.POS
    WHILE Y.PREEMBOSS.ID:PREEMB.POS

        SERIES.ID = FIELD(Y.PREEMBOSS.ID,"-":,2)
        REQUEST.RAISE.FLAG = ''

        Y.OPTIONS = ''
* PACS00739965 - S
        SERIES.ID.POS = ''
*       CALL F.READU(FN.REDO.PREEMBOSS.STOCK,Y.PREEMBOSS.ID,R.REDO.PREEMBOSS.STOCK,F.REDO.PREEMBOSS.STOCK,PRE.ERROR,Y.OPTIONS)
*       Y.SERIES.BAL = R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL>
        CALL F.READU(FN.STOCK.REGISTER,REDO.STOCK.REG.ID,R.STOCK.REGISTER,F.STOCK.REGISTER,PRE.ERROR,Y.OPTIONS)
        Y.SERIES.BAL.NO = R.STOCK.REGISTER<STK.REG.SERIES.BAL>
        Y.SERIES.ID.NO = R.STOCK.REGISTER<STK.REG.SERIES.ID>
        CHANGE @VM TO @FM IN Y.SERIES.ID.NO
        LOCATE SERIES.ID IN Y.SERIES.ID.NO SETTING SERIES.ID.POS THEN
            Y.SERIES.BAL = R.STOCK.REGISTER<STK.REG.SERIES.BAL,SERIES.ID.POS>
        END

* PACS00739965 - E
        Y.REORDER.SERIES.TOT = R.REDO.CARD.REORDER.DEST<REDO.REORD.DEST.CARD.SERIES>

        Y.DES.CARDS = R.REDO.CARD.REORDER.DEST<REDO.REORD.DEST.CARD.TYPE>

        CHANGE @VM TO @FM IN Y.REORDER.SERIES.TOT

        LOCATE SERIES.ID IN Y.REORDER.SERIES.TOT SETTING SER.POS THEN
            Y.REORDER.LEVEL = R.REDO.CARD.REORDER.DEST<REDO.REORD.DEST.REORDER.LEVEL,SER.POS>
            Y.REORDER.QTY = R.REDO.CARD.REORDER.DEST<REDO.REORD.DEST.REORDER.QTY,SER.POS>
            Y.REORDER.CARD.TYPE = R.REDO.CARD.REORDER.DEST<REDO.REORD.DEST.CARD.TYPE,SER.POS>

            CALL F.READ(FN.CARD.TYPE,Y.REORDER.CARD.TYPE,R.CARD.TYPE,F.CARD.TYPE,Y.ERR.CT)
            Y.BIN = R.CARD.TYPE<CARD.TYPE.LOCAL.REF><1,Y.CT.BIN.POS>
            IF Y.REORDER.LEVEL NE '' AND Y.SERIES.BAL NE '' THEN
                IF Y.SERIES.BAL LE Y.REORDER.LEVEL THEN
                    GOSUB OFS.PROCESS
                END
            END
        END

        Y.CNT += 1

    REPEAT

    IF Y.RECORD THEN

        GOSUB POST.OFS.MSG

    END

RETURN

*------------
OFS.PROCESS:
*------------
*If SERIES.BAL of stock register is lesser than or equal to REORDER.LEVEL of REDO.CARD.REORDER.DEST than raise REDO.CARD.REQUEST

* Y.RECORD<REDO.CARD.REQ.AGENCY> = ID.COMPANY
    SEL.REQ.CMD = ''
    SEL.LIST.REQ = ''
    NO.REC.REQ = ''
    PGM.ERR.REQ = ''

    SEL.REQ.CMD = "SELECT ":FN.REDO.CARD.REQUEST:" WITH AGENCY EQ ":Y.SR.SEL.LIST.ID:" AND AUTO.REQUEST.FLAG EQ YES AND STATUS LT 6"
    CALL EB.READLIST(SEL.REQ.CMD,SEL.LIST.REQ,'',NO.REC.REQ,PGM.ERR.REQ)

    IF SEL.LIST.REQ NE "" THEN
        TOT.REQ.CNTR = DCOUNT(SEL.LIST.REQ,@FM)

        REQ.CNTR = 1
        LOOP
        WHILE REQ.CNTR LE TOT.REQ.CNTR
            FETCH.REQ.ID = SEL.LIST.REQ<REQ.CNTR>
            CALL F.READ(FN.REDO.CARD.REQUEST,FETCH.REQ.ID,R.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST,REQ.ERR)
            FETCH.REQ.SERIES = R.REDO.CARD.REQUEST<REDO.CARD.REQ.CARD.SERIES.ID>
            FETCH.REQ.QTY = R.REDO.CARD.REQUEST<REDO.CARD.REQ.BRANCH.ORDERQTY>
            CHANGE @VM TO @FM IN FETCH.REQ.SERIES
            CHANGE @VM TO @FM IN FETCH.REQ.QTY
            LOCATE SERIES.ID IN FETCH.REQ.SERIES SETTING AVAIL.POS THEN
                GET.BRANCH.QTY = FETCH.REQ.QTY<AVAIL.POS>
                IF GET.BRANCH.QTY EQ Y.REORDER.QTY THEN
                    REQUEST.RAISE.FLAG = "YES"
                END
            END
            REQ.CNTR += 1
        REPEAT
    END

    IF REQUEST.RAISE.FLAG NE "YES" THEN
        Y.RECORD<REDO.CARD.REQ.AGENCY> = Y.SR.SEL.LIST.ID
        Y.RECORD<REDO.CARD.REQ.CARD.TYPE,-1> = Y.REORDER.CARD.TYPE
        Y.RECORD<REDO.CARD.REQ.BIN,-1> = Y.BIN
        Y.RECORD<REDO.CARD.REQ.CARD.SERIES.ID,-1> = SERIES.ID
        Y.RECORD<REDO.CARD.REQ.BRANCH.ORDERQTY,-1> = Y.REORDER.QTY
        Y.RECORD<REDO.CARD.REQ.STATUS> = "1"
        Y.RECORD<REDO.CARD.REQ.AUTO.REQUEST.FLAG> = "YES"
        Y.REORDER.LEVEL = '' ; Y.SERIES.BAL = '' ; Y.REORDER.QTY = '' ; Y.REORDER.CARD.TYPE = ''
    END

RETURN
*------------------------------------------------------------------------------
POST.OFS.MSG:
*-------------
*Processing ofs for REDO.CARD.REQUEST

    Y.RECORD<REDO.CARD.REQ.DATE> = Y.LAST.WORKING.DAY
    Y.OFSVERSION = "REDO.CARD.REQUEST,PRE.EMBOSS1"
    Y.APP.NAME =  "REDO.CARD.REQUEST"
    Y.OFSFUNCT = 'I'
    Y.PROCESS = "PROCESS"
    Y.GTSMODE = ""
    Y.NO.OF.AUTH = "0"
    Y.TRANSACTION.ID = ""
    Y.OFSRECORD = ""

    CALL OFS.BUILD.RECORD(Y.APP.NAME,Y.OFSFUNCT,Y.PROCESS,Y.OFSVERSION,Y.GTSMODE,Y.NO.OF.AUTH,Y.TRANSACTION.ID,Y.RECORD,Y.OFSRECORD)

    OFS.REQ.MSG = Y.OFSRECORD
    Y.MSG.KEY = ""
    Y.OFS.SOURCE.ID = "DEBIT.CARD"
    Y.OPTIONS = ""

    TOTAL.COMM.CNTR1 = DCOUNT(OFS.REQ.MSG,",")

    MODIFY.PART1 = FIELD(OFS.REQ.MSG,",",3,1)
    TOT.MODIFY.CNT1 = DCOUNT(MODIFY.PART1,"/")

    MODIFY.CO.CODE1 = FIELD(MODIFY.PART1,"/",3,1)
*    MODIFY.CO.CODE1 = AGENCY
    MODIFY.CO.CODE1 = Y.SR.SEL.LIST.ID
    MODIFY.CO.CODE1 = MODIFY.CO.CODE1:"/"

    FIRST.MOD.PART1 = FIELD(MODIFY.PART1,"/",1,2)
    FIRST.MOD.PART1 = FIRST.MOD.PART1:"/"

    REST.MOD.PART1 =  FIELD(MODIFY.PART1,"/",4,TOT.MODIFY.CNT1)
    NEW.MODIFY.PART1 = FIRST.MOD.PART1:MODIFY.CO.CODE1:REST.MOD.PART1
    NEW.MODIFY.PART1 = NEW.MODIFY.PART1:","

    FIRST.PART1 = FIELD(OFS.REQ.MSG,",",1,2)
    FIRST.PART1 = FIRST.PART1:","

    REST.PART1 = FIELD(OFS.REQ.MSG,",",4,TOTAL.COMM.CNTR1)

    Y.FINAL.MSG1 = FIRST.PART1:NEW.MODIFY.PART1:REST.PART1


    CALL OFS.POST.MESSAGE(Y.FINAL.MSG1,Y.MSG.KEY,Y.OFS.SOURCE.ID,Y.OPTIONS)

RETURN

END
