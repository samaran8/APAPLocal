* @ValidationCode : MjoxNTcxMDY3OTU3OkNwMTI1MjoxNjgyNjU3OTcxMDYxOklUU1M6LTE6LTE6MDowOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 28 Apr 2023 10:29:31
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
*-----------------------------------------------------------------------------
* <Rating>-32</Rating>
*-----------------------------------------------------------------------------
SUBROUTINE REDO.B.CLEAR.CHQ(Y.CLEAR.OUTWARD.ID)
*--------------------------------------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.B.CLEAR.CHQ
*--------------------------------------------------------------------------------------------------------
*Description  :
*
*Linked With  : Main routine batch BNK/REDO.B.CLEAR.CHQ
*In Parameter : N/A
*Out Parameter: N/A
*--------------------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 23 Nov 2010    Mohammed Anies K      ODR-2010-09-0251       Initial Creation
* 14 Nov 2011    Prabhu                 PACS00149089          Modification with ALE req for Garnishment
* Date                  who                   Reference              
* 28-04-2023         CONVERSTION TOOL      R22 AUTO CONVERSTION - No Change
* 28-04-2023          ANIL KUMAR B         R22 MANUAL CONVERSTION - ADD @ FOR FM AND VM
*--------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_BATCH.FILES
    $INSERT I_F.REDO.CLEARING.OUTWARD
    $INSERT I_REDO.B.CLEAR.CHQ.COMMON
    $INSERT I_F.REDO.INTRANSIT.LOCK
    $INSERT I_F.AC.LOCKED.EVENTS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AZ.ACCOUNT
    $INSERT I_F.REDO.TFS.PROCESS
    $INSERT I_F.REDO.GAR.LOCK.ALE
    $INSERT I_F.REDO.INTRANSIT.CHQ
    $INSERT I_F.T24.FUND.SERVICES
*--------------------------------------------------------------------------------------------------------
**********
MAIN.PARA:
**********


    R.REDO.CLEARING.OUTWARD = ''

    REDO.CLEARING.OUTWARD.ERR = ''

    Y.RET = ''
    CALL F.READU(FN.REDO.CLEARING.OUTWARD,Y.CLEAR.OUTWARD.ID,R.REDO.CLEARING.OUTWARD,F.REDO.CLEARING.OUTWARD,REDO.CLEARING.OUTWARD.ERR,Y.RET)
    IF R.REDO.CLEARING.OUTWARD THEN
        R.REDO.CLEARING.OUTWARD<CLEAR.OUT.CHQ.STATUS> = 'CLEARED'
        R.REDO.CLEARING.OUTWARD<CLEAR.OUT.BATCH.RELEASED> = "Y"
        TFS.REFERENCE = R.REDO.CLEARING.OUTWARD<CLEAR.OUT.TFS.REFERENCE>
        GOSUB CHECK.AZ.TRANSIT
        CHQ.AMOUNT = R.REDO.CLEARING.OUTWARD<CLEAR.OUT.AMOUNT>
        ACCT.ID = R.REDO.CLEARING.OUTWARD<CLEAR.OUT.ACCOUNT>
    END

    TEMP.V = V
    V = CLEAR.OUT.AUDIT.DATE.TIME
    CALL F.LIVE.WRITE(FN.REDO.CLEARING.OUTWARD,Y.CLEAR.OUTWARD.ID,R.REDO.CLEARING.OUTWARD)
    V = TEMP.V

    CALL F.READ(FN.REDO.TRANSIT.LOCK,ACCT.ID,R.REDO.TRANSIT.LOCK,F.REDO.TRANSIT.LOCK,ERR)
    IF R.REDO.TRANSIT.LOCK THEN
        GOSUB REMOVE.TRANSIT.LOCK

        TOTAL.CNTR = DCOUNT(R.REDO.TRANSIT.LOCK,@FM) ;*R22 MANUAL CONVERSTION added @ for FM

        IF TOTAL.CNTR GT 0 THEN
            CALL F.WRITE(FN.REDO.TRANSIT.LOCK,ACCT.ID,R.REDO.TRANSIT.LOCK)
        END ELSE
            CALL F.DELETE(FN.REDO.TRANSIT.LOCK,ACCT.ID)
        END

    END

    CALL F.READ(FN.ACCOUNT,ACCT.ID,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
*PACS00149089  ------START------------------------------------------------
    IF R.ACCOUNT THEN
        Y.CUSTOMER=R.ACCOUNT<AC.CUSTOMER>
    END

    CALL F.READ(FN.REDO.GAR.LOCK.ALE,Y.CUSTOMER,R.REDO.GAR.LOCK.ALE,F.REDO.GAR.LOCK.ALE,ERR)
    IF R.REDO.GAR.LOCK.ALE THEN
        Y.RGO.ID.LIST=R.REDO.GAR.LOCK.ALE<TT.ALE.OUT.CLEAR.ID>
    END
    Y.CUSTOMER.LIST=R.ACCOUNT<AC.JOINT.HOLDER>
    Y.CUSTOMER.TOT=DCOUNT(Y.CUSTOMER.LIST,@VM) ;*R22 MANUAL CONVERSTION added @ for VM
    Y.CUSTOMER.CNT=1
    LOOP
    WHILE Y.CUSTOMER.CNT LE Y.CUSTOMER.TOT
        Y.CUSTOMER=Y.CUSTOMER.LIST<Y.CUSTOMER.CNT>
        CALL F.READ(FN.REDO.GAR.LOCK.ALE,Y.CUSTOMER,R.REDO.GAR.LOCK.ALE,F.REDO.GAR.LOCK.ALE,ERR)
        IF R.REDO.GAR.LOCK.ALE THEN
            Y.RGO.ID.LIST<-1>=R.REDO.GAR.LOCK.ALE<TT.ALE.OUT.CLEAR.ID>
        END
        Y.CUSTOMER.CNT++
    REPEAT

    CHANGE @VM TO @FM IN Y.RGO.ID.LIST  ;*R22 MANUAL CONVERSTION added @
*LOCATE Y.CLEAR.OUTWARD.ID IN Y.RGO.ID.LIST SETTING Y.CLEAR.OUT.POS ELSE
*R.ACCOUNT<AC.LOCAL.REF,L.TRAN.AVAIL.POS> = R.ACCOUNT<AC.LOCAL.REF,L.TRAN.AVAIL.POS> - CHQ.AMOUNT
*CALL F.WRITE(FN.ACCOUNT,ACCT.ID,R.ACCOUNT)
*END
*PACS00149089  ------END---------------------------------------------


    CALL F.READ(FN.REDO.INTRANSIT.CHQ,ACCT.ID,R.REDO.INTRANSIT.CHQ,F.REDO.INTRANSIT.CHQ,CHQ.TR.ERR)
    IF R.REDO.INTRANSIT.CHQ THEN
        GET.CLEAR.IDS = R.REDO.INTRANSIT.CHQ<TRAN.CHQ.CLEAR.OUT.ID>
    END

    CHANGE @VM TO @FM IN GET.CLEAR.IDS   ;*R22 MANUAL CONVERSTION added @

    LOCATE Y.CLEAR.OUTWARD.ID IN GET.CLEAR.IDS SETTING LOC.POS THEN
        DEL R.REDO.INTRANSIT.CHQ<TRAN.CHQ.CLEAR.OUT.ID,LOC.POS>
        DEL R.REDO.INTRANSIT.CHQ<TRAN.CHQ.TFS.REFERENCE,LOC.POS>
        DEL R.REDO.INTRANSIT.CHQ<TRAN.CHQ.CHQ.NUMBER,LOC.POS>
        DEL R.REDO.INTRANSIT.CHQ<TRAN.CHQ.CHQ.AMOUNT,LOC.POS>
        DEL R.REDO.INTRANSIT.CHQ<TRAN.CHQ.EXPOSURE.DATE,LOC.POS>
        DEL R.REDO.INTRANSIT.CHQ<TRAN.CHQ.UTILISED.AMT,LOC.POS>
    END

    CALL F.WRITE(FN.REDO.INTRANSIT.CHQ,ACCT.ID,R.REDO.INTRANSIT.CHQ)

RETURN
*-----------------------------------
FORM.OFS.RECORD:
    Y.ALE.LOCK.ID=GET.CURR.ID
    R.ALE.LOCK.MODIFY = ''
    APP.NAME = 'AC.LOCKED.EVENTS'
    OFSFUNCT = 'R'
    PROCESS  = 'PROCESS'
    OFSVERSION = 'AC.LOCKED.EVENTS,REDO'
    GTSMODE = ''
    NO.OF.AUTH = '0'
    TRANSACTION.ID = Y.ALE.LOCK.ID
    OFS.MSG.ID =''
    OFS.SOURCE.ID = 'REDO.OFS.ACI.UPDATE'
    OFS.ERR = ''
    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCT,PROCESS,OFSVERSION,GTSMODE,NO.OF.AUTH,TRANSACTION.ID,R.ALE.LOCK.MODIFY,OFSRECORD)
    CALL OFS.POST.MESSAGE(OFSRECORD,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)

RETURN
*--------------
REMOVE.TRANSIT.LOCK:

    LOOP.CNTR = 1
    LOOP.TOTAL.CNTR = DCOUNT(R.REDO.TRANSIT.LOCK,@FM)  ;*R22 MANUAL CONVERSTION added @
    Y.CHECK = BATCH.INFO<1>
    LOOP
    WHILE LOOP.CNTR LE LOOP.TOTAL.CNTR
        GET.CURR.ID = R.REDO.TRANSIT.LOCK<LOOP.CNTR>
        CALL F.READ(FN.ALE,GET.CURR.ID,R.ALE,F.ALE,ALE.ERR)
        DESCRIPTION = R.ALE<AC.LCK.DESCRIPTION>
        IF (DESCRIPTION EQ Y.CLEAR.OUTWARD.ID ) OR (DESCRIPTION EQ TFS.REFERENCE ) THEN
            IF Y.CHECK EQ 'BNK/REDO.B.CLEAR.CHQ.ONLINE' THEN
                GOSUB FORM.OFS.RECORD
            END ELSE
                DEL R.REDO.TRANSIT.LOCK<LOOP.CNTR>
            END
        END

        LOOP.CNTR = LOOP.CNTR + 1

    REPEAT

RETURN

*-----------------
CHECK.AZ.TRANSIT:

    CALL F.READ(FN.TFS,TFS.REFERENCE,R.TFS,F.TFS,TFS.ERR)

    VAR.TT.PROCESS = R.TFS<TFS.LOCAL.REF,POS.TT.PROCESS>

    CALL F.READ(FN.REDO.TFS.PROCESS,VAR.TT.PROCESS,R.TFS.PROCESS,F.REDO.TFS.PROCESS,TFS.PROC.ERR)

    IF R.TFS.PROCESS THEN
        VAR.AZ.ACCOUNT = R.TFS.PROCESS<TFS.PRO.PRIMARY.ACCT>
        CALL F.READ(FN.AZ.ACCOUNT,VAR.AZ.ACCOUNT,R.AZ.ACCOUNT,F.AZ.ACCOUNT,AZ.ERR)
        IF R.AZ.ACCOUNT THEN
            R.AZ.ACCOUNT<AZ.LOCAL.REF,POS.IN.TRANSIT> = ''
            CALL F.WRITE(FN.AZ.ACCOUNT,VAR.AZ.ACCOUNT,R.AZ.ACCOUNT)
*      CALL REDO.AZ.WRITE.TRACE("REDO.B.CLEAR.CHQ",VAR.AZ.ACCOUNT)
        END

    END


RETURN
*-----------------

END
