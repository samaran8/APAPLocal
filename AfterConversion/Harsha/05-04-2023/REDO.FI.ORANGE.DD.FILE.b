* @ValidationCode : MjotMjEwMzQ5NTIyMjpDcDEyNTI6MTY4MDYwODE1Nzg4NDpJVFNTOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 04 Apr 2023 17:05:57
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOFCFI
SUBROUTINE REDO.FI.ORANGE.DD.FILE(IN.DIR,OUT.ERRO)
******************************************************************************
*     Format Validation Routine for ORANGE file
*     IN.DIR         INPUT          DIR POINTER
*     OUT.ERRO        OUTPUT         ERROR CODE
* =============================================================================
*
*    First Release : R09
*    Developed for : APAP
*    Developed by  : AVELASCO
*    Date          : 2010/Oct/26
*
*=======================================================================
* Modifications:
* 01/02/2012 - avelasco@temenos.com
*              APAP C18 :
* Modifications:
* 20/05/2012 - cherrera@temenos.com
*              Some APAP issues about report format and FT validations
*  DATE             WHO                   REFERENCE                  
* 05-APRIL-2023      Conversion Tool       R22 Auto Conversion - VM to @VM , F.READ to CACHE.READ , FM to @FM , = to EQ and -- to -=1
* 05-APRIL-2023      Harsha                R22 Manual Conversion - Added APAP.REDOFCFI to CALL
*=======================================================================

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_GTS.COMMON
*
    $INSERT I_REDO.FI.VARIABLES.COMMON
    $INSERT I_F.REDO.FI.CONTROL
    $INSERT I_F.REDO.INTERFACE.PARAM
    $INSERT I_F.REDO.APAP.PARAM.EMAIL
    $INSERT I_F.REDO.ISSUE.EMAIL
    $INSERT I_F.FT.COMMISSION.TYPE
    $INSERT I_F.FT.CHARGE.TYPE
    $INSERT I_F.FT.TXN.TYPE.CONDITION
    $INSERT I_F.REDO.TEMP.FI.CONTROL
    $INSERT I_F.REDO.NOMINA.DET
*
*
**************************************************************************
*

    GOSUB INITIALISE
    GOSUB OPEN.FILES

    GOSUB CHECK.PRELIM.CONDITIONS


    IF PROCESS.GOAHEAD THEN
        GOSUB PROCESS
    END ELSE
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.STATUS>  = "CARGA FALLIDA"
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.STAT.D>  = Y.ERR.MSG
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORDS.OK> = 0
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.AMOUNT.PROC.OK> = 0
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.PROC> = 0
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.AMOUNT.PROC>     = 0
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORDS.FAIL> = 0
        FI.W.REDO.FI.CONTROL<REDO.FI.CON.AMOUNT.PROC.FAIL>  = 0
    END

    O.ERROR.MSG = ""
    OUT.ERRO =""
    I.VAR = ""
*
    IF Y.ERR.MSG NE "" THEN
        O.ERROR.MSG = Y.ERR.MSG
        I.VAR           = ""
        OUT.ERRO    = Y.ERR.MSG
    END
    CALL APAP.REDOFCFI.REDO.FI.RECORD.CONTROL(O.ERROR.MSG)   ;*R22 Manual Conversion - Added APAP.REDOFCFI
    IF Y.ERR.MSG THEN
        GOSUB MAIL.GENERATION
    END
*
RETURN
*---------------
MAIL.GENERATION:
*---------------

    Y.TRANS.DATE = TODAY
    Y.TRANS.TIME = OCONV(TIME(), "MT")
    CHANGE ":" TO '' IN Y.TRANS.TIME
    Y.UNIQUE.ID    = FI.W.REDO.FI.CONTROL.ID:"_":Y.TRANS.DATE:"_":Y.TRANS.TIME
    Y.REQUEST.FILE = Y.UNIQUE.ID:'.TXT'
    Y.ATTACH.FILENAME = 'ATTACHMENT':'_':Y.UNIQUE.ID:'.TXT'
    R.RECORD1         = ''
    Y.REF.FILE.NAME   =  'ORANGE STATUS'
    CALL APAP.REDOFCFI.REDO.FI.MAIL.FORMAT.GEN(FI.W.REDO.FI.CONTROL.ID,Y.MAIL.DESCRIPTION)   ;*R22 Manual Conversion - Added APAP.REDOFCFI
    R.RECORD1 = Y.FROM.MAIL.ADD.VAL:"#":Y.TO.MAIL.VALUE:'#':Y.REF.FILE.NAME:'#':Y.REF.FILE.NAME
    IF Y.MAIL.MSG THEN
        WRITE Y.MAIL.DESCRIPTION TO F.HRMS.ATTACH.FILE,Y.ATTACH.FILENAME
    END ELSE
        WRITE X.DETAIL TO F.HRMS.ATTACH.FILE,Y.ATTACH.FILENAME
    END
    WRITE R.RECORD1 TO F.HRMS.DET.FILE,Y.REQUEST.FILE

RETURN
* ======
PROCESS:
* ======


    IF PROCESS.GOAHEAD THEN
        GOSUB VALIDATE.PROCESS
    END
    IF PROCESS.GOAHEAD THEN
        GOSUB ADD.FIELDS
    END
*
RETURN
*
* ===============
VALIDATE.PROCESS:
* ===============
*
    Y.VAIL.FUNDS = FI.REDO.INTERFACE.PARAM<REDO.INT.PARAM.FI.AUT.AVAIL.FUNDS>


    IF FI.COMM.PROC.TYPE.FLAG EQ "M" OR (FI.COMM.PROC.TYPE.FLAG EQ "A" AND Y.VAIL.FUNDS EQ "SI") THEN
        Y.DEST.PATH = Y.PATH.WORK
    END ELSE
        Y.DEST.PATH = Y.PATH.OFS
    END

    IF Y.DEST.PATH EQ "" THEN
        GOSUB PROCESS.COPY
        Y.ERR.MSG = "EB-ERROR.NO.DIR"
        GOSUB CONTROL.MSG.ERROR
    END
*
RETURN
*
*==========
ADD.FIELDS:
* =========
*

    Y.LEN       = LEN(FI.FILE.ID)
    Y.NAME      = SUBSTRINGS (FI.FILE.ID,1, Y.LEN - 4)
    FI.FILE.NEW = Y.NAME:".txt"
    GOSUB A300.GENERATE.FILES
*
    X.CMD = "DELETE ":FI.WORK.DIR:" ":FI.FILE.ID
    DELETE.ERR = ''
    GOSUB EXECUTE.DELETE
    IF DELETE.ERR NE "" THEN
        Y.ERR.MSG ="EB-ERROR.FAILED.DELETE"
        GOSUB CONTROL.MSG.ERROR
    END
*
RETURN
*
* ===========
PROCESS.COPY:
*============
*
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.STATUS>  = "FALLIDO"
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.STAT.D>  = Y.ERR.MSG
    Y.DEST.PATH = Y.PATH.REJ
    FI.FILE.NEW = FI.FILE.ID
    GOSUB VALIDATE.TXT
    Y.CMD = "COPY FROM ":FI.WORK.DIR:" TO ":Y.DEST.PATH:" ":FI.FILE.ID:", ":FI.FILE.NEW

    COPY.ERR =""
    GOSUB EXECUTE.COPY
    IF COPY.ERR NE "" THEN
        Y.ERR.MSG = "EB-ERROR.FAILED.COPY " : COPY.ERR
        GOSUB CONTROL.MSG.ERROR
    END
    X.CMD = "DELETE ":FI.WORK.DIR:" ":FI.FILE.ID

    DELETE.ERR = ''
    GOSUB EXECUTE.DELETE
    IF DELETE.ERR NE "" THEN
        Y.ERR.MSG = "EB-ERROR.FAILED.DELETE " : COPY.ERR
        GOSUB CONTROL.MSG.ERROR
    END
*
RETURN
*
*=========
VALIDATE.TXT:
* ===========
*
    Y.LEN =LEN(FI.FILE.ID)
    Y.CHAR = SUBSTRINGS (FI.FILE.ID,Y.LEN - 3 , 4)

    IF Y.CHAR EQ ".txt" OR Y.CHAR EQ ".TXT" THEN
        FI.FILE.NEW = FI.FILE.ID
    END ELSE
        Y.NAME = SUBSTRINGS (FI.FILE.ID,1, Y.LEN - 4)
        FI.FILE.NEW = Y.NAME:".txt"
    END

RETURN
*
*=========
EXECUTE.COPY:
* ===========
*
    EXECUTE Y.CMD RETURNING Y.RET CAPTURING Y.CAP
    Y.RES.POS = 1
    IF OFS$BROWSER EQ 1 THEN
        Y.RES.POS = 2
    END
    IF Y.RET<Y.RES.POS,2> NE 1 THEN
        COPY.ERR = Y.CAP
        RETURN
    END

RETURN
*
*==========
EXECUTE.DELETE:
* =============
*
    EXECUTE X.CMD RETURNING X.RET CAPTURING X.CAP
    X.RES.POS = 1
    IF OFS$BROWSER EQ 1 THEN
        X.RES.POS = 2
    END
    IF X.RET<X.RES.POS,2> NE 1 THEN
        DELETE.ERR = X.CAP
        RETURN
    END

RETURN
*
* ==================
A300.GENERATE.FILES:
* ==================
*

    OPENSEQ FI.WORK.DIR,FI.FILE.ID TO F.POINTER ELSE
        Y.ERR.MSG = "EB-ERROR.OPEN.FILE"
        GOSUB CONTROL.MSG.ERROR
    END
    END.OF.FILE    = 0
    WRECORD.NUMBER = 0
    W.REC.FT.ERR = 0
    W.REC.FT.OK  = 0
    W.TOT.FT.OK  = 0
    W.TOT.FT.ERR = 0
    W.TOT.FILE.AMT  = Y.AMOUNT.TRANS

*Debit for customer account
    Y.PRESENT.CNT=1
    LOOP
        READSEQ X.DETAIL FROM F.POINTER ELSE END.OF.FILE =1
    WHILE NOT(END.OF.FILE)
        X.DET = SUBSTRINGS (X.DETAIL,1,2)
        IF X.DET EQ "02" THEN
            X.CUENTA = SUBSTRINGS(X.DETAIL,23,20)
            GOSUB FORMAT.ACCOUNT
            GOSUB PROCESS.DEBIT.CREDIT
            Y.PRESENT.CNT += 1
        END

    REPEAT
    CALL F.WRITE(FN.REDO.NOMINA.TEMP,FI.W.REDO.FI.CONTROL.ID,R.REDO.NOMINA.TEMP)
    CALL F.WRITE(FN.REDO.NOMINA.DET,FI.W.REDO.FI.CONTROL.ID,R.REDO.NOMINA.DET)
    CLOSESEQ F.POINTER
*
RETURN
*-----------
PROCESS.DEBIT.CREDIT:

    X.DET = X.DET:",":SUBSTRINGS(X.DETAIL,3,20):",":Y.CUENTA:",":SUBSTRINGS (X.DETAIL,43,2):",":SUBSTRINGS (X.DETAIL,45,11):",":SUBSTRINGS (X.DETAIL,56,8):",":SUBSTRINGS (X.DETAIL,64,10):",":SUBSTRINGS (X.DETAIL,74,6):",":SUBSTRINGS (X.DETAIL,80,2):",":SUBSTRINGS (X.DETAIL,82,2):",":SUBSTRINGS (X.DETAIL,84,7)
    WRECORD.NUMBER +=1
    X.SIGN="-"
    X.CURRENCY ="DOP"
    Y.IN.MSG = X.DET:",":X.SIGN:",":X.CURRENCY

    X.TRANS.REFERENCE = FI.W.REDO.FI.CONTROL.ID:".":WRECORD.NUMBER
    X.THEIR.REFERENCE = FI.W.REDO.FI.CONTROL.ID:".":WRECORD.NUMBER
    X.OUR.REFERENCE   = FI.W.REDO.FI.CONTROL.ID:".":WRECORD.NUMBER

    N.DETAIL = Y.IN.MSG:",":X.TRANS.REFERENCE:",":X.THEIR.REFERENCE:",":X.OUR.REFERENCE:",":WRECORD.NUMBER
    N.DETAIL = WRECORD.NUMBER:",":X.CURRENCY:",":N.DETAIL

* CALL REDO.FI.MSG.FORMAT(FI.INTERFACE,N.DETAIL,DATO.OUT)

    CALL APAP.REDOFCFI.REDO.FI.PREFORMAT.MSG(FI.INTERFACE,"D",N.DETAIL,OUT.MSG,Y.ERR.MSG)   ;*R22 Manual Conversion - Added APAP.REDOFCFI

    IF Y.ERR.MSG NE "" THEN
        W.STATUS = "04"
        W.ERROR.MSG = Y.ERR.MSG
    END

    DATO.OUT = OUT.MSG

    R.PARAM<1> = "NULL"
    R.PARAM<2> = "N"
    R.PARAM<3> = FIELD(DATO.OUT,"@",6)    ;* Amount
    R.PARAM<4> = Y.NAME
    R.PARAM<5> = FI.INTERFACE
    R.PARAM<6> = FIELD(DATO.OUT,"@",5)
    R.PARAM<7> = FIELD(DATO.OUT,"@",6)
    R.PARAM<8> = X.CURRENCY
    R.PARAM<9> = FI.W.REDO.FI.CONTROL.ID
    R.PARAM<10> = "N"
    R.PARAM<11> = FI.CTA.INTERMEDIA
    R.PARAM<12> = "ORANGE"
    R.PARAM<13> = CR.TXN.CODE
    GOSUB FT.PROCESS
RETURN

*----------
FT.PROCESS:
*----------
*    OUT.RESP = ''
*    OUT.RESP<1> = ''


    Y.TEMP.ID=TODAY:FI.FILE.ID:STR("0",(5-LEN(Y.PRESENT.CNT))):Y.PRESENT.CNT
    CHANGE @FM TO @VM IN R.PARAM
    R.REDO.TEMP.FI.CONTROL<FI.TEMP.PARAM.VAL> =R.PARAM
    R.REDO.TEMP.FI.CONTROL<FI.TEMP.STATUS>    =''
    R.REDO.TEMP.FI.CONTROL<FI.TEMP.MAIL.MSG>  =Y.IN.MSG
    R.REDO.TEMP.FI.CONTROL<FI.TEMP.INTER.TYPE>='ORANGE'
    CALL F.WRITE(FN.REDO.TEMP.FI.CONTROL,Y.TEMP.ID,R.REDO.TEMP.FI.CONTROL)
    R.REDO.NOMINA.TEMP<-1>=Y.TEMP.ID

RETURN
*----------
GENERATE.ID:

    FN.RFC= "F.REDO.FI.CONTROL"
    F.RFC = ""
    SEL.LIST = ''
    RET.CODE = ''
    F.KEY =FI.INTERFACE:".":Y.SYSTEM.DATE ;*this defines interface type and date

    CALL OPF (FN.RFC,F.RFC)

    SEL.CMD  = "SELECT ":FN.RFC
    SEL.CMD := " WITH @ID LIKE '":F.KEY:"...'"

    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)
    POS.BI = ""
    F.SEQ  = 0
    IF NO.OF.REC GT 0 THEN
        F.SEQ = NO.OF.REC + 1
        IF F.SEQ LT 10 THEN
            F.SEQ ="0":F.SEQ
        END
    END ELSE
        F.SEQ ="01"
    END
    FI.W.REDO.FI.CONTROL.ID  = F.KEY:".":F.SEQ

RETURN
*
* ==========================
B100.VALIDATE.HEADER.FIELDS:
* ==========================
*
* VALIDATE HEADER FIELD TYPE.RECORD
    IF Y.TYPE.RECORD NE "01" THEN
        Y.ERR.MSG = "EB-ERROR.TYPE.RECORD"
        GOSUB PROCESS.COPY
        PROCESS.GOAHEAD = 0
    END

* VALIDATE HEADER FIELD BANK.ID
    IF Y.BANK.ID NE "APAP    " AND PROCESS.GOAHEAD THEN
        Y.ERR.MSG = "EB-ERROR.BANK.ID"
        GOSUB PROCESS.COPY
        PROCESS.GOAHEAD = 0
    END

* VALIDATE HEADER FIELD COUNT.TRANSACTIONS
    IF Y.COUNT.TRANS LT 1 AND PROCESS.GOAHEAD THEN
        Y.ERR.MSG = "EB-ERROR.COUNT.TRANS.CERO"
        GOSUB PROCESS.COPY
        PROCESS.GOAHEAD = 0
    END

* VALIDATE HEADER FIELD AMOUNT.TRANSACTIONS
    IF  Y.AMOUNT.TRANS LE 0 AND PROCESS.GOAHEAD  THEN
        Y.ERR.MSG = "EB-ERROR.AMOUNT.TRANS.CERO"
        GOSUB PROCESS.COPY
        PROCESS.GOAHEAD = 0
    END

* VALIDATE HEADER FIELD DATE.FILE
    IF Y.DATE.FILE NE Y.SYSTEM.DATE AND PROCESS.GOAHEAD THEN
        Y.ERR.MSG = "EB-ERROR.DATE.FILE"
        GOSUB PROCESS.COPY
        PROCESS.GOAHEAD = 0
    END

* VALIDATE HEADER FIELD BATCH.NUMBER
*   IF Y.BATCH.NUMBER NE "          " AND PROCESS.GOAHEAD THEN
*       Y.ERR.MSG = "EB-ERROR.BATCH.NUMBER"
*       GOSUB PROCESS.COPY
*       PROCESS.GOAHEAD = 0
*   END
*
RETURN
*
* ===================
B120.VALIDATE.TOTALS:
* ===================
*

    END.OF.FILE = 0
    LOOP
        READSEQ X.DETAIL FROM F.POINTER ELSE END.OF.FILE = 1
    WHILE NOT (END.OF.FILE)
        X.TYPE.RECORD  = SUBSTRINGS(X.DETAIL,1,2)

        IF X.TYPE.RECORD EQ "02" THEN
            GOSUB PROCESS.DETAIL.RECORD
        END ELSE

            END.OF.FILE = 1
            Y.ERR.MSG = "EB-ERROR.DETAIL.RECORD"
            GOSUB PROCESS.COPY
        END
    REPEAT
    CLOSESEQ F.POINTER
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.CALC>  = X.COUNT.RECORDS
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.AMOUNT.CALC>  = X.TOTAL.AMOUNT
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.FILE>  = Y.COUNT.TRANS
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.AMOUNT.FILE>  = Y.AMOUNT.TRANS


    IF Y.COUNT.TRANS NE X.COUNT.RECORDS THEN
        Y.ERR.MSG = "EB-ERROR.COUNT.TRANS.NO.MATCH"
        GOSUB PROCESS.COPY
    END
    IF  Y.AMOUNT.TRANS NE X.TOTAL.AMOUNT THEN
        Y.ERR.MSG = "EB-ERROR.TOTAL.TRANS.NO.MATCH"
        GOSUB PROCESS.COPY
    END
*
RETURN
*
* ---------
INITIALISE:
* ---------
*
    FI.W.REDO.FI.CONTROL = ''   ;*defines REDO.FI.CONTROL variable
    PROCESS.GOAHEAD      = 1
    Y.ERR                = ""
    Y.ERR.MSG            = ""
    OUT.MSG              = ""
    Y.STT.REC            = "PROCESADO"
    X.COUNT.RECORDS      = 0
    X.TOTAL.AMOUNT       = 0

    Y.SYSTEM.DATE = TODAY
    Y.PATH.WORK   = FI.PATH.WORK
    Y.PATH.OFS    = FI.PATH.OFS
    Y.PATH.REJ    = FI.PATH.REJ
*
    IF FI.FILE.ID EQ "" THEN    ;*file name
        Y.ERR.MSG = "EB-ERROR.NO.FILE"
        GOSUB CONTROL.MSG.ERROR
    END

    FN.REDO.INTERFACE.PARAM = "F.REDO.INTERFACE.PARAM"
    F.REDO.INTERFACE.PARAM = ""
    FN.REDO.APAP.PARAM.EMAIL = "F.REDO.APAP.PARAM.EMAIL"
    F.REDO.APAP.PARAM.EMAIL  = ""

    CALL CACHE.READ(FN.REDO.APAP.PARAM.EMAIL,'SYSTEM',R.EMAIL,MAIL.ERR)
    Y.FILE.PATH   = R.EMAIL<REDO.PRM.MAIL.IN.PATH.MAIL>
    Y.ATTACH.PATH = R.EMAIL<REDO.PRM.MAIL.ATTACH.PATH.MAIL>

    FN.HRMS.DET.FILE        = Y.FILE.PATH
    F.HRMS.DET.FILE         = ""
    CALL OPF(FN.HRMS.DET.FILE,F.HRMS.DET.FILE)

    FN.HRMS.ATTACH.FILE        = Y.ATTACH.PATH
    F.HRMS.ATTACH.FILE         = ""
    CALL OPF(FN.HRMS.ATTACH.FILE,F.HRMS.ATTACH.FILE)

    FN.REDO.ISSUE.MAIL = 'F.REDO.ISSUE.EMAIL'
    F.REDO.ISSUE.MAIL = ''
    R.REDO.ISSUE.MAIL = ''
    Y.ISSUE.EMAIL.ERR = ''
    CALL OPF(FN.REDO.ISSUE.MAIL,F.REDO.ISSUE.MAIL)
*  CALL F.READ(FN.REDO.ISSUE.MAIL,'SYSTEM',R.REDO.ISSUE.MAIL,F.REDO.ISSUE.MAIL,Y.ISSUE.EMAIL.ERR) ;*Tus Start
    CALL CACHE.READ(FN.REDO.ISSUE.MAIL,'SYSTEM',R.REDO.ISSUE.MAIL,Y.ISSUE.EMAIL.ERR) ; * Tus End
    IF R.REDO.ISSUE.MAIL THEN
        Y.FROM.MAIL.ADD.VAL =  R.REDO.ISSUE.MAIL<ISS.ML.MAIL.ID>
    END

    FN.FT.TXN.TYPE.CONDITION = 'F.FT.TXN.TYPE.CONDITION'
    F.FT.TXN.TYPE.CONDITION = ''
    R.FT.TXN.TYPE.CONDITION = ''
    CALL OPF(FN.FT.TXN.TYPE.CONDITION,F.FT.TXN.TYPE.CONDITION)

    FN.FT.COMMISSION.TYPE = 'F.FT.COMMISSION.TYPE'
    F.FT.COMMISSION.TYPE  = ''
    R.FT.COMMISSION.TYPE  = ''
    CALL OPF(FN.FT.COMMISSION.TYPE,F.FT.COMMISSION.TYPE)

    FN.FT.CHARGE.TYPE = 'F.FT.CHARGE.TYPE'
    F.FT.CHARGE.TYPE  = ''
    R.FT.CHARGE.TYPE  = ''
    CALL OPF(FN.FT.CHARGE.TYPE,F.FT.CHARGE.TYPE)

    CALL OPF(FN.REDO.INTERFACE.PARAM,F.REDO.INTERFACE.PARAM)
    CALL CACHE.READ(FN.REDO.INTERFACE.PARAM, FI.INTERFACE, R.REDO.INTERFACE.PARAM, Y.ERR)   ;*This is the id defined in RIP>RFID
    IF Y.ERR THEN
        PROCESS.GOAHEAD = 0
        E = "EB-PARAMETER.MISSING"
        CALL ERR
    END
    RIP.PARAM = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.PARAM.TYPE>
    RIP.VALUE = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.PARAM.VALUE>
    DR.TXN.CODE     = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.DR.TXN.CODE>
    CR.TXN.CODE    = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.CR.TXN.CODE>
    RET.TXN.CODE    = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.RET.TXN.CODE>
    RET.TAX.CODE   = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.RET.TAX.CODE>
    Y.TO.MAIL.VALUE  = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.MAIL.ADDRESS>

    CALL CACHE.READ(FN.FT.TXN.TYPE.CONDITION, DR.TXN.CODE, R.FT.TXN.TYPE.CONDITION, FT.TXN.TYPE.CONDITION.ERR)  ;*R22 Auto Conversion  - F.READ to CACHE.READ
    Y.PAYROLL.COMM.TYPE       = R.FT.TXN.TYPE.CONDITION<FT6.COMM.TYPES>
    Y.PAYROLL.CHG.TYPE  = R.FT.TXN.TYPE.CONDITION<FT6.CHARGE.TYPES>
    IF Y.PAYROLL.CHG.TYPE THEN
        Y.PAYROLL.CHG.TYPE<2,-1> = 'CHG'
    END

    IF Y.PAYROLL.COMM.TYPE THEN
        CALL CACHE.READ(FN.FT.COMMISSION.TYPE, Y.PAYROLL.COMM.TYPE, R.FT.COMMISSION.TYPE, FT.COMMISSION.TYPE.ERR)   ;*R22 Auto Conversion  - F.READ to CACHE.READ
        Y.PAY.COM.FLAT.AMT = R.FT.COMMISSION.TYPE<FT4.FLAT.AMT,1>
        Y.PAY.COM.PERCENT = R.FT.COMMISSION.TYPE<FT4.PERCENTAGE,1,1>
        Y.PAY.CATEG.ACCOUNT = R.FT.COMMISSION.TYPE<FT4.CATEGORY.ACCOUNT>
    END


    CTA.INTERMEDIA = "CTA.INTERMEDIA"
    CTA.DESTINO = "CTA.DESTINO"

    WPARAM.POS = 1
    LOCATE CTA.INTERMEDIA IN RIP.PARAM<1,WPARAM.POS> SETTING PARAM.POS THEN
        FI.CTA.INTERMEDIA = RIP.VALUE<1,PARAM.POS>
        WPARAM.POS   = PARAM.POS + 1
    END ELSE
        WERROR.MSG = "&.Directory.not.defined.in.&":@FM:CTA.INTERMEDIA
    END

    WPARAM.POS = 1
    LOCATE CTA.DESTINO IN RIP.PARAM<1,WPARAM.POS> SETTING PARAM.POS THEN
        FI.CTA.DESTINO    = RIP.VALUE<1,PARAM.POS>
        R.REDO.NOMINA.DET<RE.NM.DET.CTA.DESTINO>   = FI.CTA.DESTINO
        R.REDO.NOMINA.DET<RE.NM.DET.INTERFACE.NAME>= FI.INTERFACE
        R.REDO.NOMINA.DET<RE.NM.DET.INTERFACE.TYPE>= 'ORANGE'
        WPARAM.POS   = PARAM.POS + 1
    END ELSE
        WERROR.MSG = "&.Directory.not.defined.in.&":@FM:CTA.DESTINO
    END

    FN.REDO.TEMP.FI.CONTROL='F.REDO.TEMP.FI.CONTROL'
    F.REDO.TEMP.FI.CONTROL =''
    CALL OPF(FN.REDO.TEMP.FI.CONTROL,F.REDO.TEMP.FI.CONTROL)

    FN.REDO.NOMINA.TEMP ='F.REDO.NOMINA.TEMP'
    F.REDO.NOMINA.TEMP =''
    CALL OPF(FN.REDO.NOMINA.TEMP,F.REDO.NOMINA.TEMP)

    FN.REDO.NOMINA.DET     ='F.REDO.NOMINA.DET'
    F.REDO.NOMINA.DET      =''
    CALL OPF(FN.REDO.NOMINA.DET,F.REDO.NOMINA.DET)

    GOSUB GENERATE.ID

    FI.W.REDO.FI.CONTROL<REDO.FI.CON.FILE.NAME>        = FI.FILE.ID
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.FILE.DIR>         = FI.WORK.DIR
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROCESS.CONFIRM>  = FI.REDO.INTERFACE.PARAM<REDO.INT.PARAM.FI.AUT.AVAIL.FUNDS>
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.TIME>        = FIELD(TIMEDATE()," ",1)
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.DATE>        = TODAY
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.FILE>  = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.AMOUNT.FILE>  = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.CALC>  = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.AMOUNT.CALC>  = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.PROC.STATUS>      = "PROCESADO"
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORDS.OK> = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.AMOUNT.PROC.OK> = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.PROC> = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.AMOUNT.PROC>     = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORDS.FAIL> = 0
    FI.W.REDO.FI.CONTROL<REDO.FI.CON.AMOUNT.PROC.FAIL>  = 0

*
*
RETURN
*
* ---------
OPEN.FILES:
* ---------
*
*
    IF PROCESS.GOAHEAD THEN
        OPENSEQ FI.WORK.DIR,FI.FILE.ID TO F.POINTER ELSE
            Y.ERR.MSG = "EB-ERROR.OPEN.FILE"
            GOSUB CONTROL.MSG.ERROR
        END
    END
RETURN
*
*-----------------------
CHECK.PRELIM.CONDITIONS:
*-----------------------
*
    LOOP.CNT  = 1   ;   MAX.LOOPS = 3
*
    LOOP
    WHILE LOOP.CNT LE MAX.LOOPS AND PROCESS.GOAHEAD DO
        BEGIN CASE

            CASE LOOP.CNT EQ 1
                READSEQ Y.HEAD FROM F.POINTER THEN

                    Y.TYPE.RECORD  = SUBSTRINGS(Y.HEAD,1,2)
                    Y.COMPANY.CODE = SUBSTRINGS(Y.HEAD,3,3)
                    Y.BANK.ID      = SUBSTRINGS(Y.HEAD,6,8)
                    Y.COUNT.TRANS  = SUBSTRINGS(Y.HEAD,14,7)
                    Y.AMOUNT.TRANS = SUBSTRINGS(Y.HEAD,22,12)
                    Y.AMOUNT.TRANS = TRIM(FIELD(Y.AMOUNT.TRANS,'.',1), "0", "L"):'.':FIELD(Y.AMOUNT.TRANS,'.',2)
                    Y.DATE.FILE    = SUBSTRINGS(Y.HEAD,34,8)
                    Y.TIME.FILE    = SUBSTRINGS(Y.HEAD,42,6)
                    Y.BATCH.NUMBER = SUBSTRINGS(Y.HEAD,48,10)
*
                    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.RECORD.FILE>  = Y.COUNT.TRANS
                    FI.W.REDO.FI.CONTROL<REDO.FI.CON.TOT.AMOUNT.FILE>  = Y.AMOUNT.TRANS

                END ELSE
                    Y.ERR.MSG = "EB-ERROR.READ.FILE"
                    GOSUB PROCESS.COPY
                END

            CASE LOOP.CNT EQ 2
                GOSUB B100.VALIDATE.HEADER.FIELDS

            CASE LOOP.CNT EQ 3
                GOSUB B120.VALIDATE.TOTALS

*
        END CASE
        LOOP.CNT +=1
        GOSUB CONTROL.MSG.ERROR
    REPEAT
*
RETURN
*
*==============
PROCESS.DETAIL.RECORD:

    X.COUNT.RECORDS += 1
    X.AMOUNT  = SUBSTRINGS(X.DETAIL,45,11)

    X.TOTAL.AMOUNT += X.AMOUNT
RETURN

* ----------------
CONTROL.MSG.ERROR:
* ----------------
*
*   Paragraph

    IF Y.ERR.MSG THEN
* FILE IS REJECT
        PROCESS.GOAHEAD = 0
        ETEXT     = Y.ERR.MSG
        CALL STORE.END.ERROR
        ETEXT = ''
    END
*
RETURN
*==================
FORMAT.ACCOUNT:

    NUM.POS.CUEN= 20
    Y.SWITCH = "N"
    Y.CUENTA =""

    FOR K.POSI=1 TO   NUM.POS.CUEN
        Y.CARACT = SUBSTRINGS(X.CUENTA,K.POSI,1)
        IF Y.CARACT EQ "0" THEN
            IF Y.SWITCH EQ "N" THEN
                Y.SWITCH = "N"
            END ELSE
                Y.CUENTA = Y.CUENTA:Y.CARACT
            END
        END ELSE
            Y.SWITCH ="S"
            Y.CUENTA = Y.CUENTA:Y.CARACT
        END
    NEXT K.POSI


RETURN
END
