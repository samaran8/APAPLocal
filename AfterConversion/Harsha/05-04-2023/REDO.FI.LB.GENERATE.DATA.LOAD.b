* @ValidationCode : MjoyMDExNzU1MTQ5OkNwMTI1MjoxNjgwNjA3MTMzNjcxOklUU1M6LTE6LTE6MTUxNzoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 04 Apr 2023 16:48:53
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1517
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOFCFI
SUBROUTINE REDO.FI.LB.GENERATE.DATA.LOAD
*
* =============================================================================
*
*    - Looks for  ".req"  file in a directory specified in  PLANILLA record of
*      REDO.INTERFACE.PARAM table. The name of the file defines which PLANILLA
*      process should be executed
*
*    - Deletes the ".req" file
*
*    - Opens required T24 Tables
*
*    - Looks for LOCAL.REF.FIELD positions
*
*    - Stores required variables in a COMMON area for .SELECT and PROCESS routines
*
* ==============================================================================
*
* Subroutine Type : Multithreaded ROUTINE
* Attached to     : REDO.FI.PLANILLA service
* Attached as     : Service
* Primary Purpose : Generate data for APAP-Planillas
*
* Incoming:
* ---------
*
*
* Outgoing:
* ---------
*
*-----------------------------------------------------------------------------------
* Modification History:
*
* Development for : Asociacion Popular de Ahorros y Prestamos ODR-2010-03-0025
* Development by  : Adriana Velasco - TAM Latin America
* Date            : Nov. 15, 2010

*  DATE             WHO                   REFERENCE 
* 05-APRIL-2023      Harsha                R22 Auto Conversion  - VM to @VM , FM to @FM and ++ to +=1 
* 05-APRIL-2023      Harsha                R22 Manual Conversion - No changes 
*----------------------------------------------------------------------------
*=======================================================================

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.PAYMENT.SCHEDULE
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.AA.INTEREST.ACCRUALS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.AA.PROPERTY
*
    $INSERT I_REDO.FI.VAR.LOAN.BILL.COMMON
    $INSERT I_REDO.FI.LB.GENERATE.DATA.COMMON
    $INSERT I_F.REDO.INTERFACE.PARAM
    $INSERT I_F.REDO.INTERFACE.C18.PARAM
    $INSERT I_F.REDO.APAP.PROPERTY.PARAM
    $INSERT I_System

*
*************************************************************************
*


    GOSUB INITIALISE
    GOSUB OPEN.FILES

    GOSUB CHECK.PRELIM.CONDITIONS

    IF PROCESS.GOAHEAD THEN
        GOSUB PROCESS
    END
*
RETURN
*
* ======
PROCESS:
* ======
*
    LOOKING.FOR        = 1
    L.ID.PROCESO.BATCH = ""

    FI.FILE.ID         = ""
    POINT.POS          = 0
*

*    Y.SEL.CMD = "SELECT " : FI.QUEUE.PATH
*    CALL EB.READLIST(Y.SEL.CMD,PLANILLA.LIST,"",NO.OF.REC,YER.SEL)

    PROCESS.GOAHEAD = 0
    LOOP
        REMOVE FI.FILE.ID FROM PLANILLA.LIST SETTING Y.POS.FILE
    WHILE FI.FILE.ID:Y.POS.FILE AND LOOKING.FOR DO
        PARAM.ID              = FI.FILE.ID
        GOSUB B140.READ.PLANILLA.PARAM
        PROCESS.GOAHEAD = 1
        COMMON.ID.PROCESO.BATCH = FI.FILE.ID:'.':Y.LOAN.SEQ
        COMMON.PLANILLA.PROCESS = PARAM.ID

    REPEAT
*

RETURN
*

*=================
B120.LOCAL.FIELDS:
*=================
*
    APPL = "AA.ARR.PAYMENT.SCHEDULE":@FM:"AA.PRD.DES.OVERDUE"
    FLD  = "L.AA.FORM":@VM:"L.AA.PAY.METHD":@FM:"L.LOAN.COND":@VM:"L.LOAN.STATUS.1"
    POS  = ''
    CALL MULTI.GET.LOC.REF (APPL, FLD,POS)
    L.AA.FORM.POS      = POS<1,1>
    L.AA.PAY.METHD.POS = POS<1,2>
    OD.LOAN.COND.POS   =   POS<2,1>
    OD.LOAN.STATUS.POS = POS<2,2>
*
RETURN
*
B140.READ.PLANILLA.PARAM:
*

    METODO.PAGO               = "METODO.PAGO"
    CALL CACHE.READ(FN.REDO.INTERFACE.PARAM, PARAM.ID, R.REDO.INTERFACE.PARAM, Y.ERR)
    RIP.PARAM     = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.PARAM.TYPE>
    RIP.VALUE     = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.PARAM.VALUE>
    IF PARAM.ID EQ 'APAP-EMPLEADOS' OR PARAM.ID EQ 'APAP-EXEC-EMPLEADOS' THEN
        AFF.COMP.LIST = PARAM.ID
    END ELSE
        AFF.COMP.LIST = R.REDO.INTERFACE.PARAM<REDO.INT.PARAM.AFF.COMPANY>
    END
    COMMON.AFF.COMP.LIST<-1> = AFF.COMP.LIST
    CHANGE @VM TO @FM IN COMMON.AFF.COMP.LIST
    CALL CACHE.READ(FN.REDO.INTERFACE.C18.PARAM,'SYSTEM',R.REDO.INTERFACE.C18.PARAM,C18.ERR)
    Y.PARAM.LOAN.STATUS = R.REDO.INTERFACE.C18.PARAM<C18.PARAM.LOAN.ACCT.STATUS>
    CHANGE @VM TO @FM IN Y.PARAM.LOAN.STATUS

    LOCATE PARAM.ID IN PLANILLA.LIST SETTING AFF.COMP.POS THEN
        Y.LOAN.SEQ = R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.PROCES.SEQ,AFF.COMP.POS>
        Y.SEQ.STATUS = R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.SEQ.STATUS,AFF.COMP.POS>
        IF Y.SEQ.STATUS EQ 'AVAILABLE' THEN
            Y.LOAN.SEQ += 1
            GOSUB SEQ.UPDATE.AFF.COMP
            R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.PROCES.SEQ,AFF.COMP.POS> = Y.LOAN.SEQ
            R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.SEQ.STATUS,AFF.COMP.POS> = 'PROCESS'
            CALL F.WRITE(FN.REDO.INTERFACE.PARAM,PLANILLA.ID,R.REDO.PLANILA.INTERFACE.PARAM)
        END
    END


* Locate METODO.PAGO
    WPARAM.POS = 1
    LOCATE METODO.PAGO IN RIP.PARAM<1,WPARAM.POS> SETTING PARAM.POS THEN
        L.PAY.METH<-1> = RIP.VALUE<1,PARAM.POS>
    END ELSE
        WERROR.MSG = "&.Metodo.de.Pago.not.defined.in.&":@FM:METODO.PAGO
        PROCESS.GOAHEAD = 0
    END
*
RETURN
*
* =================
SEQ.UPDATE.AFF.COMP:
* =================
    Y.AFF.COMP.CNT = DCOUNT(AFF.COMP.LIST,@VM)
    Y.VAR1 = 1
    LOOP
    WHILE Y.VAR1 LE Y.AFF.COMP.CNT
        AFF.COMP.ID = AFF.COMP.LIST<1,Y.VAR1>
        CALL F.READ(FN.REDO.INTERFACE.PARAM,AFF.COMP.ID,R.REDO.AFF.INTERFACE.PARAM,F.REDO.AFF.INTERFACE.PARAM,Y.ERR)
        R.REDO.AFF.INTERFACE.PARAM<REDO.INT.PARAM.PROCES.SEQ> = Y.LOAN.SEQ
        R.REDO.AFF.INTERFACE.PARAM<REDO.INT.PARAM.AFF.COMPANY>= PARAM.ID
        R.REDO.AFF.INTERFACE.PARAM<REDO.INT.PARAM.SEQ.STATUS> = 'PROCESS'
        CALL F.WRITE(FN.REDO.INTERFACE.PARAM,AFF.COMP.ID,R.REDO.AFF.INTERFACE.PARAM)
        Y.VAR1 += 1
    REPEAT

RETURN
* =========
INITIALISE:
* =========
*
    PROCESS.GOAHEAD = 1
    LOOP.CNT        = 1
    MAX.LOOPS       = 3


*Id planilla to generate
    PARAM.ID        = COMM.PLANILLA.PROCESS
    PLANILLA.ID     = "PLANILLA"
*

*   CONSTANTS
    L.PAY.METH     = ""
    Y.DEST.PATH     = ""        ;* Path for APAP file
    FI.FILE.NEW     = ""        ;* Name for APAP File
    QUEUE.PATH.ID   = "PROC.QUEUE"        ;* Directory path to store the process key

*   Batch Process Detail table
    FN.REDO.FI.LB.BATCH.PROCESS.DET = "F.REDO.FI.LB.BPROC.DET"
    F.REDO.FI.LB.BATCH.PROCESS.DET  = ""
    R.REDO.FI.LB.BATCH.PROCESS.DET  = ""
*   Batch Process Header table
    FN.REDO.FI.LB.BATCH.PROCESS = "F.REDO.FI.LB.BPROC"
    F.REDO.FI.LB.BATCH.PROCESS  = ""
    R.REDO.FI.LB.BATCH.PROCESS  = ""
*
    FN.AA.PAYMENT.SCHEDULE = "F.AA.ARR.PAYMENT.SCHEDULE"
    F.AA.PAYMENT.SCHEDULE  = ""
    R.AA.PAYMENT.SCHEDULE  = ""
*
    FN.REDO.INTERFACE.PARAM = "F.REDO.INTERFACE.PARAM"
    F.REDO.INTERFACE.PARAM  = ""
    R.REDO.INTERFACE.PARAM  = ""

    FN.REDO.INTERFACE.C18.PARAM = 'F.REDO.INTERFACE.C18.PARAM'
    F.REDO.INTERFACE.C18.PARAM  = ''
    R.REDO.INTERFACE.C18.PARAM  = ''

    FN.AA.ARRANGEMENT =  'F.AA.ARRANGEMENT'
    F.AA.ARRANGEMENT  = ''
    R.AA.ARRANGEMENT  = ''

    FN.AA.ACCOUNT.DETAILS = 'F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS  = ''
    R.AA.ACCOUNT.DETAILS  = ''

    FN.AA.BILL.DETAILS    = 'F.AA.BILL.DETAILS'
    F.AA.BILL.DETAILS     = ''
    R.AA.BILL.DETAILS     = ''

    FN.AA.INTEREST.ACCRUALS = 'F.AA.INTEREST.ACCRUALS'
    F.AA.INTEREST.ACCRUALS  = ''
    R.AA.INTEREST.ACCRUALS  = ''

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT  = ''

    FN.CUSTOMER  = 'F.CUSTOMER'
    F.CUSTOMER   = ''
    R.CUSTOMER   = ''

    R.REDO.PLANILA.INTERFACE.PARAM  = ""

    FN.REDO.APAP.PROPERTY.PARAM = 'F.REDO.APAP.PROPERTY.PARAM'
    F.REDO.APAP.PROPERTY.PARAM  = ''

    FN.AA.PROPERTY = 'F.AA.PROPERTY'
    F.AA.PROPERTY  = ''


    GOSUB B120.LOCAL.FIELDS     ;*Get position of local field L.AA.FORM AND L.AA.PAY.METHD

*

RETURN
*
*
* =========
OPEN.FILES:
* =========
*
    CALL OPF(FN.REDO.FI.LB.BATCH.PROCESS,F.REDO.FI.LB.BATCH.PROCESS)
    CALL OPF(FN.REDO.FI.LB.BATCH.PROCESS.DET,F.REDO.FI.LB.BATCH.PROCESS.DET)
    CALL OPF(FN.AA.PAYMENT.SCHEDULE,F.AA.PAYMENT.SCHEDULE)
    CALL OPF(FN.REDO.INTERFACE.PARAM,F.REDO.INTERFACE.PARAM)
    CALL OPF(FN.REDO.INTERFACE.C18.PARAM,F.REDO.INTERFACE.C18.PARAM)
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)
    CALL OPF(FN.AA.INTEREST.ACCRUALS,F.AA.INTEREST.ACCRUALS)
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)
    CALL OPF(FN.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM)
    CALL OPF(FN.AA.PROPERTY,F.AA.PROPERTY)

*
RETURN
*
* ======================
CHECK.PRELIM.CONDITIONS:
* ======================
*
    CALL CACHE.READ(FN.REDO.INTERFACE.PARAM, PLANILLA.ID, R.REDO.PLANILA.INTERFACE.PARAM, Y.ERR)
    IF Y.ERR THEN
        W.ERROR = "PARAMETER.MISSING.&":@FM:PLANILLA.ID
    END

    WPARAM.POS = 1
    RIP.PARAM = R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.PARAM.TYPE>
    RIP.VALUE = R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.PARAM.VALUE>
    PLANILLA.LIST = R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.AFF.COMPANY>
    LOAN.PROCESS.SEQ = R.REDO.PLANILA.INTERFACE.PARAM<REDO.INT.PARAM.PROCES.SEQ>
    CHANGE @VM TO @FM IN PLANILLA.LIST
    LOCATE QUEUE.PATH.ID IN RIP.PARAM<1,WPARAM.POS> SETTING PARAM.POS THEN
        FI.QUEUE.PATH  = RIP.VALUE<1,PARAM.POS>
    END ELSE
        WERROR.MSG = "&.Directory.not.defined.in.&":@FM:QUEUE.PATH.ID:@VM:PLANILLA.ID
    END

    Y.PATH.SEND.ID = "PATH.SEND"
    FI.PATH.SEND   = ""

*  Locate PATH.SEND
    WPARAM.POS = 1
    LOCATE Y.PATH.SEND.ID IN RIP.PARAM<1,WPARAM.POS> SETTING PARAM.POS THEN
        FI.PATH.SEND   = RIP.VALUE<1,PARAM.POS>
    END ELSE
        WERROR.MSG = "&.Directory.not.defined.in.&":@FM:Y.PATH.SEND.ID:@VM:PLANILLA.ID
    END



RETURN
*

END
