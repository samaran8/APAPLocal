* @ValidationCode : MjotMTgwMTE0NDQyNTpDcDEyNTI6MTY4MjUwMjYzMjM5NzpJVFNTOi0xOi0xOjUzMjoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 26 Apr 2023 15:20:32
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 532
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOAPAP
*MODIFICATION HISTORY:
*---------------------------------------------------------------------------------------
*DATE               WHO                       REFERENCE                 DESCRIPTION
*13-04-2023       CONVERSION TOOLS            AUTO R22 CODE CONVERSION   FM to @FM , VM to @VM
*13-04-2023       AJITHKUMAR                  MANUAL R22 CODE CONVERSION NO CHANGE
*----------------------------------------------------------------------------------------




SUBROUTINE REDO.APAP.E.NOF.SAV.MAJ.DEPOSITS(Y.DATA)
*------------------------------------------------------------------------------
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: Karthik T
* PROGRAM NAME: REDO.APAP.E.NOF.SAV.MAJ.DEPOSITS
* ODR NO : ODR-2010-03-0087
*-----------------------------------------------------------------------------
*DESCRIPTION: This is a Nofile routine developed for the report 56
*
*----------------------------------------------------------------------------*
*IN PARAMETER: NA
*OUT PARAMETER: NA
*----------------------------------------------------------------------*
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CATEGORY
    $INSERT I_F.CUSTOMER
    $INSERT I_F.RELATION.CUSTOMER
    $INSERT I_F.RELATION
    $INSERT I_F.EB.CONTRACT.BALANCES

    GOSUB MULTI.GET.LOC.REF.DEFINE

    GOSUB INITIALISE
    GOSUB OPENFILES
    GOSUB PROCESS

RETURN

INITIALISE:
*----------*
    Y.AGENCY = ''; Y.REGION = ''; Y.ACCOUNT.TYPE = ''; Y.ACCOUNT.NUMBER = '';Y.ACCOUNT.NAME = '' ; Y.CURRENCY = '';Y.CLIENT.CODE = ''
    Y.TOTAL.BALANCE = ''; Y.STATUS = ''; Y.ACCOUNT.EXECUTIVE = ''; Y.RELATION = ''; Y.OPENING.DATE = ''; Y.LAST.TXN.DATE = ''
    Y.DATA.RETURN = ''; Y.ACT.TYPE = ''; Y.CURR = ''; Y.AGY= ''; Y.RELT = ''
    Y.DATE1 = '' ; Y.DATE2 = '' ; Y.STAT1 ='' ; Y.STAT2 = '' ; Y.ACC.POS ='' ; Y.ACC.POS1 =''

RETURN

OPENFILES:
*--------*
*
    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
*
    FN.CUSTOMER = 'F.CUSTOMER'
    F.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)
*
    FN.CATEGORY = 'F.CATEGORY'
    F.CATEGORY = ''
    CALL OPF(FN.CATEGORY,F.CATEGORY)
*
    FN.RELATION.CUSTOMER = 'F.RELATION.CUSTOMER'
    F.RELATION.CUSTOMER = ''
*
    FN.RELATION = 'F.RELATION'
    F.RELATION = ''
*
RETURN

PROCESS:
*-------*
*
    LOCATE "ACCOUNT.TYPE" IN D.FIELDS<1> SETTING FIELD1.POS THEN
        Y.ACT.TYPE = D.RANGE.AND.VALUE<FIELD1.POS>
    END
*
    LOCATE "CURRENCY" IN D.FIELDS<1> SETTING FIELD2.POS THEN
        Y.CURR = D.RANGE.AND.VALUE<FIELD2.POS>
    END
*
    LOCATE "AGENCY" IN D.FIELDS<1> SETTING FIELD3.POS THEN
        Y.AGY = D.RANGE.AND.VALUE<FIELD3.POS>
    END
*
    LOCATE "RELATION" IN D.FIELDS<1> SETTING FIELD4.POS THEN
        Y.RELT = D.RANGE.AND.VALUE<FIELD4.POS>
    END
*
    GOSUB SELECT.PROCESS
RETURN
*
SELECT.PROCESS:
*-------------*
*
    SEL.CMD = 'SELECT ':FN.ACCOUNT
    IF Y.ACT.TYPE NE '' THEN
        SEL.CMD := " WITH CATEGORY EQ ":Y.ACT.TYPE
    END
    IF Y.CURR NE '' THEN
        SEL.CMD := " WITH CURRENCY EQ ":Y.CURR
    END
    IF Y.AGY NE '' THEN
        SEL.CMD := " WITH CO.CODE EQ ":Y.AGY
    END
    IF Y.RELT NE '' THEN
        SEL.CMD := " WITH RELATION.CODE EQ ":Y.RELT
    END
    SEL.CMD := " BY CO.CODE BY CATEGORY BY CURRENCY BY ACCOUNT.OFFICER"
    KEY.LIST = ''
    SELECTED = ''
    R.ERR = ''
    CALL EB.READLIST(SEL.CMD,KEY.LIST,'',SELECTED,R.ERR)
    IF NOT(KEY.LIST) THEN
        RETURN
    END

    Y.AC.SORT.VAL = ''
    Y.SORT.VAL = ''
    Y.SORT.ARR = ''
    Y.DATA = ''

    LOOP
        REMOVE Y.ACT.ID FROM KEY.LIST SETTING ID.POS
    WHILE Y.ACT.ID:ID.POS
        R.ACCOUNT = '' ; Y.READ.ERR = ''
        CALL F.READ(FN.ACCOUNT,Y.ACT.ID,R.ACCOUNT,F.ACCOUNT,Y.READ.ERR)
*TUS START
        CALL EB.READ.HVT ('EB.CONTRACT.BALANCES', Y.ACT.ID, R.ECB, ECB.ERR)
*TUS END
        IF Y.READ.ERR THEN
            CONTINUE
        END
        GOSUB ACCT.PROCESS
        Y.SORT.VAL = Y.AGENCY:Y.REGION:FMT(Y.ACCOUNT.TYPE,'R%5'):Y.CURRENCY:FMT(Y.ACCOUNT.EXECUTIVE,'R%12')
        Y.DATA.RETURN = ''
        Y.DATA.RETURN = Y.REGION :'#':Y.AGENCY :'#':Y.ACCOUNT.TYPE :'#':Y.ACCOUNT.NUMBER:'#'
        Y.DATA.RETURN := Y.ACCOUNT.NAME :'#':Y.CURRENCY :'#':Y.CLIENT.CODE :'#':Y.TOTAL.BALANCE:'#'
        Y.DATA.RETURN := Y.STATUS :'#':Y.ACCOUNT.EXECUTIVE :'#':Y.RELATION :'#':Y.OPENING.DATE:'#'
        Y.DATA.RETURN := Y.LAST.TXN.DATE

        Y.AC.SORT.VAL<-1> = Y.DATA.RETURN:@FM:Y.SORT.VAL
        Y.SORT.ARR<-1> = Y.SORT.VAL

    REPEAT

    Y.SORT.ARR = SORT(Y.SORT.ARR)
    LOOP
        REMOVE Y.ARR.ID FROM Y.SORT.ARR SETTING Y.ARR.POS
    WHILE Y.ARR.ID : Y.ARR.POS
        LOCATE Y.ARR.ID IN Y.AC.SORT.VAL SETTING Y.FM.POS THEN
            Y.DATA<-1> = Y.AC.SORT.VAL<Y.FM.POS-1>
            DEL Y.AC.SORT.VAL<Y.FM.POS>
            DEL Y.AC.SORT.VAL<Y.FM.POS-1>
        END
    REPEAT

RETURN

ACCT.PROCESS:
*------------*

    Y.AGENCY = R.ACCOUNT<AC.CO.CODE>
    Y.CUSTOMER = R.ACCOUNT<AC.CUSTOMER>
    R.CUSTOMER = '' ; CUS.ERR = ''
    CALL F.READ(FN.CUSTOMER,Y.CUSTOMER,R.CUSTOMER,F.CUSTOMER,CUS.ERR)
    Y.ACCOUNT.OFFICER = R.CUSTOMER<EB.CUS.ACCOUNT.OFFICER>
    IF LEN(Y.ACCOUNT.OFFICER) GE 8 THEN
        Y.REGION = Y.ACCOUNT.OFFICER[8]
        Y.REGION = Y.REGION[1,2]
    END ELSE
        Y.REGION = ''
    END
    Y.ACCOUNT.TYPE = R.ACCOUNT<AC.CATEGORY>
    Y.ACCOUNT.NUMBER = Y.ACT.ID
    Y.CURRENCY = R.ACCOUNT<AC.CURRENCY>
    Y.CLIENT.CODE = Y.CUSTOMER
*Y.TOTAL.BALANCE = R.ACCOUNT<AC.ONLINE.ACTUAL.BAL>
*TUS START
    Y.TOTAL.BALANCE = R.ECB<ECB.WORKING.BALANCE>
*TUS END
    IF Y.TOTAL.BALANCE EQ '' THEN
        Y.TOTAL.BALANCE = '0.00'
    END
*
*CALL GET.LOC.REF('ACCOUNT','L.AC.STATUS1',REF.POS) ;* Converted by TUS-Convert
*Y.ACC.POS = REF.POS<1,1>
    Y.ACC.POS =  Y.LREF.POS<1,1>
    Y.STAT1 = R.ACCOUNT<AC.LOCAL.REF,Y.ACC.POS>
*CALL GET.LOC.REF('ACCOUNT','L.AC.STATUS2',REF.POS1) ;* Converted by TUS-Convert
*Y.ACC.POS1 = REF.POS1<1,1>
    Y.ACC.POS1 =  Y.LREF.POS<1,2>
    Y.STAT2 = R.ACCOUNT<AC.LOCAL.REF,Y.ACC.POS1>
*
    Y.CLOSURE.DATE = R.ACCOUNT<AC.CLOSURE.DATE>
    IF Y.CLOSURE.DATE NE '' THEN
        Y.STATUS = "CLOSED"
    END
    IF Y.CLOSURE.DATE EQ '' THEN
        IF Y.STAT1 NE '' THEN
            Y.STATUS = Y.STAT1
        END ELSE
            Y.STATUS = Y.STAT2
        END
    END
    Y.ACCOUNT.EXECUTIVE = R.ACCOUNT<AC.ACCOUNT.OFFICER>

    Y.IS.RELATION = R.ACCOUNT<AC.RELATION.CODE>

    Y.RELATION = ''
    Y.COUNT = DCOUNT(Y.IS.RELATION,@VM)
    Y.START = 1
    LOOP
    WHILE Y.START LE Y.COUNT
        Y.IS.RELATION = R.ACCOUNT<AC.RELATION.CODE,Y.START>
        IF Y.IS.RELATION GE '300' AND Y.IS.RELATION LE '499' THEN
            R.REL = '' ; REL.ERR = ''
            CALL F.READ(FN.RELATION,Y.IS.RELATION,R.REL,F.RELATION,REL.ERR)
            Y.RELATION<-1> = R.REL<EB.REL.DESCRIPTION>
        END
        Y.START += 1
    REPEAT

    CHANGE @FM TO @VM IN Y.RELATION

    Y.OPENING.DATE = R.ACCOUNT<AC.OPENING.DATE>

*TUS START
*Y.DATE1 = R.ACCOUNT<AC.DATE.LAST.CR.CUST>
    LOCATE 'CUST-CR' IN R.ECB<ECB.INITIATOR.TYPE,1> SETTING CUST.CR.POS THEN
        Y.DATE1 = R.ECB<ECB.DATE.LAST,CUST.CR.POS>
    END

*Y.DATE2 = R.ACCOUNT<AC.DATE.LAST.DR.CUST>
    LOCATE 'CUST-DR' IN R.ECB<ECB.INITIATOR.TYPE,1> SETTING CUST.DR.POS THEN
        Y.DATE2 = R.ECB<ECB.DATE.LAST,CUST.DR.POS>
    END
*TUS END
    IF Y.DATE1 GT Y.DATE2 THEN
        Y.LAST.TXN.DATE = Y.DATE1
    END ELSE
        Y.LAST.TXN.DATE = Y.DATE2
    END
    Y.ACCOUNT.NAME = ''
RETURN


*************************
MULTI.GET.LOC.REF.DEFINE:
*************************
* GET.LOC.REF Converted by TUS-Convert
    Y.LREF.APP =''
    Y.LREF.FIELD= ''
    Y.LREF.POS = ''
    Y.LREF.APP ='ACCOUNT'
    Y.LREF.FIELD ='L.AC.STATUS1':@VM:'L.AC.STATUS2'
    CALL MULTI.GET.LOC.REF(Y.LREF.APP,Y.LREF.FIELD,Y.LREF.POS)
RETURN
END
