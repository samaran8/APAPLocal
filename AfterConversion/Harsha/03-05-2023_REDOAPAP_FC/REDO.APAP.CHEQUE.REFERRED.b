* @ValidationCode : MjoxMjI3NjM1MzAwOkNwMTI1MjoxNjgyNTAyNjI0Nzc3OklUU1M6LTE6LTE6MTE2ODoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 26 Apr 2023 15:20:24
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1168
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOAPAP
SUBROUTINE REDO.APAP.CHEQUE.REFERRED(Y.OUT.ARRAY)
*----------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.APAP.CHEQUE.REFERED
*----------------------------------------------------------------------------
*Description :REDO.APAP.CHEQUE.REFERRED is a no-file enquiry routine for the enquiry REDO.APAP.NOF.CHEQUE.REFERRED,
*             the routine based on the selection criteria selects the records from respective files and displays
*             the processed records
*Attached to  :Enquiry - REDO.APAP.NOF.CHEQUE.REFERRED
*In Parameter : N/A
*Out Parameter: Y.OUT.ARRAY
*----------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 22 MAR 2011     MUDASSIR              ODR-2010-08-0175        Initial Creation
* Date                   who                   Reference              
* 04-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION VM TO @VM AND FM TO @FM  AND ++ TO  += 1 AND Y.CNT.SORT = Y.CNT.SORT + 1 TO Y.CNT.SORT += 1
* 04-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.ACCOUNT
    $INSERT I_F.LIMIT
    $INSERT I_F.REDO.APAP.CLEARING.INWARD
    $INSERT I_F.REDO.CLEARING.OUTWARD
    $INSERT I_F.REDO.REJECT.REASON
    $INSERT I_F.REDO.H.ROUTING.NUMBER ;*Tus Start
    $INSERT I_F.EB.CONTRACT.BALANCES ;*Tus End

    GOSUB INIT
    GOSUB OPENFILES

    GOSUB PROCESS
    GOSUB SORT.OUT.ARRAY
RETURN

INIT:
*****
    Y.CNT.SORT = 0
    FN.ACCOUNT = "F.ACCOUNT"
    F.ACCOUNT = ''

    FN.LIMIT = "F.LIMIT"
    F.LIMIT = ''
    SEL.CMD.1 = ''
    FN.REDO.APAP.CLEARING.INWARD = "F.REDO.APAP.CLEARING.INWARD"
    F.REDO.APAP.CLEARING.INWARD = ''

    FN.REDO.CLEARING.OUTWARD = "F.REDO.CLEARING.OUTWARD"
    F.REDO.CLEARING.OUTWARD = ''

    FN.REDO.REJECT.REASON = "F.REDO.REJECT.REASON"
    F.REDO.REJECT.REASON = ''

    FN.REDO.H.ROUTING.NUMBER = "F.REDO.H.ROUTING.NUMBER"
    F.REDO.H.ROUTING.NUMBER = ''

RETURN

OPENFILES:
***********

    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.LIMIT,F.LIMIT)
    CALL OPF(FN.REDO.APAP.CLEARING.INWARD,F.REDO.APAP.CLEARING.INWARD)
    CALL OPF(FN.REDO.CLEARING.OUTWARD,F.REDO.CLEARING.OUTWARD)
    CALL OPF(FN.REDO.REJECT.REASON,F.REDO.REJECT.REASON)
    CALL OPF(FN.REDO.H.ROUTING.NUMBER,F.REDO.H.ROUTING.NUMBER)

RETURN

PROCESS:
*********
    Y.ACCT.OFFICER = ''
    Y.CO.CODE = ''

    SEL.REF.INW = "SELECT ": FN.REDO.APAP.CLEARING.INWARD
    SEL.REF.INW : = " WITH REASON NE '' ":" AND CURRENCY EQ ": LCCY

    LOCATE 'ACCOUNT.OFFICER' IN D.FIELDS<1> SETTING Y.ACCT.OFF.POS THEN
        Y.ACCT.OFFICER = D.RANGE.AND.VALUE<Y.ACCT.OFF.POS>
    END

    LOCATE 'AGENCY' IN D.FIELDS<1> SETTING Y.COMPANY.POS THEN
        Y.CO.CODE = D.RANGE.AND.VALUE<Y.COMPANY.POS>
    END

    IF Y.CO.CODE THEN
        SEL.REF.INW : = " AND CO.CODE EQ ": Y.CO.CODE
    END

    CALL EB.READLIST(SEL.REF.INW,SEL.LIST,'',NOR,SEL.ERR)

    IF NOR THEN
        GOSUB MAIN.PROCESS
    END

RETURN

MAIN.PROCESS:
**************

    CNT = 1
    LOOP
    WHILE CNT LE NOR
        Y.INWARD.ID = SEL.LIST<CNT>
        CALL F.READ(FN.REDO.APAP.CLEARING.INWARD,Y.INWARD.ID,R.REDO.APAP.CLEARING.INWARD,F.REDO.APAP.CLEARING.INWARD,INWARD.ERR)
        VAR.DATE      = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.TRANS.DATE>
        VAR.AGENCY    = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CO.CODE>
        VAR.CURRENCY  = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CURRENCY>
        VAR.CHEQUE.NO = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CHEQUE.NO>
        Y.CHEQUE = DCOUNT(VAR.CHEQUE.NO,@FM)
        VAR.STATUS    = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.STATUS>
        VAR.AUTHOR      = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.AUTHORISER>
        VAR.AUTH = FIELD(VAR.AUTHOR,"_",2)

        IF VAR.STATUS EQ 'PAID' THEN
            VAR.APR.OFF = VAR.AUTH
        END
        IF VAR.STATUS EQ 'REJECTED' THEN
            VAR.DENY.OFF = VAR.AUTH
        END

*    VAR.ACCOUNT = Y.INWARD.ID[1,10]

        VAR.ACCOUNT = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.ACCOUNT.NO>

        Y.OUTWARD.ID.RC = VAR.ACCOUNT:'-':"..."
        SEL.CMD.1 = "SELECT ":FN.REDO.CLEARING.OUTWARD:" WITH @ID LIKE ":Y.OUTWARD.ID.RC
        CALL F.READ(FN.ACCOUNT,VAR.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
        R.ECB='' ; ECB.ERR= '' ;*Tus Start
        CALL EB.READ.HVT("EB.CONTRACT.BALANCES",VAR.ACCOUNT,R.ECB,ECB.ERR);*Tus End
        VAR.ACC.OFF = R.ACCOUNT<AC.ACCOUNT.OFFICER>

        IF Y.ACCT.OFFICER AND Y.ACCT.OFFICER NE VAR.ACC.OFF THEN
            CNT += 1 ;*R22 AUTO CONVERSTION CNT ++ TO CNT += 1
            CONTINUE

        END
        GOSUB ACC.DETAILS
        GOSUB GET.LIMIT.VALUES
*        GOSUB GET.TRANSIT.AMT

        GOSUB RETRIEVE.ACCOUNT.GROUP

        VAR.TOTAL.RISK.AMT = VAR.AVAIL.BALANCE + VAR.LINE.OF.AVAIL.AMT - VAR.TOTAL.AMT.CHEQ.REF

        GOSUB FORM.OUTPUT.ARRAY

        CNT += 1  ;*R22 AUTO CONVERSTION CNT ++ TO CNT += 1
    REPEAT

RETURN


ACC.DETAILS:
**************
    Y.VALUE = ''
    Y.ADD = ''
*VAR.TOTAL.BALANCE   = R.ACCOUNT<AC.ONLINE.ACTUAL.BAL> ;*Tus Start
    VAR.TOTAL.BALANCE   = R.ECB<ECB.ONLINE.ACTUAL.BAL>
*VAR.WORKING.BALANCE = R.ACCOUNT<AC.WORKING.BALANCE>
    VAR.WORKING.BALANCE = R.ECB<ECB.WORKING.BALANCE> ;*Tus End
    VAR.LOCK            = R.ACCOUNT<AC.LOCKED.AMOUNT>
    Y.LOCK.COUNT = DCOUNT(VAR.LOCK,@VM)
    Y.CNT =1
    LOOP
    WHILE Y.CNT LE Y.LOCK.COUNT
        Y.VALUE = R.ACCOUNT<AC.LOCKED.AMOUNT,Y.CNT>
        Y.ADD + = Y.VALUE
        Y.CNT += 1   ;*R22 AUTO CONVERSTION CNT ++ TO CNT += 1
    REPEAT

    VAR.LIMIT.REF       = R.ACCOUNT<AC.LIMIT.REF>
    VAR.CUSTOMER        = R.ACCOUNT<AC.CUSTOMER>
    VAR.AVAIL.BALANCE   = VAR.WORKING.BALANCE - Y.ADD
    VAR.NAME            = VAR.ACCOUNT

RETURN

GET.LIMIT.VALUES:
******************

    VAR.REF      = FMT(VAR.LIMIT.REF,'R%10')
    VAR.LIMIT.NO = VAR.CUSTOMER:'.':VAR.REF
    R.LIMIT      = ''
    CALL F.READ(FN.LIMIT,VAR.LIMIT.NO,R.LIMIT,F.LIMIT,LIM.ERR)
    VAR.LINE.OF.AVAIL.AMT = R.LIMIT<LI.AVAIL.AMT>
    VAR.LINE.OF.USED.AMT  = R.LIMIT<LI.CURR.UTIL.AMT>

RETURN

GET.TRANSIT.AMT:
*****************
    IF VAR.ACCOUNT EQ '1000085805' THEN

    END
    CALL EB.READLIST(SEL.CMD.1,SEL.LIST.REC,'',NO.OF.REC2,REC2.ERR)
    LOOP
        REMOVE Y.OUTWARD.ID FROM SEL.LIST.REC SETTING OUTWARD.POS
    WHILE Y.OUTWARD.ID:OUTWARD.POS
        CALL F.READ(FN.REDO.CLEARING.OUTWARD,Y.OUTWARD.ID,R.REDO.CLEARING.OUTWARD,F.REDO.CLEARING.OUTWARD,RED.ERROR)
        Y.BATCH.DATE    = R.REDO.CLEARING.OUTWARD<CLEAR.OUT.DATE>
        Y.EXPOSURE.DATE = R.REDO.CLEARING.OUTWARD<CLEAR.OUT.EXPOSURE.DATE>
        IF Y.BATCH.DATE GE TODAY AND Y.EXPOSURE.DATE GT TODAY THEN
            BAL.IN.TRAN.UNCOMP = + R.REDO.CLEARING.OUTWARD<CLEAR.OUT.AMOUNT>
        END
        IF Y.BATCH.DATE LT TODAY AND Y.EXPOSURE.DATE GT TODAY THEN
            BAL.IN.TRAN.COMP = + R.REDO.CLEARING.OUTWARD<CLEAR.OUT.AMOUNT>
        END
    REPEAT

RETURN


RETRIEVE.ACCOUNT.GROUP:
************************

    VAR.NO.OF.CHEQ.RECEIVED = Y.CHEQUE

    GOSUB RECEIVED.INWARD

RETURN

RECEIVED.INWARD:
****************

    Y.STATUS = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.STATUS>

* IF Y.STATUS EQ 'REFERRED' THEN
*    VAR.TOTAL.AMT.CHEQ.REF += R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.AMOUNT>
* END

    VAR.AMOUNT        = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.AMOUNT>
    GOSUB AMOUNT.DETAILS
*    VAR.TOTAL.AMT.CHEQ.REF += VAR.AMOUNT
    VAR.CHEQ.NO       = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CHEQUE.NO>
    VAR.REJ.REASON    = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.REASON>
    Y.COUNT =DCOUNT(VAR.REJ.REASON,@VM)
    GOSUB REJECT.DETAILS
    REJECT.REASON<1,-1> = REJECT.DESC
    VAR.ROUTE.NO      = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.OTH.ROUTE.NO>
    GOSUB ROUTING.DETAILS

RETURN

AMOUNT.DETAILS:
***************

    VAR.AMOUNT        = R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.AMOUNT>
    Y.AMOUNT = DCOUNT(VAR.AMOUNT,@VM)
    Y.AMT = 1
    LOOP
    WHILE Y.AMT LE Y.AMOUNT
        VAR.TOTAL.AMT.CHEQ.REF<1,-1> += VAR.AMOUNT
        Y.AMT += 1  ;*R22 AUTO CONVERSTION  ++ TO  += 1
    REPEAT
RETURN

REJECT.DETAILS:
****************
    REJECT.DESC = ''
    R.REJECT.REASON = ''
    REJ.ERR         = ''
    REJECT.DESC = ''
    Y.INT = 1
    LOOP
    WHILE Y.INT LE Y.COUNT
        CALL F.READ(FN.REDO.REJECT.REASON,VAR.REJ.REASON<1,Y.INT>,R.REDO.REJECT.REASON,F.REDO.REJECT.REASON,REJ.ERR)
        IF R.REDO.REJECT.REASON THEN
            IF REJECT.DESC EQ '' THEN
                REJECT.DESC = R.REDO.REJECT.REASON<REDO.REJ.DESC>
            END ELSE
                REJECT.DESC := @VM:R.REDO.REJECT.REASON<REDO.REJ.DESC>
            END
        END
        Y.INT += 1 ;*R22 AUTO CONVERSTION  ++ TO  += 1
    REPEAT

RETURN


ROUTING.DETAILS:
****************
    R.REDO.H.ROUTING.NUMBER = ''
    ROUT.ERR                = ''

    CALL F.READ(FN.REDO.H.ROUTING.NUMBER,VAR.ROUTE.NO,R.REDO.H.ROUTING.NUMBER,F.REDO.H.ROUTING.NUMBER,ROUT.ERR)
    ROUTING.DESC = R.REDO.H.ROUTING.NUMBER<REDO.ROUT.BANK.NAME>

RETURN

FORM.OUTPUT.ARRAY:
*******************

    GOSUB GET.TRANSIT.AMT
    Y.OUT.ARRAY1 = '' ; Y.SORT.LIST = '' ; Y.CNT.SORT += 1  ;*R22 AUTO CONVERSTIONT Y.CNT.SORT = Y.CNT.SORT + 1 TO Y.CNT.SORT += 1
    Y.SORT.ID = VAR.AGENCY:VAR.ACC.OFF:VAR.ACCOUNT
    Y.OUT.ARRAY<-1> = VAR.DATE:"*": VAR.AGENCY :"*": VAR.ACC.OFF :"*": VAR.ACCOUNT :"*": VAR.NAME :"*": VAR.CURRENCY :"*"
    Y.OUT.ARRAY :   = VAR.TOTAL.BALANCE :"*": VAR.AVAIL.BALANCE : "*": BAL.IN.TRAN.UNCOMP :"*": BAL.IN.TRAN.COMP :"*"
    Y.OUT.ARRAY :   = VAR.LINE.OF.AVAIL.AMT :"*": VAR.LINE.OF.USED.AMT :"*": VAR.TOTAL.AMT.CHEQ.REF :"*"
    Y.OUT.ARRAY :   = VAR.TOTAL.RISK.AMT :"*": VAR.NO.OF.CHEQ.RECEIVED :"*": VAR.CHEQ.NO :"*": VAR.AMOUNT :"*"
    Y.OUT.ARRAY :   = REJECT.REASON :"*": VAR.ROUTE.NO :"*": VAR.APR.OFF :"*": VAR.DENY.OFF

    LOCATE Y.SORT.ID IN Y.SORT.LIST<1> BY 'AR' SETTING Y.BK.POS ELSE Y.FLAG = ''
    INS Y.SORT.ID BEFORE Y.SORT.LIST<Y.BK.POS>
    INS Y.OUT.ARRAY BEFORE Y.OUT.ARRAY1<Y.BK.POS>


    GOSUB SORTING.ARRAY
    GOSUB NUL.VALUE

RETURN

NUL.VALUE:
**********

    VAR.DATE                = ''  ; VAR.AGENCY           = ''
    VAR.ACC.OFF             = ''  ; VAR.ACCOUNT          = ''
    VAR.NAME                = ''  ; VAR.CURRENCY         = ''
    VAR.TOTAL.BALANCE       = ''  ; VAR.AVAIL.BALANCE    = ''
    BAL.IN.TRAN.UNCOMP      = ''  ; BAL.IN.TRAN.COMP     = ''
    VAR.LINE.OF.AVAIL.AMT   = ''  ; VAR.LINE.OF.USED.AMT = ''
    VAR.TOTAL.AMT.CHEQ.REF  = ''  ; VAR.TOTAL.RISK.AMT   = ''
    VAR.NO.OF.CHEQ.RECEIVED = ''  ; VAR.CHEQ.NO          = ''
    VAR.AMOUNT              = ''  ; REJECT.REASON         = ''
    VAR.ROUTE.NO            = ''  ; VAR.APR.OFF          = ''
    VAR.DENY.OFF            = ''

RETURN
************
SORTING.ARRAY:
*************

    IF VAR.ACCOUNT THEN
        Y.REC = Y.OUT.ARRAY<Y.CNT.SORT>
        Y.SORT.VAL = VAR.AGENCY:VAR.ACC.OFF:VAR.ACCOUNT
        Y.SORT.ARR<-1> = Y.SORT.VAL
        Y.AZ.SORT.VAL<-1> = Y.REC:@FM:Y.SORT.VAL
    END
RETURN
***************
SORT.OUT.ARRAY:
***************


*    Y.REC.COUNT = DCOUNT(Y.OUT.ARRAY,FM)
*   Y.REC.START = 1
*  LOOP
* WHILE Y.REC.START LE Y.REC.COUNT
*    Y.REC =  Y.OUT.ARRAY<Y.REC.START>
*   Y.VAR.ACCOUNT = FIELD(Y.REC,'*',4)
*  Y.CO.CODE     = FIELD(Y.REC,'*',2)
* Y.ACCT.OFF    = FIELD(Y.REC,'*',3)
*Y.SORT.VAL = Y.CO.CODE:Y.ACCT.OFF:Y.VAR.ACCOUNT

*Y.AZ.SORT.VAL<-1> = Y.REC:FM:Y.SORT.VAL
*
*      Y.SORT.ARR<-1>= Y.SORT.VAL
*     Y.REC.START += 1
*    Y.REC.START += 1
*REPEAT


    Y.SORT.ARR = SORT(Y.SORT.ARR)

    LOOP
        REMOVE Y.ARR.ID FROM Y.SORT.ARR SETTING Y.ARR.POS
    WHILE Y.ARR.ID : Y.ARR.POS
        LOCATE Y.ARR.ID IN Y.AZ.SORT.VAL SETTING Y.FM.POS THEN
            Y.ARRAY<-1> = Y.AZ.SORT.VAL<Y.FM.POS-1>
            DEL Y.AZ.SORT.VAL<Y.FM.POS>
            DEL Y.AZ.SORT.VAL<Y.FM.POS-1>
        END
    REPEAT
    Y.OUT.ARRAY = Y.ARRAY
RETURN
*-------------------------------------------------* END OF SUBROUTINE*------------------------------------------
END
