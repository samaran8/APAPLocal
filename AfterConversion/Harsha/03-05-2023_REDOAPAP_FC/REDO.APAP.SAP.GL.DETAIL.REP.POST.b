* @ValidationCode : MjoyMzA3NjQxNDQ6Q3AxMjUyOjE2ODI1MDI2NjU5MDA6SVRTUzotMTotMToxMjczOjE6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 26 Apr 2023 15:21:05
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1273
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOAPAP
*MODIFICATION HISTORY:
*---------------------------------------------------------------------------------------
*DATE               WHO                       REFERENCE                 DESCRIPTION
*18-04-2023       CONVERSION TOOLS            AUTO R22 CODE CONVERSION  ++ to +=
*18-04-2023       AJITHKUMAR                  MANUAL R22 CODE CONVERSION CALL RTN FORMAT CAN BE MODIFIED
*----------------------------------------------------------------------------------------




SUBROUTINE REDO.APAP.SAP.GL.DETAIL.REP.POST
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_REDO.APAP.SAP.GL.DETAIL.COMMON
    $INSERT I_F.REDO.GL.H.EXTRACT.PARAMETER

    GOSUB INITIALISE
    GOSUB READ.GENERATED.FILES
    GOSUB PROCESS.NORMAL.FILES
    GOSUB PROCESS.REVAL.FILES
RETURN

INITIALISE:

    Y.DATE = BATCH.DETAILS<3,1,1>

    IF Y.DATE THEN
        PROCESS.DATE =Y.DATE
    END ELSE
        PROCESS.DATE = R.DATES(EB.DAT.LAST.WORKING.DAY)
    END
    CONSOLIDATED.DETAIL.ID = "DETAIL":PROCESS.DATE[7,2]:PROCESS.DATE[5,2]:PROCESS.DATE[1,4]:Y.EXT.FILE.EXTENSION
    Y.INTF.EXTENSION       =  R.REDO.GL.H.EXTRACT.PARAMETER<SAP.EP.EXT.FILE.EXTN>
    Y.NORMAL.ID            =  Y.NORMAL.ID:PROCESS.DATE[7,2]:PROCESS.DATE[5,2]:PROCESS.DATE[1,4]:Y.INTF.EXTENSION
    Y.REVAL.ID             =  Y.REVAL.ID:PROCESS.DATE[7,2]:PROCESS.DATE[5,2]:PROCESS.DATE[1,4]:Y.INTF.EXTENSION
RETURN

READ.GENERATED.FILES:
    SHELL.CMD ='SH -c '
    EXEC.COM="cat "
    OLD.OUT.FILES = 'SFI':'*'
    EXE.CAT = "cat ":Y.EXTRACT.OUT.PATH:"/":OLD.OUT.FILES:" >> ":Y.EXTRACT.OUT.PATH:"/":CONSOLIDATED.DETAIL.ID
    EXE.RM="rm ":Y.EXTRACT.OUT.PATH:"/":OLD.OUT.FILES
    EXE.SPLIT="split -l 500000 ":Y.EXTRACT.OUT.PATH:"/":CONSOLIDATED.DETAIL.ID:" ":Y.EXTRACT.OUT.PATH:"/":CONSOLIDATED.DETAIL.ID
    EXE.RM.CON="rm ":Y.EXTRACT.OUT.PATH:"/":CONSOLIDATED.DETAIL.ID

    DAEMON.CMD = SHELL.CMD:EXE.CAT
    DAEMON.REM.CMD = SHELL.CMD:EXE.RM
    DAEMON.SPL.CMD = SHELL.CMD:EXE.SPLIT
    DAEMON.REM.CMD.CON = SHELL.CMD:EXE.RM.CON

    EXECUTE DAEMON.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.CAT.VALUE
    EXECUTE DAEMON.REM.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.REM.VALUE
    EXECUTE DAEMON.SPL.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.SPL.VALUE
    EXECUTE DAEMON.REM.CMD.CON RETURNING RETURN.VALUE CAPTURING CAPTURE.REM.CON.VALUE

    SEL.SESSION.FILES = "SSELECT ":Y.EXTRACT.OUT.PATH:" WITH @ID LIKE DETAIL..."
    CALL EB.READLIST(SEL.SESSION.FILES,SELECTED.SESSION.FILES,'',NO.OF.FILES.SELECTED,ERR.SESSION.FILES)
    Y.FILE.EXTN=R.REDO.GL.H.EXTRACT.PARAMETER<SAP.EP.DET.FILE.EXTN>
    Y.CNT=1
    LOOP
        REMOVE SESSION.FILE.ID FROM SELECTED.SESSION.FILES SETTING SELECTED.SESSION.FILES.POS
    WHILE SESSION.FILE.ID:SELECTED.SESSION.FILES.POS
        Y.NEW.SESSION.FILE.ID=FIELD(SESSION.FILE.ID,'.',1)
        EXE.MV="mv ":Y.EXTRACT.OUT.PATH:"/":SESSION.FILE.ID:" "::Y.EXTRACT.OUT.PATH:"/":Y.NEW.SESSION.FILE.ID:Y.CNT:Y.FILE.EXTN
        DAEMON.EXE.MV = SHELL.CMD:EXE.MV
        EXECUTE DAEMON.EXE.MV RETURNING RETURN.VALUE CAPTURING CAPTURE.MV.CON.VALUE
        Y.CNT += 1 ;*R22 AUTO CODE CONVERSION
    REPEAT
RETURN
*--------------------
PROCESS.NORMAL.FILES:
*--------------------

    OLD.OUT.FILES = 'NORMAL':'*'
    EXE.CAT = "cat ":Y.EXTRACT.OUT.PATH.NOR:"/":OLD.OUT.FILES:" >> ":Y.EXTRACT.OUT.PATH.NOR:"/":Y.NORMAL.ID
    EXE.RM="rm ":Y.EXTRACT.OUT.PATH.NOR:"/":OLD.OUT.FILES
    DAEMON.CMD = SHELL.CMD:EXE.CAT
    DAEMON.REM.CMD = SHELL.CMD:EXE.RM
    EXECUTE DAEMON.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.CAT.VALUE
    EXECUTE DAEMON.REM.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.REM.VALUE

    READ NORMAL.FILE.DATA FROM F.EXTRACT.OUT.FILE.PATH.NOR, Y.NORMAL.ID ELSE
        CALL OCOMO("CANNOT READ FROM ":F.EXTRACT.OUT.FILE.PATH)
    END
    EXE.RM.NOR="rm ":Y.EXTRACT.OUT.PATH.NOR:"/":Y.NORMAL.ID
    DAEMON.REM.NOR = SHELL.CMD:EXE.RM.NOR
    EXECUTE DAEMON.REM.NOR RETURNING RETURN.VALUE CAPTURING CAPTURE.REM.VALUE

    OPENSEQ Y.EXTRACT.OUT.PATH.NOR, Y.NORMAL.ID TO Y.NORMAL.FILE.PATH ELSE
        CREATE Y.NORMAL.FILE.PATH ELSE
            CALL OCOMO("CANNOT OPEN ":Y.NORMAL.FILE.PATH)
        END
    END

    Y.REVAL.IND=''
    CALL APAP.REDOAPAP.redoApapSapGlNrHdrExpLog(NORMAL.FILE.DATA,Y.REVAL.IND) ;*R22 MANUAL CODE CONVERSION
    LOOP
        REMOVE NORMAL.FILE.LINE FROM NORMAL.FILE.DATA SETTING NORMAL.LINE.POS
    WHILE NORMAL.FILE.LINE:NORMAL.LINE.POS
        WRITESEQ NORMAL.FILE.LINE TO Y.NORMAL.FILE.PATH ELSE
            CALL OCOMO("CANNOT WRITE TO NORMAL FILE")
        END
    REPEAT
RETURN
*-------------------
PROCESS.REVAL.FILES:
*-------------------

    OLD.OUT.FILES = 'REVAL':'*'
    EXE.CAT = "cat ":Y.EXTRACT.OUT.PATH.REV:"/":OLD.OUT.FILES:" >> ":Y.EXTRACT.OUT.PATH.REV:"/":Y.REVAL.ID
    EXE.RM="rm ":Y.EXTRACT.OUT.PATH.REV:"/":OLD.OUT.FILES
    DAEMON.CMD = SHELL.CMD:EXE.CAT
    DAEMON.REM.CMD = SHELL.CMD:EXE.RM
    EXECUTE DAEMON.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.CAT.VALUE
    EXECUTE DAEMON.REM.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.REM.VALUE

    READ REVAL.FILE.DATA FROM F.EXTRACT.OUT.FILE.PATH.REV,Y.REVAL.ID ELSE
        CALL OCOMO("CANNOT READ FROM ":F.EXTRACT.OUT.FILE.PATH)
    END
    EXE.RM.REV="rm ":Y.EXTRACT.OUT.PATH.REV:"/":Y.REVAL.ID
    DAEMON.REM.REV = SHELL.CMD:EXE.RM.REV
    EXECUTE DAEMON.REM.REV RETURNING RETURN.VALUE CAPTURING CAPTURE.REM.VALUE
    OPENSEQ Y.EXTRACT.OUT.PATH.REV, Y.REVAL.ID TO Y.REVAL.FILE.PATH ELSE
        CREATE Y.REVAL.FILE.PATH ELSE
            CALL OCOMO("CANNOT OPEN ":Y.REVAL.FILE.PATH)
        END
    END
    Y.REVAL.IND='REVAL'
    CALL APAP.REDOAPAP.redoApapSapGlNrHdrExpLog(REVAL.FILE.DATA,Y.REVAL.IND) ;*R22 MANUAL CODE CONVERSION
    LOOP
        REMOVE REVAL.FILE.LINE FROM REVAL.FILE.DATA SETTING REVAL.LINE.POS
    WHILE REVAL.FILE.LINE:REVAL.LINE.POS
        WRITESEQ REVAL.FILE.LINE TO Y.REVAL.FILE.PATH ELSE
            CALL OCOMO("CANNOT WRITE TO REVAL FILE")
        END
    REPEAT

RETURN

END
