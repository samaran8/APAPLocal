$PACKAGE APAP.REDOENQ
SUBROUTINE REDO.NOFILE.AUDIT.ENQ(Y.ARRAY)
***********************************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: H GANESH
* PROGRAM NAME: REDO.NOFILE.AUDIT.ENQ
* ODR NO      : ODR-2009-10-0838
*----------------------------------------------------------------------
*DESCRIPTION: This is the Routine for NOFILE enquiry to REDO.NOFILE.AUDIT.ENQ
* it fetches all prodcut for the customer
*IN PARAMETER:  NA
*OUT PARAMETER: Y.ARRAY
*LINKED WITH: REDO.LETTER.ISSUE
*----------------------------------------------------------------------
* Modification History :
*-----------------------
*DATE           WHO           REFERENCE         DESCRIPTION
*18.03.2010  H GANESH     ODR-2009-10-0838   INITIAL CREATION
*07.12.2010  C SRIRAMAN   ODR-2009-10-0838    MODIFICATION
*08.09.2011  Sudharsanan  PACS00115272        Modify the code based on issue
* 13-APRIL-2023      Conversion Tool       R22 Auto Conversion - VM to @VM , FM to @FM , ++ to += and SM to @SM
* 13-APRIL-2023      Harsha                R22 Manual Conversion - No changes
*----------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.ENQUIRY
    $INSERT I_F.ACCOUNT
    $INSERT I_F.REDO.LETTER.ISSUE
    $INSERT I_F.AA.ARRANGEMENT

    GOSUB INIT
    GOSUB GET.VALUES
    IF Y.CUS.ID AND Y.LETTER.TYPE THEN
        GOSUB PROCESS
    END
RETURN

*----------------------------------------------------------------------
INIT:
*----------------------------------------------------------------------

    Y.CUS.ID = '' ;CHK.VAL = 1
    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    FN.ACCOUNT.HIS='F.ACCOUNT$HIS'
    F.ACCOUNT.HIS=''
    CALL OPF(FN.ACCOUNT.HIS,F.ACCOUNT.HIS)
    FN.ACCOUNT.CLOSED = 'F.ACCOUNT.CLOSED'
    F.ACCOUNT.CLOSED = ''
    CALL OPF(FN.ACCOUNT.CLOSED,F.ACCOUNT.CLOSED)
    Y.ACCOUNT.ARRAY=''
    FN.AA.ARRANGEMENT='F.AA.ARRANGEMENT'
    F.AA.ARRANGEMENT=''
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.CUSTOMER.ACCOUNT = 'F.CUSTOMER.ACCOUNT'
    F.CUSTOMER.ACCOUNT = ''
    CALL OPF(FN.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT)

    FN.JOINT.CONTRACTS.XREF = 'F.JOINT.CONTRACTS.XREF'
    F.JOINT.CONTRACTS.XREF = ''
    CALL OPF(FN.JOINT.CONTRACTS.XREF,F.JOINT.CONTRACTS.XREF)

    LOC.APPL = 'ACCOUNT'
    LOC.FIELDS = 'L.AC.STATUS1':@VM:'L.AC.STATUS2'
    LOC.POS = ''
    CALL MULTI.GET.LOC.REF(LOC.APPL,LOC.FIELDS,LOC.POS)
    Y.L.AC.STATUS1 = LOC.POS<1,1>
    Y.L.AC.STATUS2 = LOC.POS<1,2>

RETURN

*----------------------------------------------------------------------
GET.VALUES:
*----------------------------------------------------------------------
    LOCATE 'CUSTOMER' IN D.FIELDS<1> SETTING Y.POS1 THEN
        Y.CUS.ID = FIELD(D.RANGE.AND.VALUE<Y.POS1>,'-',1)
    END
    LOCATE 'LETTER.TYPE' IN D.FIELDS<1> SETTING Y.POS2 THEN
        Y.LETTER.TYPE=FIELD(D.RANGE.AND.VALUE<Y.POS2>,'-',1)
    END

RETURN

*----------------------------------------------------------------------
PROCESS:
*----------------------------------------------------------------------
    CALL F.READ(FN.CUSTOMER.ACCOUNT,Y.CUS.ID,R.CUST.ACCT,F.CUSTOMER.ACCOUNT,CUST.ACC)
    CALL F.READ(FN.JOINT.CONTRACTS.XREF,Y.CUS.ID,R.JOINT.CXREF,F.JOINT.CONTRACTS.XREF,JOINT.XREF)

    ACCT.LIST = R.CUST.ACCT:@FM:R.JOINT.CXREF

    IF Y.LETTER.TYPE EQ 'AUDITOR' OR Y.LETTER.TYPE EQ 'INTERNAL' THEN

*SEL.CMD='SELECT ':FN.ACCOUNT:' WITH (CUSTOMER EQ ':Y.CUS.ID:' OR JOINT.HOLDER EQ ':Y.CUS.ID:')
* AND ((CATEGORY GE 1000 AND CATEGORY LE 1999) OR (CATEGORY GE 6000 AND CATEGORY LE 6999))'
*CALL EB.READLIST(SEL.CMD,SEL.LIST,'',SEL.NOR,SEL.RET)

        GOSUB FORM.ACCOUNT.ID

        SEL.LIST = Y.ACCOUNT.IDS
        SEL.CMD1='SELECT ':FN.ACCOUNT.CLOSED:' WITH @ID NE ':LCCY:'...'
        CALL EB.READLIST(SEL.CMD1,SEL.LIST1,'',SEL.NOR1,SEL.RET1)
        VAR1=1
        LOOP
        WHILE VAR1 LE SEL.NOR1
            Y.PRODUCT.ID=SEL.LIST1<VAR1>
            Y.ACT.ID = Y.PRODUCT.ID
            R.ACCOUNT = ''
            CALL EB.READ.HISTORY.REC(F.ACCOUNT.HIS,Y.ACT.ID,R.ACCOUNT,ACC.ERR.HIS)
            IF NOT(R.ACCOUNT) THEN
                Y.ACT.ID = Y.PRODUCT.ID:';':CHK.VAL
                CALL F.READ(FN.ACCOUNT.HIS,Y.ACT.ID,R.ACCOUNT,F.ACCOUNT.HIS,AC.ER.HIS)
            END
            Y.STATUS2 = R.ACCOUNT<AC.LOCAL.REF,Y.L.AC.STATUS2>
            CHANGE @SM TO @FM IN Y.STATUS2
            Y.CUSTOMER.ID  = R.ACCOUNT<AC.CUSTOMER>
            IF Y.CUSTOMER.ID THEN
                GOSUB FORM.ACCOUNT.ID1
            END
            VAR1 += 1
        REPEAT
        IF Y.ACCT.IDS THEN
            Y.ARRAY = SEL.LIST:@FM:Y.ACCT.IDS
        END ELSE
            Y.ARRAY = SEL.LIST
        END
    END

*****THIS PART HANDLE IN ANOTHER ROUTINE

*IF Y.LETTER.TYPE EQ 'BALANCE' THEN
*        SEL.CMD= 'SELECT ':FN.AA.ARRANGEMENT:' WITH CUSTOMER EQ ':Y.CUS.ID:' AND (ARR.STATUS EQ MATURED OR ARR.STATUS EQ EXPIRED)'
*        CALL EB.READLIST(SEL.CMD,SEL.LIST,'',SEL.NOR,SEL.RET)
*        Y.ARRAY = SEL.LIST
*END
***********

    IF Y.LETTER.TYPE EQ 'COMMERCIAL' OR Y.LETTER.TYPE EQ 'CONSULAR' OR Y.LETTER.TYPE EQ 'INDIVIDUAL' THEN

* SEL.CMD='SELECT ':FN.ACCOUNT:' WITH (CUSTOMER EQ ':Y.CUS.ID:' OR JOINT.HOLDER EQ ':Y.CUS.ID:')
* AND ((CATEGORY GE 1000 AND CATEGORY LE 1999) OR (CATEGORY GE 6000 AND CATEGORY LE 6999))'
* SEL.CMD:=' AND L.AC.STATUS1 EQ ACTIVE'
*CALL EB.READLIST(SEL.CMD,SEL.LIST,'',SEL.NOR,SEL.RET)

        GOSUB FORM.ACCOUNT.ID2
        SEL.LIST = Y.ACCOUNT.IDS
        Y.ARRAY = SEL.LIST
    END
RETURN
*----------------------------------------------------------------------
FORM.ACCOUNT.ID:
*------------------
    ACCT.TOT = DCOUNT(ACCT.LIST,@FM)
    ACCT.CNT = 1
    LOOP
    WHILE ACCT.CNT LE ACCT.TOT
        Y.ACT.ID = ''
        Y.ACT.ID = ACCT.LIST<ACCT.CNT>
        IF Y.ACT.ID THEN
            R.ACCOUNT =''
            CALL F.READ(FN.ACCOUNT,Y.ACT.ID,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
            VAR.CATEGORY = R.ACCOUNT<AC.CATEGORY>
            IF ((VAR.CATEGORY GE 1000 AND VAR.CATEGORY LE 1999) OR (VAR.CATEGORY GE 6000 AND VAR.CATEGORY LE 6999)) THEN
                GOSUB CHECK.ACCTS
            END
        END
        ACCT.CNT += 1
    REPEAT
RETURN
*----------------------------------------------------------------------
FORM.ACCOUNT.ID1:
*------------------
    LOCATE 'GARNISHMENT' IN Y.STATUS2 SETTING STAT.POS ELSE
        Y.JOINT.HOLDER = R.ACCOUNT<AC.JOINT.HOLDER>
        Y.CATEGORY = R.ACCOUNT<AC.CATEGORY>
        IF (Y.CATEGORY GE 1000 AND Y.CATEGORY LE 1999) OR (Y.CATEGORY GE 6000 AND Y.CATEGORY LE 6999) THEN
            GOSUB CHECK.CLOSED.ACCTS
        END
    END
RETURN
*----------------------------------------------------------------------
FORM.ACCOUNT.ID2:
*-----------------
******THIS PART TO CHECK THE ACTIVE CUSTOMERS
    ACCT.TOT = DCOUNT(ACCT.LIST,@FM)
    ACCT.CNT = 1
    LOOP
    WHILE ACCT.CNT LE ACCT.TOT
        Y.ACT.ID = ''
        Y.ACT.ID = ACCT.LIST<ACCT.CNT>
        IF Y.ACT.ID THEN
            R.ACCOUNT =''
            CALL F.READ(FN.ACCOUNT,Y.ACT.ID,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
            VAR.CATEGORY = R.ACCOUNT<AC.CATEGORY>
            Y.STATUS1 = R.ACCOUNT<AC.LOCAL.REF,Y.L.AC.STATUS1>
            IF ((VAR.CATEGORY GE 1000 AND VAR.CATEGORY LE 1999) OR (VAR.CATEGORY GE 6000 AND VAR.CATEGORY LE 6999)) AND (Y.STATUS1 EQ 'ACTIVE') THEN
                GOSUB CHECK.ACCTS
            END
        END
        ACCT.CNT += 1
    REPEAT
RETURN
*----------------------------------------------------------------------
CHECK.ACCTS:
*------------
    Y.STATUS2 = R.ACCOUNT<AC.LOCAL.REF,Y.L.AC.STATUS2>
    CHANGE @SM TO @FM IN Y.STATUS2
    LOCATE 'GARNISHMENT' IN Y.STATUS2 SETTING STAT.POS ELSE
        Y.JOINT.HOLDER = R.ACCOUNT<AC.JOINT.HOLDER>
        CHANGE @VM TO @FM IN Y.JOINT.HOLDER
        LOCATE Y.CUS.ID IN Y.JOINT.HOLDER SETTING CUS.POS THEN
            Y.RELATION.CODE = R.ACCOUNT<AC.RELATION.CODE,CUS.POS>
            IF Y.RELATION.CODE GE 500 AND Y.RELATION.CODE LE 509 THEN
                Y.ACCOUNT.IDS<-1> = Y.ACT.ID
            END
        END ELSE
            Y.ACCOUNT.IDS<-1> = Y.ACT.ID
        END
    END
RETURN
*------------------------------------------------------------------------
CHECK.CLOSED.ACCTS:
*-------------------
    IF Y.CUS.ID EQ Y.CUSTOMER.ID THEN
        Y.ACCT.IDS<-1> = Y.PRODUCT.ID
    END ELSE
        CHANGE @VM TO @FM IN Y.JOINT.HOLDER
        LOCATE Y.CUS.ID IN Y.JOINT.HOLDER SETTING CUS.POS THEN
            Y.RELATION.CODE = R.ACCOUNT<AC.RELATION.CODE,CUS.POS>
            IF Y.RELATION.CODE GE 500 AND Y.RELATION.CODE LE 509 THEN
                Y.ACCT.IDS<-1> = Y.PRODUCT.ID
            END
        END
    END
RETURN
*-------------------------------------------------------------------------
END
