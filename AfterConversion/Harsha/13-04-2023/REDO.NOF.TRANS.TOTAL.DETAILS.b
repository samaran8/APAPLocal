$PACKAGE APAP.REDOENQ
SUBROUTINE REDO.NOF.TRANS.TOTAL.DETAILS(Y.FINAL.ARR)
*-----------------------------------------------------------------------------
*  Company Name : Asociacion Popular de Ahorros y Prestamos
*  Developed By : Temenos Application Management
*  Program Name : REDO.NOF.TRANS.TOTAL.DETAILS
*-----------------------------------------------------------------------------
* Description:
*-------------
*  This is an Nofile routine attached to the Enquiry used to display
*  transactions of all consolidated details
*------------------------------------------------------------------------------
* Linked With   : ENQUIRY>REDO.TRANS.TOTAL.DETAILS.ENQ
* In Parameter  : N/A
* Out Parameter : N/A
*---------------------------------------------------------------------------------
* Modification History:
*----------------------
* 21-03-2011       DHAMU S          ODR-2011-03-0113(Report 22&20)       Initial Creation
* 13-APRIL-2023      Conversion Tool       ;*R22 Auto Conversion  - F.READ to CACHE.READ , VM to @VM , FM to @FM  and SM to @SM
* 13-APRIL-2023      Harsha                R22 Manual Conversion - No changes
*----------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.TELLER
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.FT.TXN.TYPE.CONDITION
    $INSERT I_F.TELLER.TRANSACTION
*-----------------------------------------------------------------------------------
    GOSUB OPEN
    GOSUB CHECK.LOCATE
    GOSUB BUILD.SEL.CMD
    GOSUB PROCESS
    GOSUB GOEND
RETURN
*----
OPEN:
*----

    Y.DATE = '' ; Y.INPUTTER = ''; Y.COMPANY.NAME = ''; Y.TRANSACTION.TYPE = ''; Y.FROM = ''; Y.TO = '';
    Y.AGENCY = '' ; Y.FROM.DATE = '' ;Y.TO.DATE = '' ; Y.FT.STMT.ENTRY.NOS = '' ;Y.STMT.ID.BASE = ''; Y.TILL = '';
    Y.CNTR = '' ; Y.TT.STMT.ENTRY.NOS = '' ;
    Y.TXN.TYPE = '' ; Y.COMPANY.CODE = '' ;  Y.ERR.FLAG = ''; Y.PROCESSED.IDS = ''

    FN.REDO.FT.HIS = 'F.REDO.FT.HIS'
    F.REDO.FT.HIS = ''
    CALL OPF(FN.REDO.FT.HIS,F.REDO.FT.HIS)

    FN.REDO.TT.HIS = 'F.REDO.TT.HIS'
    F.REDO.TT.HIS = ''
    CALL OPF(FN.REDO.TT.HIS,F.REDO.TT.HIS)

    FN.TELLER.ID = 'F.TELLER.ID'
    F.TELLER.ID = ''
    CALL OPF(FN.TELLER.ID,F.TELLER.ID)

    FN.TELLER = 'F.TELLER'
    F.TELLER = ''
    CALL OPF(FN.TELLER,F.TELLER)

    FN.FUNDS.TRANSFER$HIS = 'F.FUNDS.TRANSFER$HIS'
    F.FUNDS.TRANSFER$HIS = ''
    CALL OPF(FN.FUNDS.TRANSFER$HIS,F.FUNDS.TRANSFER$HIS)

    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER = ''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)

    FN.TELLER$HIS  = 'F.TELLER$HIS'
    F.TELLER$HIS  = ''
    CALL OPF(FN.TELLER$HIS,F.TELLER$HIS)

    FN.STMT.ENTRY = 'F.STMT.ENTRY'
    F.STMT.ENTRY = ''
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)

    FN.TXN.TYPE.CONDITION = 'F.FT.TXN.TYPE.CONDITION'
    F.TXN.TYPE.CONDITION = ''
    CALL OPF(FN.TXN.TYPE.CONDITION,F.TXN.TYPE.CONDITION)

    FN.TELLER.TRANSACTION = 'F.TELLER.TRANSACTION'
    F.TELLER.TRANSACTION  = ''
    CALL OPF(FN.TELLER.TRANSACTION,F.TELLER.TRANSACTION)

    APL.ARRAY = 'FT.TXN.TYPE.CONDITION':@FM:'TELLER.TRANSACTION'
    APL.FIELD = 'L.FTTC.CHANNELS':@FM:'L.TT.PAY.TYPE'
    CALL MULTI.GET.LOC.REF(APL.ARRAY,APL.FIELD,FLD.POS)
    LOC.L.FTTC.CHANNELS.POS = FLD.POS<1,1>
    LOC.L.TT.PAY.TYPE.POS   = FLD.POS<2,1>
RETURN
*------------
CHECK.LOCATE:
*------------

    LOCATE "TXN.DATE" IN D.FIELDS<1> SETTING DATE.POS THEN
        Y.DATE = D.RANGE.AND.VALUE<DATE.POS>
        IF Y.DATE THEN
            GOSUB CHECK.DATE
        END
    END

    LOCATE "TXN.USER" IN D.FIELDS<1> SETTING INPUTTER.POS THEN
        Y.INPUTTER = D.RANGE.AND.VALUE<INPUTTER.POS>
    END

    LOCATE "COMPANY.NAME" IN D.FIELDS<1> SETTING COMPANY.POS THEN
        Y.COMPANY.NAME  = D.RANGE.AND.VALUE<COMPANY.POS>
    END


    LOCATE "TXN.TYPE" IN D.FIELDS<1> SETTING TRANSACTION.POS THEN
        Y.TRANSACTION.TYPE = D.RANGE.AND.VALUE<TRANSACTION.POS>
    END

    LOCATE "AGENCY" IN D.FIELDS<1> SETTING AGENCY.POS THEN
        Y.AGENCY = D.RANGE.AND.VALUE<AGENCY.POS>
    END

RETURN
*----------
CHECK.DATE:
*----------
    Y.FROM.DATE = FIELD(Y.DATE,@SM,1)
    Y.TO.DATE   = FIELD(Y.DATE,@SM,2)
    IF NOT(NUM(Y.FROM.DATE)) OR LEN(Y.FROM.DATE) NE '8' OR NOT(NUM(Y.TO.DATE)) OR LEN(Y.TO.DATE) NE '8' THEN
        ENQ.ERROR = 'EB-REDO.DATE.RANGE'
    END ELSE
        IF Y.FROM.DATE[5,2] GT '12' OR Y.TO.DATE[5,2] GT '12' OR Y.FROM.DATE[7,2] GT '31' OR Y.TO.DATE[7,2] GT '31' OR Y.FROM.DATE GT Y.TO.DATE THEN
            ENQ.ERROR = 'EB-REDO.DATE.RANGE'
        END ELSE
            GOSUB DATE.CHECK
        END
    END

RETURN

*----------
DATE.CHECK:
*----------

    Y.F.DATE = Y.FROM.DATE[3,6]:"0000"
    Y.T.DATE = Y.TO.DATE[3,6]:"2359"

RETURN
*-------------
BUILD.SEL.CMD:
*-------------

    SEL.CMD.TT.HIS = ''
    SEL.CMD.FT.HIS = ''
    Y.FINAL.ARRAY = ''
    FIN.CCY = ''
    FIN.AMT.PMT = ''
    FIN.AMT.STO = ''
    FIN.PMT.CNT = ''
    FIN.STO.CNT = ''
    HIS.FLAG = ''
    NOT.HIS = ''

    FIN.TT.AMT = ''
    FIN.TT.CNT = ''
    SUB.TOT = ''
    CANDIT.SMT = 0
    CANDIT.STO = 0
    CANDIT.TT = 0


    IF Y.F.DATE AND Y.T.DATE THEN
        SEL.CMD.FT =" SELECT ":FN.REDO.FT.HIS:" WITH DATE.TIME GE ":Y.F.DATE:" AND DATE.TIME LE ":Y.T.DATE
        SEL.CMD.TT =" SELECT ":FN.REDO.TT.HIS:" WITH DATE.TIME GE ":Y.F.DATE:" AND DATE.TIME LE ":Y.T.DATE
    END ELSE
        GOSUB GOEND
    END

    IF Y.INPUTTER THEN
        SEL.CMD.FT :=" AND INPUTTER LIKE ...":Y.INPUTTER:"..."
        SEL.CMD.TT :=" AND INPUTTER LIKE ...":Y.INPUTTER:"..."
    END

    IF Y.COMPANY.NAME THEN
        SEL.CMD.FT :=" AND L.FT.CMPNY.NAME EQ ":Y.COMPANY.NAME
        SEL.CMD.TT :=" AND L.TT.CMPNY.NAME EQ ":Y.COMPANY.NAME
    END

    IF Y.AGENCY THEN
        SEL.CMD.FT :=" AND CO.CODE EQ ":Y.AGENCY
        SEL.CMD.TT :=" AND CO.CODE EQ ":Y.AGENCY
    END

    IF Y.TRANSACTION.TYPE NE '' AND NUM(Y.TRANSACTION.TYPE) THEN
        SEL.CMD.TT :=" AND TRANSACTION.CODE EQ ":Y.TRANSACTION.TYPE
    END

    IF Y.TRANSACTION.TYPE AND NOT(NUM(Y.TRANSACTION.TYPE)) THEN
        SEL.CMD.FT :=" AND TRANSACTION.TYPE EQ ":Y.TRANSACTION.TYPE
    END


    SEL.CMD.FT :=" BY DATE.OF.TXN BY TRANSACTION.TYPE BY DEBIT.CURRENCY"
    SEL.CMD.TT :=" BY DATE.OF.TXN BY TRANSACTION.CODE BY CURRENCY.1"

RETURN

*-------
PROCESS:
*-------

    IF Y.TRANSACTION.TYPE THEN
        IF NUM(Y.TRANSACTION.TYPE) THEN
            CALL EB.READLIST(SEL.CMD.TT,SEL.LIST2,'',NO.OF.REC2,REC2.ERR)
        END ELSE
            CALL EB.READLIST(SEL.CMD.FT,SEL.LIST1,'',NO.OF.REC1,REC1.ERR)
        END
    END ELSE
        CALL EB.READLIST(SEL.CMD.TT,SEL.LIST2,'',NO.OF.REC2,REC2.ERR)
        CALL EB.READLIST(SEL.CMD.FT,SEL.LIST1,'',NO.OF.REC1,REC1.ERR)
    END


    IF SEL.LIST1 THEN
        GOSUB CHECK.FUNDS.TRANSFER
    END
    IF SEL.LIST2 THEN
        GOSUB CHECK.TELLER
    END

    IF FIN.CCY THEN
        GOSUB FORM.STRING
    END
RETURN

*--------------------
CHECK.FUNDS.TRANSFER:
*--------------------

    Y.FIN.CNT = DCOUNT(SEL.LIST1,@FM)
    Y.EACH.CNT = 1
    Y.DEBIT.AMOUNT.PMT = 0
    Y.DEBIT.AMOUNT.STO = 0
    PMT.CNT = 0
    STO.CNT = 0
    REMOVE Y.SEL.ID FROM SEL.LIST1 SETTING FT.POS
    GOSUB READ.FT
    CHK.TRANS.TYPE = VAL.TRANS.TYPE
    CHK.CCY = VAL.CCY
    CHK.DATE = VAL.DATE
    LOOP
    WHILE Y.SEL.ID:FT.POS

        IF (CHK.TRANS.TYPE EQ VAL.TRANS.TYPE AND CHK.CCY EQ VAL.CCY AND CHK.DATE EQ VAL.DATE) OR Y.EACH.CNT EQ Y.FIN.CNT THEN
            STO.FLAG = 0
            GOSUB CHECK.STO.AMOUNT
            IF STO.FLAG EQ 0 THEN
                GOSUB CHECK.PMT.AMOUNT
            END
            REMOVE Y.SEL.ID FROM SEL.LIST1 SETTING FT.POS
            GOSUB READ.FT

        END
        IF (Y.FIN.CNT EQ Y.EACH.CNT) OR NOT(CHK.TRANS.TYPE EQ VAL.TRANS.TYPE AND CHK.CCY EQ VAL.CCY AND CHK.DATE EQ VAL.DATE) THEN

            CALL CACHE.READ(FN.TXN.TYPE.CONDITION, CHK.TRANS.TYPE, R.TXN.TYPE.CONDITION, FT.TRANS.ERR)	;*R22 Auto Conversion  - F.READ to CACHE.READ
            Y.TXN.TYPE = R.TXN.TYPE.CONDITION<FT6.DESCRIPTION,1,1>

            IF Y.DEBIT.AMOUNT.PMT NE 0 OR Y.DEBIT.AMOUNT.STO NE 0 THEN

                Y.DEBIT.AMOUNT.PMT.FMT = FMT(Y.DEBIT.AMOUNT.PMT,"R2,#19")
                Y.DEBIT.AMOUNT.STO.FMT = FMT(Y.DEBIT.AMOUNT.STO,"R2,#19")
                Y.FINAL.ARRAY := TODAY[1,2]:CHK.DATE:"*":Y.TXN.TYPE:"*":CHK.CCY:"*":PMT.CNT:"*":Y.DEBIT.AMOUNT.PMT.FMT:"*":STO.CNT:"*":Y.DEBIT.AMOUNT.STO.FMT:"*0*0.00":@FM
                LOCATE CHK.CCY IN FIN.CCY<1,1> SETTING CCY.POS THEN
                    FIN.AMT.PMT<1,CCY.POS> += Y.DEBIT.AMOUNT.PMT
                    FIN.AMT.STO<1,CCY.POS> += Y.DEBIT.AMOUNT.STO
                    FIN.PMT.CNT<1,CCY.POS> += PMT.CNT
                    FIN.STO.CNT<1,CCY.POS> += STO.CNT
                END ELSE
                    FIN.CCY<1,-1> = CHK.CCY
                    FIN.AMT.PMT<1,-1> = Y.DEBIT.AMOUNT.PMT
                    FIN.AMT.STO<1,-1> = Y.DEBIT.AMOUNT.STO
                    FIN.PMT.CNT<1,-1> = PMT.CNT
                    FIN.STO.CNT<1,-1> = STO.CNT
                END
            END
            PMT.CNT = 0
            Y.DEBIT.AMOUNT.PMT = 0
            STO.CNT = 0
            Y.DEBIT.AMOUNT.STO = 0
            CHK.TRANS.TYPE = VAL.TRANS.TYPE
            CHK.CCY = VAL.CCY
            CHK.DATE = VAL.DATE
        END
    REPEAT
RETURN
*------------
CHECK.TELLER:
*------------

    Y.TT.CNT = DCOUNT(SEL.LIST2,@FM)
    Y.FIN.CNT += Y.TT.CNT
    Y.EACH.CNT = 0
    Y.TT.AMOUNT = 0
    TT.CNT = 0
    REMOVE Y.SEL.ID FROM SEL.LIST2 SETTING TT.POS
    GOSUB READ.TT
    CHK.TRANS.TYPE = VAL.TRANS.TYPE
    CHK.CCY = VAL.CCY
    CHK.DATE = VAL.DATE
    LOOP
    WHILE Y.SEL.ID:TT.POS
        IF (CHK.TRANS.TYPE EQ VAL.TRANS.TYPE AND CHK.CCY EQ VAL.CCY AND CHK.DATE EQ VAL.DATE) OR Y.EACH.CNT EQ Y.TT.CNT THEN
            TT.CNT += 1
            IF R.TELLER<TT.TE.AMOUNT.LOCAL.1> NE '' THEN
                Y.TT.AMOUNT += R.TELLER<TT.TE.AMOUNT.LOCAL.1>
            END ELSE
                Y.TT.AMOUNT += R.TELLER<TT.TE.AMOUNT.FCY.1>
            END
            REMOVE Y.SEL.ID FROM SEL.LIST2 SETTING TT.POS
            GOSUB READ.TT
        END
        IF (Y.TT.CNT EQ Y.EACH.CNT) OR NOT(CHK.TRANS.TYPE EQ VAL.TRANS.TYPE AND CHK.CCY EQ VAL.CCY AND CHK.DATE EQ VAL.DATE) THEN

            CALL CACHE.READ(FN.TELLER.TRANSACTION, CHK.TRANS.TYPE, R.TELLER.TRANSACTION, TELL.TRANS.ERR)	;*R22 Auto Conversion  - F.READ to CACHE.READ
            Y.TXN.TYPE = R.TELLER.TRANSACTION<TT.TR.DESC,1,1>
            IF Y.TT.AMOUNT NE 0 THEN
                Y.TT.AMOUNT.FMT = FMT(Y.TT.AMOUNT,"R2,#19")
                Y.FINAL.ARRAY := TODAY[1,2]:CHK.DATE:"*":Y.TXN.TYPE:"*":CHK.CCY:"*0*0.00*0*0.00*":TT.CNT:"*":Y.TT.AMOUNT.FMT:@FM
                LOCATE CHK.CCY IN FIN.CCY<1,1> SETTING CCY.POS THEN
                    FIN.TT.AMT<1,CCY.POS> += Y.TT.AMOUNT
                    FIN.TT.CNT<1,CCY.POS> += TT.CNT
                END ELSE
                    FIN.CCY<1,-1> = CHK.CCY
                    FIN.TT.AMT<1,-1> = Y.TT.AMOUNT
                    FIN.TT.CNT<1,-1> = TT.CNT
                END
            END
            TT.CNT = 0
            Y.TT.AMOUNT = 0
            CHK.TRANS.TYPE = VAL.TRANS.TYPE
            CHK.CCY = VAL.CCY
            CHK.DATE = VAL.DATE
        END
    REPEAT
RETURN

******************
CHECK.PMT.AMOUNT:
******************
    CALL CACHE.READ(FN.TXN.TYPE.CONDITION, VAL.TRANS.TYPE, R.TXN.TYPE.CONDITION, CONDITION.ERR)	  ;*R22 Auto Conversion  - F.READ to CACHE.READ
    Y.FTTC.CHANNELS = R.TXN.TYPE.CONDITION<FT6.LOCAL.REF,LOC.L.FTTC.CHANNELS.POS>
    IF Y.FTTC.CHANNELS EQ 'PMT' THEN
        Y.DEBIT.AMOUNT.PMT += R.FUNDS.TRANSFER<FT.AMOUNT.DEBITED>[4,LEN(R.FUNDS.TRANSFER<FT.AMOUNT.DEBITED>)]
        PMT.CNT += 1
    END

RETURN
*****************
CHECK.STO.AMOUNT:
****************
    Y.INWARD.PAY.TYPE  = R.FUNDS.TRANSFER<FT.INWARD.PAY.TYPE>
    Y.PAY.TYPE  = FIELD(Y.INWARD.PAY.TYPE,"-",1)
    IF Y.PAY.TYPE EQ "STO" THEN
        Y.DEBIT.AMOUNT.STO += R.FUNDS.TRANSFER<FT.AMOUNT.DEBITED>[4,LEN(R.FUNDS.TRANSFER<FT.AMOUNT.DEBITED>)]
        STO.CNT += 1
        STO.FLAG = 1
    END
RETURN

***************
FORM.STRING:
*************

    Y.CNT.CNT = DCOUNT(FIN.CCY,@VM)
    CNT.CNT = 1
    LOOP
    WHILE CNT.CNT LE Y.CNT.CNT
        SUB.TOT<1,-1> := "SUBTOTAL Y TOTAL"
        CANDIT.SMT += FIN.PMT.CNT<1,CNT.CNT>
        CANDIT.STO += FIN.STO.CNT<1,CNT.CNT>
        CANDIT.TT += FIN.TT.CNT<1,CNT.CNT>
        IF FIN.AMT.PMT<1,CNT.CNT> EQ '' THEN
            FIN.AMT.PMT<1,CNT.CNT> = 0.0
            FIN.PMT.CNT<1,CNT.CNT> = 0
        END
        FIN.AMT.PMT<1,CNT.CNT> = FMT(FIN.AMT.PMT<1,CNT.CNT>,"R2,#19")
        IF FIN.AMT.STO<1,CNT.CNT> EQ '' THEN
            FIN.AMT.STO<1,CNT.CNT> = 0.0
            FIN.STO.CNT<1,CNT.CNT> = 0
        END
        FIN.AMT.STO<1,CNT.CNT> = FMT(FIN.AMT.STO<1,CNT.CNT>,"R2,#19")
        IF FIN.TT.AMT<1,CNT.CNT> EQ '' THEN
            FIN.TT.AMT<1,CNT.CNT> = 0.00
            FIN.TT.CNT<1,CNT.CNT> = 0
        END
        FIN.TT.AMT<1,CNT.CNT> = FMT(FIN.TT.AMT<1,CNT.CNT>,"R2,#19")
        CNT.CNT += 1
    REPEAT
    Y.FIN.CNT = CANDIT.SMT + CANDIT.STO + CANDIT.TT
    Y.FINAL.ARRAY := SUB.TOT:"**":FIN.CCY:"*":FIN.PMT.CNT:"*":FIN.AMT.PMT:"*":FIN.STO.CNT:"*":FIN.AMT.STO:"*":FIN.TT.CNT:"*":FIN.TT.AMT:@FM
    Y.FINAL.ARRAY := "CANTIDAD TOTAL**":Y.FIN.CNT:"*":CANDIT.SMT:"* *":CANDIT.STO:"* *":CANDIT.TT
    Y.FINAL.ARR = Y.FINAL.ARRAY
RETURN
***********
READ.FT:
***********

    Y.EACH.CNT += 1
    CALL F.READ(FN.FUNDS.TRANSFER,Y.SEL.ID,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)
    Y.ERR.FLAG = ''
    IF R.FUNDS.TRANSFER EQ '' THEN
        Y.SEL.ID.HIS = Y.SEL.ID:";1"
        CALL F.READ(FN.FUNDS.TRANSFER$HIS,Y.SEL.ID.HIS,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER$HIS,FUND.ERR)
    END
    VAL.TRANS.TYPE = R.FUNDS.TRANSFER<FT.TRANSACTION.TYPE>
    VAL.CCY = R.FUNDS.TRANSFER<FT.DEBIT.CURRENCY>
    VAL.DATE = R.FUNDS.TRANSFER<FT.DATE.TIME>[1,6]
RETURN
************
READ.TT:
*************

    CALL F.READ(FN.TELLER,Y.SEL.ID,R.TELLER,F.TELLER,TELLER.ERR)
    Y.ERR.FLAG = ''
    IF R.TELLER EQ '' THEN
        Y.SEL.ID.HIS = Y.SEL.ID:";1"
        CALL F.READ(FN.TELLER$HIS,Y.SEL.ID.HIS,R.TELLER,F.TELLER$HIS,TELL.ERR)
    END
    VAL.TRANS.TYPE = R.TELLER<TT.TE.TRANSACTION.CODE>
    VAL.CCY = R.TELLER<TT.TE.CURRENCY.1>
    VAL.DATE = R.TELLER<TT.TE.DATE.TIME>[1,6]
    Y.EACH.CNT += 1
RETURN
**************
GOEND:
************
END
