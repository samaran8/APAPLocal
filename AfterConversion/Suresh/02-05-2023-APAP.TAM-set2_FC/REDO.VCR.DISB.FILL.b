* @ValidationCode : MjotMTQ0MjcwNjcyMzpDcDEyNTI6MTY4MzAxMTY3MDkzOTozMzNzdTotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 02 May 2023 12:44:30
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : 333su
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
SUBROUTINE REDO.VCR.DISB.FILL
*
* =============================================================================
*
* Developed for : APAP
* Developed by : Joaquin Costa
* Date         : 2011/Jul/08
* Attached to : VERSION.CONTROL - FUNDS.TRANSFER,DSB
*
*=======================================================================
*
* Works ONLY in DISBURSEMENT PROCESS. Control point is existence of
* USER VARIABLE CURRENT.Template.ID. If it exists, then this is a
* DISBURSEMENT process, otherwise routine ends
*
* PACS00146445  - Marimuthu S   12-JUN-2012
* PACS00240923 - Marimuthu S    2-2-2013
** 18-04-2023 R22 Auto Conversion - FM TO @FM, VM to @VM, SM to @SM
** 18-04-2023 Skanda R22 Manual Conversion - No changes,CALL routine format modified
*=======================================================================
*
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_System
*
    $INSERT I_F.ACCOUNT
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.TELLER
    $INSERT I_F.AA.ARRANGEMENT
*
    $INSERT I_F.REDO.FC.FORM.DISB
    $INSERT I_F.REDO.CREATE.ARRANGEMENT
    $INSERT I_F.AA.OVERDUE
    $USING APAP.REDOVER
    
    GOSUB INITIALISE
    GOSUB OPEN.FILES
    GOSUB CHECK.PRELIM.CONDITIONS
    IF PROCESS.GOAHEAD THEN
        GOSUB PROCESS
    END
*
RETURN
*
*--------
PROCESS:
*--------
*
    LOOP.CNT  = 1   ;   MAX.LOOPS = 3
*

    LOOP
    WHILE LOOP.CNT LE MAX.LOOPS AND PROCESS.GOAHEAD DO
        BEGIN CASE

            CASE LOOP.CNT EQ 1
                WRCA.AA.ID = R.RCA<REDO.FC.ID.ARRANGEMENT>
                GOSUB GET.ARR.INFO

            CASE LOOP.CNT EQ 2
                GOSUB GET.NEXT.DISB
                WVCR.RDC.ID = WRCA.AA.ID : '.001'
                R.NEW(LRF.NUMBER)<1,WPOS.LI> = WVCR.RDC.ID

            CASE LOOP.CNT EQ 3
                GOSUB FILL.INSTRUCTION.DATA

        END CASE

*       Message Error
        GOSUB CONTROL.MSG.ERROR

*       Increase
        LOOP.CNT += 1
*
    REPEAT
*
    GOSUB GET.AMOUNT.DISBURSED


    WRCA.TOTAL.TO.DISBURSE          = R.RCA<REDO.FC.DIS.AMT.TOT>
    R.NEW(FT.DEBIT.ACCT.NO)         = WAA.ACCOUNT
    R.NEW(FT.DEBIT.THEIR.REF)       = WRCA.AA.ID
    R.NEW(FT.DEBIT.CURRENCY)        = WACC.CCY

    R.NEW(FT.CREDIT.AMOUNT)          = R.RCA<REDO.FC.DIS.AMT,WACT.DISB>

    R.NEW(LRF.NUMBER)<1,WPOS.FT.AV> = APPLICATION:PGM.VERSION
*WW = R.RCA<REDO.FC.EFFECT.DATE>
* Fields add to versions
    R.NEW(FT.DEBIT.VALUE.DATE)      = R.RCA<REDO.FC.EFFECT.DATE>
    R.NEW(FT.CREDIT.VALUE.DATE)     = R.RCA<REDO.FC.EFFECT.DATE>
*
    CALL System.setVariable("CURRENT.WRCA.ACT.DISB",WACT.DISB)
    CALL System.setVariable("CURRENT.WRCA.TOTAL.TO.DISBURSE",WRCA.TOTAL.TO.DISBURSE)
    CALL System.setVariable("CURRENT.WRCA.ALREADY.DISB",WRCA.ALREADY.DISB)

    GOSUB DEFAULT.COND
*
RETURN

DEFAULT.COND:

    Y.CRD.AC = R.NEW(FT.CREDIT.ACCT.NO)
    CALL APAP.TAM.REDO.CONVERT.ACCOUNT(Y.CRD.AC,Y.ARR.ID,ARR.ID,ERR.TEXT) ;*MANUAL R22 CODE CONVERSION

    CALL F.READ(FN.AA.ARRANGEMENT,ARR.ID,R.AA.ARR,F.AA.ARRANGEMENT,AA.AER)
    IF R.AA.ARR THEN
        PROP.CLASS = 'OVERDUE'
        PROPERTY = ''
        R.Condition = ''
        ERR.MSG = ''
        EFF.DATE = ''
        CALL APAP.TAM.REDO.CRR.GET.CONDITIONS(ARR.ID,EFF.DATE,PROP.CLASS,PROPERTY,R.Condition,ERR.MSG) ;*MANUAL R22 CODE CONVERSION
        LOAN.STATUS = R.Condition<AA.OD.LOCAL.REF,OD.LOAN.STATUS.POS>
        LOAN.COND = R.Condition<AA.OD.LOCAL.REF,OD.LOAN.COND.POS>
        CHANGE @SM TO @VM IN LOAN.STATUS
        CHANGE @SM TO @FM IN LOAN.COND
        Y.CNT = DCOUNT(LOAN.COND,@FM)

        Y.START.VAL =1
        LOOP
        WHILE Y.START.VAL LE Y.CNT
            LOAN.COND1<-1> = LOAN.COND<Y.START.VAL>
            LOAN.COND1 = CHANGE(LOAN.COND1,@FM,@SM)
            R.NEW(FT.LOCAL.REF)<1,FT.LOAN.COND.POS> = LOAN.COND1
            Y.START.VAL += 1 ;* R22 Auto conversion
        REPEAT
        R.NEW(FT.LOCAL.REF)<1,FT.LOAN.STATUS.POS> = LOAN.STATUS

        CALL F.READ(FN.AA.ARRANGEMENT,ARR.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ARR.ERR)
        Y.CURR = R.AA.ARRANGEMENT<AA.ARR.CURRENCY>

        R.NEW(FT.CREDIT.CURRENCY) = Y.CURR
    END

    IF PGM.VERSION EQ ',REDO.MULTI.AA.ACRP.DISB' THEN
        CALL APAP.REDOVER.redoVValPdisAmt(Y.CRD.AC) ;*MANUAL R22 CODE CONVERSION
    END

RETURN
*
* ===========
GET.ARR.INFO:
* ===========
*
    CALL F.READ(FN.AA.ARRANGEMENT,WRCA.AA.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT, ERR.AA)
    IF ERR.AA THEN
        Y.ERR.MSG = "EB-&.RECORD.NOT.FOUND.&":@FM:FN.AA.ARRANGEMENT:@VM:WRCA.AA.ID
        PROCESS.GOAHEAD = ""
    END ELSE
        GOSUB GET.AA.ACCOUNT
    END
*
RETURN
*
* =============
GET.AA.ACCOUNT:
* =============
*
    WAA.ACCOUNT    = ""
    WAA.LINKED.APP = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL>
*
    LOCATE "ACCOUNT" IN WAA.LINKED.APP<1> SETTING ACCT.POS THEN
        WAA.ACCOUNT = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID,ACCT.POS>
        GOSUB GET.ACCOUNT.CURRENCY
    END ELSE
        Y.ERR.MSG       = "EB-ACCOUNT.NOT.DEFINED.FOR.AA.&":@FM:WRCA.AA.ID
        PROCESS.GOAHEAD = ""
    END
*
RETURN
*
* ===================
GET.ACCOUNT.CURRENCY:
* ===================
*
    WACC.CCY = LCCY   ;* DEFAULT VALUE LOCAL CURRENCY
*
    CALL F.READ(FN.ACCOUNT,WAA.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
    IF R.ACCOUNT THEN
        WACC.CCY = R.ACCOUNT<AC.CURRENCY>
    END
*
RETURN
*
* ============
GET.NEXT.DISB:
* ============
*
    WNEXT.VERSION = ""
*
    IF WFOUND.NV THEN
        WNEXT.INST = R.RCA<REDO.FC.DIS.TYPE,WNEXT.DISB>
        WNEXT.ID = R.RCA<REDO.FC.DIS.CODTXN,WNEXT.DISB>
        CALL F.READ(FN.REDO.FC.FORM.DISB,WNEXT.INST,RW.REDO.FC.FORM.DISB,F.REDO.FC.FORM.DISB,ERR.RFD)
        IF ERR.RFD THEN
            PROCESS.GOAHEAD = ""
            Y.ERR.MSG = "EB-DISB.INST.CODE.&.MISSING.RCA.&":@FM:WNEXT.INST:@VM:WVCR.TEMPLATE.ID
        END ELSE
            WNEXT.VERSION  = RW.REDO.FC.FORM.DISB<FC.PR.NAME.VRN>
*
            R.NEW(LRF.NUMBER)<1,WPOS.FT.NV> = WNEXT.VERSION
            IF WNEXT.VERSION EQ "" THEN
                WNEXT.VERSION = "NO-REGISTRA"
            END
            CALL System.setVariable("CURRENT.WRCA.NEXT.VERSION",WNEXT.VERSION)
            CALL System.setVariable("CURRENT.WRCA.FT.ID",WNEXT.ID)
        END
    END
*
RETURN
*
* ====================
FILL.INSTRUCTION.DATA:
* ====================
*


    WRCA.DATA   = WFIELD.VERSION
    WRCA.INFO   = RAISE(R.RCA<REDO.FC.VAL.DET.INS,WACT.DISB>)
    WLOC.FIELDS = ""
    WLOC.DATA   = ""
*
    LOOP
        REMOVE WFIELD FROM WRCA.DATA SETTING FIELD.POS
    WHILE WFIELD:FIELD.POS DO
        WFIELD.NO = WFIELD
        REMOVE WFIELD.DATA FROM WRCA.INFO SETTING FIELD.POS
        Y.APL = APPLICATION
        CALL EB.FIND.FIELD.NO(Y.APL, WFIELD.NO)
        IF NOT(WFIELD.NO) THEN
            WLOC.FIELDS<-1> = WFIELD
            WLOC.DATA<-1>   = WFIELD.DATA
        END ELSE
            R.NEW(WFIELD.NO) = WFIELD.DATA
            IF PGM.VERSION EQ ',REDO.MULTI.AA.ACCRAP.DISB' THEN
                GOSUB GET.LOAN.ST
            END
        END
    REPEAT
*
    IF WLOC.FIELDS THEN
        GOSUB FILL.LOCAL.FIELDS.DATA
    END
*
RETURN
*

GET.LOAN.ST:

    ACC.ID =  WFIELD.DATA
    PROP.CLASS = 'OVERDUE'
    PROPERTY = ''
    R.Condition = ''
    ERR.MSG = ''
    EFF.DATE = ''
    R.AC = ''
    CALL F.READ(FN.ACCOUNT,ACC.ID,R.AC,F.ACCOUNT,AC.ERR)
    IF R.AC THEN
        Y.CR.CC = R.AC<AC.CURRENCY>
    END
    CALL APAP.TAM.REDO.CONVERT.ACCOUNT(ACC.ID,Y.ARR.ID,ARR.ID,ERR.TEXT) ;*MANUAL R22 CODE CONVERSION
    CALL APAP.TAM.REDO.CRR.GET.CONDITIONS(ARR.ID,EFF.DATE,PROP.CLASS,PROPERTY,R.Condition,ERR.MSG) ;*MANUAL R22 CODE CONVERSION
    LOAN.STATUS = R.Condition<AA.OD.LOCAL.REF,OD.LOAN.STATUS.POS>
    LOAN.COND = R.Condition<AA.OD.LOCAL.REF,OD.LOAN.COND.POS>

    Y.CR.CUR = R.NEW(FT.CREDIT.CURRENCY)
    IF Y.CR.CUR EQ '' THEN
        R.NEW(FT.CREDIT.CURRENCY) = Y.CR.CC
    END
    R.NEW(FT.LOCAL.REF)<1,FT.LOAN.COND.POS> = LOAN.COND
    R.NEW(FT.LOCAL.REF)<1,FT.LOAN.STATUS.POS> = LOAN.STATUS

RETURN
* =====================
FILL.LOCAL.FIELDS.DATA:
* =====================
*
*
    YPOS = ''
    WCAMPO    = CHANGE(WLOC.FIELDS,@FM,@VM)
    Y.APL = APPLICATION
    CALL MULTI.GET.LOC.REF(Y.APL,WCAMPO,YPOS)
    LOOP
        REMOVE WLFIELD FROM WLOC.FIELDS SETTING LF.POS
    WHILE WLFIELD:LF.POS DO
        REMOVE WLFIELD.DATA FROM WLOC.DATA SETTING LFD.POS
        REMOVE LFN.POS FROM YPOS SETTING LF.POS
        R.NEW(LRF.NUMBER)<1,LFN.POS> = WLFIELD.DATA
    REPEAT
*
RETURN
*
* ===================
GET.AMOUNT.DISBURSED:
* ===================
*
    WRCA.ALREADY.DISB = 0
    WRCA.CODTXN       = R.RCA<REDO.FC.DIS.CODTXN>
    WRCA.DIS.AMT      = R.RCA<REDO.FC.DIS.AMT>
    WRCA.DIS.TYPE     = R.RCA<REDO.FC.DIS.TYPE>
*

    LOOP
        REMOVE WDIS.TYPE FROM WRCA.DIS.TYPE SETTING TXN.POS
    WHILE WDIS.TYPE:TXN.POS DO
        REMOVE WTXN.ID FROM WRCA.CODTXN SETTING TXN.POS
        REMOVE WDIS.AMT FROM WRCA.DIS.AMT SETTING TXN.POS
        IF WTXN.ID NE "" THEN
            CALL F.READ(FN.FT,WTXN.ID,R.FT,F.FT,FT.ERR)
            IF R.FT THEN
                WRCA.ALREADY.DISB += WDIS.AMT
            END ELSE
                CALL EB.READ.HISTORY.REC(F.FT.HIS,WTXN.ID,R.FT,FT.ER)
                IF R.FT THEN
                    WRCA.ALREADY.DISB += WDIS.AMT
                END
            END
        END
    REPEAT
*
RETURN
*
* =======================
VALIDATE.RCA.DISB.STATUS:
* =======================
*
    WFOUND        = ""
    WFOUND.NV     = ""
    WNEXT.DISB    = ""
    WRCA.CODTXN   = R.RCA<REDO.FC.DIS.CODTXN>
    WRCA.DIS.TYPE = R.RCA<REDO.FC.DIS.TYPE>
    WDISB.POS     = 0

    WRCA.CODTXN.D = WRCA.CODTXN ; WRCA.DIS.TYPE.D = WRCA.DIS.TYPE
    Y.DD = DCOUNT(WRCA.DIS.TYPE.D,@VM)
*


    LOOP
        REMOVE WDIS.TYPE FROM WRCA.DIS.TYPE SETTING TXN.POS
    WHILE WDIS.TYPE:TXN.POS AND (NOT(WFOUND) OR NOT(WFOUND.NV)) DO
        REMOVE WTXN.ID FROM WRCA.CODTXN SETTING TXN.POS
        WDISB.POS += 1
        IF WTXN.ID EQ "" AND WFOUND AND NOT(WFOUND.NV) THEN
            WFOUND.NV  = 1
            WNEXT.DISB = WDISB.POS
        END
        IF WTXN.ID EQ "" AND NOT(WFOUND) THEN
            CALL F.READ(FN.REDO.FC.FORM.DISB,WDIS.TYPE,R.REDO.FC.FORM.DISB,F.REDO.FC.FORM.DISB,ERR.RFD)
            IF ERR.RFD THEN
                PROCESS.GOAHEAD = ""
                Y.ERR.MSG = "EB-DISB.INST.CODE.&.MISSING.RCA.&":@FM:WDIS.TYPE:@VM:WVCR.TEMPLATE.ID
            END ELSE
                WFIELD.VERSION = R.REDO.FC.FORM.DISB<FC.PR.FIELD.VRN>
                WFOUND         = 1
                WACT.DISB      = WDISB.POS
            END
        END
        CALL System.setVariable("CURRENT.R.VAL","ERROR")
    REPEAT
*

*     IF NOT(WFOUND) THEN
*         Y.ERR.MSG = "EB-NOT.PENDING.DISBURSEMENTS.FOR.&":FM:WVCR.TEMPLATE.ID
*         PROCESS.GOAHEAD = ""
*     END

    R.VAL = ''
    CALL F.READ(FN.REDO.FC.PR.DIS.COB,WVCR.TEMPLATE.ID,R.VAL,F.REDO.FC.PR.DIS.COB,PR.ERR)

    IF R.RCA<REDO.FC.STATUS.DISB> EQ 'U' OR R.VAL<1,1> EQ 'COB' THEN
        IF NOT(R.VAL) THEN
            R.VAL = 'COB'
        END
        WDISB.POS = 0
        GOSUB PROCES.DISB.U
        R.NEW(FT.PROCESSING.DATE) = TODAY
    END

*
RETURN
*

PROCES.DISB.U:

    LOOP
        REMOVE W.DIS.TYPE FROM WRCA.DIS.TYPE.D SETTING TX.POS
    WHILE W.DIS.TYPE:TX.POS AND (NOT(WFOUND) OR NOT(WFOUND.NV)) DO
        REMOVE WTXN.ID FROM WRCA.CODTXN.D SETTING TX.POS
        WDISB.POS += 1

        IF R.VAL<1,WDISB.POS+1> EQ "" AND WFOUND AND NOT(WFOUND.NV) THEN
            WFOUND.NV  = 1
            WNEXT.DISB = WDISB.POS
        END
        IF R.VAL<1,WDISB.POS+1> EQ "" AND NOT(WFOUND) THEN
            CALL F.READ(FN.REDO.FC.FORM.DISB,W.DIS.TYPE,R.REDO.FC.FORM.DISB,F.REDO.FC.FORM.DISB,ERR.RFD)
            R.VAL<1,WDISB.POS+1> = WTXN.ID
            CALL System.setVariable("CURRENT.R.VAL",R.VAL)
            IF ERR.RFD THEN
                PROCESS.GOAHEAD = ""
                Y.ERR.MSG = "EB-DISB.INST.CODE.&.MISSING.RCA.&":@FM:WDIS.TYPE:@VM:WVCR.TEMPLATE.ID
            END ELSE
                WFIELD.VERSION = R.REDO.FC.FORM.DISB<FC.PR.FIELD.VRN>
                WFOUND         = 1
                WACT.DISB      = WDISB.POS
            END
        END
    REPEAT

RETURN
* ================
CONTROL.MSG.ERROR:
* ================
*
    IF Y.ERR.MSG THEN
        E       = Y.ERR.MSG
        V$ERROR = 1
        CALL ERR
        CALL System.setVariable("CURRENT.Template.ID","ERROR")
        CALL System.setVariable("CURRENT.WRCA.NEXT.VERSION","ERROR")
        CALL System.setVariable("CURRENT.WRCA.ACT.DISB","ERROR")
        CALL System.setVariable("CURRENT.WRCA.TOTAL.TO.DISBURSE","ERROR")
        CALL System.setVariable("CURRENT.WRCA.ALREADY.DISB","ERROR")
    END
*
RETURN
*
* =========
INITIALISE:
* =========
*
    PROCESS.GOAHEAD = 1
    LRF.NUMBER      = 0
    Y.ERR.MSG       = ""
*
    FN.ACCOUNT = "F.ACCOUNT"
    F.ACCOUNT  = ""
    CALL OPF(FN.ACCOUNT,F.ACCOUNT )
*
    FN.REDO.FC.FORM.DISB = "F.REDO.FC.FORM.DISB"
    F.REDO.FC.FORM.DISB  = ""
    CALL OPF(FN.REDO.FC.FORM.DISB,F.REDO.FC.FORM.DISB)
*
    FN.REDO.CREATE.ARRANGEMENT = "F.REDO.CREATE.ARRANGEMENT"
    F.REDO.CREATE.ARRANGEMENT  = ""
    CALL OPF(FN.REDO.CREATE.ARRANGEMENT,F.REDO.CREATE.ARRANGEMENT)
*
    FN.AA.ARRANGEMENT = "F.AA.ARRANGEMENT"
    F.AA.ARRANGEMENT  = ""
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.FT = 'F.FUNDS.TRANSFER'
    F.FT = ''
    CALL OPF(FN.FT,F.FT)

    FN.FT.HIS = 'F.FUNDS.TRANSFER$HIS'
    F.FT.HIS = ''
    CALL OPF(FN.FT.HIS,F.FT.HIS)

    FN.REDO.FC.PR.DIS.COB = 'F.REDO.FC.PR.DIS.COB'
    F.REDO.FC.PR.DIS.COB = ''
    CALL OPF(FN.REDO.FC.PR.DIS.COB,F.REDO.FC.PR.DIS.COB)

*
    W.CRE.VAL.DATE = ""
    W.DEB.VAL.DATE = ""

    BEGIN CASE
        CASE APPLICATION EQ "TELLER"
            LRF.NUMBER = TT.TE.LOCAL.REF
        CASE APPLICATION EQ "FUNDS.TRANSFER"
            LRF.NUMBER = FT.LOCAL.REF
    END CASE
*
    WAPP.LST  = APPLICATION:@FM:'AA.PRD.DES.OVERDUE'
    WCAMPO    = "L.INITIAL.ID"
    WCAMPO<2> = "L.TRAN.AUTH"
    WCAMPO<3> = "L.ACTUAL.VERSIO"
    WCAMPO<4> = "L.NEXT.VERSION"
    WCAMPO<5> = "L.LOAN.STATUS.1"
    WCAMPO<6> = "L.LOAN.COND"
    WCAMPO    = CHANGE(WCAMPO,@FM,@VM)
    WFLD.LST  = WCAMPO:@FM:"L.LOAN.STATUS.1":@VM:"L.LOAN.COND"
    YPOS = ''
    CALL MULTI.GET.LOC.REF(WAPP.LST,WFLD.LST,YPOS)
    WPOS.LI    = YPOS<1,1>
    WPOS.FT.TA = YPOS<1,2>
    WPOS.FT.AV = YPOS<1,3>
    WPOS.FT.NV = YPOS<1,4>
    FT.LOAN.STATUS.POS  = YPOS<1,5>
    FT.LOAN.COND.POS = YPOS<1,6>

    OD.LOAN.STATUS.POS = YPOS<2,1>
    OD.LOAN.COND.POS = YPOS<2,2>

*
    CALL System.setVariable("CURRENT.WRCA.NEXT.VERSION","NO")
    CALL System.setVariable("CURRENT.WRCA.ACT.DISB","")
    CALL System.setVariable("CURRENT.WRCA.TOTAL.TO.DISBURSE","0")
    CALL System.setVariable("CURRENT.WRCA.ALREADY.DISB","0")
*
RETURN
*
* =========
OPEN.FILES:
* =========
*
*
RETURN
*
* ======================
CHECK.PRELIM.CONDITIONS:
* ======================
*
    LOOP.CNT  = 1   ;   MAX.LOOPS = 2
*
    LOOP
    WHILE LOOP.CNT LE MAX.LOOPS AND PROCESS.GOAHEAD DO
        BEGIN CASE

            CASE LOOP.CNT EQ 1
                E = ""
                WVCR.TEMPLATE.ID = System.getVariable("CURRENT.Template.ID")
                IF E EQ "EB-UNKNOWN.VARIABLE" THEN ;* R22 Auto conversion
                    WVCR.TEMPLATE.ID = "" ;* R22 Auto conversion
                END ;* R22 Auto conversion
                IF WVCR.TEMPLATE.ID EQ "" OR WVCR.TEMPLATE.ID EQ "CURRENT.Template.ID" THEN
                    E = CHANGE(E,@VM,"-")
                    PROCESS.GOAHEAD = ""
                END

            CASE LOOP.CNT EQ 2
                CALL F.READ(FN.REDO.CREATE.ARRANGEMENT,WVCR.TEMPLATE.ID,R.REDO.CREATE.ARRANGEMENT,F.REDO.CREATE.ARRANGEMENT,ERR.MSJ)
                IF ERR.MSJ THEN
                    Y.ERR.MSG = "EB-RECORD.&.DOES.NOT.EXIST.IN.TABLE.&":@FM:FN.REDO.CREATE.ARRANGEMENT:@VM:WVCR.TEMPLATE.ID
                    PROCESS.GOAHEAD = ""
                END ELSE
                    R.RCA = R.REDO.CREATE.ARRANGEMENT
                    GOSUB VALIDATE.RCA.DISB.STATUS
                END

        END CASE
*       Message Error
        GOSUB CONTROL.MSG.ERROR

*       Increase
        LOOP.CNT += 1
*
    REPEAT
*
RETURN
*
END
