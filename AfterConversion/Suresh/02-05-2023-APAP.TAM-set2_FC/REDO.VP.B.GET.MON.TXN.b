* @ValidationCode : MjotMTczOTI2Mzc0MzpDcDEyNTI6MTY4MzAxMzU1NTAyNzozMzNzdTotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 02 May 2023 13:15:55
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : 333su
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
SUBROUTINE REDO.VP.B.GET.MON.TXN
*-----------------------------------------------------------------------------
* Developer    : Luis Fernando Pazmino (lpazminodiaz@temenos.com)
*                TAM Latin America
* Client       : Asociacion Popular de Ahorro & Prestamo (APAP)
* Date         : 04.30.2013
* Description  : Routine for pre-load monetary transactions
* Type         : Batch Routine
* Attached to  : BATCH > REDO.VP.MON.SERVICE
* Dependencies : NA
*-----------------------------------------------------------------------------
* Modification History:
*
* Version   Date           Who            Reference         Description
* 1.0       04.30.2013     lpazmino       -                 Initial Version
*Modification History:
*DATE                 WHO                  REFERENCE                     DESCRIPTION
*19/04/2023      CONVERSION TOOL     AUTO R22 CODE CONVERSION        Y.BATCH.NO + 1 TO +=1,VM TO @VM
*19/04/2023         SURESH           MANUAL R22 CODE CONVERSION       CALL routine format modified
*-----------------------------------------------------------------------------

* <region name="INSERTS">

    $INSERT I_COMMON
    $INSERT I_EQUATE

    $INSERT I_F.REDO.VISION.PLUS.PARAM
    $INSERT I_F.REDO.VPLUS.MAPPING
    $INSERT I_F.REDO.CARD.BIN
    $INSERT I_F.REDO.VISION.PLUS.TXN
    $INSERT I_F.REDO.VISION.PLUS.TXN.HDR
    $INSERT I_F.REDO.VISION.PLUS.TXN.DET
    $USING APAP.REDOSRTN
    
* </region>

    GOSUB INIT
    GOSUB OPEN.FILES

    GOSUB PROCESS

RETURN

* <region name="GOSUBS" description="Gosub blocks">

***********************
* Initialize variables
INIT:
***********************
    Y.BATCH.NO = 0

    FN.REDO.VISION.PLUS.TXN = 'F.REDO.VISION.PLUS.TXN'
    F.REDO.VISION.PLUS.TXN = ''
    R.REDO.VISION.PLUS.TXN = ''

    FN.REDO.VISION.PLUS.PARAM = 'F.REDO.VISION.PLUS.PARAM'
    F.REDO.VISION.PLUS.PARAM = ''
    R.REDO.VISION.PLUS.TXN = ''
    REDO.VISION.PLUS.PARAM.ID = 'SYSTEM'

    FN.REDO.VISION.PLUS.TXN.HDR = 'F.REDO.VISION.PLUS.TXN.HDR'
    F.REDO.VISION.PLUS.TXN.HDR = ''
    R.REDO.VISION.PLUS.TXN.HDR = ''

    FN.REDO.VISION.PLUS.TXN.DET = 'F.REDO.VISION.PLUS.TXN.DET'
    F.REDO.VISION.PLUS.TXN.DET = ''
    R.REDO.VISION.PLUS.TXN.DET = ''

    FN.REDO.CARD.BIN = 'F.REDO.CARD.BIN'
    F.REDO.CARD.BIN = ''
    R.REDO.CARD.BIN = ''

    FN.REDO.VPLUS.MAPPING = 'F.REDO.VPLUS.MAPPING'
    F.REDO.VPLUS.MAPPING = ''
    R.REDO.VPLUS.MAPPING = ''
    REDO.VPLUS.MAPPING.ID = 'SYSTEM'

    Y.ERR = ''

    VP.TXN.LIST = ''
    VP.TXN.LIST.NAME = ''
    VP.TXN.SELECTED = ''
    VP.TXN.SYS.RET = ''

* Log writing: process started
    CALL APAP.REDOSRTN.redoSNotifyInterfaceAct ('VPL001', 'BATCH', '06', 'EMAIL ARCHIVO MONETARIO', 'INICIO - PROCESO MONETARIO A LAS ' : TIMEDATE(), '', '', '', '', '', OPERATOR, '') ;*MANUAL R22 CODE CONVERSION

RETURN

***********************
* Open Files
OPEN.FILES:
***********************
    CALL OPF(FN.REDO.VISION.PLUS.TXN, F.REDO.VISION.PLUS.TXN)
    CALL OPF(FN.REDO.VISION.PLUS.PARAM, F.REDO.VISION.PLUS.PARAM)
    CALL OPF(FN.REDO.VISION.PLUS.TXN.HDR, F.REDO.VISION.PLUS.TXN.HDR)
    CALL OPF(FN.REDO.VISION.PLUS.TXN.DET, F.REDO.VISION.PLUS.TXN.DET)
    CALL OPF(FN.REDO.CARD.BIN, F.REDO.CARD.BIN)
    CALL OPF(FN.REDO.VPLUS.MAPPING,F.REDO.VPLUS.MAPPING)

RETURN

***********************
* Main Process
PROCESS:
***********************
* Line length 200 bytes
* Batches must be separated by Transactions. However APAP does not have other transactions than 0020
* that is, no Cash Advances nor Reversals
* Each batch might have upto 998 items
    CALL CACHE.READ(FN.REDO.VPLUS.MAPPING, REDO.VPLUS.MAPPING.ID, R.REDO.VPLUS.MAPPING, Y.ERR)

    TXN.PREFIX = R.REDO.VPLUS.MAPPING<VP.MAP.TRANS.PREFIX>

    CALL CACHE.READ(FN.REDO.VISION.PLUS.PARAM, REDO.VISION.PLUS.PARAM.ID, R.REDO.VISION.PLUS.PARAM, Y.ERR)

    ORG.IDS = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.SOURCE.ID>
    PESOS.DUAL = ORG.IDS<1,1>
    DOLAR = ORG.IDS<1,2>
    PESOS.LOCAL = ORG.IDS<1,3>

    PROCESS.DATE = TODAY
    H.TERM.ID = PROCESS.DATE[7,2] : PROCESS.DATE[5,2] : PROCESS.DATE[1,4]

    H.REC.TYPE = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.REC.TYPE>
    H.STATUS = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.STATUS>
    H.SEQ.NO = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.SEQ.NO>
    H.MER.NO = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.MER.NO>
    H.BAT.REV = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.BAT.REV>
    H.ATM.BAT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ATM.BAT>
    H.V.PROC.DT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.V.PROC.DT>
    H.MC.PROC.DT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.MC.PROC.DT>
    H.ACCEPT.ID = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ACCEPT.ID>
    H.USR.REF = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.USR.REF>
    H.ARITH.ERR = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ARITH.ERR>
    H.ADJ.TXN = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ADJ.TXN>
    H.ADJ.AMT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ADJ.AMT>
    H.ADJ.CODE = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ADJ.CODE>
    H.ADJ.DESCR = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.H.ADJ.DESCR>

    D.REC.TYPE = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.REC.TYPE>
    D.TRAN.STAT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.TRAN.STAT>
    D.MON.REC.TYPE = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.MON.REC.TYPE>
    D.TRANS.REF = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.TRANS.REF>
    D.CASH.BACK = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.CASH.BACK>
    D.VISA.MAIL = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.VISA.MAIL>
    D.MER.CAT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.MER.CAT>
    D.POS.CAP = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.POS.CAP>
    D.POS.ENT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.POS.ENT>
    D.CHLD.METH = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.CHLD.METH>
    D.AUTH.SRC = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.AUTH.SRC>
    D.ATM.ACCT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.ATM.ACCT>
    D.TER.ID = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.TER.ID>
    D.PLAN.NO = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.PLAN.NO>
    D.TXN.ACCT = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.TXN.ACCT>
    D.PLAN.SEQ = R.REDO.VISION.PLUS.PARAM<VP.PARAM.MON.D.PLAN.SEQ>

* Select all transaction to be formatted
    SELECT.STATEMENT  = "SSELECT " : FN.REDO.VISION.PLUS.TXN
    SELECT.STATEMENT := " WITH STATUS EQ 'PEND'"
*   SELECT.STATEMENT := " AND @ID LIKE '" : PROCESS.DATE : "...'"
    SELECT.STATEMENT := " WITHOUT CHANNEL LIKE 'CAV...'"
    SELECT.STATEMENT := " BY @ID"

    CALL EB.READLIST(SELECT.STATEMENT, VP.TXN.LIST, VP.TXN.LIST.NAME, VP.TXN.SELECTED, VP.TXN.SYS.RET)

    IF VP.TXN.SELECTED GT 0 THEN
        H.KEYS = ''
        LOOP
            REMOVE VP.TXN.ID FROM VP.TXN.LIST SETTING VP.TXN.POS
        WHILE VP.TXN.ID:VP.TXN.POS
            CALL F.READ(FN.REDO.VISION.PLUS.TXN, VP.TXN.ID, R.REDO.VISION.PLUS.TXN, F.REDO.VISION.PLUS.TXN, Y.ERR)
            GOSUB REG.TXN.DETAIL
        REPEAT
        GOSUB REG.PEND.HDRS
    END

RETURN

************************
* New detail transaction
REG.TXN.DETAIL:
************************
    CREDIT.CARD.ID  = R.REDO.VISION.PLUS.TXN<VP.TXN.CARDHOLDER.NUM>
    CREDIT.CARD.BIN = CREDIT.CARD.ID[1,6]
    TXN.CURRENCY = R.REDO.VISION.PLUS.TXN<VP.TXN.CURRENCY>
    TXN.CODE = R.REDO.VISION.PLUS.TXN<VP.TXN.TRANS.CODE>
    TXN.AMT = R.REDO.VISION.PLUS.TXN<VP.TXN.TRANS.AMOUNT>
    TXN.AUTH = R.REDO.VISION.PLUS.TXN<VP.TXN.TRANS.AUTH>

* Obtain OrgID
    CALL CACHE.READ(FN.REDO.CARD.BIN, CREDIT.CARD.BIN, R.REDO.CARD.BIN, Y.ERR)
    NATIONAL.MARK = R.REDO.CARD.BIN<REDO.CARD.BIN.NATIONAL.MARK>
    Y.MON.BIN = R.REDO.CARD.BIN<REDO.CARD.BIN.T24.CURRENCY>
    Y.ORG.ID = R.REDO.CARD.BIN<REDO.CARD.BIN.ORG.ID>

    LOCATE TXN.CURRENCY IN Y.MON.BIN<1,1> SETTING MON.POS THEN
        H.ORG.ID = R.REDO.CARD.BIN<REDO.CARD.BIN.ORG.ID, MON.POS>
    END

    H.ID = TXN.CODE : '.' : H.ORG.ID      ;* La llave de HDR es Transaction Code + Source ID y hasta 998 items antes de incrementar el batch
    CRT 'BATCH.ID:  ' : H.KEYS
    LOCATE H.ID IN H.KEYS<1,1> SETTING KEY.POS ELSE
        KEY.POS = ''
    END

    IF KEY.POS THEN
        IF H.KEYS<3,KEY.POS> EQ 998 THEN
            GOSUB REG.TXN.HEADER
            Y.BATCH.NO += 1 ;*AUTO R22 CODE CONVERSION
            H.KEYS<2,KEY.POS> = Y.BATCH.NO    ;* Batch No
            H.KEYS<3,KEY.POS> = 0
            H.KEYS<4,KEY.POS> = 0
        END
        H.KEYS<3,KEY.POS>+= 1     ;* Seq No
        H.KEYS<4,KEY.POS>+= TXN.AMT
    END ELSE
        Y.BATCH.NO += 1 ;*AUTO R22 CODE CONVERSION
        H.KEYS<1,-1> = H.ID
        H.KEYS<2,-1> = Y.BATCH.NO
        H.KEYS<3,-1> = 1
        H.KEYS<4,-1> = TXN.AMT
        KEY.POS = DCOUNT(H.KEYS<1>, @VM)
        CRT "KEY.POS : " :  KEY.POS
    END


    REDO.VISION.PLUS.TXN.DET.ID = PROCESS.DATE : '.' : H.ID : '.' : FMT(H.KEYS<2,KEY.POS>,'R%5') : '.' : FMT(H.KEYS<3,KEY.POS>,'R%3')
    R.REDO.VISION.PLUS.TXN.DET = ''

    R.REDO.VISION.PLUS.TXN.DET<VP.DET.RECORD.TYPE> = D.REC.TYPE
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.STATUS> = D.TRAN.STAT
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.BATCH.NBR> = H.KEYS<2,KEY.POS>
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.SEQUENCE.NBR> = H.KEYS<3,KEY.POS>
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.MON.RECORD.TYPE> = D.MON.REC.TYPE
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.CARDHLD.NBR> = CREDIT.CARD.ID
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.CODE> = TXN.CODE
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.AMOUNT> = TXN.AMT
    Y.TXN.DATE = R.REDO.VISION.PLUS.TXN<VP.TXN.POSTING.DATE>
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.DATE> = Y.TXN.DATE[7,2] : Y.TXN.DATE[5,2] : Y.TXN.DATE[3,2]

    IF TXN.AUTH EQ 'OFFLINE' OR TXN.AUTH EQ 'ERROR' THEN
        R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.AUTH> = '000000'
    END ELSE
        R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.AUTH> = TXN.AUTH
    END
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.REF> = D.TRANS.REF
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.CASHBACK> = D.CASH.BACK
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.SOURCE.ID> = FIELD(H.ID,'.',2)
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.DESC> = FMT(TXN.PREFIX : R.REDO.VISION.PLUS.TXN<VP.TXN.TRANS.TYPE>,"L*40")

    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.VISA.MAIL> = D.VISA.MAIL
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.MERCH.CATEG> = D.MER.CAT
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.POS.CAP> = D.POS.CAP
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.POS.ENT> = D.POS.ENT
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.CARDHLDR.ID> = D.CHLD.METH
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.AUTH.SOURCE> = D.AUTH.SRC
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.ATM.ACCT> = D.ATM.ACCT
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.ACT.TERM.ID> = D.TER.ID
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.NUM.PLAN> = D.PLAN.NO
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.TRANS.ACCT.TERM> = D.TXN.ACCT
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.NUM.SEQ.PLAN> = D.PLAN.SEQ

    TESTCHECK=R.REDO.VISION.PLUS.TXN.DET<VP.DET.MON.RECORD.TYPE>
    CHECKLEN=LEN(TESTCHECK)
    IF CHECKLEN GT 3 THEN
        TESTCHECK[3]=H.ORG.ID
    END
    R.REDO.VISION.PLUS.TXN.DET<VP.DET.MON.RECORD.TYPE>=TESTCHECK

    CALL F.WRITE(FN.REDO.VISION.PLUS.TXN.DET, REDO.VISION.PLUS.TXN.DET.ID, R.REDO.VISION.PLUS.TXN.DET)

    CRT 'R.REDO.VISION.PLUS.TXN.DET ' : R.REDO.VISION.PLUS.TXN.DET


* Update REDO.VISION.PLUS.TXN Status
    R.REDO.VISION.PLUS.TXN<VP.TXN.STATUS> = 'PROC'
    CALL F.WRITE(FN.REDO.VISION.PLUS.TXN, VP.TXN.ID, R.REDO.VISION.PLUS.TXN)

RETURN

*****************************
* Pending headers not created
REG.PEND.HDRS:
*****************************
    NO.OF = DCOUNT(H.KEYS<1>,@VM)

    FOR KEY.POS = 1 TO NO.OF
        GOSUB REG.TXN.HEADER
    NEXT KEY.POS

RETURN

************************
* New header transaction
REG.TXN.HEADER:
************************
    H.ID = H.KEYS<1,KEY.POS>
    VISION.PLUS.TXN.HDR.ID = PROCESS.DATE : '.' :H.ID:'.': FMT(H.KEYS<2,KEY.POS>,'R%5')

* Header ID
    R.REDO.VISION.PLUS.TXN.HDR = ''
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.RECORD.TYPE> = H.REC.TYPE
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.STATUS> = H.STATUS
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.HEADER.BATCH.NBR> = H.KEYS<2,KEY.POS>
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.SEQUENCE.NBR> = H.SEQ.NO
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.NBR.OF.ITEMS> = H.KEYS<3,KEY.POS>
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.AMOUNT> = H.KEYS<4,KEY.POS>
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.MERCHANT.NBR> = FIELD(H.ID,'.',2):H.MER.NO[4,9]
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.BATCH.REVERSAL> = H.BAT.REV
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.ATM.BATCH> = H.ATM.BAT
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.OPERADOR> = FIELD(H.ID,'.',2)
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.VIC.PROC.DATE> = H.V.PROC.DT
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.MC.PROC.DATE> = H.MC.PROC.DT
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.CARD.ACCEPTOR.ID> = H.ACCEPT.ID
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.TERM.ID> = H.TERM.ID
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.USER.REF.NBR> = H.USR.REF
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.SOURCE.ID> = FIELD(H.ID,'.',2)
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.HDR.ARITH.ERR> = H.ARITH.ERR
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.HDR.ADJ.TRN.COD> = H.ADJ.TXN
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.HDR.ADJ.AMT> = H.ADJ.AMT
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.HDR.ADJ.RSN.CODE> = H.ADJ.CODE
    R.REDO.VISION.PLUS.TXN.HDR<VP.HDR.HDR.ADJ.RSN.DESC> = H.ADJ.DESCR


    CALL F.WRITE(FN.REDO.VISION.PLUS.TXN.HDR, VISION.PLUS.TXN.HDR.ID, R.REDO.VISION.PLUS.TXN.HDR)
    CRT 'R.REDO.VISION.PLUS.TXN.HDR.ID ' : VISION.PLUS.TXN.HDR.ID
    CRT 'R.REDO.VISION.PLUS.TXN.HDR GET' : R.REDO.VISION.PLUS.TXN.HDR

RETURN

END
