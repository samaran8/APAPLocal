$PACKAGE APAP.TAM
SUBROUTINE REDO.REVERSE.MANU.ENTRY(PRIN.AMT,INT.AMT)
*-----------------------------------------------------------------------------
* Company Name  : APAP DEV2
* Developed By  : Marimuthu S
* Program Name  : REDO.REVERSE.MANU.ENTRY
*-----------------------------------------------------------------
* Description : This routine is used to reverse P/L and internal ac
*-----------------------------------------------------------------
* Linked With   : -NA-
* In Parameter  : -NA-
* Out Parameter : -NA-
*-----------------------------------------------------------------
* Modification History :
*-----------------------
* Reference              Date                Description
* ODR-2011-12-0017      23-OCT-2011          WOF ACCOUTING - PACS00202156
** 17-04-2023 R22 Auto Conversion - FM TO @FM, VM to @VM, SM to @SM
** 17-04-2023 Skanda R22 Manual Conversion - No changes
*-----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_REDO.B.NEW.WOF.OS.ACC.COMMON
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.CATEG.ENTRY
    $INSERT I_F.REDO.AA.INT.CLASSIFICATION
    $INSERT I_F.ACCOUNT

    GOSUB PROCESS
    GOSUB PGM.END

PROCESS:

    Y.INT.AC = R.REDO.AA.INT.CLASSIFICATION<REDO.INT.CLASS.MANU.INT.ACCOUNT>
    PL.CATEG = R.REDO.AA.INT.CLASSIFICATION<REDO.INT.CLASS.PL.CATEGORY>
    IF NOT(Y.INT.AC) THEN
        CALL OCOMO("Internal Account not parameterised")
        RETURN
    END

    IF NOT(PL.CATEG) THEN
        CALL OCOMO("PL category not defined")
        RETURN
    END

    GOSUB ENTRY.PRINCIPAL
    GOSUB ENTRY.INTEREST

RETURN

ENTRY.PRINCIPAL:

    IF PRIN.AMT EQ '' OR PRIN.AMT EQ 0 THEN
        RETURN
    END

    AMT = PRIN.AMT

    DR.ACCOUNT.NUMBER = Y.INT.AC
    CR.ACCOUNT.NUMBER = PL.CATEG

    R.ACCOUNT.INT = ''
    CALL F.READ(FN.ACCOUNT,DR.ACCOUNT.NUMBER,R.ACCOUNT.INT,F.ACCOUNT,AC.ERR)
    GOSUB FORM.DEBIT.ENTRY

    GOSUB FORM.CREDIT.ENTRY

    GOSUB CAL.ACCOUNTING

RETURN

ENTRY.INTEREST:

    IF INT.AMT EQ '' OR INT.AMT LE 0 THEN
        RETURN
    END

    AMT = INT.AMT

    DR.ACCOUNT.NUMBER = Y.INT.AC
    CR.ACCOUNT.NUMBER = PL.CATEG

    R.ACCOUNT.INT = ''
    CALL F.READ(FN.ACCOUNT,DR.ACCOUNT.NUMBER,R.ACCOUNT.INT,F.ACCOUNT,AC.ERR)

    GOSUB FORM.DEBIT.ENTRY
    GOSUB FORM.CREDIT.ENTRY

    GOSUB CAL.ACCOUNTING

RETURN

FORM.DEBIT.ENTRY:

    R.DR.STMT.ENTRY = ''
    R.DR.STMT.ENTRY<AC.STE.ACCOUNT.NUMBER> = DR.ACCOUNT.NUMBER
    R.DR.STMT.ENTRY<AC.STE.COMPANY.CODE> = R.ACCOUNT.INT<AC.CO.CODE>
    R.DR.STMT.ENTRY<AC.STE.AMOUNT.LCY> = AMT * (-1)
    R.DR.STMT.ENTRY<AC.STE.TRANSACTION.CODE> = '1'
    R.DR.STMT.ENTRY<AC.STE.PRODUCT.CATEGORY> = R.ACCOUNT.INT<AC.CATEGORY>
    R.DR.STMT.ENTRY<AC.STE.VALUE.DATE> = TODAY
    R.DR.STMT.ENTRY<AC.STE.CURRENCY> = R.ACCOUNT.INT<AC.CURRENCY>
    R.DR.STMT.ENTRY<AC.STE.OUR.REFERENCE> = R.ACCOUNT.INT<AC.CO.CODE>
    R.DR.STMT.ENTRY<AC.STE.EXPOSURE.DATE> = TODAY
    R.DR.STMT.ENTRY<AC.STE.CURRENCY.MARKET> = '1'
    R.DR.STMT.ENTRY<AC.STE.TRANS.REFERENCE> = DR.ACCOUNT.NUMBER
    R.DR.STMT.ENTRY<AC.STE.NARRATIVE> = "INT_MANU_ENT_REV"
    R.DR.STMT.ENTRY<AC.STE.SYSTEM.ID> = 'AC'
    R.DR.STMT.ENTRY<AC.STE.BOOKING.DATE> = TODAY

    CHANGE @FM TO @SM IN R.DR.STMT.ENTRY
    CHANGE @SM TO @VM IN R.DR.STMT.ENTRY

    R.STMT.ENTRY<-1> = R.DR.STMT.ENTRY

RETURN

FORM.CREDIT.ENTRY:

    R.CR.STMT.ENTRY = ''
    R.CR.STMT.ENTRY<AC.CAT.PL.CATEGORY> = PL.CATEG
    R.CR.STMT.ENTRY<AC.CAT.COMPANY.CODE> = ID.COMPANY
    R.CR.STMT.ENTRY<AC.CAT.AMOUNT.LCY> = AMT
    R.CR.STMT.ENTRY<AC.CAT.TRANSACTION.CODE> = '51'
    R.CR.STMT.ENTRY<AC.CAT.PRODUCT.CATEGORY> = PL.CATEG
    R.CR.STMT.ENTRY<AC.CAT.VALUE.DATE> = TODAY
    R.CR.STMT.ENTRY<AC.CAT.CURRENCY> = 'DOP'
    R.CR.STMT.ENTRY<AC.CAT.OUR.REFERENCE> = ID.COMPANY
    R.CR.STMT.ENTRY<AC.CAT.EXPOSURE.DATE> = TODAY
    R.CR.STMT.ENTRY<AC.CAT.CURRENCY.MARKET> = '1'
    R.CR.STMT.ENTRY<AC.CAT.TRANS.REFERENCE> = PL.CATEG
    R.CR.STMT.ENTRY<AC.CAT.SYSTEM.ID> = 'AC'
    R.CR.STMT.ENTRY<AC.CAT.BOOKING.DATE> = TODAY

    CHANGE @FM TO @SM IN R.CR.STMT.ENTRY
    CHANGE @SM TO @VM IN R.CR.STMT.ENTRY

    R.STMT.ENTRY<-1> = R.CR.STMT.ENTRY

RETURN

CAL.ACCOUNTING:

    ACC.PRODUCT = 'AC'
    ACC.TYPE = 'SAO'

    CALL EB.ACCOUNTING(ACC.PRODUCT,ACC.TYPE,R.STMT.ENTRY,'')

RETURN

PGM.END:

END
