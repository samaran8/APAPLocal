* @ValidationCode : MjotMzYxMDQ1NDIxOkNwMTI1MjoxNjg0ODU0MzkwNjQ5OklUU1M6LTE6LTE6MjgwOToxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 23 May 2023 20:36:30
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 2809
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.LY.PGEN.ACCOP.LOAD
*-------------------------------------------------------------------------------------------------
*DESCRIPTION:
* This routine initialises and retrieves data for the local common variable
* This routine is the load routine of the batch job REDO.B.LY.PGEN.ACCOP which updates
*   REDO.LY.POINTS table based on the data defined in the parameter table
*   REDO.LY.MODALITY & REDO.LY.PROGRAM
* ------------------------------------------------------------------------------------------------
* Input/Output:
*--------------
* IN  : -NA-
* OUT : -NA-
*
* Dependencies:
*---------------
* CALLS     : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference            Description
* 17-JUN-2013   RMONDRAGON        ODR-2011-06-0243      Initial Creation
* Date                   who                   Reference              
* 12-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION - FM TO @FM AND VM TO @VM 
* 12-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*--------------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES

    $INSERT I_REDO.B.LY.PGEN.ACCOP.COMMON

    GOSUB INIT
    GOSUB OPEN.FILES
    GOSUB GET.VAL

RETURN

*----
INIT:
*----

    PRG.MOD.LST = ''         ; PRG.PER.MOD = '';
    PRG.LST = ''             ; PRG.ST.DATE.LST = '';
    PRG.END.DATE.LST = ''    ; PRG.DAYS.EXP.LST = '';
    PRG.EXP.DATE.LST = ''    ; PRG.CUS.GRP.LST = '';
    PRG.POINT.VALUE.LST = '' ; PRG.AVAIL.IF.DELAY.LST = '';
    PRG.POINT.USE.LST = ''   ; PRG.PTS.IN.MOD = '';
    PRG.ANTIG.IN.MOD = ''    ; PRG.PROD.LST = '';
    PRG.COND.TYPE.EXINC = '' ; PRG.APP.EXC.COND = '';
    PRG.EXC.EST.ACCT = ''    ; PRG.APP.INC.COND = '';
    PRG.INC.EST.ACCT = ''    ; PRG.AIR.LST = '';
    PRG.CCY.IN.MOD = ''

    G.DATE = ''
    I.DATE = DATE()
    CALL DIETER.DATE(G.DATE,I.DATE,'')

    CUR.DAY   = TODAY[7,2]
    CUR.MONTH = TODAY[5,2]
    CUR.YEAR  = TODAY[1,4]

    LOC.REF.POS = ''
    LOC.REF.APP = 'CUSTOMER':@FM:'ACCOUNT'
    LOC.REF.FIELD = 'L.CU.G.LEALTAD':@FM:'L.AC.STATUS1':@VM:'L.AC.STATUS2'
    CALL MULTI.GET.LOC.REF(LOC.REF.APP,LOC.REF.FIELD,LOC.REF.POS)
    POS.L.CU.G.LEALTAD = LOC.REF.POS<1,1>
    POS.L.AC.STATUS1 = LOC.REF.POS<2,1>
    POS.L.AC.STATUS2 = LOC.REF.POS<2,2>

RETURN

*----------
OPEN.FILES:
*----------

    FN.CUSTOMER = 'F.CUSTOMER'
    F.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.REDO.LY.POINTS = 'F.REDO.LY.POINTS'
    F.REDO.LY.POINTS = ''
    CALL OPF(FN.REDO.LY.POINTS,F.REDO.LY.POINTS)

    FN.REDO.LY.POINTS.TOT = 'F.REDO.LY.POINTS.TOT'
    F.REDO.LY.POINTS.TOT = ''
    CALL OPF(FN.REDO.LY.POINTS.TOT,F.REDO.LY.POINTS.TOT)

    FN.REDO.LY.MASTERPRGDR = 'F.REDO.LY.MASTERPRGDR'
    F.REDO.LY.MASTERPRGDR = ''
    CALL OPF(FN.REDO.LY.MASTERPRGDR,F.REDO.LY.MASTERPRGDR)

    FN.CUSTOMER.ACCOUNT = 'F.CUSTOMER.ACCOUNT'
    F.CUSTOMER.ACCOUNT = ''
    CALL OPF(FN.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT)

    FN.TEMP.LY.PGEN.ACCOP = 'F.TEMP.LY.PGEN.ACCOP'
    F.TEMP.LY.PGEN.ACCOP = ''
    OPEN FN.TEMP.LY.PGEN.ACCOP TO F.TEMP.LY.PGEN.ACCOP ELSE

        TEXT = 'Error in opening : ':FN.TEMP.LY.PGEN.ACCOP
        CALL FATAL.ERROR('REDO.B.LY.PGEN.ACCOP.LOAD')
    END

RETURN

*-------
GET.VAL:
*-------


*  READ PRG.MOD.LST FROM F.TEMP.LY.PGEN.ACCOP,'MOD' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'MOD',PRG.MOD.LST,F.TEMP.LY.PGEN.ACCOP,PRG.MOD.LST.ERR)
    IF PRG.MOD.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.PER.MOD FROM F.TEMP.LY.PGEN.ACCOP,'NOPRG' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'NOPRG',PRG.PER.MOD,F.TEMP.LY.PGEN.ACCOP,PRG.PER.MOD.ERR)
    IF PRG.PER.MOD.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.LST FROM F.TEMP.LY.PGEN.ACCOP,'PRG' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'PRG',PRG.LST,F.TEMP.LY.PGEN.ACCOP,PRG.LST.ERR)
    IF PRG.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.ST.DATE.LST FROM F.TEMP.LY.PGEN.ACCOP,'ST.DATE' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'ST.DATE',PRG.ST.DATE.LST,F.TEMP.LY.PGEN.ACCOP,PRG.ST.DATE.LST.ERR)
    IF PRG.ST.DATE.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.END.DATE.LST FROM F.TEMP.LY.PGEN.ACCOP,'END.DATE' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'END.DATE',PRG.END.DATE.LST,F.TEMP.LY.PGEN.ACCOP,PRG.END.DATE.LST.ERR)
    IF PRG.END.DATE.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.DAYS.EXP.LST FROM F.TEMP.LY.PGEN.ACCOP,'DAYS.EXP' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'DAYS.EXP',PRG.DAYS.EXP.LST,F.TEMP.LY.PGEN.ACCOP,PRG.DAYS.EXP.LST.ERR)
    IF PRG.DAYS.EXP.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.EXP.DATE.LST FROM F.TEMP.LY.PGEN.ACCOP,'EXP.DATE' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'EXP.DATE',PRG.EXP.DATE.LST,F.TEMP.LY.PGEN.ACCOP,PRG.EXP.DATE.LST.ERR)
    IF PRG.EXP.DATE.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.CUS.GRP.LST FROM F.TEMP.LY.PGEN.ACCOP,'CUS.GROUP' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'CUS.GROUP',PRG.CUS.GRP.LST,F.TEMP.LY.PGEN.ACCOP,PRG.CUS.GRP.LST.ERR)
    IF PRG.CUS.GRP.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.POINT.VALUE.LST FROM F.TEMP.LY.PGEN.ACCOP,'POINT.VALUE' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'POINT.VALUE',PRG.POINT.VALUE.LST,F.TEMP.LY.PGEN.ACCOP,PRG.POINT.VALUE.LST.ERR)
    IF PRG.POINT.VALUE.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.AVAIL.IF.DELAY.LST FROM F.TEMP.LY.PGEN.ACCOP,'AVAIL.IF.DELAY' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'AVAIL.IF.DELAY',PRG.AVAIL.IF.DELAY.LST,F.TEMP.LY.PGEN.ACCOP,PRG.AVAIL.IF.DELAY.LST.ERR)
    IF PRG.AVAIL.IF.DELAY.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.POINT.USE.LST FROM F.TEMP.LY.PGEN.ACCOP,'POINT.USE' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'POINT.USE',PRG.POINT.USE.LST,F.TEMP.LY.PGEN.ACCOP,PRG.POINT.USE.LST.ERR)
    IF PRG.POINT.USE.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.COND.TYPE.EXINC FROM F.TEMP.LY.PGEN.ACCOP,'COND.TYPE.EXINC' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'COND.TYPE.EXINC',PRG.COND.TYPE.EXINC,F.TEMP.LY.PGEN.ACCOP,PRG.COND.TYPE.EXINC.ERR)
    IF PRG.COND.TYPE.EXINC.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END

*  READ PRG.APP.EXC.COND FROM F.TEMP.LY.PGEN.ACCOP,'APP.EXC.COND' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'APP.EXC.COND',PRG.APP.EXC.COND,F.TEMP.LY.PGEN.ACCOP,PRG.APP.EXC.COND.ERR)
    IF PRG.APP.EXC.COND.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END

*  READ PRG.EXC.EST.ACCT FROM F.TEMP.LY.PGEN.ACCOP,'EXC.EST.ACCT' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'EXC.EST.ACCT',PRG.EXC.EST.ACCT,F.TEMP.LY.PGEN.ACCOP,PRG.EXC.EST.ACCT.ERR)
    IF PRG.EXC.EST.ACCT.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.APP.INC.COND FROM F.TEMP.LY.PGEN.ACCOP,'APP.INC.COND' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'APP.INC.COND',PRG.APP.INC.COND,F.TEMP.LY.PGEN.ACCOP,PRG.APP.INC.COND.ERR)
    IF PRG.APP.INC.COND.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.INC.EST.ACCT FROM F.TEMP.LY.PGEN.ACCOP,'INC.EST.ACCT' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'INC.EST.ACCT',PRG.INC.EST.ACCT,F.TEMP.LY.PGEN.ACCOP,PRG.INC.EST.ACCT.ERR)
    IF PRG.INC.EST.ACCT.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.PTS.IN.MOD FROM F.TEMP.LY.PGEN.ACCOP,'PTS.IN.MOD' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'PTS.IN.MOD',PRG.PTS.IN.MOD,F.TEMP.LY.PGEN.ACCOP,PRG.PTS.IN.MOD.ERR)
    IF PRG.PTS.IN.MOD.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.ANTIG.IN.MOD FROM F.TEMP.LY.PGEN.ACCOP,'ANTIG.IN.MOD' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'ANTIG.IN.MOD',PRG.ANTIG.IN.MOD,F.TEMP.LY.PGEN.ACCOP,PRG.ANTIG.IN.MOD.ERR)
    IF PRG.ANTIG.IN.MOD.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.PROD.LST FROM F.TEMP.LY.PGEN.ACCOP,'PROD' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'PROD',PRG.PROD.LST,F.TEMP.LY.PGEN.ACCOP,PRG.PROD.LST.ERR)
    IF PRG.PROD.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.CCY.IN.MOD FROM F.TEMP.LY.PGEN.ACCOP,'CCY.IN.MOD' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'CCY.IN.MOD',PRG.CCY.IN.MOD,F.TEMP.LY.PGEN.ACCOP,PRG.CCY.IN.MOD.ERR)
    IF PRG.CCY.IN.MOD.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END


*  READ PRG.AIR.LST FROM F.TEMP.LY.PGEN.ACCOP,'AIR' ELSE ;*Tus Start
    CALL F.READ(FN.TEMP.LY.PGEN.ACCOP,'AIR',PRG.AIR.LST,F.TEMP.LY.PGEN.ACCOP,PRG.AIR.LST.ERR)
    IF PRG.AIR.LST.ERR THEN  ;* Tus End
        GOSUB READ.NUSED
    END

RETURN

*----------
READ.NUSED:
*----------

    CRT 'Reading in the record non-used for this generation'

RETURN

END
