* @ValidationCode : MjoxNDcxMzUzMDE3OkNwMTI1MjoxNjg0ODU0Mzg4MjQ2OklUU1M6LTE6LTE6NDg1OjE6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 23 May 2023 20:36:28
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 485
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.INW.PREPROCESS(R.APERTA)
****************************************************************
*-------------------------------------------------------------------------
* Company Name  : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* Developed By  : Ganesh R
* Program Name  : REDO.B.INW.PREPROCESS.LOAD
*-------------------------------------------------------------------------
* Description: This routine is a load routine used to load the variables
*
*----------------------------------------------------------
* Linked with:
* In parameter :
* out parameter : None
*------------------------------------------------------------------------
* MODIFICATION HISTORY
*--------------------------------------------
*   DATE              ODR                             DESCRIPTION
* 21-09-10          ODR-2010-09-0148                 Initial Creation
* Date                   who                   Reference              
* 11-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION - FM TO @FM AND ++ TO += 1 AND CONVERT TO CHANGE AND VAR1 + VAR2 TO += VAR2 AND VAR1- TO -= AND TNO TO C$T24.SESSION.NO
* 11-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*
*------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.ALTERNATE.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.DATES

    $INSERT I_F.REDO.APAP.CLEARING.INWARD
    $INSERT I_F.REDO.APAP.CLEAR.PARAM
    $INSERT I_F.REDO.MAPPING.TABLE
    $INSERT I_REDO.B.INW.PREPROCESS.COMMON



    ACCT.OFF.VAL = ''
    CUSTOMER.VAL = ''
    IMAGE.VAL    = ''
    ACCOUNT.VAL  = ''
    REDO.APAP.CLEARING.INWARD.ID = ''

    CALL F.READ(FN.REDO.MAPPING.TABLE,'INW.PROCESS',R.REDO.MAPPING.TABLE,F.REDO.MAPPING.TABLE,MAP.ERR)
    LOCATE 'TASK' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING TASK.POS THEN
        TASK.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,TASK.POS>
        TASK.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,TASK.POS>
    END
    LOCATE 'DATE' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING DATE.POS THEN
        DATE.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,DATE.POS>
        DATE.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,DATE.POS>
    END
    LOCATE 'BATCH' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING BATCH.POS THEN
        BATCH.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,BATCH.POS>
        BATCH.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,BATCH.POS>
    END
    LOCATE 'DIN' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING DIN.POS THEN
        DIN.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,DIN.POS>
        DIN.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,DIN.POS>
    END
    LOCATE 'ACCOUNT' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING ACCOUNT.POS THEN
        ACCOUNT.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,ACCOUNT.POS>
        ACCOUNT.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,ACCOUNT.POS>
    END
    LOCATE 'SERIAL' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING SERIES.POS THEN
        SERIES.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,SERIES.POS>
        SERIES.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,SERIES.POS>
    END
    LOCATE 'ROUTE' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING ROUTE.POS THEN
        ROUTE.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,ROUTE.POS>
        ROUTE.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,ROUTE.POS>
    END
    LOCATE 'AMOUNT' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING AMOUNT.POS THEN
        AMOUNT.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,AMOUNT.POS>
        AMOUNT.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,AMOUNT.POS>
    END
    LOCATE 'CATEGORY' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING CATEGORY.POS THEN
        CATEGORY.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,CATEGORY.POS>
        CATEGORY.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,CATEGORY.POS>
    END
    LOCATE 'CREDIT.AMOUNT' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING CREDIT.AMOUNT.POS THEN
        CREDIT.AMOUNT.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,CREDIT.AMOUNT.POS>
        CREDIT.AMOUNT.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,CREDIT.AMOUNT.POS>
    END
    LOCATE 'DEBIT.AMOUNT' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING DEBIT.AMOUNT.POS THEN
        DEBIT.AMOUNT.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,DEBIT.AMOUNT.POS>
        DEBIT.AMOUNT.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,DEBIT.AMOUNT.POS>
    END
    LOCATE 'TXN.REFERENCE' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING FILLER.POS THEN
        FILLER.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,FILLER.POS>
        FILLER.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,FILLER.POS>
    END
    LOCATE 'CHECK.DIGIT' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING CHECK.DIGIT.POS THEN
        CHECK.DIGIT.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,CHECK.DIGIT.POS>
        CHECK.DIGIT.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,CHECK.DIGIT.POS>
    END
    LOCATE 'IMAGE.NAME' IN R.REDO.MAPPING.TABLE<MAP.TAB.FIELD.NAME,1> SETTING IMAGE.NAME.POS THEN
        IMAGE.NAME.STRT.POS = R.REDO.MAPPING.TABLE<MAP.TAB.START.POS,IMAGE.NAME.POS>
        IMAGE.NAME.LEN.POS = R.REDO.MAPPING.TABLE<MAP.TAB.LENGTH,IMAGE.NAME.POS>
    END

    CALL CACHE.READ(FN.REDO.APAP.CLEAR.PARAM,'SYSTEM',R.REDO.APAP.CLEAR.PARAM,PARAM.ERR)
    VAR.TAX = R.REDO.APAP.CLEAR.PARAM<CLEAR.PARAM.TAX.PERCENT>
    VAR.COUNT = 1

    TEMP.COUNT = DCOUNT(R.APERTA,@FM)
    LOOP
        REMOVE TEMP.DATA FROM R.APERTA SETTING POS
    WHILE VAR.COUNT LE TEMP.COUNT
        GOSUB GET.DETAILS
        VAR.JUL.SEQ += 1
        VAR.COUNT += 1
    REPEAT
RETURN


GET.DETAILS:
*Fetching the datas from the file record


    ROUTE.VAL = TEMP.DATA[ROUTE.STRT.POS,ROUTE.LEN.POS]
    TASK.VAL = TEMP.DATA[TASK.STRT.POS,TASK.LEN.POS]
    TRANS.DATE.VAL = TEMP.DATA[DATE.STRT.POS,DATE.LEN.POS]
    VAL.DATE = TRANS.DATE.VAL[1,2]
    VAL.MONTH = TRANS.DATE.VAL[3,2]
    VAL.YEAR = TRANS.DATE.VAL[5,4]
    TRANS.DATE.VAL = VAL.YEAR:VAL.MONTH:VAL.DATE
    OTH.BANK.ROUTE = TEMP.DATA[FILLER.STRT.POS,FILLER.LEN.POS]

    LOTE.VAL = TEMP.DATA[BATCH.STRT.POS,BATCH.LEN.POS]
    DIN.VAL = TEMP.DATA[DIN.STRT.POS,DIN.LEN.POS]

    ACCOUNT.VAL = TEMP.DATA[ACCOUNT.STRT.POS,ACCOUNT.LEN.POS]
    CALL F.READ(FN.ALTER,ACCOUNT.VAL,R.ALTER,F.ALTER,ALTER.ERR)
    IF R.ALTER THEN
        ACCOUNT.VAL = R.ALTER<AAC.GLOBUS.ACCT.NUMBER>
    END ELSE
        ACCOUNT.VAL += 1  ;*R22 AUTO CONVERSTION VAR1 + VAR2 TO += VAR2
        ACCOUNT.VAL -= 1   ;*R22 AUTO CONVERSTION VAR1 - VAR2 TO -= VAR2
    END
    CALL F.READ(FN.ACCOUNT,ACCOUNT.VAL,R.ACCOUNT,F.ACCOUNT,ACCT.ERR)
    IF R.ACCOUNT THEN
        ACCT.OFF.VAL = R.ACCOUNT<AC.ACCOUNT.OFFICER>
        CUSTOMER.VAL = R.ACCOUNT<AC.CUSTOMER>
    END
    VAR.CURRENCY = R.ACCOUNT<AC.CURRENCY>
    IF ROUTE.VAL EQ '010252425' THEN
        IMAGE.VAL = TEMP.DATA[IMAGE.NAME.STRT.POS,IMAGE.NAME.LEN.POS]
        IMAGE.VAL = IMAGE.VAL[1,10]
        IMAGE.VAL += 1 ;*R22 AUTO CONVERSTION VAR1 + VAR2 TO += VAR2
        IMAGE.VAL -= 1 ;*R22 AUTO CONVERSTION VAR1 - VAR2 TO -= VAR2
    END
    VAL.CHEQUE.NO = TEMP.DATA[SERIES.STRT.POS,SERIES.LEN.POS]
    AMOUNT.VAL = TEMP.DATA[AMOUNT.STRT.POS,AMOUNT.LEN.POS-2]:'.':TEMP.DATA[AMOUNT.STRT.POS+AMOUNT.LEN.POS-2,2]
    AMOUNT.VAL += 1 ;*R22 AUTO CONVERSTION VAR1 + VAR2 TO += VAR2
    AMOUNT.VAL -= 1  ;*R22 AUTO CONVERSTION VAR1 - VAR2 TO -= VAR2

    CATEGORY.VAL = TEMP.DATA[CATEGORY.STRT.POS,CATEGORY.LEN.POS]
    CREDIT.VAL = TEMP.DATA[CREDIT.AMOUNT.STRT.POS,CREDIT.AMOUNT.LEN.POS]
    DEBIT.VAL = TEMP.DATA[DEBIT.AMOUNT.STRT.POS,DEBIT.AMOUNT.LEN.POS]
    IF ROUTE.VAL EQ '999907000' THEN
        REDO.APAP.CLEARING.INWARD.ID = 'HEADER':'.':OTH.BANK.ROUTE:'.':TRANS.DATE.VAL
    END
    IF ROUTE.VAL EQ '010252425' THEN
        REDO.APAP.CLEARING.INWARD.ID = ACCOUNT.VAL:'.':VAL.CHEQUE.NO:'.':TRANS.DATE.VAL
    END
    CHECK.DIGIT = TEMP.DATA[CHECK.DIGIT.STRT.POS,CHECK.DIGIT.LEN.POS]
    OTH.BANK.ROUTE = TEMP.DATA[FILLER.STRT.POS,FILLER.LEN.POS]
    CALL F.READ(FN.REDO.APAP.CLEARING.INWARD,REDO.APAP.CLEARING.INWARD.ID,R.REDO.APAP.CLEARING.INWARD,F.REDO.APAP.CLEARING.INWARD,REDO.CLEAR.ERR)
    VAR.JUL.DATE = R.DATES(EB.DAT.JULIAN.DATE)
    VAR.JUL.NUMBER = VAR.JUL.DATE[5,3]
    VAR.JUL.SEQ = 10000
    VAR.TODAY = TODAY
    VAR.YEAR = VAR.TODAY[3,2]
    VAR.TRANS.REF = VAR.YEAR:VAR.JUL.NUMBER:VAR.JUL.SEQ
    VAR.TAX.AMT =TRIMB(FMT(((AMOUNT.VAL * VAR.TAX)/100),'L2,#19'))
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.TASK.CLEARING> = TASK.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.TRANS.DATE> = TRANS.DATE.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.LOTE> = LOTE.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.DIN> = DIN.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.ACCT.OFFICER> = ACCT.OFF.VAL
    IF ROUTE.VAL EQ '999907000' THEN
        R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CHEQUE.NO> = ''
        R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.ACCOUNT.NO> = ''
    END
    IF ROUTE.VAL EQ '010252425' THEN
        R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.ACCOUNT.NO> = ACCOUNT.VAL
        R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CHEQUE.NO> = VAL.CHEQUE.NO
    END
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.BANK.CODE> = ROUTE.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.AMOUNT> = AMOUNT.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CURRENCY> = VAR.CURRENCY
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.TAX.AMOUNT> = VAR.TAX.AMT
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CATEGORY> = CATEGORY.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CANT.CREDIT> = CREDIT.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CANT.DEBIT> = DEBIT.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CUSTOMER.NO> = CUSTOMER.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CHECK.DIGIT> = CHECK.DIGIT
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.OTH.ROUTE.NO> = OTH.BANK.ROUTE
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.TRANS.REFERENCE> = VAR.TRANS.REF
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.IMAGE.REFERENCE> = IMAGE.VAL
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.STATUS> = ''
    TEMPTIME = OCONV(TIME(),"MTS")
    TEMPTIME = TEMPTIME[1,5]
    CHANGE ':' TO '' IN TEMPTIME  ;*R22 AUTO CONVERSTION CONVERT TO CHANGE
    CHECK.DATE = DATE()
    DATE.TIME = OCONV(CHECK.DATE,"DY2"):FMT(OCONV(CHECK.DATE,"DM"),"R%2"):FMT(OCONV(CHECK.DATE,"DD"),"R%2"):TEMPTIME
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.DATE.TIME>= DATE.TIME
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.AUTHORISER> = C$T24.SESSION.NO:'_':OPERATOR  ;*R22 AUTO CONVERSTION TNO TO C$T24.SESSION.NO
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.INPUTTER> = C$T24.SESSION.NO:'_':OPERATOR   ;*R22 AUTO CONVERSTION TNO TO C$T24.SESSION.NO
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CURR.NO> = 1
    R.REDO.APAP.CLEARING.INWARD<CLEAR.CHQ.CO.CODE>=ID.COMPANY

    CALL F.WRITE(FN.REDO.APAP.CLEARING.INWARD,REDO.APAP.CLEARING.INWARD.ID,R.REDO.APAP.CLEARING.INWARD)

RETURN

END
