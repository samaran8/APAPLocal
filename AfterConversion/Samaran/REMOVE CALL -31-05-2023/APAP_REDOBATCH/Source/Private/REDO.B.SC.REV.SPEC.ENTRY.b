* @ValidationCode : MjotODU4NzE1ODgyOkNwMTI1MjoxNjg0ODU0Mzk3NjM5OklUU1M6LTE6LTE6OTc1OjE6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 23 May 2023 20:36:37
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 975
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.SC.REV.SPEC.ENTRY(Y.ID)
*-----------------------------------------------------------------------------
* DESCRIPTION : This BATCH routine will look for Spec entries that raised on the bussiness day from RE.SPEC.ENT.TODAY to reverse and re-calculate interest accrual based on
*               effective interest rate method and raise accounting entries
*-----------------------------------------------------------------------------
* * Input / Output
* -----------------------------------------------------------------------------
* IN Parameter    : NA
* OUT Parameter   : NA
*-----------------------------------------------------------------------------
* COMPANY NAME : APAP
* DEVELOPED BY : PRADEEP S
* PROGRAM NAME : REDO.B.SC.REV.SPEC.ENTRY
*-----------------------------------------------------------------------------
* Modification History :
* Date             Author             Reference           Description
* 06 Jul 2011      Pradeep S          PACS00080124        Initial Creation
* Date                  who                   Reference              
* 13-04-2023         CONVERSTION TOOL      R22 AUTO CONVERSTION - FM TO @FM AND VM TO @VM
* 13-04-2023          ANIL KUMAR B         R22 MANUAL CONVERSTION -NO CHANGES
*-----------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.DATES
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.CATEG.ENTRY
    $INSERT I_F.SECURITY.MASTER
    $INSERT I_F.RE.CONSOL.SPEC.ENTRY
    $INSERT I_F.SC.TRADING.POSITION
    $INSERT I_F.SC.TRADE.POS.HISTORY
    $INSERT I_F.SEC.TRADE
    $INSERT I_F.REDO.APAP.L.CONTRACT.BALANCES
    $INSERT I_REDO.B.SC.REV.SPEC.ENTRY.COMMON
    $INSERT I_F.SEC.ACC.MASTER

    GOSUB PROCESS

RETURN
*-----------------------------------------------------------------------------
PROCESS:
*-------

    Y.IPD.FLAG = @FALSE
    Y.STP.ID = Y.ID
    Y.STP.HIS.ID = Y.STP.ID:".":TODAY[1,6]
    R.STP.HIS = ''
    CALL F.READ(FN.SC.TRADE.POS.HISTORY,Y.STP.HIS.ID,R.STP.HIS,F.SC.TRADE.POS.HISTORY,ERR.STP)


    Y.PROCESS.GOHEAD = @TRUE
    Y.COMMON.ARRAY = ''
    Y.NEW.ENTRY = ''
    GOSUB CALC.NEW.ACCRUAL
    IF Y.PROCESS.GOHEAD THEN
        GOSUB STMT.ENTRY
        Y.COMMON.ARRAY = LOWER(R.SPEC.ENT)
        GOSUB CATEG.ENTRY
        Y.COMMON.ARRAY<-1> = LOWER(R.SPEC.ENT)
        IF Y.NEW.ENTRY THEN
            Y.COMMON.ARRAY<-1> = Y.NEW.ENTRY
        END
        GOSUB CALL.EB.ACCOUNTING
    END

RETURN

CALC.NEW.ACCRUAL:
******************

    Y.SUB.ASSEST.TYPE = ''
    Y.SEC.TRADE.ID = Y.STP.ID
    IF INDEX(Y.SEC.TRADE.ID,".",1) ELSE
        Y.PROCESS.GOHEAD = @FALSE
        RETURN
    END

    Y.SAM.ID = FIELD(Y.SEC.TRADE.ID,".",1)
    Y.SEC.CODE = FIELD(Y.SEC.TRADE.ID,".",2)

    R.SECURITY.MASTER = ''
    CALL F.READ(FN.SECURITY.MASTER,Y.SEC.CODE,R.SECURITY.MASTER,F.SECURITY.MASTER,E.SECURITY.MASTER)

    IF R.SECURITY.MASTER<SC.SCM.BOND.OR.SHARE> EQ 'S'  THEN
        Y.PROCESS.GOHEAD = @FALSE
        RETURN
    END

    IF R.SECURITY.MASTER THEN
        Y.SM.PAR.VALUE = R.SECURITY.MASTER<SC.SCM.PAR.VALUE>
        Y.SEC.CCY = R.SECURITY.MASTER<SC.SCM.SECURITY.CURRENCY>


        GOSUB CALCULATIONS
    END

RETURN

CALCULATIONS:
**************

    Y.FLAG = ''
    R.SAM = ''
    SAM.ERR = ''
    CALL F.READ(FN.SEC.ACC.MASTER,Y.SAM.ID,R.SAM,F.SEC.ACC.MASTER,SAM.ERR)

    CUSTOMER.NO = R.SAM<SC.SAM.CUSTOMER.NUMBER>

    INT.ADJ.CAT = R.SAM<SC.SAM.LOCAL.REF,POS.L.INT.ADJ.CAT>
    INT.ADJ.ACC = Y.SEC.CCY:INT.ADJ.CAT:'0001'

    INT.PL.CAT = R.SAM<SC.SAM.INT.RECD.CAT>

    R.SC.TRADING.POSITION = ''
    CALL F.READ(FN.SC.TRADING.POSITION,Y.SEC.TRADE.ID,R.SC.TRADING.POSITION,F.SC.TRADING.POSITION,E.SC.TRADING.POSITION)
    IF R.SC.TRADING.POSITION THEN
        FACE.VALUE    = R.SC.TRADING.POSITION<SC.TRP.CURRENT.POSITION>
        Y.ACCR.POSTED = R.SC.TRADING.POSITION<SC.TRP.CPN.ACCR.POSTED>

        SC.NOMINAL = R.SC.TRADING.POSITION<SC.TRP.CURRENT.POSITION>
        TRANS.TYPE = R.SC.TRADING.POSITION<SC.TRP.TRD.TRANS.TYPE,1>

        INTEREST.RATE      = R.SECURITY.MASTER<SC.SCM.INTEREST.RATE>
        BASE.1             = R.SECURITY.MASTER<SC.SCM.INTEREST.DAY.BASIS>
        BASE               = FIELD(BASE.1,'/',2)
        ACCRUAL.START.DATE = R.SECURITY.MASTER<SC.SCM.ACCRUAL.START.DATE>
        INT.PAYMENT.DATE   = R.SECURITY.MASTER<SC.SCM.INT.PAYMENT.DATE>
        REGION.CODE        = ""

        Y.D = "+1C"
        Y.NXT.CDAY = TODAY
        CALL CDT('',Y.NXT.CDAY,Y.D)
        Y.STP.DAY = R.STP.HIS<SC.TPH.DAY>
        CHANGE @VM TO @FM IN Y.STP.DAY
        LOCATE TODAY[7,2] IN Y.STP.DAY SETTING DAY.POS THEN
            Y.SPEC.AMT = R.STP.HIS<SC.TPH.CPN.ACCR.POSTED,DAY.POS>
        END

        COUPON.TENOR = "C"
        DAYS = "C"

        GOSUB PRE.CALC

        CALC1          = (INTEREST.RATE/100)/BASE
        CALC2          = (CALC1 * COUPON.TENOR)
        CALC3          = (1 + CALC2)

        CALC.EXP1      = (DAYS/COUPON.TENOR)

        CALC4          = PWR(CALC3,CALC.EXP1)
        EFF.RATE       = (CALC4 - 1)
        EFFECTIVE.RATE = EFF.RATE

        INT.ACCRUAL.VAL  = (FACE.VALUE*EFFECTIVE.RATE)

        GOSUB UPD.APAP.CONTRACT.BAL
        GOSUB LCCY.FCCY.CONV

    END

RETURN

**********
PRE.CALC:
**********

    IF ACCRUAL.START.DATE AND INT.PAYMENT.DATE THEN
        CALL CDD(REGION.CODE,ACCRUAL.START.DATE,INT.PAYMENT.DATE,COUPON.TENOR)

        Y.NXT.CAL.DAY = TODAY
        CALL CDT('', Y.NXT.CAL.DAY, '+1C')

        YDAY.TYPE = ''
        CALL AWD('',Y.NXT.CAL.DAY,YDAY.TYPE)
        IF YDAY.TYPE EQ 'W' THEN
            CALL CDD(REGION.CODE,ACCRUAL.START.DATE,TODAY,DAYS)
            IF INT.PAYMENT.DATE EQ Y.NXT.CAL.DAY THEN
                Y.IPD.FLAG = @TRUE
                Y.SPEC.AMT = R.STP.HIS<SC.TPH.CPN.AMOUNT,DAY.POS>
            END
        END ELSE
            Y.CALC.DAY = R.DATES(EB.DAT.NEXT.WORKING.DAY)
            GOSUB CALC.LAST.DAY.OF.MONTH
            DAYS = 'C'
            CALL CDD(REGION.CODE,ACCRUAL.START.DATE,Y.CALC.DAY,DAYS)
        END
        DAYS += 1
    END
RETURN

************************
CALC.LAST.DAY.OF.MONTH:
************************

    Y.V.DATE.POSN = ''
    Y.NXT.MONTH = Y.CALC.DAY[5,2]
    Y.CUR.MONTH = TODAY[5,2]
    IF Y.CUR.MONTH NE Y.NXT.MONTH THEN
        Y.FLAG = "M"
        COMI = TODAY
        CALL LAST.DAY.OF.THIS.MONTH
        Y.CALC.DAY = COMI
        GOSUB CHECK.INT.PAY.DATE
    END ELSE
        Y.FLAG = "W"
        CALL CDT('', Y.CALC.DAY, '-1C')
        GOSUB CHECK.INT.PAY.DATE
    END

RETURN

********************
CHECK.INT.PAY.DATE:
********************

    IF INT.PAYMENT.DATE GT TODAY AND INT.PAYMENT.DATE LE Y.CALC.DAY THEN
        Y.IPD.FLAG = @TRUE
        Y.CALC.DAY = INT.PAYMENT.DATE
        CALL CDT('', Y.CALC.DAY, '-1C')
        Y.SPEC.AMT = R.STP.HIS<SC.TPH.CPN.AMOUNT,DAY.POS>
        GOSUB CALC.NEXT.CPN.ENTRY
    END

RETURN


*********************
CALC.NEXT.CPN.ENTRY:
*********************

    SECURITY.CODE = Y.SEC.CODE
    CALC.FLAG = 'N'
    DATE.FROM = ''
    DATE.TO = ''
    CALL SC.CALC.COUPON.DATES(SECURITY.CODE, DATE.FROM, DATE.TO, CALC.FLAG)

    NXT.COUPON.TENOR = ''
    CALL CDD(REGION.CODE,DATE.FROM,DATE.TO,NXT.COUPON.TENOR)

    NXT.CPN.DAYS = ''
    IF Y.FLAG EQ "W" THEN
        Y.NXT.WRK.DAY = R.DATES(EB.DAT.NEXT.WORKING.DAY)
        CALL CDT('',Y.NXT.WRK.DAY,'-1C')
    END

    IF Y.FLAG EQ "M" THEN
        Y.NXT.WRK.DAY = Y.CALC.DAY
    END

    CALL CDD(REGION.CODE,DATE.FROM,Y.NXT.WRK.DAY,NXT.CPN.DAYS)
    NXT.CPN.DAYS += 1

    GOSUB CALC.NXT.CPN.EFF.AMT

RETURN


**********************
CALC.NXT.CPN.EFF.AMT:
**********************


    Y.CALC = (INTEREST.RATE/100)/BASE
    Y.CALC = Y.CALC * NXT.COUPON.TENOR
    Y.CALC = 1 + Y.CALC

    Y.CALC.EXP = NXT.CPN.DAYS / NXT.COUPON.TENOR

    Y.CALC = PWR(Y.CALC,Y.CALC.EXP)

    NXT.CPN.EFF.RATE = Y.CALC - 1
    NEXT.CPN.INT.AMT = FACE.VALUE * NXT.CPN.EFF.RATE

    Y.NXT.CPN.SPEC.AMT = R.STP.HIS<SC.TPH.CPN.ACCR.POSTED,DAY.POS>

    GOSUB UPD.NEW.APAP.CT.BAL
    INT.ACCRUAL.VAL = Y.NXT.CPN.SPEC.AMT - NEXT.CPN.INT.AMT
    GOSUB LCCY.FCCY.CONV
    IF INT.ACCRUAL.VAL NE 0 THEN
        GOSUB UPD.NEW.ENTRY
    END

RETURN

*********************
UPD.NEW.APAP.CT.BAL:
*********************

    R.APAP.L.CT.BAL = ''
    R.APAP.L.CT.BAL<CRT.BAL.INT.ACC.DATE> =  TODAY
    R.APAP.L.CT.BAL<CRT.BAL.INT.EFF.RATE>  =  DROUND(NXT.CPN.EFF.RATE*100,4)
    R.APAP.L.CT.BAL<CRT.BAL.ACCRUE.AMT>    =  Y.NXT.CPN.SPEC.AMT - NEXT.CPN.INT.AMT
    R.APAP.L.CT.BAL<CRT.BAL.NOMINAL>       =  SC.NOMINAL
    R.APAP.L.CT.BAL<CRT.BAL.EFF.ADJ.TOT>   =  R.APAP.L.CT.BAL<CRT.BAL.ACCRUE.AMT>


RETURN

***************
UPD.NEW.ENTRY:
***************

    Y.NEW.ENTRY = ''
    GOSUB STMT.ENTRY
    Y.NEW.ENTRY = LOWER(R.SPEC.ENT)
    GOSUB CATEG.ENTRY
    Y.NEW.ENTRY<-1> = LOWER(R.SPEC.ENT)

RETURN


********************
CALC.NEXT.DAY.ACCR:
********************

    DAYS = 'C'
    CALL CDD(REGION.CODE,ACCRUAL.START.DATE,Y.DAYS.DATE,DAYS)
    DAYS += 1

    CALC1          = (INTEREST.RATE/100)/BASE
    CALC2          = (CALC1 * COUPON.TENOR)
    CALC3          = (1 + CALC2)

    CALC.EXP1      = (DAYS/COUPON.TENOR)

    CALC4          = PWR(CALC3,CALC.EXP1)
    EFF.RATE       = (CALC4 - 1)
    EFFECTIVE.RATE = EFF.RATE

    INT.ACCRUAL.VAL  = (FACE.VALUE*EFFECTIVE.RATE)
    INT.ACCRUAL.VAL  = DROUND(INT.ACCRUAL.VAL,2)

RETURN


********************
CALC.AS.OF.STERDAY:
********************

    Y.DAY.BEFORE = TODAY
    CALL CDT('', Y.DAY.BEFORE, '-1C')

    COUPON.TENOR1 = "C"
    DAYS1 = "C"

    CALL CDD(REGION.CODE,ACCRUAL.START.DATE,INT.PAYMENT.DATE,COUPON.TENOR1)

    CALL CDD(REGION.CODE,ACCRUAL.START.DATE,Y.DAY.BEFORE,DAYS1)
    DAYS1 += 1

    CALC1          = ((INTEREST.RATE/100) / BASE)
    CALC2          = (CALC1 * COUPON.TENOR1)
    CALC3          = (1 + CALC2)

    CALC.EXP1      = (DAYS1/COUPON.TENOR1)

    CALC4          = PWR(CALC3,CALC.EXP1)
    EFF.RATE       = (CALC4 - 1)
    EFFECTIVE.RATE1 = EFF.RATE

    INT.ACCRUAL.VAL.STR  = (FACE.VALUE*EFFECTIVE.RATE1)
*INT.ACCRUAL.VAL.STR  = DROUND(INT.ACCRUAL.VAL.STR,2)

RETURN


STMT.ENTRY:
***************

    INT.ACCRUAL.VAL.LCY = DROUND(INT.ACCRUAL.VAL.LCY,2)
    INT.ACCRUAL.VAL.FCY = DROUND(INT.ACCRUAL.VAL.FCY,2)
    R.SPEC.ENT = ''
    R.SPEC.ENT<AC.STE.ACCOUNT.NUMBER>   = INT.ADJ.ACC
    R.SPEC.ENT<AC.STE.COMPANY.CODE>     = ID.COMPANY
    R.SPEC.ENT<AC.STE.AMOUNT.LCY>       = INT.ACCRUAL.VAL.LCY
    IF R.SPEC.ENT<AC.STE.AMOUNT.LCY> GT 0 THEN
        R.SPEC.ENT<AC.STE.TRANSACTION.CODE> = Y.SC.CR.TXN.CODE
    END ELSE
        R.SPEC.ENT<AC.STE.TRANSACTION.CODE> = Y.SC.DR.TXN.CODE
    END
    R.SPEC.ENT<AC.STE.PL.CATEGORY>      = ''
    R.SPEC.ENT<AC.STE.NARRATIVE>        = "DAILY.ACCR-INT"
    R.SPEC.ENT<AC.STE.CUSTOMER.ID>      = CUSTOMER.NO
    R.SPEC.ENT<AC.STE.PRODUCT.CATEGORY> = Y.DEFAULT.CATEG
    R.SPEC.ENT<AC.STE.VALUE.DATE>       = TODAY
    R.SPEC.ENT<AC.STE.CURRENCY>         = Y.SEC.CCY
    IF INT.ACCRUAL.VAL.FCY THEN
        R.SPEC.ENT<AC.STE.AMOUNT.FCY>       = INT.ACCRUAL.VAL.FCY
        R.SPEC.ENT<AC.STE.EXCHANGE.RATE >   = EX.RATE
    END
    R.SPEC.ENT<AC.STE.POSITION.TYPE>    = 'TR'
    R.SPEC.ENT<AC.STE.OUR.REFERENCE>    = Y.ID
    R.SPEC.ENT<AC.STE.CURRENCY.MARKET>  = Y.CCY.MARKET
    R.SPEC.ENT<AC.STE.TRANS.REFERENCE>  = Y.ID
    R.SPEC.ENT<AC.STE.SYSTEM.ID>        = 'SC'
    R.SPEC.ENT<AC.STE.BOOKING.DATE>     = TODAY

RETURN

CATEG.ENTRY:
***********

    INT.ACCRUAL.VAL.LCY = DROUND(INT.ACCRUAL.VAL.LCY,2)
    INT.ACCRUAL.VAL.FCY = DROUND(INT.ACCRUAL.VAL.FCY,2)
    R.SPEC.ENT = ''
    R.SPEC.ENT<AC.CAT.COMPANY.CODE>     = ID.COMPANY
    R.SPEC.ENT<AC.CAT.AMOUNT.LCY>       = INT.ACCRUAL.VAL.LCY * -1
    IF R.SPEC.ENT<AC.CAT.AMOUNT.LCY>  GT 0 THEN
        R.SPEC.ENT<AC.CAT.TRANSACTION.CODE> = Y.SC.CR.TXN.CODE
    END ELSE
        R.SPEC.ENT<AC.CAT.TRANSACTION.CODE> = Y.SC.DR.TXN.CODE
    END
    R.SPEC.ENT<AC.CAT.NARRATIVE,1>      = "DAILY.ACCR-INT"
    R.SPEC.ENT<AC.CAT.PL.CATEGORY>      = INT.PL.CAT
    R.SPEC.ENT<AC.CAT.CUSTOMER.ID>      = CUSTOMER.NO
    R.SPEC.ENT<AC.CAT.PRODUCT.CATEGORY> = Y.DEFAULT.CATEG
    R.SPEC.ENT<AC.CAT.VALUE.DATE>       = TODAY
    R.SPEC.ENT<AC.CAT.CURRENCY>         = Y.SEC.CCY
    IF INT.ACCRUAL.VAL.FCY THEN
        R.SPEC.ENT<AC.CAT.AMOUNT.FCY>       = INT.ACCRUAL.VAL.FCY
        R.SPEC.ENT<AC.CAT.EXCHANGE.RATE>    = EX.RATE
    END
    R.SPEC.ENT<AC.CAT.OUR.REFERENCE>    = Y.ID
    R.SPEC.ENT<AC.CAT.CURRENCY.MARKET>  = Y.CCY.MARKET
    R.SPEC.ENT<AC.CAT.TRANS.REFERENCE>  = Y.ID
    R.SPEC.ENT<AC.CAT.SYSTEM.ID>        = 'SC'
    R.SPEC.ENT<AC.CAT.BOOKING.DATE>     = TODAY

RETURN

CALL.EB.ACCOUNTING:
********************

    V = SC.TRP.LAST.COB.TXNS
    ID.NEW = Y.ID
    CALL EB.ACCOUNTING("SC","SAO",Y.COMMON.ARRAY,'')

RETURN

****************************
UPD.APAP.CONTRACT.BAL:
*****************************

    CALL F.READ(FN.REDO.APAP.L.CONTRACT.BALANCES,Y.SEC.TRADE.ID,R.REDO.APAP.L.CONTRACT.BALANCES,F.REDO.APAP.L.CONTRACT.BALANCES,E.REDO.APAP.L.CONTRACT.BALANCES)

    IF R.REDO.APAP.L.CONTRACT.BALANCES THEN
        Y.EFF.ADJ.TOT                                              = R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.EFF.ADJ.TOT>
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.INT.ACC.DATE,-1>   = TODAY
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.INT.EFF.RATE,-1>   = DROUND(EFFECTIVE.RATE*100,4)
        ACCRUE.TO.DATE                                             = R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.ACCRUE.TO.DATE>
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.ACCRUE.TO.DATE>    = INT.ACCRUAL.VAL
        INT.ACCRUAL.VAL                                            = Y.SPEC.AMT  - INT.ACCRUAL.VAL - Y.EFF.ADJ.TOT
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.ACCRUE.AMT,-1>     = DROUND(INT.ACCRUAL.VAL,2)
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.EFF.ADJ.TOT>       = INT.ACCRUAL.VAL + R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.EFF.ADJ.TOT>
    END ELSE

        Y.EFF.ADJ.TOT                                           = R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.EFF.ADJ.TOT>
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.ACCRUE.TO.DATE> = INT.ACCRUAL.VAL
        INT.ACCRUAL.VAL                                         = Y.SPEC.AMT - INT.ACCRUAL.VAL
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.INT.ACC.DATE>   = TODAY
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.INT.EFF.RATE>   = DROUND(EFFECTIVE.RATE*100,4)
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.ACCRUE.AMT>     = DROUND(INT.ACCRUAL.VAL,2)
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.NOMINAL> = SC.NOMINAL
        R.REDO.APAP.L.CONTRACT.BALANCES<CRT.BAL.EFF.ADJ.TOT>    = INT.ACCRUAL.VAL
    END

    CALL F.WRITE(FN.REDO.APAP.L.CONTRACT.BALANCES,Y.SEC.TRADE.ID,R.REDO.APAP.L.CONTRACT.BALANCES)

    IF INT.ACCRUAL.VAL EQ 0 THEN
        Y.PROCESS.GOHEAD = @FALSE
    END


    IF Y.IPD.FLAG THEN
        Y.SEC.TRADE.ID.OLD = Y.SEC.TRADE.ID:'-':INT.PAYMENT.DATE
        CALL F.WRITE(FN.REDO.APAP.L.CONTRACT.BALANCES,Y.SEC.TRADE.ID.OLD,R.REDO.APAP.L.CONTRACT.BALANCES)
        CALL F.DELETE(FN.REDO.APAP.L.CONTRACT.BALANCES,Y.SEC.TRADE.ID)

        IF R.APAP.L.CT.BAL THEN
            CALL F.WRITE(FN.REDO.APAP.L.CONTRACT.BALANCES,Y.SEC.TRADE.ID,R.APAP.L.CT.BAL)
        END
    END
RETURN

*****************
LCCY.FCCY.CONV:
*****************

    INT.ACCRUAL.VAL.FCY = ''
    INT.ACCRUAL.VAL.LCY = ''

    IF Y.SEC.CCY EQ LCCY THEN
        INT.ACCRUAL.VAL.LCY = INT.ACCRUAL.VAL
        INT.ACCRUAL.VAL.FCY = ''
    END

    IF Y.SEC.CCY NE LCCY THEN
        INT.ACCRUAL.VAL.FCY = INT.ACCRUAL.VAL
        CCY.MARKET = Y.CCY.MARKET
        FCY.TXN.CCY = Y.SEC.CCY
        FCY.TXN.AMOUNT = INT.ACCRUAL.VAL
        AML.CCY = LCCY
        SELL.AMT = ""
        DIFF.AMT = ''
        LCCY.AMT = ''
        RET.ERR = ''
        EX.RATE = ''
        CALL EXCHRATE(CCY.MARKET,FCY.TXN.CCY,FCY.TXN.AMOUNT,AML.CCY,SELL.AMT,'',EX.RATE,DIFF.AMT,LCCY.AMT,RET.ERR)
        INT.ACCRUAL.VAL.LCY = LCCY.AMT
    END

RETURN

END
