* @ValidationCode : MjoxMDkzMjY4ODc4OkNwMTI1MjoxNjgxMjgzOTMyMTA0OklUU1M6LTE6LTE6MzI2NzoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 12 Apr 2023 12:48:52
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 3267
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*10-04-2023            CONVERSION TOOL                AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM
*10-04-2023          jayasurya H                       MANUAL R22 CODE CONVERSION            NO CHANGES
SUBROUTINE REDO.ACH.FILE.UPD.FT.REVERSAL
*-------------------------------------------------------

*Comments
*-------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.REDO.FILE.DATE.PROCESS
    $INSERT I_F.AI.REDO.ARCIB.PARAMETER
    $INSERT I_System

    $INSERT I_F.FT.COMMISSION.TYPE
    $INSERT I_F.FT.TXN.TYPE.CONDITION
*   $INSERT I_F.ACCOUNT ;* R22 Auto Conversion

    $INSERT I_F.REDO.NCF.ISSUED
    $INSERT I_F.REDO.L.NCF.UNMAPPED
    $INSERT I_F.REDO.L.NCF.STATUS
    $INSERT I_F.REDO.L.NCF.CANCELLED

    GOSUB OPEN.FILES
    GOSUB INIT
    GOSUB LOCAL.REF.DET
    GOSUB PROCESS
RETURN
*-----------------------------------------------------------------------------
OPEN.FILES:
*-----------------------------------------------------------------------------


    FN.REDO.FILE.DATE.PROCESS = 'F.REDO.FILE.DATE.PROCESS'
    F.REDO.FILE.DATE.PROCESS  = ''
    CALL OPF(FN.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS)

    FN.AI.REDO.ARCIB.PARAMETER = 'F.AI.REDO.ARCIB.PARAMETER'
    F.AI.REDO.ARCIB.PARAMETER  = ''
    CALL OPF(FN.AI.REDO.ARCIB.PARAMETER,F.AI.REDO.ARCIB.PARAMETER)

    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER  = ''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)

    FN.FUNDS.TRANSFER.HIST = 'F.FUNDS.TRANSFER$HIS'
    F.FUNDS.TRANSFER.HIST  = ''
    CALL OPF(FN.FUNDS.TRANSFER.HIST,F.FUNDS.TRANSFER.HIST)


    FN.FT.TXN.TYPE.CONDITION  = 'F.FT.TXN.TYPE.CONDITION'
    F.FT.TXN.TYPE.CONDITION   = ''
    CALL OPF(FN.FT.TXN.TYPE.CONDITION,F.FT.TXN.TYPE.CONDITION)

    FN.FT.COMMISSION.TYPE = 'F.FT.COMMISSION.TYPE'
    F.FT.COMMISSION.TYPE  = ''
    CALL OPF(FN.FT.COMMISSION.TYPE,F.FT.COMMISSION.TYPE)

    FN.AI.REDO.OFS.QUEUE = 'F.AI.REDO.OFS.QUEUE'
    F.AI.REDO.OFS.QUEUE  = ''
    CALL OPF(FN.AI.REDO.OFS.QUEUE,F.AI.REDO.OFS.QUEUE)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT  = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.REDO.NCF.ISSUED  = 'F.REDO.NCF.ISSUED'
    F.REDO.NCF.ISSUEDV  = ''
    CALL OPF(FN.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED)

    FN.REDO.L.NCF.UNMAPPED = 'F.REDO.L.NCF.UNMAPPED'
    F.REDO.L.NCF.UNMAPPED  = ''
    CALL OPF(FN.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED)

    FN.REDO.L.NCF.STATUS  = 'F.REDO.L.NCF.STATUS'
    F.REDO.L.NCF.STATUS   =  ''
    CALL OPF(FN.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS)

    FN.REDO.L.NCF.CANCELLED = 'F.REDO.L.NCF.CANCELLED'
    F.REDO.L.NCF.CANCELLED  = ''
    CALL OPF(FN.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED)

RETURN
*-----------------------------------------------------------------------------
INIT:
*-----------------------------------------------------------------------------

    CALL CACHE.READ(FN.AI.REDO.ARCIB.PARAMETER,'SYSTEM',R.AI.REDO.ARCIB.PARAMETER,AI.REDO.ARCIB.PARAMETER.ERR)
    IF NOT(AI.REDO.ARCIB.PARAMETER.ERR) THEN
        Y.SUPPLIER.TXN.CODE = R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.SUPPLIER.TXN.CODE>
        Y.RET.TXN.CODE =  R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.RET.TXN.CODE>
        Y.RET.TAX.CODE =  R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.RET.TAX.CODE>
    END


    CALL CACHE.READ(FN.FT.TXN.TYPE.CONDITION, Y.SUPPLIER.TXN.CODE, R.FT.TXN.TYPE.CONDITION, FT.TXN.TYPE.CONDITION.ERR) ;* AUTO R22 CODE CONVERSION
    Y.SUPPLIER.COMM.TYPE = R.FT.TXN.TYPE.CONDITION<FT6.COMM.TYPES>
    IF Y.SUPPLIER.COMM.TYPE THEN
        CALL CACHE.READ(FN.FT.COMMISSION.TYPE, Y.SUPPLIER.COMM.TYPE, R.FT.COMMISSION.TYPE, FT.COMMISSION.TYPE.ERR) ;* AUTO R22 CODE CONVERSION
        Y.SUP.COM.FLAT.AMT  = R.FT.COMMISSION.TYPE<FT4.FLAT.AMT,1>
        Y.SUP.COM.PERCENT   = R.FT.COMMISSION.TYPE<FT4.PERCENTAGE,1,1>
        Y.SUP.CATEG.ACCOUNT = R.FT.COMMISSION.TYPE<FT4.CATEGORY.ACCOUNT>
    END


RETURN

*-----------------------------------------------------------------------------
LOCAL.REF.DET:
*-----------------------------------------------------------------------------

    LREF.APP ='FUNDS.TRANSFER'
    LREF.FIELDS = "L.COMMENTS":@VM:"L.NCF.NUMBER":@VM:"L.TT.TAX.AMT":@VM:"L.NCF.TAX.NUM"
    LOCAL.REF.POS=''
    CALL MULTI.GET.LOC.REF(LREF.APP,LREF.FIELDS,LOCAL.REF.POS)
    POS.L.COMMENTS     = LOCAL.REF.POS<1,1>
    POS.L.NCF.NUMBER   = LOCAL.REF.POS<1,2>
    POS.L.TT.TAX.AMT   = LOCAL.REF.POS<1,3>
    POS.L.NCF.TAX.NUM  = LOCAL.REF.POS<1,4>

RETURN
*-----------------------------------------------------------------------------
PROCESS:
*-----------------------------------------------------------------------------

    OFS.SOURCE.ID = 'OFSUPDATE'
    APP.NAME = 'FUNDS.TRANSFER'
    OFS.FUNCTION = 'I'
    PROCESS = 'PROCESS'
    GTS.MODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    OFS.STRING=''
    OFS.MSG.ID = ''
    OFS.ERR = ''


    Y.ARC.FILE.NAME  = R.NEW(FT.LOCAL.REF)<1,POS.L.COMMENTS>
    Y.ARC.FILE.AC.NO = FIELD(R.NEW(FT.LOCAL.REF)<1,POS.L.COMMENTS>,'.',5)
    CALL F.READ(FN.REDO.FILE.DATE.PROCESS,Y.ARC.FILE.NAME,R.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS,REDO.FILE.DATE.PROCESS.ERR)
    IF R.REDO.FILE.DATE.PROCESS AND Y.ARC.FILE.AC.NO THEN

        Y.PARENT.FT.REF       = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.PARENT.FT.REF>
        Y.FILE.TAX.AMT        = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT>

        Y.CNT.TAX.AMT = DCOUNT(Y.FILE.TAX.AMT,@VM)
        IF Y.CNT.TAX.AMT THEN
            Y.FILE.CURR.TAX.AMT = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,Y.CNT.TAX.AMT>
        END

        CALL F.READ(FN.ACCOUNT,Y.ARC.FILE.AC.NO,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERR)
        Y.FILE.DEB.CUST = R.ACCOUNT<AC.CUSTOMER>

        CALL F.READ(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)
        IF NOT(R.FUNDS.TRANSFER) THEN
            CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,FUNDS.TRANSFER.HIS.ERR)
        END

        Y.PARENT.TAX.AMT  = R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.L.TT.TAX.AMT>
        Y.FT.TXN.DATE     = R.FUNDS.TRANSFER<FT.DATE.TIME>
        Y.FT.TXN.DATE     = 20:Y.FT.TXN.DATE[1,6]

        R.FUNDS.TRANSFER.REC<FT.DEBIT.VALUE.DATE>  = R.NEW(FT.DEBIT.VALUE.DATE)
        R.FUNDS.TRANSFER.REC<FT.CREDIT.VALUE.DATE> = R.NEW(FT.CREDIT.VALUE.DATE)
        R.FUNDS.TRANSFER.REC<FT.DEBIT.CURRENCY>    = R.NEW(FT.CREDIT.CURRENCY)
        R.FUNDS.TRANSFER.REC<FT.ORDERING.CUST>     = R.NEW(FT.ORDERING.CUST)
        R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,POS.L.COMMENTS> = Y.ARC.FILE.NAME


* Settle Back the Failed Transaction Amount from Internal Account to Customer Account

        Y.REJECTION.AMT  = R.NEW(FT.CREDIT.AMOUNT)
        R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = Y.RET.TXN.CODE
        R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO>    = R.NEW(FT.CREDIT.ACCT.NO)
        R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO>   = Y.ARC.FILE.AC.NO
        R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT>     = Y.REJECTION.AMT
        R.FUNDS.TRANSFER.REC<FT.PAYMENT.DETAILS>  = 'REVERSADO-':ID.NEW
        R.APP.RECORD = R.FUNDS.TRANSFER.REC
        OFSVERSION   = 'FUNDS.TRANSFER,AI.REDO.ACH.REJECTION'
        CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
        CALL ALLOCATE.UNIQUE.TIME(UNIQUE.TIME)
        ARC.OFS.ID = Y.PARENT.FT.REF:'.':UNIQUE.TIME
*    WRITE OFS.STRING TO F.AI.REDO.OFS.QUEUE,ARC.OFS.ID ;*Tus Start
        CALL F.WRITE(FN.AI.REDO.OFS.QUEUE,ARC.OFS.ID,OFS.STRING)

* Settle Back the Complete Tax Amount from Tax Account to Customer Account

        R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = Y.RET.TAX.CODE
        R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO>    = Y.SUP.CATEG.ACCOUNT
        R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO>   = Y.ARC.FILE.AC.NO
        R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT>     = Y.PARENT.TAX.AMT
        R.FUNDS.TRANSFER.REC<FT.PAYMENT.DETAILS>  = 'REVERSADO-':ID.NEW
        R.APP.RECORD = R.FUNDS.TRANSFER.REC
        OFSVERSION = 'FUNDS.TRANSFER,AI.REDO.FILE.TAX.SETTLE'
        CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
        CALL ALLOCATE.UNIQUE.TIME(UNIQUE.TIME)
        ARC.OFS.ID = Y.PARENT.FT.REF:'.':UNIQUE.TIME
*    WRITE OFS.STRING TO F.AI.REDO.OFS.QUEUE,ARC.OFS.ID ;*Tus Start
        CALL F.WRITE(FN.AI.REDO.OFS.QUEUE,ARC.OFS.ID,OFS.STRING)

        GOSUB TAX.GENERATE.PARA
    END


RETURN

*-----------------------------------------------------------------------------
TAX.GENERATE.PARA:
*-----------------------------------------------------------------------------

* Generate the New Transaction so settle the Tax Amount for Successful Transactions


    Y.REJECTION.TAX.AMT = Y.REJECTION.AMT * (Y.SUP.COM.PERCENT/100)

    IF Y.FILE.CURR.TAX.AMT THEN
        Y.FINAL.TAX.AMT = Y.FILE.CURR.TAX.AMT - Y.REJECTION.TAX.AMT
    END ELSE
        Y.FINAL.TAX.AMT = Y.PARENT.TAX.AMT - Y.REJECTION.TAX.AMT
    END
    CALL EB.ROUND.AMOUNT(Y.FILE.CURRENCY,Y.FINAL.TAX.AMT,"","")


    IF Y.FINAL.TAX.AMT GT 0  THEN
        R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = ''
        R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO>    = Y.ARC.FILE.AC.NO
        R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO>   = Y.SUP.CATEG.ACCOUNT
        R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT>     = Y.FINAL.TAX.AMT
        R.FUNDS.TRANSFER.REC<FT.PAYMENT.DETAILS>  = 'REVERSADO-':ID.NEW
        R.APP.RECORD = R.FUNDS.TRANSFER.REC
        OFSVERSION   = 'FUNDS.TRANSFER,AI.REDO.FILE.TAX.GENERATION'
        CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
        CALL ALLOCATE.UNIQUE.TIME(UNIQUE.TIME)
        ARC.OFS.ID = Y.PARENT.FT.REF:'.':UNIQUE.TIME
*    WRITE OFS.STRING TO F.AI.REDO.OFS.QUEUE,ARC.OFS.ID ;*Tus Start
        CALL F.WRITE(FN.AI.REDO.OFS.QUEUE,ARC.OFS.ID,OFS.STRING)
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,-1> = Y.FINAL.TAX.AMT
        CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,Y.ARC.FILE.NAME,R.REDO.FILE.DATE.PROCESS)
    END ELSE
        R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.L.TT.TAX.AMT>  = 0
        R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.L.NCF.TAX.NUM> = ''

        IF NOT(FUNDS.TRANSFER.ERR) THEN
            CALL F.WRITE(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER)
        END ELSE
            CALL F.WRITE(FN.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER)
        END

        Y.CNT.TAX.AMT = DCOUNT(Y.FILE.TAX.AMT,@VM)
        IF Y.CNT.TAX.AMT THEN
            SLEEP 60
            Y.FILE.TAX.FT       = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,Y.CNT.TAX.AMT>
        END

        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,-1> = '0'
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,-1>  = '0'
        CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,Y.ARC.FILE.NAME,R.REDO.FILE.DATE.PROCESS)
        GOSUB NCF.UPDATE.PARA

    END



RETURN

*-----------------------------------------------------------------------------
NCF.UPDATE.PARA:
*-----------------------------------------------------------------------------
    IF Y.FILE.TAX.FT THEN
        CALL F.READ(FN.FUNDS.TRANSFER,Y.FILE.TAX.FT,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)
        IF NOT(R.FUNDS.TRANSFER) THEN
            CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,FUNDS.TRANSFER.HIS.ERR)
        END
        Y.FT.TXN.DATE     = R.FUNDS.TRANSFER<FT.DATE.TIME>
        Y.FT.TXN.DATE     = 20:Y.FT.TXN.DATE[1,6]
        REC.ID = Y.FILE.DEB.CUST:'.':Y.FT.TXN.DATE:'.':Y.FILE.TAX.FT
    END ELSE
        REC.ID = Y.FILE.DEB.CUST:'.':Y.FT.TXN.DATE:'.':Y.PARENT.FT.REF
    END

* Delete the Existing NCF Record

    CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,NCF.ISS.ERR)

    IF R.REDO.NCF.ISSUED THEN
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END ELSE
        CALL F.READ(FN.REDO.L.NCF.UNMAPPED,REC.ID,R.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED,NCF.UNMAP.ERR)
        IF R.REDO.L.NCF.UNMAPPED ELSE
            RETURN
        END
        CALL F.DELETE(FN.REDO.L.NCF.UNMAPPED,REC.ID)
    END

* Moved to NCF Cancellation Table

    CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID> = R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE> = R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE> = R.REDO.NCF.ISSUED<ST.IS.DATE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF> = R.REDO.NCF.ISSUED<ST.IS.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF> = R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT> = R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
    CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)

* Updating NCF status

    CALL F.READ(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS,ERR.STATUS)
    IF R.REDO.L.NCF.STATUS THEN
        R.REDO.L.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS)
    END

RETURN
*---------------------------------------------------------------

*---------------------------------------------------------------
END
