* @ValidationCode : MjoxNzYwMTAwMTg3OkNwMTI1MjoxNjgwNjg3MDE5MzU0OnNhbWFyOi0xOi0xOjA6MDpmYWxzZTpOL0E6REVWXzIwMjEwOC4wOi0xOi0x
* @ValidationInfo : Timestamp         : 05 Apr 2023 15:00:19
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : samar
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.AUTH.NCF.REV.UPD
****************************************************************
*-------------------------------------------------------------------------
* Company Name  : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* Developed By  : GANESH R
* Program Name  : REDO.AUTH.NCF.REV.UPD
* ODR NUMBER    : ODR-2009-10-0321
*-------------------------------------------------------------------------
* Description : This Auth routine is triggered when FT,TT,MM,FX,DC,DD transaction is Authorised
* In parameter : None
* out parameter : None
*-----------------------------------------------------------------------------
*Modification history:
*--------------------------------------------------------------------------
*   Date               who               Reference                    Description
* 10-AUG-2010        Prabhu.N             HD1026443                   @ID modified for REDO.NCF.ISSUED table
*05-04-2023        Conversion Tool      R22 Auto Code conversion      FM TO @FM, VM TO @VM, F.READ TO CACHE.READ, = TO EQ
*05-04-2023         Samaran T            Manual R22 Code Conversion    No Changes
*----------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
*
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.TELLER
    $INSERT I_F.FOREX
    $INSERT I_F.MM.MONEY.MARKET
    $INSERT I_F.DATA.CAPTURE
    $INSERT I_F.DD.DDI
    $INSERT I_F.TRANSACTION
    $INSERT I_F.ACCOUNT ;*
    $INSERT I_F.ACCOUNT.CLASS
*
    $INSERT I_F.REDO.L.NCF.STATUS
    $INSERT I_F.REDO.L.NCF.CANCELLED
    $INSERT I_F.REDO.NCF.ISSUED

    GOSUB INIT
    GOSUB OPEN.FILES
    GOSUB PROCESS
RETURN

*****
INIT:
******
*Initialisation
    VAR.TXN.ID=''
    LRF.APP='FUNDS.TRANSFER':@FM:'TELLER':@FM:'FOREX':@FM:'MM.MONEY.MARKET':@FM:'DATA.CAPTURE':@FM:'DD.DDI'
    LRF.FIELD='L.NCF.NUMBER':@VM:'L.NCF.TAX.NUM':@FM:'L.NCF.NUMBER':@VM:'L.NCF.TAX.NUM':@VM:'L.TT.DOC.NUM':@VM:'L.TT.CLIENT.COD':@VM:'L.TT.LEGAL.ID':@FM:'L.NCF.NUMBER':@FM:'L.NCF.NUMBER':@FM:'L.NCF.NUMBER':@FM:'L.NCF.NUMBER'
    LRF.POS=''
*
    CALL MULTI.GET.LOC.REF(LRF.APP,LRF.FIELD,LRF.POS)
    POS.FT.NCF.REQ=LRF.POS<1,1>
    POS.FT.TAX.NCF.REQ = LRF.POS<1,2>
    POS.TT.NCF.REQ=LRF.POS<2,1>
    POS.TT.TAX.NCF.REQ = LRF.POS<2,2>
    POS.DOC.NUM=LRF.POS<2,3>
    POS.CLIENT.COD=LRF.POS<2,4>
    L.TT.LEGAL.ID.POS=LRF.POS<2,5>
    POS.FX.NCF.REQ=LRF.POS<3,1>
    POS.MM.NCF.REQ=LRF.POS<4,1>
    POS.DC.NCF.REQ=LRF.POS<5,1>
    POS.DD.NCF.REQ=LRF.POS<6,1>
*
    FN.REDO.NCF.ISSUED='F.REDO.NCF.ISSUED'
    F.REDO.NCF.ISSUED=''
*
    FN.ACCOUNT.CLASS='F.ACCOUNT.CLASS'
    F.ACCOUNT.CLASS=''
    CALL OPF(FN.ACCOUNT.CLASS,F.ACCOUNT.CLASS)

    FN.REDO.NCF.STATUS='F.REDO.L.NCF.STATUS'
    F.REDO.NCF.STATUS=''
*
    FN.TRANSACTION='F.TRANSACTION'
    F.TRANSACTION=''
*
    FN.REDO.L.NCF.CANCELLED='F.REDO.L.NCF.CANCELLED'
    F.REDO.L.NCF.CANCELLED=''

    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER  = ''

    FN.FUNDS.TRANSFER.HIST = 'F.FUNDS.TRANSFER$HIS'
    F.FUNDS.TRANSFER.HIST  = ''

*
*  VNL - 20120329 - S
*
    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT  = ''
*
    ACCOUNT.DB = ''
    ACCOUNT.CR = ''

    FN.CUS.L.CU.CIDENT = 'F.CUSTOMER.L.CU.CIDENT'
    F.CUS.L.CU.CIDENT  = ''
    FN.CUS.LEGAL.ID = 'F.REDO.CUSTOMER.LEGAL.ID'
    F.CUS.LEGAL.ID  = ''
    CALL OPF(FN.CUS.LEGAL.ID,F.CUS.LEGAL.ID)
    CALL OPF(FN.CUS.L.CU.CIDENT,F.CUS.L.CU.CIDENT)

RETURN
*
**********
OPEN.FILES:
***********
*Opening the Files
    CALL OPF(FN.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED)

    CALL OPF(FN.REDO.NCF.STATUS,F.REDO.NCF.STATUS)

    CALL OPF(FN.TRANSACTION,F.TRANSACTION)

    CALL OPF(FN.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED)

    CALL OPF(FN.ACCOUNT,F.ACCOUNT)        ;* VNL - 20120329 - S/E

    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)

    CALL OPF(FN.FUNDS.TRANSFER.HIST,F.FUNDS.TRANSFER.HIST)

RETURN
*********
PROCESS:
*********
*Checking for application

    BEGIN CASE
        CASE APPLICATION EQ 'FUNDS.TRANSFER'
            GOSUB FT.PROCESS
        CASE APPLICATION EQ 'TELLER'
            GOSUB TT.PROCESS
        CASE APPLICATION EQ 'FOREX'
            GOSUB FX.PROCESS
        CASE APPLICATION EQ 'MONEY.MARKET'
            GOSUB MM.PROCESS
        CASE APPLICATION EQ 'DATA.CAPTURE'
            GOSUB DC.PROCESS
        CASE APPLICATION EQ 'DD.DDI'
            GOSUB DD.PROCESS
    END CASE

RETURN

**********
FT.PROCESS:
**********

*Updating the NCF.CANCELLED table
*VAL.NCF       = R.NEW(FT.LOCAL.REF)<1,POS.FT.NCF.REQ>
*VAL.TAX.NCF   = R.NEW(FT.LOCAL.REF)<1,POS.FT.TAX.NCF.REQ>
*VAL.STATUS    = R.NEW(FT.RECORD.STATUS)
*VAR.TXN.DATE  = R.OLD(FT.DATE.TIME)
*VAR.DATE      = 20:VAR.TXN.DATE[1,6]
*NCF.VALUE     = VAL.NCF
*IF NOT(NCF.VALUE) THEN
*NCF.VALUE = VAL.TAX.NCF
*END

*SEL.CMD = "SELECT ":FN.REDO.NCF.ISSUED:" WITH NCF EQ ":NCF.VALUE ;* Select has been commented for performance reason
*CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NOR,ERR.SEL)
*VAR.ISSUED.ID = SEL.LIST<1>
* Here we may 2 records in REDO.NCF.ISSUED because for AA repayment. we will have 2 records


    VAL.PAY.DET      = R.NEW(FT.PAYMENT.DETAILS)

    IF VAL.PAY.DET[1,8] EQ 'REVERSO-' THEN
        TXN.ID = FIELD(VAL.PAY.DET,'-',2)
    END ELSE
        TXN.ID=ID.NEW
    END

    CALL F.READ(FN.FUNDS.TRANSFER,TXN.ID,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)
    VAR.TXN.DATE  = R.FUNDS.TRANSFER<FT.DATE.TIME>
    VAR.DATE      = 20:VAR.TXN.DATE[1,6]

    IF NOT(R.FUNDS.TRANSFER) THEN
        CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HIST,TXN.ID,R.FUNDS.TRANSFER.HIST,FT.HIST.ERR)
        VAR.TXN.DATE  = R.FUNDS.TRANSFER.HIST<FT.DATE.TIME>
        VAR.DATE      = 20:VAR.TXN.DATE[1,6]
    END

    TXN.ID = FIELD(TXN.ID,';',1)

    Y.NCF.ISSUED.ID1 = R.NEW(FT.DEBIT.CUSTOMER):'.':VAR.DATE:'.':TXN.ID
    Y.NCF.ISSUED.ID2 = R.NEW(FT.CREDIT.CUSTOMER):'.':VAR.DATE:'.':TXN.ID

    CALL F.READ(FN.REDO.NCF.ISSUED,Y.NCF.ISSUED.ID1,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
    IF R.REDO.NCF.ISSUED THEN
        REC.ID = Y.NCF.ISSUED.ID1
        VAR.CUS = FIELD(REC.ID,".",1)
        GOSUB PERFORM.UPDATE

    END
    CALL F.READ(FN.REDO.NCF.ISSUED,Y.NCF.ISSUED.ID2,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
    IF R.REDO.NCF.ISSUED THEN
        REC.ID = Y.NCF.ISSUED.ID2
        VAR.CUS = FIELD(REC.ID,".",1)
        GOSUB PERFORM.UPDATE

    END

RETURN
*-------------------------------------------------------
PERFORM.UPDATE:
*-------------------------------------------------------

    IF VAL.PAY.DET[1,8] EQ 'REVERSO-' THEN
        TXN.ID = FIELD(VAL.PAY.DET,'-',2)
    END ELSE
        TXN.ID=ID.NEW
    END
    CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
    CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)

    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID>        = R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE>      = R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE>          = R.REDO.NCF.ISSUED<ST.IS.DATE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT>    = R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF>           = R.REDO.NCF.ISSUED<ST.IS.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF>  = R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT>       = R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>      = '05'

    CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)
    CALL F.READ(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS,F.REDO.NCF.STATUS,ERR.STATUS)
    R.REDO.NCF.STATUS<NCF.ST.STATUS> = 'CANCELLED'
    CALL F.WRITE(FN.REDO.NCF.STATUS,VAR.ISSUED.ID,R.REDO.NCF.STATUS)
    CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
RETURN
**********
TT.PROCESS:
***********
*Updating the NCF.CANCELLED table
*
    VAL.NCF=R.NEW(TT.TE.LOCAL.REF)<1,POS.TT.NCF.REQ>
    VAL.TAX.NCF = R.NEW(FT.LOCAL.REF)<1,POS.TT.TAX.NCF.REQ>

    NCF.VALUE = VAL.NCF
    IF NOT(NCF.VALUE) THEN
        NCF.VALUE = VAL.TAX.NCF
    END
    VAR.DR.CR.MARKER    = VAR.DR.CR.MARKER = R.NEW(TT.TE.DR.CR.MARKER)
*
    IF VAR.DR.CR.MARKER EQ R.NEW(TT.TE.DR.CR.MARKER) EQ 'DEBIT' THEN ;*R22 AUTO CODE CONVERSION
        ACCOUNT.DR      = R.NEW(TT.TE.ACCOUNT.1)
        ACCOUNT.CR      = R.NEW(TT.TE.ACCOUNT.2)
    END ELSE
        ACCOUNT.DR      = R.NEW(TT.TE.ACCOUNT.2)
        ACCOUNT.CR      = R.NEW(TT.TE.ACCOUNT.1)
    END
*
*  VNL - 20120329 - E
*
    VAL.STATUS=R.NEW(TT.TE.RECORD.STATUS)
    VAR.TXN.DATE=R.OLD(TT.TE.DATE.TIME)
    VAR.DATE=20:VAR.TXN.DATE[1,6]
    CALL CACHE.READ(FN.TRANSACTION, VAR.TRAN.CODE, R.TRANSACTION, TXN.MSG)  ;*R22 AUTO CODE CONVERSION
    VAR.DEBT.IND=R.TRANSACTION<AC.TRA.DEBIT.CREDIT.IND>
*      VAR.CUS=R.NEW(TT.TE.CHARGE.CUSTOMER) ;* VNL - 20120329 - S
*
    GOSUB GET.CUSTOMER
*                                           ;* VNL - 20120329 - E
    TXN.ID=ID.NEW
    REC.ID=VAR.CUS:'.':VAR.DATE:'.':TXN.ID
    IF NCF.VALUE NE '' AND VAL.STATUS[1,1] EQ 'R' THEN
        CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
        CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID>=R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE>=R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE>=R.REDO.NCF.ISSUED<ST.IS.DATE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF>=R.REDO.NCF.ISSUED<ST.IS.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF>=R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT>=R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>='05'
        CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)
        CALL F.READ(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS,F.REDO.NCF.STATUS,ERR.STATUS)
        R.REDO.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS)
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END
RETURN
**********
FX.PROCESS:
**********
*Updating the NCF.CANCELLED table
    VAL.NCF=R.NEW(FX.LOCAL.REF)<1,POS.FX.NCF.REQ>
    VAL.STATUS=R.NEW(FX.RECORD.STATUS)
    VAR.TXN.DATE=R.NEW(FX.DATE.TIME)
    VAR.DATE=20:VAR.TXN.DATE[1,6]
    VAR.CUS=R.NEW(FX.COUNTERPARTY)
    TXN.ID=ID.NEW
    REC.ID=VAR.CUS:VAR.DATE:TXN.ID
    IF VAL.NCF NE '' AND VAL.STATUS[1,1] EQ 'R' THEN
        CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
        CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID>=R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE>=R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE>=R.REDO.NCF.ISSUED<ST.IS.DATE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF>=R.REDO.NCF.ISSUED<ST.IS.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF>=R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT>=R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
        CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)
        CALL F.READ(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS,F.REDO.NCF.STATUS,ERR.STATUS)
        R.REDO.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS)
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END
RETURN

**********
MM.PROCESS:
**********
*Updating the NCF.CANCELLED table
    VAL.NCF=R.NEW(MM.LOCAL.REF)<1,POS.MM.NCF.REQ>
    VAL.STATUS=R.NEW(MM.RECORD.STATUS)
    VAR.TXN.DATE=R.NEW(MM.DATE.TIME)
    VAR.DATE=20:VAR.TXN.DATE[1,6]
    VAR.CUS=R.NEW(MM.CUSTOMER.ID)
    TXN.ID=ID.NEW
    REC.ID=VAR.CUS:VAR.DATE:TXN.ID
    IF VAL.NCF NE '' AND VAL.STATUS[1,1] EQ 'R' THEN
        CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
        CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID>=R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE>=R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE>=R.REDO.NCF.ISSUED<ST.IS.DATE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF>=R.REDO.NCF.ISSUED<ST.IS.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF>=R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT>=R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
        CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)
        CALL F.READ(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS,F.REDO.NCF.STATUS,ERR.STATUS)
        R.REDO.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS)
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END
RETURN

**********
DD.PROCESS:
**********
    VAL.NCF=R.NEW(DD.DDI.LOCAL.REF)<1,POS.DD.NCF.REQ>
    VAL.STATUS=R.NEW(DD.DDI.RECORD.STATUS)
    VAR.TXN.DATE=R.NEW(DD.DDI.DATE.TIME)
    VAR.DATE=20:VAR.TXN.DATE[1,6]
    VAR.CUS=R.NEW(DD.DDI.CUSTOMER.NO)
    TXN.ID=ID.NEW
    REC.ID=VAR.CUS:VAR.DATE:TXN.ID
    IF VAL.NCF NE '' AND VAL.STATUS[1,1] EQ 'R' THEN
        CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
        CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID>=R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE>=R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE>=R.REDO.NCF.ISSUED<ST.IS.DATE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF>=R.REDO.NCF.ISSUED<ST.IS.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF>=R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT>=R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
        CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)
        CALL F.READ(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS,F.REDO.NCF.STATUS,ERR.STATUS)
        R.REDO.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS)
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END
RETURN

**********
DC.PROCESS:
***********
    VAL.NCF=R.NEW(DC.DC.LOCAL.REF)<1,POS.DC.NCF.REQ>
    VAL.STATUS=R.NEW(DC.DC.RECORD.STATUS)
    VAR.TXN.DATE=R.NEW(DC.DC.DATE.TIME)
    VAR.DATE=20:VAR.TXN.DATE[1,6]
    VAR.CUS=R.NEW(DC.DC.CUSTOMER.ID)
    TXN.ID=ID.NEW
    REC.ID=VAR.CUS:VAR.DATE:TXN.ID
    IF VAL.NCF NE '' AND VAL.STATUS[1,1] EQ 'R' THEN
        CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,ERR.ISSUE)
        CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID>=R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE>=R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE>=R.REDO.NCF.ISSUED<ST.IS.DATE>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT>=R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF>=R.REDO.NCF.ISSUED<ST.IS.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF>=R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT>=R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
        R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
        CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)
        CALL F.READ(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS,F.REDO.NCF.STATUS,ERR.STATUS)
        R.REDO.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.NCF.STATUS,REC.ID,R.REDO.NCF.STATUS)
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END
RETURN
************
GET.CUSTOMER:
************
*
    CALL F.READ(FN.ACCOUNT,ACCOUNT.DR,R.ACCOUNT,F.ACCOUNT,ACCT.ERR)
    VAR.CUS = R.ACCOUNT<AC.CUSTOMER>
    GET.PROD.CATEGORY = R.ACCOUNT<AC.CATEGORY>
*
    IF NOT(VAR.CUS) THEN
        CALL F.READ(FN.ACCOUNT,ACCOUNT.CR,R.ACCOUNT,F.ACCOUNT,ACCT.ERR)
        VAR.CUS = R.ACCOUNT<AC.CUSTOMER>
        GET.PROD.CATEGORY = R.ACCOUNT<AC.CATEGORY>
    END


    CALL CACHE.READ(FN.ACCOUNT.CLASS, 'NOSTRO', R.ACCOUNT.CLASS, ACCOUNT.CLASS.ERR)  ;*R22 AUTO CODE CONVERSION
    GET.NOSTRO.LIST = R.ACCOUNT.CLASS<AC.CLS.CATEGORY>

    NOSTRO.FLAG = ''
    LOCATE GET.PROD.CATEGORY IN GET.NOSTRO.LIST<1,1> SETTING CATEG.POS THEN
        NOSTRO.FLAG = 1
    END
    WDOC.NUM         = R.NEW(TT.TE.LOCAL.REF)<1,POS.DOC.NUM>
    WCLNT.ID         = R.NEW(TT.TE.LOCAL.REF)<1,POS.CLIENT.COD>
    Y.TT.LEGAL.ID    = R.NEW(TT.TE.LOCAL.REF)<1,L.TT.LEGAL.ID.POS>
    ID.CUSIDE = FIELD(Y.TT.LEGAL.ID,".",2)
    Y.ID.TYPE = FIELD(Y.TT.LEGAL.ID,".",1)

    IF VAR.CUS THEN
        IF NOSTRO.FLAG THEN
            VAR.CUS=WDOC.NUM
        END
    END ELSE
        VAR.CUS=WCLNT.ID
    END

    IF VAR.CUS THEN
        RETURN
    END
    BEGIN CASE
        CASE Y.ID.TYPE EQ "CEDULA"
            R.CUS.CIDENT = ''
            CALL F.READ(FN.CUS.L.CU.CIDENT,ID.CUSIDE,R.CUS.CIDENT,F.CUS.L.CU.CIDENT,CID.ERR)
            CUS.ID = FIELD(R.CUS.CIDENT,"*",2)

        CASE Y.ID.TYPE EQ "PASAPORTE"
            R.CUS.LEGAL = ''
            CALL F.READ(FN.CUS.LEGAL.ID,ID.CUSIDE,R.CUS.LEGAL,F.CUS.LEGAL.ID,LEGAL.ERR)
            CUS.ID = FIELD(R.CUS.LEGAL,"*",2)
    END CASE

    IF CUS.ID NE "" THEN
        VAR.CUS  = CUS.ID
    END

    IF NOT(CUS.ID) THEN

        IF WDOC.NUM THEN
            VAR.CUS=WDOC.NUM
        END

    END
RETURN
END
