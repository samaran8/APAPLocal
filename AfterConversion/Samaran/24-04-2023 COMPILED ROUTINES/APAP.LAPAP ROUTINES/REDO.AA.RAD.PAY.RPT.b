* @ValidationCode : Mjo2NTkwODY5NDc6Q3AxMjUyOjE2ODIzMTk0MTk0OTE6c2FtYXI6LTE6LTE6MDowOmZhbHNlOk4vQTpERVZfMjAyMTA4LjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 24 Apr 2023 12:26:59
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : samar
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.LAPAP
SUBROUTINE REDO.AA.RAD.PAY.RPT
*--------------------------------------------------------------------------------------
*Modification History
*DATE                       WHO                         REFERENCE                                   DESCRIPTION
*24-04-2023            Conversion Tool             R22 Auto Code conversion                FM TO @FM,VM TO @VM,SM TO @SM,++ to +=1,INSERT FILE MODIFIED
*24-04-2023              Samaran T                R22 Manual Code conversion                         No Changes
*---------------------------------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON    ;*R22 AUTO CODE CONVERSION.START
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_BATCH.FILES
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.AA.ACTIVITY.BALANCES
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.REDO.L.NCF.STOCK
    $INSERT I_F.REDO.H.REPORTS.PARAM
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.OVERDUE
    $INSERT I_F.AA.ACTIVITY.HISTORY
    $INSERT I_F.REDO.APAP.PROPERTY.PARAM    ;*R22 AUTO CODE CONVERSION.END

    GOSUB INIT
    GOSUB GET.PARAM
    GOSUB PROCESS
RETURN

INIT:
*****
    FN.AA.ARRANGEMENT.ACTIVITY = 'F.AA.ARRANGEMENT.ACTIVITY'; F.AA.ARRANGEMENT.ACTIVITY = ''
    CALL OPF(FN.AA.ARRANGEMENT.ACTIVITY,F.AA.ARRANGEMENT.ACTIVITY)
    FN.AA.ACTIVITY.BALANCES = 'F.AA.ACTIVITY.BALANCES'; F.AA.ACTIVITY.BALANCES = ''
    CALL OPF(FN.AA.ACTIVITY.BALANCES,F.AA.ACTIVITY.BALANCES)
    FN.AA.ARRANGEMENT = 'F.AA.ARRANGEMENT'; F.AA.ARRANGEMENT = ''
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)
    FN.REDO.L.NCF.STOCK = 'F.REDO.L.NCF.STOCK'; F.REDO.L.NCF.STOCK = ''
    CALL OPF(FN.REDO.L.NCF.STOCK,F.REDO.L.NCF.STOCK)
    FN.REDO.H.REPORTS.PARAM = 'F.REDO.H.REPORTS.PARAM'; F.REDO.H.REPORTS.PARAM = ''
    CALL OPF(FN.REDO.H.REPORTS.PARAM,F.REDO.H.REPORTS.PARAM)
    FN.AA.ACCOUNT.DETAILS = 'F.AA.ACCOUNT.DETAILS'; F.AA.ACCOUNT.DETAILS = ''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)
    FN.AA.BILL.DETAILS = 'F.AA.BILL.DETAILS'; F.AA.BILL.DETAILS = ''
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)
    FN.AA.BILL.DETAILS.HST = 'F.AA.BILL.DETAILS.HIST'; F.AA.BILL.DETAILS.HST = ''
    CALL OPF(FN.AA.BILL.DETAILS.HST,F.AA.BILL.DETAILS.HST)
    FN.ACCOUNT = 'F.ACCOUNT'; F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    FN.ACCOUNT.HST = 'F.ACCOUNT$HIS'; F.ACCOUNT.HST = ''
    CALL OPF(FN.ACCOUNT.HST,F.ACCOUNT.HST)
    FN.REDO.APAP.PROPERTY.PARAM = 'F.REDO.APAP.PROPERTY.PARAM'; F.REDO.APAP.PROPERTY.PARAM = ''
    CALL OPF(FN.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM)
    FN.AA.ACTIVITY.HISTORY = 'F.AA.ACTIVITY.HISTORY'; F.AA.ACTIVITY.HISTORY = ''
    CALL OPF(FN.AA.ACTIVITY.HISTORY,F.AA.ACTIVITY.HISTORY)
    YEND.DATE = ''; YSTART.DATE = ''
    YLST.TODAY = TODAY
    CALL CDT('',YLST.TODAY,'-1C')
RETURN

GET.PARAM:
**********
    Y.LAST.WORK.DAY = R.DATES(EB.DAT.LAST.WORKING.DAY)
    REDO.L.NCF.STOCK.ERR = ''; R.REDO.L.NCF.STOCK = ''; YBALANC.TYP = ''
    CALL CACHE.READ(FN.REDO.L.NCF.STOCK,'SYSTEM',R.REDO.L.NCF.STOCK,REDO.L.NCF.STOCK.ERR)
    YBALANC.TYP = R.REDO.L.NCF.STOCK<ST.AA.IC.TYPE>
    Y.PARAM.ID = 'REDO.AA.ADVPAY'; R.REDO.H.REPORTS.PARAM = ''; Y.PARAM.ERR = ''
    CALL CACHE.READ(FN.REDO.H.REPORTS.PARAM,Y.PARAM.ID,R.REDO.H.REPORTS.PARAM,Y.PARAM.ERR)
    IF R.REDO.H.REPORTS.PARAM THEN
        FN.CHK.DIR = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.DIR>
        Y.FILE.NAME = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.FILE.NAME>
        Y.FIELD.NAME = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.FIELD.NAME>
        Y.FIELD.VAL  = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.FIELD.VALUE>
    END
    F.CHK.DIR = ''
    CALL OPF(FN.CHK.DIR,F.CHK.DIR)
    Y.FINAL.OUT.FILE.NAME = "AA.RADIACIOHIP_ReportServer.":TODAY:".txt"
    R.FIL = ''; READ.FIL.ERR = ''
    CALL F.READ(FN.CHK.DIR,Y.FINAL.OUT.FILE.NAME,R.FIL,F.CHK.DIR,READ.FIL.ERR)
    IF R.FIL THEN
        DELETE F.CHK.DIR,Y.FINAL.OUT.FILE.NAME
    END
    L.OD.STATUS.POS = ''
    CALL GET.LOC.REF("ACCOUNT","L.OD.STATUS",L.OD.STATUS.POS)
    Y.APPLN = "AA.PRD.DES.OVERDUE":@FM:"ACCOUNT"
    Y.FLD = 'L.LOAN.STATUS.1':@FM:'L.OD.STATUS'
    Y.POS = ''
    CALL MULTI.GET.LOC.REF(Y.APPLN,Y.FLD,Y.POS)
    Y.L.LOAN.STATUS.1.POS = Y.POS<1,1>
    L.OD.STATUS.POS = Y.POS<2,1>
RETURN

PROCESS:
********
    YFILE.VAL = "ACCOUNT.NUMBER|EFFECTIVE DATE|ACTIVITY ID|ACTIVITY|BILL ID|GROUP ID|OS.TOTAL.AMOUNT|OR.TOTAL.AMOUNT|PRODUCT|PRODUCT GROUP|CANCELLED STATUS|LOAN STATUS|ACTIVITY ECB|UNCACCOUNT ECB|PAGO STATUS"
    SEL.AACMD = "SELECT ":FN.AA.ARRANGEMENT.ACTIVITY:" WITH ACTIVITY LIKE '...-MAKEDUE-RADIACIOHIP...' AND DATE.TIME LIKE 1604..."
    CALL EB.READLIST(SEL.AACMD,SEL.REC,'',SEL.LIST,SEL.ERR)
    Y.CNT = 1
    LOOP
        REMOVE AAA.ID FROM SEL.REC SETTING AAA.POSN
    WHILE AAA.ID:AAA.POSN
        ERR.AAA = ''; R.AA.ARRANGEMENT.ACTIVITY = ''; YTOTAL.AMOUNT = 0
        CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY,AAA.ID,R.AA.ARRANGEMENT.ACTIVITY,F.AA.ARRANGEMENT.ACTIVITY,ERR.AAA)
        AA.ARR.ID = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ARRANGEMENT>
        AA.EFF.ID = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.EFFECTIVE.DATE>
        ACTIVTTY.VAL = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ACTIVITY>
        ERR.AA.ACCOUNT.DETAILS = ''; R.AA.ACCOUNT.DETAILS = ''; YOS.TOT.AMT = 0; YSET.STATUS = ''
        CALL F.READ(FN.AA.ACCOUNT.DETAILS,AA.ARR.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,ERR.AA.ACCOUNT.DETAILS)
        YACT.REF = R.AA.ACCOUNT.DETAILS<AA.AD.ACTIVITY.REF>
        Y.BILL.LIST    = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID>
        Y.BILL.TYPE    = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE>
        Y.BILL.STATUS  = R.AA.ACCOUNT.DETAILS<AA.AD.SET.STATUS>

        CHANGE @SM TO @FM IN  Y.BILL.LIST
        CHANGE @SM TO @FM IN  YACT.REF
        CHANGE @SM TO @FM IN  Y.BILL.STATUS
        CHANGE @VM TO @FM IN  Y.BILL.LIST
        CHANGE @VM TO @FM IN  YACT.REF
        CHANGE @VM TO @FM IN  Y.BILL.STATUS

        LOCATE AAA.ID IN YACT.REF<1> SETTING AA.POSN THEN
            YBILL.ID = Y.BILL.LIST<AA.POSN>
            YSET.STATUS = Y.BILL.STATUS<AA.POSN>
            Y.TOT.AMT = 0; Y.BILL.DTE = ''; YOS.TOT.BILL.AMT = 0; YOS.TOT.AMT = 0
            GOSUB READ.AA.BILL
            Y.TOT.BILL.AMT = R.AA.BILL.DETAILS<AA.BD.OR.TOTAL.AMOUNT>
            YOS.TOT.BILL.AMT = SUM(R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT>)
            YOS.TOT.AMT = SUM(YOS.TOT.BILL.AMT)
            Y.BILL.DTE = R.AA.BILL.DETAILS<AA.BD.PAYMENT.DATE>
            Y.TOT.AMT = ABS(Y.TOT.BILL.AMT)

            ERR.AA.ARR = ''; R.AA.ARRANGEMENT = ''; YACCOUNT.NO = ''; YTEMP.AMT = ''; YVAL = ''
            CALL F.READ(FN.AA.ARRANGEMENT,AA.ARR.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,ERR.AA.ARR)
            YACCOUNT.NO  = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID>
            YPROD = R.AA.ARRANGEMENT<AA.ARR.PRODUCT>
            YPROD.GRP = R.AA.ARRANGEMENT<AA.ARR.PRODUCT.GROUP>
            R.ACCOUNT = ''; Y.ACC.ERR = ''; YOD.STAT = ''; YPOST.REST = ''
            CALL F.READ(FN.ACCOUNT,YACCOUNT.NO,R.ACCOUNT,F.ACCOUNT,Y.ACC.ERR)
            IF NOT(R.ACCOUNT) THEN
                YACC.HID = YACCOUNT.NO
                CALL EB.READ.HISTORY.REC(F.ACCOUNT.HST,YACC.HID,R.ACCOUNT,ERR.ACCOUNT)
            END
            IF R.ACCOUNT THEN
                YOD.STAT = R.ACCOUNT<AC.LOCAL.REF,L.OD.STATUS.POS>
                YPOST.REST = R.ACCOUNT<AC.POSTING.RESTRICT>
            END
            ARRAY.VAL = ''; Y.LOAN.STATUS = ''; Y.CLOSE.LN.FLG = 0
            GOSUB GET.LOAN.STATUS
            GOSUB GET.CLOSED.LOAN.CHK
            IF LOAN.STATUS EQ  "Write-off" THEN
                YCLOSE.LN.FLG =  "Write-off"
            END
            IF YCLOSE.LN.FLG EQ '1' THEN
                YCLOSE.LN.FLG = "CANCELLED"
            END ELSE
                IF YPOST.REST EQ '90' OR YPOST.REST EQ '75' THEN
                    YCLOSE.LN.FLG = "CANCELLED"
                END
            END
            YVAL = "1.1"
            LOCATE YACCOUNT.NO IN YSANT<1> SETTING YFMS THEN
                YVAL = "2.1"
            END
            BAL.TYPE1 = "DUERADIACIOHIP"; YCR.AMT = 0
            GOSUB GET.ECB.DET
            YCR.AMT = BAL.DETAILS<4>
            IF YCR.AMT EQ 0 THEN
                BAL.TYPE1 = "DUERADIACIOHIP1"
                GOSUB GET.ECB.DET
                YCR.AMT = BAL.DETAILS<4>
            END
            BAL.TYPE1 = "UNCACCOUNT"; YUNC.AMT = 0
            GOSUB GET.ECB.DET
            YUNC.AMT = BAL.DETAILS<4>

*          IF YSET.STATUS EQ 'UNPAID' THEN
            YSANT<-1> = YACCOUNT.NO
            YFILE.VAL<-1> = YACCOUNT.NO:"|":AA.EFF.ID:"|":AAA.ID:"|":ACTIVTTY.VAL:"|":YBILL.ID:"|":YVAL:"|":YOS.TOT.AMT:"|":Y.TOT.AMT:"|":YPROD:"|":YPROD.GRP:"|":YCLOSE.LN.FLG:"|":YOD.STAT:"|":YCR.AMT:"|":YUNC.AMT:'|':YSET.STATUS
*          END
        END
        Y.CNT += 1
        CRT "COUNT ":SEL.LIST:"/":Y.CNT
    REPEAT

    WRITE YFILE.VAL ON F.CHK.DIR, Y.FINAL.OUT.FILE.NAME ON ERROR
        Y.ERR.MSG = "Unable to Write ":Y.FINAL.OUT.FILE.NAME
        RETURN
    END
RETURN

READ.AA.BILL:
*************
    R.AA.BILL.DETAILS = ''; Y.ERR.BILL = ''
    CALL F.READ(FN.AA.BILL.DETAILS,YBILL.ID,R.AA.BILL.DETAILS,F.AA.BILL.DETAILS,Y.ERR.BILL)
    IF Y.ERR.BILL THEN
        R.AA.BILL.DETAILS = ''; Y.ERR.BILL = ''
        CALL F.READ(FN.AA.BILL.DETAILS.HST,YBILL.ID,R.AA.BILL.DETAILS,F.AA.BILL.DETAILS.HST,Y.ERR.BILL)
    END
RETURN

GET.ECB.DET:
************
    REQUEST.TYPE = 0; REQUEST.TYPE<4>='ECB'
    START.DATE = YLST.TODAY; END.DATE = YLST.TODAY; BAL.DETAILS = 0; ERROR.MESSAGE = ''
    CALL AA.GET.PERIOD.BALANCES(YACCOUNT.NO, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
RETURN

GET.LOAN.STATUS:
*--------------*
    ArrangementID = AA.ARR.ID
    idPropertyClass = 'OVERDUE'; LOAN.STATUS = ''
    idProperty = ''; returnIds = ''; returnConditions = ''; returnError = ''; effectiveDate = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    R.AA.OVERDUE = RAISE(returnConditions)
    LOAN.STATUS = R.AA.OVERDUE<AA.OD.LOCAL.REF,Y.L.LOAN.STATUS.1.POS>
RETURN

GET.CLOSED.LOAN.CHK:
********************
    ERR.AA.ACTIVITY.HISTORY = ''; R.AA.ACTIVITY.HISTORY = ''; YCLOSE.LN.FLG = 0; YACT.IS.STAT = ''; YACT.ID.ARR = ''
    CALL F.READ(FN.AA.ACTIVITY.HISTORY,AA.ARR.ID,R.AA.ACTIVITY.HISTORY,F.AA.ACTIVITY.HISTORY,ERR.AA.ACTIVITY.HISTORY)
    IF R.AA.ACTIVITY.HISTORY THEN
        YACT.ID.ARR = R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY>
        YACT.IS.STAT = R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS>
        CHANGE @VM TO @FM IN YACT.ID.ARR
        CHANGE @SM TO @FM IN YACT.ID.ARR
        CHANGE @VM TO @FM IN YACT.IS.STAT
        CHANGE @SM TO @FM IN YACT.IS.STAT
    END
    Y.PROD.GUP = R.AA.ARRANGEMENT<AA.ARR.PRODUCT.GROUP>
    ERR.REDO.APAP.PROPERTY.PARAM = ''; R.REDO.APAP.PROPERTY.PARAM = ''; YPAYOFF.ACT = ''; YPAY.CNT = 0
    CALL F.READ(FN.REDO.APAP.PROPERTY.PARAM,Y.PROD.GUP,R.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM,ERR.REDO.APAP.PROPERTY.PARAM)
    IF R.REDO.APAP.PROPERTY.PARAM THEN
        YPAYOFF.ACT = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY>
        YPAY.CNT = DCOUNT(YPAYOFF.ACT,@VM)
    END

    YCNT = 1
    LOOP
    WHILE YCNT LE YPAY.CNT
        YPAYOFF.ACT.1 = ''
        YPAYOFF.ACT.1 = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY,YCNT>
        LOCATE YPAYOFF.ACT.1 IN YACT.ID.ARR<1> SETTING CHG.POSN.1 THEN
            YARR.STAT = YACT.IS.STAT<CHG.POSN.1>
            IF YARR.STAT EQ 'AUTH' THEN
                YCLOSE.LN.FLG = 1
                YCNT = YPAY.CNT + 1
                CONTINUE
            END
        END
        YCNT += 1
    REPEAT
RETURN
END
