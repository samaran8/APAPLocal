* @ValidationCode : MjoxMzQwNjg3Mjg3OkNwMTI1MjoxNjgwNjc0NjI0NTE4OkhhcmlzaHZpa3JhbUM6LTE6LTE6MDowOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 05 Apr 2023 11:33:44
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.APPLY.CHG(Y.LCO.SEL.LIST)
********************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: Swaminathan.S.R
* PROGRAM NAME: REDO.B.APPLY.CHG
*------------------------------------------------------------------------------
*DESCRIPTION:This routine is COB routine to charge cards based on currency
*-------------------------------------------------------------------------------
*IN PARAMETER: NONE
*OUT PARAMETER: NONE
*LINKED WITH: REDO.B.APPLY.CHG
*-----------------------
* Modification History :
*-----------------------
*DATE             WHO                    REFERENCE            DESCRIPTION
*05-AUG-2010    Swaminathan.S.R        ODR-2010-03-0400      INITIAL CREATION
* 04-APR-2023     Conversion tool      R22 Auto conversion   FM TO @FM
* 04-APR-2023      Harishvikram C   Manual R22 conversion      No changes
*--------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_BATCH.FILES
    $INSERT I_GTS.COMMON
    $INSERT I_F.DATES
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.CATEG.ENTRY
    $INSERT I_F.CARD.TYPE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.USER
    $INSERT I_REDO.B.APPLY.CHG.COMMON
    $INSERT I_F.LATAM.CARD.ORDER
    $INSERT I_F.REDO.APAP.H.PARAMETER
    $INSERT I_F.LATAM.CARD.CHARGES

    Y.RET=''
    GOSUB INIT
    IF NOT(Y.RET) THEN
        GOSUB PROCESS
    END
RETURN

*---------
INIT:
*---------

    CALL F.READ(FN.LATAM.CARD.CHARGE,Y.LCO.SEL.LIST,R.LATAM.CARD.CHARGE,F.LATAM.CARD.CHARGE,Y.ERR.LCO)
    IF R.LATAM.CARD.CHARGE THEN
        Y.ISSUE.DATE =  R.LATAM.CARD.CHARGE<LATAM.CHG.ISSUE.DATE>
        LAST.CHG.DATE = R.LATAM.CARD.CHARGE<LATAM.CHG.LAST.CHG.DATE>
    END

    Y.CARD.TYPE.ID = FIELD(Y.LCO.SEL.LIST,'.',1,1)
    Y.ACCT.NO = R.LATAM.CARD.CHARGE<LATAM.CHG.ACCOUNT>
    Y.CUST.NO = R.LATAM.CARD.CHARGE<LATAM.CHG.CUSTOMER>

    CALL F.READ(FN.LATAM.CARD.ORDER,Y.LCO.SEL.LIST,R.LATAM.CARD.ORDER,F.LATAM.CARD.ORDER,Y.LCO.ERR)
    Y.CARD.STATUS=R.LATAM.CARD.ORDER<CARD.IS.CARD.STATUS>
    Y.ALL.STATUS='51':@FM:'75':@FM:'94':@FM:'96':@FM:'90'
    LOCATE Y.CARD.STATUS IN Y.ALL.STATUS SETTING Y.APP.CARD.POS ELSE
        CALL F.DELETE(FN.LATAM.CARD.CHARGE,Y.LCO.SEL.LIST)
        Y.RET='1'
        RETURN
    END
    CALL F.READ(FN.ACCOUNT,Y.ACCT.NO,R.ACC.LCO,F.ACCOUNT,Y.ERR.AC.LCO)
    IF R.ACC.LCO THEN
        Y.AC.CCY = R.ACC.LCO<AC.CURRENCY>
        Y.AC.OFFICER = R.ACC.LCO<AC.ACCOUNT.OFFICER>
        Y.AC.CATEGORY = R.ACC.LCO<AC.CATEGORY>
        Y.AC.STATUS=R.ACC.LCO<AC.LOCAL.REF><1,Y.ACCT.STATUS1.POS>
        IF Y.AC.STATUS NE 'ACTIVE' THEN
            Y.RET='1'
            RETURN
        END
    END

    CALL F.READ(FN.CARD.TYPE,Y.CARD.TYPE.ID,R.CARD.TYPE,F.CARD.TYPE,Y.ERR.CT)
    IF R.CARD.TYPE THEN
        Y.CT.CCY.CHRG = R.CARD.TYPE<CARD.TYPE.LOCAL.REF><1,Y.CT.CCY.CHARGE.POS>
        Y.CT.CHRG = R.CARD.TYPE<CARD.TYPE.LOCAL.REF><1,Y.CT.CHARGE.POS>
        Y.CT.CHRG.FQ = R.CARD.TYPE<CARD.TYPE.LOCAL.REF><1,Y.CT.CHARGE.FQ.POS>
    END

    Y.LAST.WORKING.DATE = R.DATES(EB.DAT.LAST.WORKING.DAY)

RETURN

*---------
PROCESS:
*---------
    LOCATE Y.AC.CCY IN Y.CT.CCY.CHRG<1,1,1> SETTING CT.CCY.POS THEN
        Y.L.CT.CHRG = R.CARD.TYPE<CARD.TYPE.LOCAL.REF><1,Y.CT.CHARGE.POS,CT.CCY.POS>
        GET.CHG.FREQ = R.CARD.TYPE<CARD.TYPE.LOCAL.REF><1,Y.CT.CHARGE.FQ.POS,CT.CCY.POS>
        IF Y.AC.CCY NE LCCY THEN
            CCY.MKT =  '1'
            BUY.AMT = ''
            SEL.AMT = Y.L.CT.CHRG
            CALL EXCHRATE (CCY.MKT,LCCY,BUY.AMT,Y.AC.CCY,SEL.AMT,'','','','',RETURN.CODE)
            Y.L.CT.CHRG = BUY.AMT
        END
    END


*    LOOP.CNTR =1
*    LOOP

*        COMI = Y.CT.CHNG.DATE:GET.CHG.FREQ
*        CALL CFQ
*        Y.L.CT.CHRG.FQ = COMI[1,8]
    IF LAST.CHG.DATE THEN
        Y.CT.CHNG.DATE=LAST.CHG.DATE
        Y.L.CT.CHRG.FQ=GET.CHG.FREQ
        CALL CALENDAR.DAY(Y.CT.CHNG.DATE,'+',Y.L.CT.CHRG.FQ)
    END
    ELSE
        Y.L.CT.CHRG.FQ=Y.ISSUE.DATE
    END
    IF Y.L.CT.CHRG.FQ LE R.DATES(EB.DAT.TODAY) THEN
        GOSUB RAISE.STMT.ENTRIES
        IF Y.L.CT.CHRG.FQ LE Y.LAST.WORKING.DATE THEN
            R.LATAM.CARD.CHARGE<LATAM.CHG.LAST.CHG.DATE> = TODAY
        END
        R.LATAM.CARD.CHARGE<LATAM.CHG.LAST.CHG.DATE> = Y.L.CT.CHRG.FQ
        CALL F.WRITE(FN.LATAM.CARD.CHARGE,Y.LCO.SEL.LIST,R.LATAM.CARD.CHARGE)
    END ELSE
        RETURN
    END
*        Y.CT.CHNG.DATE = Y.L.CT.CHRG.FQ
*        LOOP.CNTR = LOOP.CNTR + 1
*    REPEAT

RETURN

*--------------------
RAISE.STMT.ENTRIES:
*--------------------

    R.STMT.ENTRIES = ''

    R.STMT.ENTRIES<AC.STE.ACCOUNT.NUMBER> =  Y.ACCT.NO
    R.STMT.ENTRIES<AC.STE.AMOUNT.LCY> =  Y.L.CT.CHRG * -1
    R.STMT.ENTRIES<AC.STE.THEIR.REFERENCE> = Y.LCO.SEL.LIST
    R.STMT.ENTRIES<AC.STE.TRANSACTION.CODE> = Y.DR.CODE
    R.STMT.ENTRIES<AC.STE.CUSTOMER.ID> = Y.CUST.NO
    R.STMT.ENTRIES<AC.STE.ACCOUNT.OFFICER> = Y.AC.OFFICER
    R.STMT.ENTRIES<AC.STE.PRODUCT.CATEGORY> = Y.AC.CATEGORY
    R.STMT.ENTRIES<AC.STE.VALUE.DATE> = TODAY
    R.STMT.ENTRIES<AC.STE.CURRENCY> = Y.AC.CCY
    R.STMT.ENTRIES<AC.STE.OUR.REFERENCE> = Y.LCO.SEL.LIST
    R.STMT.ENTRIES<AC.STE.TRANS.REFERENCE> = Y.LCO.SEL.LIST
    R.STMT.ENTRIES<AC.STE.SYSTEM.ID> = "AC"
    R.STMT.ENTRIES<AC.STE.BOOKING.DATE> = TODAY
    R.STMT.ENTRIES<AC.STE.COMPANY.CODE> = ID.COMPANY
    R.STMT.ENTRIES<AC.STE.DEPARTMENT.CODE> = R.USER<EB.USE.DEPARTMENT.CODE>
    R.STMT.ENTRIES<AC.STE.CURRENCY.MARKET> = "1"
    GOSUB RAISE.CATEG.ENTRIES

RETURN
*--------------------
RAISE.CATEG.ENTRIES:
*--------------------
    R.CATEG.ENTRIES = ''

    R.CATEG.ENTRIES<AC.CAT.AMOUNT.LCY> =  Y.L.CT.CHRG
    R.CATEG.ENTRIES<AC.CAT.TRANSACTION.CODE> = Y.CR.CODE
    R.CATEG.ENTRIES<AC.CAT.PL.CATEGORY> = Y.PL.CATEG
    R.CATEG.ENTRIES<AC.CAT.CUSTOMER.ID> = Y.CUST.NO
    R.CATEG.ENTRIES<AC.CAT.ACCOUNT.OFFICER> = Y.AC.OFFICER
    R.CATEG.ENTRIES<AC.CAT.PRODUCT.CATEGORY> = Y.AC.CATEGORY
    R.CATEG.ENTRIES<AC.CAT.VALUE.DATE> = TODAY
    R.CATEG.ENTRIES<AC.CAT.CURRENCY> = Y.AC.CCY
    R.CATEG.ENTRIES<AC.CAT.OUR.REFERENCE> = Y.LCO.SEL.LIST
    R.CATEG.ENTRIES<AC.CAT.TRANS.REFERENCE> = Y.LCO.SEL.LIST
    R.CATEG.ENTRIES<AC.CAT.SYSTEM.ID> = "AC"
    R.CATEG.ENTRIES<AC.CAT.BOOKING.DATE> = TODAY
    R.CATEG.ENTRIES<AC.CAT.COMPANY.CODE> = ID.COMPANY
    R.CATEG.ENTRIES<AC.CAT.DEPARTMENT.CODE> = R.USER<EB.USE.DEPARTMENT.CODE>
    R.CATEG.ENTRIES<AC.CAT.CURRENCY.MARKET> = "1"
    GOSUB RAISE.ENTRIES

RETURN
*-----------------
RAISE.ENTRIES:
*-----------------
    ENTRY.REC = ''
    ENTRY.REC<-1> = LOWER(R.STMT.ENTRIES)
    ENTRY.REC<-1> = LOWER(R.CATEG.ENTRIES)
    CALL EB.ACCOUNTING("CC","SAO",ENTRY.REC,'')

RETURN
END
