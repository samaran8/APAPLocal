* @ValidationCode : MjotODgzMDEwMjI5OkNwMTI1MjoxNjgxODA1NzAxNDgwOkhhcmlzaHZpa3JhbUM6LTE6LTE6MDowOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 18 Apr 2023 13:45:01
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOENQ
SUBROUTINE REDO.ENQ.INV.TRAN.GEN.RPT(Y.ARR)
*********************************************************************************************************
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.ENQ.INV.TRAN.GEN.RPT
*--------------------------------------------------------------------------------------------------------
*Modification Details:
*=====================
*      Date          Who             Reference                  Description
*     ------         -----           -------------              -------------
* 17 APR 2015        V.P.Ashokkumar  PACS00370972               Initial Revision
* 26 APR 2015        V.P.Ashokkumar  PACS00370972               Changed to get the spanish description. Added AZ hist selection.
* 02 MAY 2015        V.P.Ashokkumar  PACS00370972               Spanish description for English Users. Corrected Term details
*
* 18-APR-2023     Conversion tool   R22 Auto conversion   FM TO @FM, VM to @VM, = to EQ, <> to NE
* 18-APR-2023      Harishvikram C   Manual R22 conversion      No changes
*********************************************************************************************************
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.CUSTOMER
    $INSERT I_F.AZ.ACCOUNT
    $INSERT I_F.ACCOUNT
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.RELATION
    $INSERT I_F.EB.CONTRACT.BALANCES
    $INSERT I_F.EB.LOOKUP
    $INSERT I_F.DATES
    $INSERT I_F.TAX.TYPE.CONDITION

    GOSUB OPEN.FILES
    GOSUB GET.LOC.REFERENCE
    GOSUB PROCESS
RETURN

OPEN.FILES:
************
    FN.CUSTOMER = "F.CUSTOMER";  F.CUSTOMER = ""
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)
    FN.ACCOUNT = "F.ACCOUNT"; F.ACCOUNT = ""
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    FN.ACCOUNT.HST = 'F.ACCOUNT$HIS'; F.ACCOUNT.HST = ''
    CALL OPF(FN.ACCOUNT.HST,F.ACCOUNT.HST)
    FN.AZ.ACCOUNT = "F.AZ.ACCOUNT"; F.AZ.ACCOUNT = ""
    CALL OPF(FN.AZ.ACCOUNT,F.AZ.ACCOUNT)
    FN.AZ.ACCOUNT.HST = 'F.AZ.ACCOUNT$HIS'; F.AZ.ACCOUNT.HST = ''
    CALL OPF(FN.AZ.ACCOUNT.HST, F.AZ.ACCOUNT.HST)
    FN.ACCOUNT.CLOSURE = 'F.ACCOUNT.CLOSURE'; F.ACCOUNT.CLOSURE = ''
    CALL OPF(FN.ACCOUNT.CLOSURE,F.ACCOUNT.CLOSURE)
    FN.STMT.ENTRY = "F.STMT.ENTRY"; F.STMT.ENTRY = ""
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)
    FN.ACCT.ENT.LWORK.DAY = 'F.ACCT.ENT.LWORK.DAY'; F.ACCT.ENT.LWORK.DAY = ''
    CALL OPF(FN.ACCT.ENT.LWORK.DAY, F.ACCT.ENT.LWORK.DAY)
    FN.RELATION = "F.RELATION";  F.RELATION = ""
    CALL OPF(FN.RELATION,F.RELATION)
    FN.EB.LOOKUP = 'F.EB.LOOKUP'; F.EB.LOOKUP = ''
    CALL OPF(FN.EB.LOOKUP, F.EB.LOOKUP)
    FN.TAX.TYPE.CONDITION = 'F.TAX.TYPE.CONDITION'; F.TAX.TYPE.CONDITION = ''
    CALL OPF(FN.TAX.TYPE.CONDITION,F.TAX.TYPE.CONDITION)
    FN.ACCOUNT.CLOSURE = 'F.ACCOUNT.CLOSURE'; F.ACCOUNT.CLOSURE = ''
    CALL OPF(FN.ACCOUNT.CLOSURE,F.ACCOUNT.CLOSURE)
    Y.TODAY = R.DATES(EB.DAT.LAST.WORKING.DAY)
    Y.DTE.SEL = Y.TODAY[3,6]
RETURN

******************
GET.LOC.REFERENCE:
******************
    APPLICATION.ID      = 'CUSTOMER':@FM:'AZ.ACCOUNT':@FM:'ACCOUNT'
    FIELD.NAME          = 'L.CU.TIPO.CL':@FM:'L.AZ.ORG.DP.AMT':@VM:'ORIG.DEP.AMT':@VM:'L.AZ.REF.NO':@FM:'L.AC.STATUS1':@VM:'L.AC.STATUS2':@VM:'L.AC.REINVESTED':@VM:'L.AC.AZ.ACC.REF'
    FIELD.POS           = ''
    CALL MULTI.GET.LOC.REF(APPLICATION.ID,FIELD.NAME,FIELD.POS)
    L.CU.TIPO.CL.POS    = FIELD.POS<1,1>
    L.AZ.ORG.DP.AMT.POS = FIELD.POS<2,1>
    ORIG.DEP.AMT.POS = FIELD.POS<2,2>
    L.AZ.ID.POS = FIELD.POS<2,3>
    L.AC.STATUS1.POS    = FIELD.POS<3,1>
    L.AC.STATUS2.POS    = FIELD.POS<3,2>
    L.AC.REINVESTED.POS = FIELD.POS<3,3>
    L.AC.AZ.ACC.REF.POS = FIELD.POS<3,4>
RETURN

PROCESS:
********
    YSEL.CLOS = ''; R.ACLS.LIST = ''; YSEL.ERR = ''; YSEL.AZ.CLS = ''; R.AZ.CLS.LST = ''; YSELAZ.ERR = ''
    YSEL.CLOS = 'SELECT ':FN.AZ.ACCOUNT:' BY CATEGORY BY CO.CODE'
    CALL EB.READLIST(YSEL.CLOS, R.ACLS.LIST, '', '', YSEL.ERR)
    YSEL.AZ.CLS = 'SELECT ':FN.AZ.ACCOUNT.HST:' WITH PRINCIPAL EQ 0 AND DATE.TIME[1,6] EQ ':Y.DTE.SEL:' BY CATEGORY BY CO.CODE'
    CALL EB.READLIST(YSEL.AZ.CLS, R.AZ.CLS.LST, '', '', YSELAZ.ERR)
    YMAIN.AZLST = R.ACLS.LIST:'FM':R.AZ.CLS.LST

    LOOP
        REMOVE YAZ.ID FROM YMAIN.AZLST SETTING YAZ.POS
    WHILE YAZ.ID:YAZ.POS
        YFIN.AZ.ID = YAZ.ID
        RLQ.ACCT.ENT.LWORK.DAY = ''; RAZ.ACCT.ENT.LWORK.DAY = ''; YAZ.ORIG.FLG = 0
        YLIQ.CUST = ''; YCUST = ''
        GOSUB READ.AZ.ACCOUNT
        IF R.AZ.ACCOUNT THEN
            GOSUB READ.ACCT.LWD
            RAZ.ACCT.ENT.LWORK.DAY = R.ACCT.ENT.LWORK.DAY
            YAZ.ORIG.FLG = 1
        END
        IF YLIQ.ACCT THEN
            YAZ.ID = YLIQ.ACCT
            GOSUB READ.ACCOUNT
            YLIQ.CUST = R.ACCOUNT<AC.CUSTOMER>
            GOSUB READ.ACCT.LWD
            RLQ.ACCT.ENT.LWORK.DAY = R.ACCT.ENT.LWORK.DAY
            YAZ.ID = YFIN.AZ.ID
        END
        GOSUB GET.AZ.ACCT.VAL
        GOSUB CHECK.CONDITIONS
        YLIQ.FLG = 0
        IF YAZ.ORIG.FLG AND RAZ.ACCT.ENT.LWORK.DAY THEN
            R.ACCT.ENT.LWORK.DAY = ''
            R.ACCT.ENT.LWORK.DAY = RAZ.ACCT.ENT.LWORK.DAY
            GOSUB SUB.PROCESS
        END
        IF YLIQ.ACCT AND RLQ.ACCT.ENT.LWORK.DAY THEN
            R.ACCT.ENT.LWORK.DAY = ''
            R.ACCT.ENT.LWORK.DAY = RLQ.ACCT.ENT.LWORK.DAY
            YLIQ.FLG = 1
            GOSUB SUB.PROCESS
        END
    REPEAT
RETURN

READ.ACCT.LWD:
**************
    ERR.AZACCT = ''; R.ACCT.ENT.LWORK.DAY = ''
    CALL F.READ(FN.ACCT.ENT.LWORK.DAY,YAZ.ID,R.ACCT.ENT.LWORK.DAY,F.ACCT.ENT.LWORK.DAY,ERR.AZACCT)
RETURN

************
SUB.PROCESS:
************
    LOOP
        REMOVE STMT.LWD.ID FROM R.ACCT.ENT.LWORK.DAY SETTING LWD.POSN
    WHILE STMT.LWD.ID:LWD.POSN
        ERR.STMT.ENTRY = ''; R.STMT.ENTRY = ''; YTRANS.AMT = ''; YTRANS.CODE = ''
        YTRANS.REF = ''; YBK.DATE = ''; YOUR.REF = ''
        CALL F.READ(FN.STMT.ENTRY,STMT.LWD.ID,R.STMT.ENTRY,F.STMT.ENTRY,ERR.STMT.ENTRY)
        YTRANS.AMT = R.STMT.ENTRY<AC.STE.AMOUNT.LCY>
        YTRANS.CODE = R.STMT.ENTRY<AC.STE.TRANSACTION.CODE>
        YOUR.REF = R.STMT.ENTRY<AC.STE.OUR.REFERENCE>
        IF YLIQ.CUST NE YCUST THEN
            IF (YOUR.REF NE YAZ.ID OR (YMAIN.AZACCT AND YMAIN.AZACCT NE YAZ.ID)) AND YLIQ.FLG EQ 1 THEN
                CONTINUE
            END
        END
        YTRANS.REF = R.STMT.ENTRY<AC.STE.TRANS.REFERENCE>
        YBK.DATE = R.STMT.ENTRY<AC.STE.BOOKING.DATE>

        GOSUB FINAL.ARRAY
    REPEAT
RETURN

************
FINAL.ARRAY:
************
    Y.ARR<-1>= YBK.DATE:"*":Y.EXE.AGENCY:"*":Y.SEVEN.EIGHT:"*":Y.REGION:"*":Y.INV.TYPE:"*":YCURRENCY:"*":Y.PREV.INV.NUM:"*":YFIN.AZ.ID:"*":ACCOUNT.NAME:"*":Y.CUSTOMERID:"*":Y.INV.AMT:"*":
    Y.ARR   := YFN.TERM:"*":Y.INT.RATE:"*":Y.OPEN.DATE:"*":YMAT.DATE:"*":Y.INT.PAY.DATE:"*":Y.AC.STATUS.VAL:"*":Y.TAX.DESC:"*":YTRANS.CODE:"*":YTRANS.AMT:"*":YTRANS.REF:"*":
    Y.ARR   := STMT.LWD.ID:"*":Y.EXE.AGENCY.DEP:"*":Y.USER.INPUT:"*":Y.AUTHOR
RETURN

GET.AZ.ACCT.VAL:
****************
    CUSTOMERID = ''; YCUSTOMERID = ''; Y.INV.TYPE = ''; YCURRENCY = ''; Y.EXE.AGENCY = ''; Y.EXE.DEP = ''; Y.EXE.AGENCY.DEP = ''
    Y.CATEGORY = ''; Y.TAX.KEY = ''; Y.OPEN.DATE = ''; YFREQ = ''; Y.INT.PAY.DATE = ''; Y.INT.RATE = ''; Y.USER.INPUT.ALL = ''
    Y.AUTHOR.ALL = ''; Y.USER.INPUT = ''; Y.AUTHOR = ''; YMAT.DATE = ''; Y.VAL.DATE = ''; Y.REINVESTED = ''; Y.INV.AMT = ''
    Y.INV.AMT1 = ''; Y.INV.AMT2 = ''
    CUSTOMERID = R.AZ.ACCOUNT<AZ.CUSTOMER>
    Y.CUSTOMERID = CUSTOMERID
    Y.INV.TYPE      = R.AZ.ACCOUNT<AZ.CATEGORY>
    YCURRENCY = R.AZ.ACCOUNT<AZ.CURRENCY>
    Y.EXE.AGENCY = R.AZ.ACCOUNT<AZ.CO.CODE>
    Y.EXE.DEP = R.AZ.ACCOUNT<AZ.DEPT.CODE>
    Y.EXE.AGENCY.DEP = Y.EXE.AGENCY:"/":Y.EXE.DEP
    Y.CATEGORY = R.AZ.ACCOUNT<AZ.CATEGORY>
    YTAX.KEY = R.AZ.ACCOUNT<AZ.TAX.KEY>
    CHANGE '*' TO '' IN YTAX.KEY
    GOSUB GET.TAX.DESC
    Y.OPEN.DATE = R.AZ.ACCOUNT<AZ.CREATE.DATE>
    YFREQ = R.AZ.ACCOUNT<AZ.FREQUENCY>
    Y.INT.PAY.DATE     = YFREQ[1,8]
    Y.INT.RATE         = R.AZ.ACCOUNT<AZ.INTEREST.RATE>
    Y.USER.INPUT.ALL = R.AZ.ACCOUNT<AZ.INPUTTER>
    Y.AUTHOR.ALL = R.AZ.ACCOUNT<AZ.AUTHORISER>
    Y.USER.INPUT = FIELD(Y.USER.INPUT.ALL,'_',2,1)
    Y.AUTHOR = FIELD(Y.AUTHOR.ALL,'_',2,1)
    YMAT.DATE = R.AZ.ACCOUNT<AZ.MATURITY.DATE>
    Y.VAL.DATE = R.AZ.ACCOUNT<AZ.VALUE.DATE>
    GOSUB DATE.30.CHK
    Y.REINVESTED       = R.ACCOUNT<AC.LOCAL.REF,L.AC.REINVESTED.POS>
    IF Y.REINVESTED EQ "YES" THEN
        Y.INV.AMT1     = R.AZ.ACCOUNT<AZ.LOCAL.REF,ORIG.DEP.AMT.POS>
        Y.INV.AMT      = Y.INV.AMT1
    END ELSE
        Y.INV.AMT2     = R.AZ.ACCOUNT<AZ.LOCAL.REF,L.AZ.ORG.DP.AMT.POS>
        Y.INV.AMT      = Y.INV.AMT2
    END
    IF NOT(Y.INV.AMT) THEN
        Y.INV.AMT =  R.AZ.ACCOUNT<AZ.PRINCIPAL>
    END
RETURN

CHECK.CONDITIONS:
*****************
    GOSUB READ.ACCOUNT
    L.AC.STATUS = ''; Y.AC.STATUS.VAL = ''; Y.SEVEN.EIGHT = ''; Y.CUS.TYPE = ''; Y.CUS.TYPE1 = ''; YALT.TYPE = ''
    Y.GIVE.NAMES = ''; Y.FAMILY.NAMES = ''; Y.CUST.NAME = ''; Y.NAME.1 = ''; Y.NAME.2 = ''; Y.RELATION.LIST = ''
    Y.JOINT.LIST = ''; ACCOUNT.NAME = ''; Y.ACCT.EXE = ''; Y.PREV.INV.NUM = ''; Y.REGI = ''; Y.REGION = ''
    Y.REL.DESC = ''; Y.JNT.NAME = ''
    Y.AC.STATUS = R.ACCOUNT<AC.LOCAL.REF, L.AC.STATUS1.POS>
    YFIELD.NAME = "L.AC.STATUS1"
    GOSUB TRANSLATION.FOR.STATUS1
    Y.AC.STATUS.VAL = Y.STATUS1
    IF NOT(Y.AC.STATUS) THEN
        YFIELD.NAME = "L.AC.STATUS2"
        Y.AC.STATUS = R.ACCOUNT<AC.LOCAL.REF, L.AC.STATUS2.POS>
        GOSUB TRANSLATION.FOR.STATUS1
        Y.AC.STATUS.VAL = Y.STATUS1
    END
    YACCT.CLOSE = R.ACCOUNT<AC.CLOSURE.DATE>
    IF YACCT.CLOSE THEN
        Y.AC.STATUS.VAL = "CLOSED"
    END
    GOSUB READ.CUSTOMER
    Y.SEVEN.EIGHT   = R.CUSTOMER<EB.CUS.ACCOUNT.OFFICER>
    Y.CUS.TYPE      = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.TIPO.CL.POS>
    Y.CUS.TYPE1 = Y.CUS.TYPE

    IF Y.CUS.TYPE1 EQ "PERSONA FISICA" OR Y.CUS.TYPE1 EQ "CLIENTE MENOR" THEN
        Y.GIVE.NAMES   = R.CUSTOMER<EB.CUS.GIVEN.NAMES>
        Y.FAMILY.NAMES = R.CUSTOMER<EB.CUS.FAMILY.NAME>
        Y.CUST.NAME    = Y.GIVE.NAMES:" ":Y.FAMILY.NAMES
    END
    IF Y.CUS.TYPE1 EQ "PERSONA JURIDICA" THEN
        Y.NAME.1       = R.CUSTOMER<EB.CUS.NAME.1>
        Y.NAME.2       = R.CUSTOMER<EB.CUS.NAME.2>
        Y.CUST.NAME    = Y.NAME.1:" ":Y.NAME.2
    END

    Y.RELATION.LIST    = R.ACCOUNT<AC.RELATION.CODE>
    Y.JOINT.LIST       = R.ACCOUNT<AC.JOINT.HOLDER>
    IF Y.RELATION.LIST THEN
        GOSUB REL.INNINGS
    END
    IF Y.REL.DESC THEN
        ACCOUNT.NAME     = Y.CUST.NAME:" ":Y.REL.DESC:" ":Y.JNT.NAME
    END ELSE
        ACCOUNT.NAME     = Y.CUST.NAME
    END
    Y.ACCT.EXE      = R.ACCOUNT<AC.ACCOUNT.OFFICER>
    YALT.TYPE = R.ACCOUNT<AC.ALT.ACCT.TYPE>
    LOCATE "ALTERNO1" IN YALT.TYPE<1,1> SETTING YAL.POSN THEN
        Y.PREV.INV.NUM  = R.ACCOUNT<AC.ALT.ACCT.ID,YAL.POSN>
    END

    Y.REGI = Y.SEVEN.EIGHT
    IF Y.SEVEN.EIGHT THEN
        Y.CNT = LEN(Y.SEVEN.EIGHT)
        IF Y.CNT GT 8 THEN
            Y.CNT1 = Y.CNT-8
            Y.CNT2 = Y.CNT1+1
            Y.REGION = Y.SEVEN.EIGHT[Y.CNT2,2]
        END
        IF Y.CNT LE 8 THEN
            Y.REGION = Y.SEVEN.EIGHT[1,2]
        END
    END
RETURN

READ.ACCOUNT:
*************
    ERR.ACCOUNT = ''; R.ACCOUNT = ''; YMAIN.AZACCT = ''
    CALL F.READ(FN.ACCOUNT,YAZ.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
    IF NOT(R.ACCOUNT) THEN
        YAZ.IDH = YAZ.ID; ERR.AZAC = ''
        CALL EB.READ.HISTORY.REC(F.ACCOUNT.HST,YAZ.IDH,R.ACCOUNT,ERR.AZAC)
    END
    YMAIN.AZACCT = R.ACCOUNT<AC.LOCAL.REF,L.AC.AZ.ACC.REF.POS>
RETURN

GET.TAX.DESC:
*************
    ERR.TAX.TYPE.CONDITION = ''; R.TAX.TYPE.CONDITION = ''; Y.TAX.DESC = ''
    CALL CACHE.READ(FN.TAX.TYPE.CONDITION, YTAX.KEY, R.TAX.TYPE.CONDITION, ERR.TAX.TYPE.CONDITION) ;*R22 Auto conversion
    Y.TAX.DESC = R.TAX.TYPE.CONDITION<TAX.TTC.DESCRIPTION,2>
    IF NOT(Y.TAX.DESC) THEN
        Y.TAX.DESC = R.TAX.TYPE.CONDITION<TAX.TTC.DESCRIPTION,1>
    END
RETURN

READ.AZ.ACCOUNT:
****************
    ERR.AZAC = ''; R.AZ.ACCOUNT = ''; YLIQ.ACCT = ''
    CALL F.READ(FN.AZ.ACCOUNT,YAZ.ID,R.AZ.ACCOUNT,F.AZ.ACCOUNT,ERR.AZAC)
    IF NOT(R.AZ.ACCOUNT) THEN
        ERR.AZACD = ''
        YAZ.ID.HST = YAZ.ID
        CALL EB.READ.HISTORY.REC(F.AZ.ACCOUNT.HST,YAZ.ID.HST,R.AZ.ACCOUNT,ERR.AZAC)
    END
    YLIQ.ACCT = R.AZ.ACCOUNT<AZ.INTEREST.LIQU.ACCT>
    YCUST = R.AZ.ACCOUNT<AZ.CUSTOMER>
RETURN

READ.CUSTOMER:
**************
    E.CUSTOMER = ''; R.CUSTOMER = ''
    CALL F.READ(FN.CUSTOMER, CUSTOMERID, R.CUSTOMER, F.CUSTOMER, E.CUSTOMER)
RETURN

REL.INNINGS:
************
    LOOP
        REMOVE Y.SINGLE.RELATION FROM Y.RELATION.LIST SETTING REL.POS
    WHILE Y.SINGLE.RELATION:REL.POS
        IF Y.SINGLE.RELATION GE "500" AND Y.SINGLE.RELATION LE "529" THEN
            Y.JOINT = Y.JOINT.LIST<1,REL.POS>
            CUSTNAME = ''
            CUSTOMERID = Y.JOINT
            GOSUB GETCUSTNAME
            Y.JNT.NAME = CUSTNAME
            CALL CACHE.READ(FN.RELATION, Y.SINGLE.RELATION, R.RELATION, E.RELATION)   ;*Shek
            Y.REL.DESC     := R.RELATION<EB.REL.DESCRIPTION>
        END
    REPEAT
RETURN

GETCUSTNAME:
************
    CUSTNAME = ''; JPOS = ''
    LOCATE CUSTOMERID IN CUSTIDS<1> SETTING JPOS THEN
        CUSTNAME = CUSTNAMES<JPOS>
    END ELSE
        GOSUB READ.CUSTOMER
        Y.CUSTTYPE = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.TIPO.CL.POS>
        CUSTNAME = ''
        BEGIN CASE
            CASE Y.CUSTTYPE EQ "PERSONA JURIDICA"
                CUSTNAME = R.CUSTOMER<EB.CUS.NAME.1> :" ": R.CUSTOMER<EB.CUS.NAME.2>
            CASE Y.CUSTTYPE EQ "PERSONA FISICA" OR Y.CUSTTYPE EQ "CLIENTE MENOR"
                CUSTNAME = R.CUSTOMER<EB.CUS.GIVEN.NAMES> : " " :R.CUSTOMER<EB.CUS.FAMILY.NAME>
        END CASE
        CUSTIDS<-1> = CUSTOMERID
        CUSTNAMES<-1> = CUSTNAME
    END
RETURN

TRANSLATION.FOR.STATUS1:
************************
    IF NOT(Y.AC.STATUS) THEN
        RETURN
    END
    LOOP
        REMOVE Y.GET.LOOKUP.ID FROM Y.AC.STATUS SETTING Y.LOOKUP.POS
    WHILE Y.GET.LOOKUP.ID:Y.LOOKUP.POS
        Y.LOOKUP.ID = YFIELD.NAME:'*':Y.GET.LOOKUP.ID
        GOSUB READ.LOOKUP
        Y.LOOKUP.TRANS = R.LOOKUP<EB.LU.DESCRIPTION,2>
        IF NOT(Y.LOOKUP.TRANS) THEN
            Y.LOOKUP.TRANS = R.LOOKUP<EB.LU.DESCRIPTION,1>
        END
        Y.RETURN.VAL<-1> = Y.LOOKUP.TRANS
    REPEAT
    Y.STATUS1 = CHANGE(Y.RETURN.VAL,@FM,';')
    Y.RETURN.VAL = ''; Y.LOOKUP.TRANS = ''
RETURN

READ.LOOKUP:
***********
    R.LOOKUP = ''; Y.READ.ERR = ''
    CALL F.READ(FN.EB.LOOKUP, Y.LOOKUP.ID, R.LOOKUP, F.EB.LOOKUP, Y.READ.ERR)
RETURN

DATE.30.CHK:
*************
    YDATE = ''; YDATE1 = ''; YACT.MONTH = 0
    Y.NO.OF.MONTHS = 0; Y.MNTH = ''
    YDATE = Y.VAL.DATE
    YDATE1 = YMAT.DATE
    IF LEN(YDATE) NE 8 OR LEN(YDATE1) NE 8 THEN
        YFN.TERM = 0
        RETURN
    END
    Y.DAYS = 'C'
    CALL EB.NO.OF.MONTHS(YDATE,YDATE1,Y.NO.OF.MONTHS)
    Y.MNTH = Y.NO.OF.MONTHS:'M'
    CALL CALENDAR.DAY(YDATE,'+',Y.MNTH)
    CALL CDD('',Y.MNTH,YDATE1,Y.DAYS)
    IF Y.NO.OF.MONTHS THEN
        YACT.MONTH = Y.NO.OF.MONTHS * 30
    END
    YFN.TERM =  YACT.MONTH + Y.DAYS
RETURN

END
