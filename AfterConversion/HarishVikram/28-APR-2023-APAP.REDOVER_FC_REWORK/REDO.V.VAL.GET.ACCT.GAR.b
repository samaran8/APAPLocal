* @ValidationCode : Mjo4OTc4NDEyOTU6Q3AxMjUyOjE2ODI0MTIzNjE2NTE6SGFyaXNodmlrcmFtQzotMTotMTowOjE6ZmFsc2U6Ti9BOkRFVl8yMDIxMDguMDotMTotMQ==
* @ValidationInfo : Timestamp         : 25 Apr 2023 14:16:01
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.V.VAL.GET.ACCT.GAR
*------------------------------------------------------------
*Description:
*This is a validation routine for the field cedula id
*---------------------------------------------------------------------
* Company Name  : ASOCIACION POPUL
* Developed By  : BHARATH C
* Program Name  : REDO.V.INP.GARNISHMENT.MAINT
* ODR NUMBER    : ODR-2009-10-0531
* HD REFERENCE  : HD1016159
*LINKED WITH    : REDO.V.VAL.GARNISHMENT.REF validation routine for
*                 the versionAC.LOCKED.EVENTS,INPUT
*---------------------------------------------------------------
* In parameter : NONE
*Out Parameter:none
*-----------------------------------------------------------------------
*MODIFICATION:
*   DATE        By                 Reference        Details
* 16-02-2011    Prabhu.N           PACS00023885     Routine to populate the Local fields in APAP.H.GARNISH.DETAILS based on Garnishment Amount
* 24-JUL-2011   Dhamu                               Changes made for relationship code
* 20-OCT-2011   Prabhu             PACS00146120     Changes with Cheque
* 28-03-2013    Vignesh Kumaar R   PACS00255146     Update AZ liq acct next to Deposit acct in Garnishment table
*
*-------------------------------------------------------------------------
*Modification History
*DATE                       WHO                         REFERENCE                                   DESCRIPTION
*17-04-2023            Conversion Tool             R22 Auto Code conversion                FM TO @FM,VM TO @VM,SM TO @SM,F.READ TO CACHE.READ, ++ TO +=1
*17-04-2023              Samaran T                R22 Manual Code conversion                         No Changes
*-----------------------------------------------------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AC.LOCKED.EVENTS
    $INSERT I_F.CUSTOMER.ACCOUNT
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AZ.ACCOUNT
    $INSERT I_F.CURRENCY
    $INSERT I_F.APAP.H.GARNISH.DETAILS
    $INSERT I_F.REDO.GAR.LOCK.ALE
    $INSERT I_System
    $INSERT I_F.AZ.PRODUCT.PARAMETER
    $INSERT I_GTS.COMMON

    GOSUB INIT
    GOSUB OPENFILE

    GOSUB PROCESS

RETURN

INIT:

    ACCOUNT.LIST=''
    GARNISHMENT.ALL.POS=0
    AZ.ACCTS=''
    AZ.BALANCE=''
    ACCT.ACTUAL.BAL=''
    ACTUAL.ACCTS=''


    AZ.ACCTS.NOT.JOINT=''
    AZ.BALANCE.NOT.JOINT =''
    ACTUAL.ACCTS.NOT.JOINT =''
    ACCT.ACTUAL.BAL.NOT.JOINT=''
    AZ.ACCTS.JOINT=''
    AZ.BALANCE.JOINT =''
    ACTUAL.ACCTS.JOINT =''
    ACCT.ACTUAL.BAL.JOINT=''
    ACCTS.LOCKED=''
    ALL.ACCTS=''
    ALL.BALANCES=''
    TEM.ACCOUNT=''
    ACC.LIST = ''
RETURN
*-------------------------
OPENFILE:

    FN.AC.LOCKED.EVENTS='F.AC.LOCKED.EVENTS'
    F.AC.LOCKED.EVENTS=''
    R.AC.LOCKED.EVENTS=''
    ERR.AC.LOCKED.EVENTS=''
    AC.LOCKED.ID=''
    CALL OPF(FN.AC.LOCKED.EVENTS,F.AC.LOCKED.EVENTS)

    FN.GARNISH.DETAILS ='F.APAP.H.GARNISH.DETAILS'
    F.GARNISH.DETAILS =''

    ERR.GARNISH=''
    CALL OPF(FN.GARNISH.DETAILS,F.GARNISH.DETAILS)

    FN.CUSTOMER.ACCOUNT='F.CUSTOMER.ACCOUNT'
    F.CUSTOMER.ACCOUNT=''
    R.CUSTOMER.ACCOUNT=''
    ERR.CUSTOMER.ACCOUNT=''
    CALL OPF(FN.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT)

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    R.ACCOUNT=''
    ERR.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.CURRENCY='F.CURRENCY'
    F.CURRENCYP=''
    CALL OPF(FN.CURRENCY,F.CURRENCYP)

    FN.AZ.ACCOUNT='F.AZ.ACCOUNT'
    F.AZ.ACCOUNT=''
    R.AZ.ACCOUNT=''
    ERR.AZ.ACCOUNT=''
    CALL OPF(FN.AZ.ACCOUNT,F.AZ.ACCOUNT)

    FN.JOINT.CONTRACTS.XREF='F.JOINT.CONTRACTS.XREF'
    F.JOINT.CONTRACTS.XREF=''
    CALL OPF(FN.JOINT.CONTRACTS.XREF,F.JOINT.CONTRACTS.XREF)

    Y.APP = 'AC.LOCKED.EVENTS':@FM:'ACCOUNT':@FM:'AZ.PRODUCT.PARAMETER':@FM:'AZ.ACCOUNT'
    LREF.FLDS = 'L.AC.GAR.AMT':@VM:'L.AC.AVAIL.BAL':@VM:'L.AC.ACCT.LOCK':@VM:'L.AC.CUSTOMER':@VM:'L.AC.GAR.REF.NO':@FM:'L.AC.AV.BAL':@VM:'L.AC.TRAN.AVAIL':@VM:'L.AC.TRANS.LIM':@FM:'L.AZ.RE.INV.CAT':@FM:'L.TYPE.INT.PAY'
    GARNISHMENT.ALL.POS = ''
    CALL MULTI.GET.LOC.REF(Y.APP,LREF.FLDS,GARNISHMENT.ALL.POS)
    L.AC.AV.BAL.POS    =GARNISHMENT.ALL.POS<2,1>
    L.AC.TRAN.AVAIL.POS=GARNISHMENT.ALL.POS<2,2>
    L.AC.TRANS.LIM.POS =GARNISHMENT.ALL.POS<2,3>
    L.AZ.RE.INV.CAT.POS = GARNISHMENT.ALL.POS<3,1>  ;* Added for PACS00255146
    L.TYPE.INT.PAY.POS = GARNISHMENT.ALL.POS<4,1>   ;* Added for PACS00255146

    GOSUB GET.APP.DETAILS       ;* Fix for PACS00255146

    FN.FUNDS.INTRANSIT ='F.REDO.INTRANSIT.LOCK'
    F.FUNDS.INTRANSIT  =''
    CALL OPF(FN.FUNDS.INTRANSIT,F.FUNDS.INTRANSIT)

    FN.REDO.GAR.LOCK.ALE='F.REDO.GAR.LOCK.ALE'
    F.REDO.GAR.LOCK.ALE =''
    CALL OPF(FN.REDO.GAR.LOCK.ALE,F.REDO.GAR.LOCK.ALE)

*   CALL MULTI.GET.LOC.REF('ACCOUNT','L.AC.AV.BAL',GARNISHMENT.ALL.POS)
RETURN
*-------------- ------------
*-------------------------
PROCESS:

    R.NEW(APAP.GAR.FIT.ALE)  = ''
    R.NEW(APAP.GAR.FIT.AMOUNT.REQ)=''
    GARNISHMENT.REF.NO=ID.NEW
    GARNISHMENT.AMT=COMI
    CUSTOMER=R.NEW(APAP.GAR.CUSTOMER)
    CALL F.READ(FN.CUSTOMER.ACCOUNT,CUSTOMER,R.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT,ERR.CUSTOMER.ACCOUNT)
    ACCOUNT.LIST<-1>=R.CUSTOMER.ACCOUNT
*PACS00552083-S
    Y.CNT = DCOUNT(ACCOUNT.LIST,@FM)
    Y.CNT.INT = 1
    LOOP
    WHILE Y.CNT.INT LE Y.CNT

        ACCOUNT.ID = ACCOUNT.LIST<Y.CNT.INT>

        CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        AC.CATEG = R.ACCOUNT<AC.CATEGORY>
        IF (AC.CATEG GE 9000 AND AC.CATEG LE 9999) OR (AC.CATEG GE 5000 AND AC.CATEG LE 5999) OR (AC.CATEG GE 3000 AND AC.CATEG LE 3999) ELSE
            ACCOUNT.LIST.BKUP<-1> = ACCOUNT.ID
        END
        Y.CNT.INT += 1
    REPEAT
    ACCOUNT.LIST = ACCOUNT.LIST.BKUP
    ACCOUNT.LIST.BKUP = ''    ;* PACS00563762
*PACS00552083-E
    CALL F.READ(FN.JOINT.CONTRACTS.XREF,CUSTOMER,R.JOINT,F.JOINT.CONTRACTS.XREF,ERR.JOINT)
    GOSUB ADD.JOINT.ACCOUNT
    GOSUB CR.17
    GOSUB TOTAL.BALANCE
    GOSUB ACCOUNT.PRODUCT

    Y.SUM.GAR.VAL=SUM(Y.GAR.VAL)
    CHANGE @FM TO @VM IN Y.GAR.VAL
    R.NEW(APAP.GAR.GARNISH.AMT)=Y.GAR.VAL

* Fix for PACS00255146 [ #5 Modify the Enrichment value for the liq account]

    Y.ARR.CNT = 1
    LOOP
        REMOVE Y.TEM.ACCTS.LOCKED FROM ACCTS.LOCKED SETTING Y.AC.LK.POS
    WHILE Y.TEM.ACCTS.LOCKED:Y.AC.LK.POS
        LOCATE Y.TEM.ACCTS.LOCKED IN GET.AZ.LIQ.ACCT.LIST SETTING Y.LIQ.POS THEN
            GET.LIQ.ACCT.ARR.VAL = GET.AZ.LIQ.ACCT.BAL.BCKUP<Y.LIQ.POS>
            Y.GET.AZ.DEP.ACCT = FIELD(GET.LIQ.ACCT.ARR.VAL,'*',2)
            OFS$ENRI<APAP.GAR.ACCOUNT.NO,Y.ARR.CNT> = "CTA. INTS. REINVERTIDOS DEPOSITO ":Y.GET.AZ.DEP.ACCT
        END
        Y.ARR.CNT += 1
    REPEAT

* End of Fix

    TEM.ACCTS.LOCKED = CHANGE(ACCTS.LOCKED,@FM,@VM)
    POS=GARNISHMENT.ALL.POS<1,3>

    R.NEW(APAP.GAR.ACCOUNT.NO)=TEM.ACCTS.LOCKED

    CHANGE @FM TO @VM IN ACCT.BALANCES
    R.NEW(APAP.GAR.AVAIL.BAL)=ACCT.BALANCES
    IF R.NEW(APAP.GAR.CUSTOMER) THEN
*       COMI=Y.SUM.GAR.VAL

        Y.TEMP.AMOUNT=Y.SUM.GAR.VAL
        Y.TEMP.AMOUNT.FIR=FIELD(Y.TEMP.AMOUNT,'.',1)
        Y.TEMP.AMOUNT.DEC=FIELD(Y.TEMP.AMOUNT,'.',2)
        Y.TEMP.AMOUNT.DEC= FMT(Y.TEMP.AMOUNT.DEC,Y.LEN.CUR)
        Y.SUM.GAR.VAL= Y.TEMP.AMOUNT.FIR:'.':Y.TEMP.AMOUNT.DEC
        R.NEW(APAP.GAR.AMOUNT.LOCKED)=Y.SUM.GAR.VAL
    END
*------------------------PACS00146120----------------------
    IF GARNISHMENT.AMT GT Y.SUM.GAR.VAL THEN

        GOSUB GET.FUNDS.IN.TRANSIT
        R.NEW(APAP.GAR.AMOUNT.LOCKED)= R.NEW(APAP.GAR.AMOUNT.LOCKED)+ Y.GARNISHED.TRANSIT.AMT
    END
*----------------------END--PACS00146120--------------------
RETURN
*******************
CHECK.ACCOUNS.LIST:
*******************
    FIRST.COUNT=1
    TOTAL.COUNT=DCOUNT(ACCOUNT.LIST,@FM)
    LOOP
    WHILE FIRST.COUNT LE TOTAL.COUNT
        ACC.ID=FIELD(ACCOUNT.LIST,@FM,FIRST.COUNT)
        CALL F.READ(FN.ACCOUNT,ACC.ID,REC.ACCOUNT,F.ACCOUNT,ERR.ACC)
        BALANCE=REC.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>

        IF BALANCE GT 0 THEN

            TEM.ACCOUNT<-1>=FIELD(ACCOUNTS,@FM,FIRST.COUNT)
            TEM.BALANCES<-1>=BALANCE
        END
        FIRST.COUNT += 1
    REPEAT

    ACCTS.LOCKED  = TEM.ACCOUNT
    ACCT.BALANCES =TEM.BALANCES

RETURN
*----------------------------------------------------------------------
ADD.JOINT.ACCOUNT:
*------------------
    IF R.JOINT NE '' THEN
        ACCOUNT.LIST<-1>=R.JOINT
*PACS00552083-S
        Y.CNT = DCOUNT(ACCOUNT.LIST,@FM)
        Y.CNT.INT = 1
        LOOP
        WHILE Y.CNT.INT LE Y.CNT
            ACCOUNT.ID = ACCOUNT.LIST<Y.CNT.INT>
            CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
            AC.CATEG = R.ACCOUNT<AC.CATEGORY>
            IF (AC.CATEG GE 9000 AND AC.CATEG LE 9999) OR (AC.CATEG GE 5000 AND AC.CATEG LE 5999) OR (AC.CATEG GE 3000 AND AC.CATEG LE 3999) ELSE
                ACCOUNT.LIST.BKUP<-1> = ACCOUNT.ID
            END
            Y.CNT.INT += 1
        REPEAT
        ACCOUNT.LIST = ACCOUNT.LIST.BKUP
        ACCOUNT.LIST.BKUP = ''          ;* PACS00563762
*PACS00552083-E
    END
RETURN
*------------------------------------------------------------
TOTAL.BALANCE:

    D.ACCOUNT.COUNT=1
    AVAILABLE.BAL=0
    TEMP.AVAILABLE.BAL=0
    NO.OF.ACCOUNT=DCOUNT(ACCOUNT.LIST,@FM)
    LOOP
    WHILE D.ACCOUNT.COUNT LE NO.OF.ACCOUNT
        ACCOUNT.ID=FIELD(ACCOUNT.LIST,@FM,D.ACCOUNT.COUNT)
        CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        TEMP.AVAILABLE.BAL=R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>

*********************************************************       AVAILABLE.BAL.LIST=AVAILABLE.BAL.LIST:FM:TEMP.AVAILABLE.BAL
        AVAILABLE.BAL += TEMP.AVAILABLE.BAL
        D.ACCOUNT.COUNT += 1


    REPEAT
RETURN
*-------------------------
ACCOUNT.PRODUCT:

    D.ACCOUNT.COUNT=1
*  NO.OF.ACCOUNT=DCOUNT(ACCOUNT.LIST,FM)

    NO.OF.ACCOUNT=DCOUNT(GET.FINAL.ACC.LIST,@FM)

    LOOP
    WHILE D.ACCOUNT.COUNT LE NO.OF.ACCOUNT

*        ACCOUNT.ID=FIELD(ACCOUNT.LIST,FM,D.ACCOUNT.COUNT)
        ACCOUNT.ID = FIELD(GET.FINAL.ACC.LIST,@FM,D.ACCOUNT.COUNT)

        CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        Y.CURRENCY=R.ACCOUNT<AC.CURRENCY>
        CALL CACHE.READ(FN.CURRENCY, Y.CURRENCY, R.CURRENCY, ERR)    ;*R22 AUTO CODE CONVERSION
        Y.LEN.CUR=R.CURRENCY<EB.CUR.NO.OF.DECIMALS>
        Y.LEN.CUR="L%":Y.LEN.CUR

        ALL.IN.ONE.PRODUCT =R.ACCOUNT<AC.ALL.IN.ONE.PRODUCT>
        JOINT.HOLDER =  R.ACCOUNT<AC.JOINT.HOLDER>
        IF JOINT.HOLDER EQ '' THEN
            GOSUB FILTER.ACCOUNTS
            IF AZ.ACCTS THEN
                AZ.ACCTS.NOT.JOINT<-1>   = AZ.ACCTS
                AZ.BALANCE.NOT.JOINT<-1> = AZ.BALANCE
            END ELSE
                ACTUAL.ACCTS.NOT.JOINT<-1>    = ACTUAL.ACCTS
                ACCT.ACTUAL.BAL.NOT.JOINT<-1> = ACCT.ACTUAL.BAL
            END

        END
        IF JOINT.HOLDER NE '' THEN
            GOSUB FILTER.ACCOUNTS
            IF AZ.ACCTS THEN
                AZ.ACCTS.JOINT<-1>   = AZ.ACCTS
                AZ.BALANCE.JOINT<-1> = AZ.BALANCE
            END ELSE
                ACTUAL.ACCTS.JOINT<-1>    = ACTUAL.ACCTS
                ACCT.ACTUAL.BAL.JOINT<-1> = ACCT.ACTUAL.BAL
            END
        END
        AZ.ACCTS=''
        D.ACCOUNT.COUNT += 1
    REPEAT

****************************************************SORTING CALL

    IF AZ.ACCTS.NOT.JOINT NE '' THEN
        ACCOUNTS = AZ.ACCTS.NOT.JOINT
        BALANCES=AZ.BALANCE.NOT.JOINT
        FIT.ACCOUNT =AZ.ACCTS.NOT.JOINT
        FIT.BALANCES=AZ.BALANCE.NOT.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
        ACCT.BALANCES<-1>=BALANCES
    END

    IF ACTUAL.ACCTS.NOT.JOINT NE '' THEN
        ACCOUNTS=ACTUAL.ACCTS.NOT.JOINT
        BALANCES=ACCT.ACTUAL.BAL.NOT.JOINT
        FIT.ACCOUNT<-1> =ACTUAL.ACCTS.NOT.JOINT
        FIT.BALANCES<-1>=ACCT.ACTUAL.BAL.NOT.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
        ACCT.BALANCES<-1>=BALANCES
    END

    IF AZ.ACCTS.JOINT NE '' THEN
        ACCOUNTS=AZ.ACCTS.JOINT
        BALANCES=AZ.BALANCE.JOINT
        FIT.ACCOUNT<-1> =AZ.ACCTS.JOINT
        FIT.BALANCES<-1>=AZ.BALANCE.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
        ACCT.BALANCES<-1>=BALANCES
    END

    IF ACTUAL.ACCTS.JOINT NE '' THEN
        ACCOUNTS=ACTUAL.ACCTS.JOINT
        BALANCES=ACCT.ACTUAL.BAL.JOINT
        FIT.ACCOUNT<-1> =ACTUAL.ACCTS.JOINT
        FIT.BALANCES<-1>=ACCT.ACTUAL.BAL.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
        ACCT.BALANCES<-1>=BALANCES
    END

    Y.ACCT.CNT=1
    Y.TOT.ACCT=DCOUNT(ACCTS.LOCKED,@FM)

    LOOP
    WHILE Y.TEMP.GAR LT GARNISHMENT.AMT AND Y.ACCT.CNT LE Y.TOT.ACCT
        Y.TEMP.ACCT<Y.ACCT.CNT>=ACCTS.LOCKED<Y.ACCT.CNT>
        Y.TEMP.AMOUNT=ACCT.BALANCES<Y.ACCT.CNT>
        Y.TEMP.AMOUNT.FIR=FIELD(Y.TEMP.AMOUNT,'.',1)
        Y.TEMP.AMOUNT.DEC=FIELD(Y.TEMP.AMOUNT,'.',2)
        Y.TEMP.AMOUNT.DEC= FMT(Y.TEMP.AMOUNT.DEC,Y.LEN.CUR)
        ACCT.ACTUAL.BAL= Y.TEMP.AMOUNT.FIR:'.':Y.TEMP.AMOUNT.DEC
        Y.TEMP.BAL<Y.ACCT.CNT>=ACCT.ACTUAL.BAL
        Y.GAR.VAL=Y.TEMP.BAL
        Y.TEMP.GAR=Y.TEMP.GAR+ACCT.BALANCES<Y.ACCT.CNT>
        IF Y.TEMP.GAR GT GARNISHMENT.AMT THEN
            Y.GAR.VAL<Y.ACCT.CNT>= Y.TEMP.BAL<Y.ACCT.CNT>+GARNISHMENT.AMT-Y.TEMP.GAR
            Y.TEMP.AMOUNT=Y.GAR.VAL<Y.ACCT.CNT>
            Y.TEMP.AMOUNT.FIR=FIELD(Y.TEMP.AMOUNT,'.',1)
            Y.TEMP.AMOUNT.DEC=FIELD(Y.TEMP.AMOUNT,'.',2)
            Y.TEMP.AMOUNT.DEC= FMT(Y.TEMP.AMOUNT.DEC,Y.LEN.CUR)
            Y.GAR.VAL<Y.ACCT.CNT>= Y.TEMP.AMOUNT.FIR:'.':Y.TEMP.AMOUNT.DEC
        END
        Y.ACCT.CNT += 1
    REPEAT
    ACCTS.LOCKED=Y.TEMP.ACCT
    ACCT.BALANCES=Y.TEMP.BAL
RETURN
*-------------------------
FILTER.ACCOUNTS:
    IF ALL.IN.ONE.PRODUCT NE '' THEN
        CALL F.READ(FN.AZ.ACCOUNT,ACCOUNT.ID,R.AZ.ACCOUNT,F.AZ.ACCOUNT,ERR.AZ.ACCOUNT)
        AZ.BALANCE=R.AZ.ACCOUNT<AZ.PRINCIPAL>
        AZ.ACCTS=ACCOUNT.ID

* Fix for PACS00255146 [ #3 Garnishment for Deposit Int Liq Acct after the deposit account]

        Y.GET.INT.TYPE = R.AZ.ACCOUNT<AZ.LOCAL.REF><1,L.TYPE.INT.PAY.POS>

        IF Y.GET.INT.TYPE EQ 'Reinvested' THEN
            GET.INT.LIQ.ACCT = R.ACCOUNT<AC.INTEREST.LIQU.ACCT>
            CALL F.READ(FN.ACCOUNT,GET.INT.LIQ.ACCT,R.INT.LIQ.ACCT,F.ACCOUNT,ACCOUNT.ERR)

            GET.AZ.LIQ.ACCT.BAL<-1> = GET.INT.LIQ.ACCT:'*':AZ.ACCTS:'*':R.INT.LIQ.ACCT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
            GET.AZ.LIQ.ACCT.BAL.BCKUP<-1> = GET.INT.LIQ.ACCT:'*':AZ.ACCTS:'*':R.INT.LIQ.ACCT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
            GET.AZ.LIQ.ACCT.LIST <-1> = GET.INT.LIQ.ACCT
        END

* End of Fix

    END  ELSE
        ACCT.ACTUAL.BAL=R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
        ACTUAL.ACCTS=ACCOUNT.ID
    END
RETURN
*--------------------------
SORT.ACCT.BY.BALANCE:
    FIRST.COUNT = 1
    SECOND.COUNT=1
    TOTAL.COUNT = DCOUNT(BALANCES,@FM)
    LOOP
    WHILE FIRST.COUNT LE TOTAL.COUNT
        SECOND.COUNT = FIRST.COUNT + 1
        LOOP
        WHILE SECOND.COUNT LE TOTAL.COUNT
            TEMP = ''
            TEMP1 = ''
            IF BALANCES<FIRST.COUNT> LT BALANCES<SECOND.COUNT> THEN
                TEMP = BALANCES<FIRST.COUNT>
                BALANCES<FIRST.COUNT> = BALANCES<SECOND.COUNT>
                BALANCES<SECOND.COUNT> = TEMP
                TEMP1 = ACCOUNTS<FIRST.COUNT>
                ACCOUNTS<FIRST.COUNT> = ACCOUNTS<SECOND.COUNT>
                ACCOUNTS<SECOND.COUNT> = TEMP1
            END
            SECOND.COUNT += 1
        REPEAT
        FIRST.COUNT +=1
    REPEAT
    GOSUB CHECK.ACCT.LIST
RETURN

****************
CHECK.ACCT.LIST:
****************

    GOSUB INSERT.LIQ.ACCT.AFT.AZ          ;* Added for PACS00255146

    TEM.ACCOUNT=''
    TEM.BALANCES=''
    FIRST.COUNT=1
    TOTAL.COUNT=DCOUNT(ACCOUNTS,@FM)
    LOOP
    WHILE FIRST.COUNT LE TOTAL.COUNT
        ACC.ID=FIELD(ACCOUNTS,@FM,FIRST.COUNT)
        CALL F.READ(FN.ACCOUNT,ACC.ID,REC.ACCOUNT,F.ACCOUNT,ERR.ACC)
*---------------
*PACS00198701 -S
        Y.AA.CHECK = REC.ACCOUNT<AC.ARRANGEMENT.ID>
        IF NOT(Y.AA.CHECK) THEN
            BALANCE=REC.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
            IF BALANCE GT 0 THEN
                TEM.ACCOUNT<-1>=FIELD(ACCOUNTS,@FM,FIRST.COUNT)
                TEM.BALANCES<-1>=BALANCE
            END
        END
*PACS00198701 -E
*---------------
        FIRST.COUNT += 1
    REPEAT
    ACCOUNTS = TEM.ACCOUNT
    BALANCES=TEM.BALANCES
RETURN
*--------------------------
*Code for CR17
CR.17:
    LOOP
        REMOVE Y.ACC FROM ACCOUNT.LIST SETTING Y.ACC.POS
    WHILE Y.ACC:Y.ACC.POS
        CALL F.READ(FN.ACCOUNT,Y.ACC,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        Y.CUST.ACC = R.ACCOUNT<AC.CUSTOMER>

        IF Y.CUST.ACC EQ CUSTOMER THEN
            Y.CHK.CATEG = R.ACCOUNT<AC.CATEGORY>
            LOCATE Y.CHK.CATEG IN GET.REINV.CATEG SETTING CATEG.POS ELSE
                GET.FINAL.ACC.LIST<-1> = Y.ACC
            END
        END ELSE
            GOSUB CHECKING.RELATION
        END
    REPEAT
    ACCOUNT.LIST = ''
    ACCOUNT.LIST =GET.FINAL.ACC.LIST
RETURN
******************
CHECKING.RELATION:
******************
    Y.JOINT.HOLDER = R.ACCOUNT<AC.JOINT.HOLDER>
    LOCATE CUSTOMER IN Y.JOINT.HOLDER<1,1> SETTING REL.POS THEN
        Y.RELATION = R.ACCOUNT<AC.RELATION.CODE,REL.POS>
        IF Y.RELATION GE '500' AND Y.RELATION LE '509' THEN
            Y.CHK.CATEG = R.ACCOUNT<AC.CATEGORY>
            LOCATE Y.CHK.CATEG IN GET.REINV.CATEG SETTING CATEG.POS ELSE
                GET.FINAL.ACC.LIST<-1> = Y.ACC
            END
        END
    END
RETURN
*Code for CR17
***************************************
*-------------------
GET.FUNDS.IN.TRANSIT:
*-------------------

    Y.FUNDS.IN.TRANSIT.ACCT.LIST=FIT.ACCOUNT
    Y.TOT.FUNDS.IN.TRANSIT.CNT=DCOUNT(Y.FUNDS.IN.TRANSIT.ACCT.LIST,@FM)
    Y.TOT.TRANSIT.AMT.REQ     = GARNISHMENT.AMT - Y.SUM.GAR.VAL
    CALL F.READ(FN.REDO.GAR.LOCK.ALE,CUSTOMER,R.REDO.GAR.LOCK.ALE,F.REDO.GAR.LOCK.ALE,ERR)
    Y.GAR.LOCK.ALE=R.REDO.GAR.LOCK.ALE<TT.ALE.ALE>
    CHANGE @VM TO @FM IN Y.GAR.LOCK.ALE
    Y.ORG.INTRANSIT.ALE=''
    Y.FIT.CNT=1
    LOOP
    WHILE Y.FIT.CNT LE Y.TOT.FUNDS.IN.TRANSIT.CNT
        CALL F.READ(FN.FUNDS.INTRANSIT,Y.FUNDS.IN.TRANSIT.ACCT.LIST<Y.FIT.CNT>,R.FUNDS.INTRANSIT,F.FUNDS.INTRANSIT,ERR)
        IF R.FUNDS.INTRANSIT THEN
            GOSUB GET.FUNDS.IN.TRANSIT.ACC
        END
        Y.FIT.CNT += 1
    REPEAT
    CHANGE @FM TO @VM IN Y.FIT.ACCT
    CHANGE @FM TO @VM IN Y.FIT.ALE.LIST
    CHANGE @FM TO @VM IN Y.FIT.USED
    R.NEW(APAP.GAR.FIT.ACC)   =Y.FIT.ACCT
    R.NEW(APAP.GAR.FIT.ALE)   =Y.FIT.ALE.LIST
    R.NEW(APAP.GAR.FIT.USED)  =Y.FIT.USED
    IF Y.TOT.ALE.AMT LE Y.TOT.TRANSIT.AMT.REQ THEN
        R.NEW(APAP.GAR.FIT.AMOUNT.REQ)=Y.TOT.ALE.AMT
        Y.GARNISHED.TRANSIT.AMT=Y.TOT.ALE.AMT
    END
    ELSE
        R.NEW(APAP.GAR.FIT.AMOUNT.REQ)=Y.TOT.TRANSIT.AMT.REQ
        Y.GARNISHED.TRANSIT.AMT=Y.TOT.TRANSIT.AMT.REQ
    END
RETURN
*-------------------------
GET.FUNDS.IN.TRANSIT.ACC:
*-------------------------
    Y.INTRANSIT.ALE    =R.FUNDS.INTRANSIT
    Y.INTRANSIT.TOT.CNT=DCOUNT(Y.INTRANSIT.ALE,@FM)
    Y.INTRANSIT.CNT    =1
    Y.ORG.INTRANSIT.ALE=''
    LOOP
    WHILE Y.INTRANSIT.CNT LE Y.INTRANSIT.TOT.CNT
        CALL F.READ(FN.AC.LOCKED.EVENTS,Y.INTRANSIT.ALE<Y.INTRANSIT.CNT>,R.ALE,F.AC.LOCKED.EVENTS,ERR)
        IF R.ALE<AC.LCK.FROM.DATE> LE TODAY THEN
            Y.TOT.ALE.AMT+=R.ALE<AC.LCK.LOCKED.AMOUNT>
            Y.ORG.INTRANSIT.ALE<-1>=Y.INTRANSIT.ALE<Y.INTRANSIT.CNT>
        END
        Y.INTRANSIT.CNT += 1
    REPEAT
    Y.FIT.ACCT<-1> =Y.FUNDS.IN.TRANSIT.ACCT.LIST<Y.FIT.CNT>
    CHANGE @FM TO @SM IN Y.ORG.INTRANSIT.ALE
    Y.FIT.ALE.LIST<-1>=Y.ORG.INTRANSIT.ALE
    CALL F.READ(FN.ACCOUNT,Y.FUNDS.IN.TRANSIT.ACCT.LIST<Y.FIT.CNT>,R.ACCOUNT,F.ACCOUNT,ERR)
    Y.L.AC.AVAIL.BAL   =R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
    Y.FIT.AVAIL        =R.ACCOUNT<AC.LOCAL.REF><1,L.AC.TRAN.AVAIL.POS>
    Y.FIT.LIMIT        =R.ACCOUNT<AC.LOCAL.REF><1,L.AC.TRANS.LIM.POS>
    IF Y.L.AC.AVAIL.BAL GT 0 THEN
        Y.FIT.USED<-1>=0
    END
    ELSE
        Y.L.AC.AVAIL.BAL=ABS(Y.L.AC.AVAIL.BAL)
        IF Y.FIT.AVAIL GT Y.FIT.LIMIT THEN
            Y.MIN.IN.TRANSIT=Y.FIT.LIMIT
        END
        ELSE
            Y.MIN.IN.TRANSIT=Y.FIT.AVAIL
        END
        IF Y.L.AC.AVAIL.BAL GT Y.MIN.IN.TRANSIT THEN
            Y.FIT.USED<-1>=Y.MIN.IN.TRANSIT
        END
        ELSE
            Y.FIT.USED<-1>=Y.L.AC.AVAIL.BAL
        END
    END
RETURN

*----------------------------------------------------------------------------------------------------------------------
GET.APP.DETAILS:
*----------------------------------------------------------------------------------------------------------------------

* Fix for PACS00255146 [ #1 AZ Deposit Int Liq Acct Categ]

    FN.AZ.PRODUCT.PARAMETER = 'F.AZ.PRODUCT.PARAMETER'
    F.AZ.PRODUCT.PARAMETER = ''
    CALL OPF(FN.AZ.PRODUCT.PARAMETER,F.AZ.PRODUCT.PARAMETER)

    SEL.APP.LIST = ''
    APP.ERR = ''
    GET.REINV.CATEG = ''
    GET.AZ.LIQ.ACCT.LIST = ''
    GET.AZ.LIQ.ACCT.BAL = ''
    GET.AZ.LIQ.ACCT.BAL.BCKUP = ''

    SEL.APP = "SSELECT ":FN.AZ.PRODUCT.PARAMETER:" WITH L.AZ.RE.INV.CAT NE '' "
    CALL EB.READLIST(SEL.APP,SEL.APP.LIST,'',NOR.APP,APP.ERR)

    APP.CNT = 1
    LOOP
    WHILE APP.CNT LE NOR.APP
        APP.ID = SEL.APP.LIST<APP.CNT>
        CALL F.READ(FN.AZ.PRODUCT.PARAMETER,APP.ID,R.AZ.PRODUCT.PARAMETER,F.AZ.PRODUCT.PARAMETER,AP.ER)
        GET.REINV.CATEG<-1> = R.AZ.PRODUCT.PARAMETER<AZ.APP.LOCAL.REF,L.AZ.RE.INV.CAT.POS>
        APP.CNT += 1
    REPEAT
RETURN

* End of Fix

*----------------------------------------------------------------------------------------------------------------------
INSERT.LIQ.ACCT.AFT.AZ:
*----------------------------------------------------------------------------------------------------------------------
* Fix for PACS00255146 [ #4 Insert the AZ Deposit Int Liq Acct next to the Deposit account]

    LIQ.ACCT.ARR = GET.AZ.LIQ.ACCT.BAL
    GET.AZ.LIQ.ACCT.BAL.REFRESH = ''

    LOOP
        REMOVE Y.LIQ.ACCT FROM LIQ.ACCT.ARR SETTING Y.AZ.POS
    WHILE Y.LIQ.ACCT:Y.AZ.POS

        GET.AZ.ACCT.NUMB = FIELD(Y.LIQ.ACCT,'*',2)
        GET.AZ.LIQ.ACCT = FIELD(Y.LIQ.ACCT,'*',1)
        GET.AZ.LIQ.ACC.AMT = FIELD(Y.LIQ.ACCT,'*',3)

        LOCATE GET.AZ.ACCT.NUMB IN ACCOUNTS SETTING AZ.ACC.POS THEN
            INS GET.AZ.LIQ.ACCT BEFORE ACCOUNTS<AZ.ACC.POS+1>
            INS GET.AZ.LIQ.ACC.AMT BEFORE BALANCES<AZ.ACC.POS+1>
        END ELSE
            GET.AZ.LIQ.ACCT.BAL.REFRESH <-1> = Y.LIQ.ACCT
        END

    REPEAT
    GET.AZ.LIQ.ACCT.BAL = GET.AZ.LIQ.ACCT.BAL.REFRESH

RETURN

* End of Fix

END
*--------------------End of Program-----------------------------------------------------------------
