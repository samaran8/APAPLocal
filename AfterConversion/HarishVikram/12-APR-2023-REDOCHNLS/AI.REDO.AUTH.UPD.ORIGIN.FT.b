* @ValidationCode : MjotMTE5NTExODAyMzpDcDEyNTI6MTY4MTI3NTY3NzczODpIYXJpc2h2aWtyYW1DOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 12 Apr 2023 10:31:17
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOCHNLS
SUBROUTINE AI.REDO.AUTH.UPD.ORIGIN.FT
*-------------------------------------------------------

*Comments
* Aslam                 07-08-2015       PACS00472936     Fix for the issue
*
* 11-APR-2023     Conversion tool   R22 Auto conversion     FM TO @FM, VM to @VM,  ++ to +=
* 11-APR-2023      Harishvikram C   Manual R22 conversion      No changes
*-------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.REDO.FILE.DATE.PROCESS
    $INSERT I_F.AI.REDO.ARCIB.PARAMETER
    $INSERT I_System
*   $INSERT I_F.ACCOUNT ;*R22 Auto conversion
    $INSERT I_F.REDO.NCF.ISSUED
    $INSERT I_F.REDO.L.NCF.UNMAPPED
    $INSERT I_F.REDO.L.NCF.STATUS
    $INSERT I_F.REDO.L.NCF.CANCELLED

    GOSUB OPEN.FILES
    GOSUB LOCAL.REF.DET
    GOSUB PROCESS
RETURN
*-----------------------------------------------------------------------------
OPEN.FILES:
*-----------------------------------------------------------------------------


    FN.REDO.FILE.DATE.PROCESS = 'F.REDO.FILE.DATE.PROCESS'
    F.REDO.FILE.DATE.PROCESS  = ''
    CALL OPF(FN.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS)

    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER  = ''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)

    FN.FUNDS.TRANSFER.HIST = 'F.FUNDS.TRANSFER$HIS'
    F.FUNDS.TRANSFER.HIST  = ''
    CALL OPF(FN.FUNDS.TRANSFER.HIST,F.FUNDS.TRANSFER.HIST)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT  = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.REDO.NCF.ISSUED  = 'F.REDO.NCF.ISSUED'
    F.REDO.NCF.ISSUEDV  = ''
    CALL OPF(FN.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED)

    FN.REDO.L.NCF.UNMAPPED = 'F.REDO.L.NCF.UNMAPPED'
    F.REDO.L.NCF.UNMAPPED  = ''
    CALL OPF(FN.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED)

    FN.REDO.L.NCF.STATUS  = 'F.REDO.L.NCF.STATUS'
    F.REDO.L.NCF.STATUS   =  ''
    CALL OPF(FN.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS)

    FN.REDO.L.NCF.CANCELLED = 'F.REDO.L.NCF.CANCELLED'
    F.REDO.L.NCF.CANCELLED  = ''
    CALL OPF(FN.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED)

RETURN

*-----------------------------------------------------------------------------
LOCAL.REF.DET:
*-----------------------------------------------------------------------------
    LREF.APP ='FUNDS.TRANSFER'
    LREF.FIELDS = "L.COMMENTS":@VM:"L.NCF.NUMBER":@VM:"L.TT.TAX.AMT":@VM:"L.NCF.TAX.NUM"
    LOCAL.REF.POS=''
    CALL MULTI.GET.LOC.REF(LREF.APP,LREF.FIELDS,LOCAL.REF.POS)
    POS.L.COMMENTS     = LOCAL.REF.POS<1,1>
    POS.L.NCF.NUMBER   = LOCAL.REF.POS<1,2>
    POS.L.TT.TAX.AMT   = LOCAL.REF.POS<1,3>
    POS.L.NCF.TAX.NUM  = LOCAL.REF.POS<1,4>

RETURN
*-----------------------------------------------------------------------------
PROCESS:
*-----------------------------------------------------------------------------

    Y.ARC.FILE.NAME  = R.NEW(FT.LOCAL.REF)<1,POS.L.COMMENTS>
    Y.ARC.FILE.AC.NO = FIELD(R.NEW(FT.LOCAL.REF)<1,POS.L.COMMENTS>,'.',5)
    CALL F.READ(FN.REDO.FILE.DATE.PROCESS,Y.ARC.FILE.NAME,R.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS,REDO.FILE.DATE.PROCESS.ERR)
    IF R.REDO.FILE.DATE.PROCESS AND Y.ARC.FILE.AC.NO THEN
        Y.PARENT.FT.REF = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.PARENT.FT.REF>
        CALL F.READ(FN.ACCOUNT,Y.ARC.FILE.AC.NO,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERR)
        Y.FILE.DEB.CUST = R.ACCOUNT<AC.CUSTOMER>
        R.NEW(FT.PAYMENT.DETAILS) = 'REVERSADO-':Y.PARENT.FT.REF
        Y.NEW.NCF  = R.NEW(FT.LOCAL.REF)<1,POS.L.NCF.NUMBER>
        IF Y.NEW.NCF THEN

            CALL F.READ(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)

            IF NOT(R.FUNDS.TRANSFER) THEN
                CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,FUNDS.TRANSFER.HIS.ERR)
            END

            Y.FT.TXN.DATE     = R.FUNDS.TRANSFER<FT.DATE.TIME>
            Y.FT.TXN.DATE     = 20:Y.FT.TXN.DATE[1,6]
            R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.L.NCF.TAX.NUM> = R.NEW(FT.LOCAL.REF)<1,POS.L.NCF.NUMBER>
            R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.L.TT.TAX.AMT>  = R.NEW(FT.DEBIT.AMOUNT)

            IF NOT(FUNDS.TRANSFER.ERR) THEN
                CALL F.WRITE(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER)
            END ELSE
                CALL F.WRITE(FN.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER)
            END


            Y.FILE.TAX.AMT = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT>
            Y.CNT.TAX.AMT = DCOUNT(Y.FILE.TAX.AMT,@VM)

            Y.TAX.CNT = 1
            LOOP
            WHILE Y.TAX.CNT LE Y.CNT.TAX.AMT
                Y.FILE.TAX.FT = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,Y.TAX.CNT>
                Y.FILE.CURR.TAX.AMT = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,Y.TAX.CNT>
                IF NOT(Y.FILE.TAX.FT) AND Y.FILE.CURR.TAX.AMT THEN
                    R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,Y.TAX.CNT>  = ID.NEW
                    R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,Y.TAX.CNT> = R.NEW(FT.DEBIT.AMOUNT)
                    CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,Y.ARC.FILE.NAME,R.REDO.FILE.DATE.PROCESS)
                    Y.FILE.TAX.FT = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,Y.TAX.CNT-1>
                    GOSUB NCF.UPDATE.PARA
                    RETURN
                END
                Y.TAX.CNT += 1
            REPEAT

            GOSUB NCF.UPDATE.PARA


        END ELSE
*PACS00472936
            FT.VERSION = APPLICATION:PGM.VERSION
            IF FT.VERSION EQ "FUNDS.TRANSFER,AI.REDO.FILE.TAX.SETTLE" THEN
                CALL F.READ(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)

                IF NOT(R.FUNDS.TRANSFER) THEN
                    CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,FUNDS.TRANSFER.HIS.ERR)
                END
                Y.FT.TXN.DATE     = R.FUNDS.TRANSFER<FT.DATE.TIME>
                Y.FT.TXN.DATE     = 20:Y.FT.TXN.DATE[1,6]

                SEL.NCF = 'SELECT ':FN.REDO.NCF.ISSUED:' WITH TXN.ID EQ ':Y.PARENT.FT.REF
                CALL EB.READLIST(SEL.NCF,SEL.NCF.IDS,'',Y.SEL.CNT,Y.ERR)
                SEL.NCF.CT = 1
                SEL.NCF.DT = DCOUNT(SEL.NCF.IDS,@FM)
                LOOP
                WHILE SEL.NCF.CT LE SEL.NCF.DT
                    REC.ID = FIELD(SEL.NCF.IDS,@FM,SEL.NCF.CT)
* REC.ID = Y.FILE.DEB.CUST:'.':Y.FT.TXN.DATE:'.':Y.PARENT.FT.REF
* Delete the Existing NCF Record

                    CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,NCF.ISS.ERR)

                    IF R.REDO.NCF.ISSUED THEN
                        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
                    END ELSE
                        CALL F.READ(FN.REDO.L.NCF.UNMAPPED,REC.ID,R.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED,NCF.UNMAP.ERR)
                        IF R.REDO.L.NCF.UNMAPPED ELSE
                            RETURN
                        END
                        CALL F.DELETE(FN.REDO.L.NCF.UNMAPPED,REC.ID)
                    END

* Moved to NCF Cancellation Table

                    CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID> = R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE> = R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE> = R.REDO.NCF.ISSUED<ST.IS.DATE>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF> = R.REDO.NCF.ISSUED<ST.IS.NCF>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF> = R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT> = R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
                    R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
                    CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)

* Updating NCF status

                    CALL F.READ(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS,ERR.STATUS)
                    IF R.REDO.L.NCF.STATUS THEN
                        R.REDO.L.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
                        CALL F.WRITE(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS)
                    END
                    SEL.NCF.CT += 1
                REPEAT
            END
        END
*PACS00472936
    END
RETURN

*-----------------------------------------------------------------------------
NCF.UPDATE.PARA:
*-----------------------------------------------------------------------------
    IF Y.FILE.TAX.FT THEN
        CALL F.READ(FN.FUNDS.TRANSFER,Y.FILE.TAX.FT,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)

        IF NOT(R.FUNDS.TRANSFER) THEN
            CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HIST,Y.PARENT.FT.REF,R.FUNDS.TRANSFER,FUNDS.TRANSFER.HIS.ERR)
        END
        Y.FT.TXN.DATE     = R.FUNDS.TRANSFER<FT.DATE.TIME>
        Y.FT.TXN.DATE     = 20:Y.FT.TXN.DATE[1,6]
        REC.ID = Y.FILE.DEB.CUST:'.':Y.FT.TXN.DATE:'.':Y.FILE.TAX.FT
    END ELSE
        REC.ID = Y.FILE.DEB.CUST:'.':Y.FT.TXN.DATE:'.':Y.PARENT.FT.REF
    END

* Delete the Existing NCF Record

    CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,NCF.ISS.ERR)

    IF R.REDO.NCF.ISSUED THEN
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END ELSE
        CALL F.READ(FN.REDO.L.NCF.UNMAPPED,REC.ID,R.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED,NCF.UNMAP.ERR)
        IF R.REDO.L.NCF.UNMAPPED ELSE
            RETURN
        END
        CALL F.DELETE(FN.REDO.L.NCF.UNMAPPED,REC.ID)
    END

* Moved to NCF Cancellation Table

    CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID> = R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE> = R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE> = R.REDO.NCF.ISSUED<ST.IS.DATE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF> = R.REDO.NCF.ISSUED<ST.IS.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF> = R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT> = R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
    CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)

* Updating NCF status

    CALL F.READ(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS,ERR.STATUS)
    IF R.REDO.L.NCF.STATUS THEN
        R.REDO.L.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS)
    END

RETURN
*---------------------------------------------------------------
END
