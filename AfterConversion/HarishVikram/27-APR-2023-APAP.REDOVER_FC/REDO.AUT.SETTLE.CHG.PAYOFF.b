* @ValidationCode : MjotNjY2ODYxNDgxOkNwMTI1MjoxNjgyNDEyMzI3MTIyOkhhcmlzaHZpa3JhbUM6LTE6LTE6MDoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 25 Apr 2023 14:15:27
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.AUT.SETTLE.CHG.PAYOFF
*-----------------------------------------------------------------------------
*DESCRIPTION:
*------------
*This routine is used as input routine to settle the charges while disbursement
*-------------------------------------------------------------------------------
* Input/Output:
*--------------
* IN  : -NA-
* OUT : -NA-
*
* Dependencies:
*---------------
* CALLS : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference                    Description
* 12-APR-2012       S.MARIMUTHU                                   Value date added
* 05-04-2023        CONVERSION TOOL  AUTO R22 CODE CONVERSION     FM to @FM, VM to @VM, SM to @SM
* 05-04-2023        MUTHUKUMAR M     MANUAL R22 CODE CONVERSION   NO CHANGE
*------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.AA.CHARGE.DETAILS
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.ACCOUNT
    $INSERT I_F.REDO.H.AA.DIS.CHG
    $INSERT I_F.VERSION
    $INSERT I_F.AA.TERM.AMOUNT
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.REDO.OFS.PARAM
    $INSERT I_F.ACCT.ACTIVITY

MAIN:

    GOSUB OPENFILES
    GOSUB PROCESS
    GOSUB PROGRAM.END

OPENFILES:

    FN.AA.ARRANGEMENT = 'F.AA.ARRANGEMENT'
    F.AA.ARRANGEMENT = ''
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'
    F.FUNDS.TRANSFER = ''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)

    FN.AA.CHARGE.DETAILS = 'F.AA.CHARGE.DETAILS'
    F.AA.CHARGE.DETAILS = ''
    CALL OPF(FN.AA.CHARGE.DETAILS,F.AA.CHARGE.DETAILS)

    FN.VERSION = 'F.VERSION'
    F.VERSION = ''
    CALL OPF(FN.VERSION,F.VERSION)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.REDO.H.AA.DIS.CHG = 'F.REDO.H.AA.DIS.CHG'
    F.REDO.H.AA.DIS.CHG = ''
    CALL OPF(FN.REDO.H.AA.DIS.CHG,F.REDO.H.AA.DIS.CHG)

    Y.APPLS = 'FUNDS.TRANSFER'
    Y.FIELDS = 'L.AA.CHG.AMOUNT': @VM :'L.FT.CUSTOMER'
    CALL MULTI.GET.LOC.REF(Y.APPLS,Y.FIELDS,POSS)
    Y.POS.CHG.AMT = POSS<1,1>
    L.FT.CUSTOMER.POS = POSS<1,2>

    FN.AA.BILL.DETAILS = 'F.AA.BILL.DETAILS'
    F.AA.BILL.DETAILS = ''
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)

    FN.AA.ACCOUNT.DETAILS = 'F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS = ''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)

    FN.REDO.OFS.PARAM = 'F.REDO.OFS.PARAM'
    F.REDO.OFS.PARAM = ''
RETURN

PROCESS:


    Y.AA.ID = R.NEW(FT.DEBIT.ACCT.NO)

    CALL CACHE.READ(FN.REDO.OFS.PARAM,ID.COMPANY,R.REDO.OFS.PARAM,OFS.ERR)
    Y.GEN.USER.NAME = R.REDO.OFS.PARAM<REDO.OFS.USER.NAME>

    CALL F.READ(FN.ACCOUNT,Y.AA.ID,R.ACCOUNT,F.ACCOUNT,ACC.ERR)
    Y.ARR.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>
    Y.CUS.ID = R.NEW(FT.LOCAL.REF)<1,L.FT.CUSTOMER.POS>
    IF NOT(Y.CUS.ID) THEN
        R.NEW(FT.LOCAL.REF)<1,L.FT.CUSTOMER.POS> = R.ACCOUNT<AC.CUSTOMER>
    END
    IF NOT(Y.ARR.ID) THEN
        RETURN
    END

    Y.DEB.AMT = R.NEW(FT.DEBIT.AMOUNT)
    IF Y.DEB.AMT EQ '' THEN
        Y.DEB.AMT = R.NEW(FT.CREDIT.AMOUNT)
    END

    CALL CACHE.READ(FN.REDO.H.AA.DIS.CHG,'SYSTEM',R.REDO.H.AA.DIS.CHG,DIS.CHG.ERR)
    Y.PROP.NAMES = R.REDO.H.AA.DIS.CHG<REDO.DIS.CHG.PROPERTY.NAME>
    Y.PROP.NAMES = CHANGE(Y.PROP.NAMES,@VM,@FM)

    CALL F.READ(FN.AA.ACCOUNT.DETAILS,Y.ARR.ID,R.AA.ACC.DET,F.AA.ACCOUNT.DETAILS,AA.ACC.ERR)
    Y.BILL.IDS = R.AA.ACC.DET<AA.AD.BILL.ID>
    Y.BILL.IDS = CHANGE(Y.BILL.IDS,@SM,@FM)
    Y.BILL.IDS = CHANGE(Y.BILL.IDS,@VM,@FM)

    Y.CNT = DCOUNT(Y.PROP.NAMES,@FM)
    FLG = ''
    LOOP
    WHILE Y.CNT GT 0 DO
        FLG += 1
        Y.PROP.NAME = Y.PROP.NAMES<FLG>
        FLG.AAA = ''
        GOSUB READ.AA.BILLS
        Y.CNT -= 1
    REPEAT

    Y.TOT.DIS.AMT = Y.DEB.AMT + Y.TOT.AMT

    R.NEW(FT.LOCAL.REF)<1,Y.POS.CHG.AMT> = Y.TOT.AMT

    ACCOUNT.ID = Y.AA.ID
    BALANCE.TO.CHECK = 'CURCOMMITMENT'
    DATE.OPTIONS = ''
    EFFECTIVE.DATE = TODAY
    DATE.OPTIONS<4>  = 'ECB'
    BALANCE.AMOUNT = ""
    CALL AA.GET.PERIOD.BALANCES(ACCOUNT.ID, BALANCE.TO.CHECK, DATE.OPTIONS, EFFECTIVE.DATE, "", "", BAL.DETAILS, "")
    PRIN.BALANCE = BAL.DETAILS<IC.ACT.BALANCE>
    PRIN.BALANCE = ABS(PRIN.BALANCE)

    IF PRIN.BALANCE GT Y.TOT.DIS.AMT THEN
        GOSUB SUB.PROCESS.CRED.INT
        GOSUB SUB.PROCESS.DEB.INT
        CURR.NO = DCOUNT(R.NEW(FT.OVERRIDE),@VM) + 1
        TEXT = 'REDO.CHG.ADV.AMT':@FM:Y.TOT.AMT
        CALL STORE.OVERRIDE(CURR.NO)
    END ELSE
        IF PRIN.BALANCE EQ Y.TOT.DIS.AMT THEN
            AF = FT.CREDIT.AMOUNT
            ETEXT = 'EB-CHG.AMT.EX'
            CALL STORE.END.ERROR
        END

    END

RETURN

READ.AA.BILLS:

    Y.CNT.BL = ''
    Y.CNT.BL = DCOUNT(Y.BILL.IDS,@FM)
    LOOP
    WHILE Y.CNT.BL GT 0 DO
        FLG.AAA += 1
        Y.BL.ID = Y.BILL.IDS<FLG.AAA>
        CALL F.READ(FN.AA.BILL.DETAILS,Y.BL.ID,R.BILL.DET,F.AA.BILL.DETAILS,BIL.ERR)
        Y.ACT.PROP = R.BILL.DET<AA.BD.PROPERTY>
        LOCATE Y.PROP.NAME IN Y.ACT.PROP<1,1> SETTING POS.PR THEN
            Y.STS = R.BILL.DET<AA.BD.SETTLE.STATUS,1>
            IF Y.STS EQ 'UNPAID' THEN
                Y.TOT.AMT = Y.TOT.AMT + R.BILL.DET<AA.BD.OS.PROP.AMOUNT,POS.PR>
            END
        END
        Y.CNT.BL -= 1
    REPEAT


RETURN

SUB.PROCESS.CRED.INT:

    Y.INT.ACC = R.REDO.H.AA.DIS.CHG<REDO.DIS.CHG.INTERNAL.ACCOUNT>

    R.FT<FT.DEBIT.ACCT.NO> = Y.AA.ID
    R.FT<FT.CREDIT.ACCT.NO> = Y.INT.ACC
    R.FT<FT.DEBIT.CURRENCY> = LCCY
    R.FT<FT.DEBIT.AMOUNT> = Y.TOT.AMT
    R.FT<FT.DEBIT.VALUE.DATE> = R.NEW(FT.DEBIT.VALUE.DATE)
    R.FT<FT.CREDIT.VALUE.DATE> = R.NEW(FT.CREDIT.VALUE.DATE)

    APP.NAME='FUNDS.TRANSFER'
    OFSFUNCTION='I'
    PROCESS='PROCESS'
    OFS.SOURCE.ID='FT.CHG.DISB.DUM'
    OFSVERSION='FUNDS.TRANSFER,CHG.DUM'
    GTSMODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    OFSSTRING=''
    OFS.ERR = ''

    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.FT,OFSSTR)

    CALL OFS.POST.MESSAGE(OFSSTR,OFS.MSG.ID,OFS.SOURCE.ID,Y.GEN.USER.NAME)

RETURN

SUB.PROCESS.DEB.INT:

    R.FT = ''

    Y.INT.ACC = R.REDO.H.AA.DIS.CHG<REDO.DIS.CHG.INTERNAL.ACCOUNT>

    R.FT<FT.DEBIT.ACCT.NO> = Y.INT.ACC
    R.FT<FT.CREDIT.ACCT.NO> = Y.AA.ID
    R.FT<FT.DEBIT.CURRENCY> = LCCY
    R.FT<FT.DEBIT.AMOUNT> = Y.TOT.AMT
    R.FT<FT.ORDERING.CUST> = R.ACCOUNT<AC.CUSTOMER>
    R.FT<FT.DEBIT.VALUE.DATE> = R.NEW(FT.DEBIT.VALUE.DATE)
    R.FT<FT.CREDIT.VALUE.DATE> = R.NEW(FT.CREDIT.VALUE.DATE)

    APP.NAME='FUNDS.TRANSFER'
    OFSFUNCTION='I'
    PROCESS='PROCESS'
    OFS.SOURCE.ID='FT.CHG.DISB'
    OFSVERSION='FUNDS.TRANSFER,CHG.DISB'
    GTSMODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    OFSSTRING=''
    OFS.ERR = ''

    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.FT,OFSSTR)

    CALL OFS.POST.MESSAGE(OFSSTR,OFS.MSG.ID,OFS.SOURCE.ID,Y.GEN.USER.NAME)

RETURN

PROGRAM.END:

END
