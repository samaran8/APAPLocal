* @ValidationCode : Mjo4MDgwNzU1MDY6Q3AxMjUyOjE2ODI0MTIzNjE1ODA6SGFyaXNodmlrcmFtQzotMTotMTowOjE6ZmFsc2U6Ti9BOkRFVl8yMDIxMDguMDotMTotMQ==
* @ValidationInfo : Timestamp         : 25 Apr 2023 14:16:01
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.V.VAL.GARNISHMENT.REF
*------------------------------------------------------------
*Description:
*This is a validation routine for the field GARNISHMENT.REF.NO in version
*AC.LOCKED.EVENTS,INPUT.It will populate the values in the local fields
*GARNISHMENT.AMOUNT, AVAILABLE.BAL & CUSTOMER
*---------------------------------------------------------------------
* Company Name  : ASOCIACION POPUL
* Developed By  : BHARATH C
* Program Name  : REDO.V.INP.GARNISHMENT.MAINT
* ODR NUMBER    : ODR-2009-10-0531
* HD REFERENCE  : HD1016159
*LINKED WITH    : REDO.V.VAL.GARNISHMENT.REF validation routine for
*                 the versionAC.LOCKED.EVENTS,INPUT
*---------------------------------------------------------------
* In parameter : NONE
*Out Parameter:none
*-----------------------------------------------------------------------
*MODIFICATION:
*   DATE           ODR
*12.1.2010     ODR-2009-10-0531
* 16-02-2011        Prabhu.N         B.88-HD1040884     Routine auto populates account locked and instead of validation it is modifed as auto new content routine
*-------------------------------------------------------------------------
*Modification History
*DATE                       WHO                         REFERENCE                                   DESCRIPTION
*17-04-2023            Conversion Tool             R22 Auto Code conversion                FM TO @FM,VM TO @VM,SM TO @SM,F.READ TO CACHE.READ,IF CONDITION ADDED, ++ TO +=1
*17-04-2023              Samaran T                R22 Manual Code conversion                         No Changes
*-----------------------------------------------------------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AC.LOCKED.EVENTS
    $INSERT I_F.CUSTOMER.ACCOUNT
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AZ.ACCOUNT
    $INSERT I_F.CURRENCY
    $INSERT I_F.APAP.H.GARNISH.DETAILS
    $INSERT I_System
    GOSUB INIT
    GOSUB OPENFILE

    GOSUB PROCESS
    GOSUB TOTAL.BALANCE
    GOSUB ACCOUNT.PRODUCT
    GOSUB FILTER.ACCOUNTS
    GOSUB SORT.ACCT.BY.BALANCE


RETURN

INIT:

    ACCOUNT.LIST=''
    GARNISHMENT.ALL.POS=0
    AZ.ACCTS=''
    AZ.BALANCE=''
    ACCT.ACTUAL.BAL=''
    ACTUAL.ACCTS=''


    AZ.ACCTS.NOT.JOINT=''
    AZ.BALANCE.NOT.JOINT =''
    ACTUAL.ACCTS.NOT.JOINT =''
    ACCT.ACTUAL.BAL.NOT.JOINT=''
    AZ.ACCTS.JOINT=''
    AZ.BALANCE.JOINT =''
    ACTUAL.ACCTS.JOINT =''
    ACCT.ACTUAL.BAL.JOINT=''
    ACCTS.LOCKED=''
    ALL.ACCTS=''
    ALL.BALANCES=''
    TEM.ACCOUNT=''
    ACC.LIST = ''
RETURN
*-------------------------
OPENFILE:

    FN.AC.LOCKED.EVENTS='F.AC.LOCKED.EVENTS'
    F.AC.LOCKED.EVENTS=''
    R.AC.LOCKED.EVENTS=''
    ERR.AC.LOCKED.EVENTS=''
    AC.LOCKED.ID=''
    CALL OPF(FN.AC.LOCKED.EVENTS,F.AC.LOCKED.EVENTS)

    FN.GARNISH.DETAILS ='F.APAP.H.GARNISH.DETAILS'
    F.GARNISH.DETAILS =''
    R.GARNISH.DETAILS =''
    ERR.GARNISH=''
    CALL OPF(FN.GARNISH.DETAILS,F.GARNISH.DETAILS)

    FN.CUSTOMER.ACCOUNT='F.CUSTOMER.ACCOUNT'
    F.CUSTOMER.ACCOUNT=''
    R.CUSTOMER.ACCOUNT=''
    ERR.CUSTOMER.ACCOUNT=''
    CALL OPF(FN.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT)

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    R.ACCOUNT=''
    ERR.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.AZ.ACCOUNT='F.AZ.ACCOUNT'
    F.AZ.ACCOUNT=''
    R.AZ.ACCOUNT=''
    ERR.AZ.ACCOUNT=''
    CALL OPF(FN.AZ.ACCOUNT,F.AZ.ACCOUNT)

    FN.CURRENCY='F.CURRENCY'
    F.CURRENCY=''
    CALL OPF(FN.CURRENCY,F.CURRENCY)
    FN.JOINT.CONTRACTS.XREF='F.JOINT.CONTRACTS.XREF'
    F.JOINT.CONTRACTS.XREF=''
    CALL OPF(FN.JOINT.CONTRACTS.XREF,F.JOINT.CONTRACTS.XREF)

    Y.APP = 'AC.LOCKED.EVENTS':@FM:'ACCOUNT'
    LREF.FLDS = 'L.AC.GAR.AMT':@VM:'L.AC.AVAIL.BAL':@VM:'L.AC.ACCT.LOCK':@VM:'L.AC.CUSTOMER':@VM:'L.AC.GAR.REF.NO':@FM:'L.AC.AV.BAL'
    GARNISHMENT.ALL.POS = ''
    CALL MULTI.GET.LOC.REF(Y.APP,LREF.FLDS,GARNISHMENT.ALL.POS)
    L.AC.AV.BAL.POS = GARNISHMENT.ALL.POS<2,1>
*   CALL MULTI.GET.LOC.REF('ACCOUNT','L.AC.AV.BAL',GARNISHMENT.ALL.POS)
RETURN
*-------------- ------------
*-------------------------
PROCESS:


    GARNISHMENT.REF.NO=System.getVariable('CURRENT.REF')
    IF E EQ "EB-UNKNOWN.VARIABLE" THEN    ;*R22 AUTO CODE CONVERSION.START
        GARNISHMENT.REF.NO = ""   ;*R22 AUTO CODE CONVERSION
    END   ;*R22 AUTO CODE CONVERSION.END
    Y.GAR.REF.POS=GARNISHMENT.ALL.POS<1,5>
    R.NEW(AC.LCK.LOCAL.REF)<1,Y.GAR.REF.POS>=GARNISHMENT.REF.NO
    CALL F.READ(FN.GARNISH.DETAILS,GARNISHMENT.REF.NO,R.GARNISH.DETAILS,F.GARNISH.DETAILS,ERR.GARNISH)

    IF R.GARNISH.DETAILS NE '' THEN


        GARNISHMENT.AMT=R.GARNISH.DETAILS<APAP.GAR.GARNISHMENT.AMT>
        CUSTOMER=R.GARNISH.DETAILS<APAP.GAR.CUSTOMER>


        POS=GARNISHMENT.ALL.POS<1,4>
        R.NEW(AC.LCK.LOCAL.REF)<1,POS>=CUSTOMER
        CALL F.READ(FN.CUSTOMER.ACCOUNT,CUSTOMER,R.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT,ERR.CUSTOMER.ACCOUNT)
        ACCOUNT.LIST<-1>=R.CUSTOMER.ACCOUNT

        CALL F.READ(FN.JOINT.CONTRACTS.XREF,CUSTOMER,R.JOINT,F.JOINT.CONTRACTS.XREF,ERR.JOINT)

        GOSUB ADD.JOINT.ACCOUNT
        GOSUB CR.17

        GOSUB TOTAL.BALANCE



        IF AVAILABLE.BAL GT GARNISHMENT.AMT THEN
            GOSUB ACCOUNT.PRODUCT
        END
        IF AVAILABLE.BAL LE GARNISHMENT.AMT AND AVAILABLE.BAL GT '0' THEN
            D.ACCOUNT.COUNT=1
            NO.OF.ACCOUNT=DCOUNT(ACCOUNT.LIST,@FM)
            LOOP
            WHILE D.ACCOUNT.COUNT LE NO.OF.ACCOUNT
                ACCOUNT.ID=FIELD(ACCOUNT.LIST,@FM,D.ACCOUNT.COUNT)
                ALL.ACCTS<-1>=ACCOUNT.ID
                CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
                L.AC.AV.BAL.POS = GARNISHMENT.ALL.POS<2,1>
                TEMP.AVAILABLE.BAL=R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
                ALL.BALANCES<-1>=TEMP.AVAILABLE.BAL
                D.ACCOUNT.COUNT += 1
            REPEAT
            ACCOUNTS=ALL.ACCTS
            BALANCES=ALL.BALANCES
            GOSUB SORT.ACCT.BY.BALANCE
            ACCTS.LOCKED<-1> = ACCOUNTS

        END

        IF AVAILABLE.BAL LE '0' THEN
            GOSUB CHECK.ACCOUNS.LIST
        END
    END
    R.NEW(AC.LCK.ACCOUNT.NUMBER)=ACCTS.LOCKED<1>
    Y.ACCT.AMT=ACCTS.LOCKED<1>
    CALL F.READ(FN.ACCOUNT,Y.ACCT.AMT,R.ACCOUNT,F.ACCOUNT,ERR)
    Y.CURRENCY=R.ACCOUNT<AC.CURRENCY>
    CALL CACHE.READ(FN.CURRENCY, Y.CURRENCY, R.CURRENCY, ERR)   ;*R22 AUTO CODE CONVERSION
    Y.LEN.CUR=R.CURRENCY<EB.CUR.NO.OF.DECIMALS>
    Y.LEN.CUR="L%":Y.LEN.CUR
    Y.TEMP.AMOUNT=GARNISHMENT.AMT
    Y.TEMP.AMOUNT.FIR=FIELD(Y.TEMP.AMOUNT,'.',1)
    Y.TEMP.AMOUNT.DEC=FIELD(Y.TEMP.AMOUNT,'.',2)
    Y.TEMP.AMOUNT.DEC= FMT(Y.TEMP.AMOUNT.DEC,Y.LEN.CUR)
    GARNISHMENT.AMT = Y.TEMP.AMOUNT.FIR:'.':Y.TEMP.AMOUNT.DEC
    GAR.POS=GARNISHMENT.ALL.POS<1,1>
    R.NEW(AC.LCK.LOCAL.REF)<1,GAR.POS>=GARNISHMENT.AMT

    IF GARNISHMENT.AMT GT R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS> THEN
        R.NEW(AC.LCK.LOCKED.AMOUNT)=R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
    END
    ELSE
        R.NEW(AC.LCK.LOCKED.AMOUNT)=GARNISHMENT.AMT
    END
    TEM.ACCTS.LOCKED = CHANGE(ACCTS.LOCKED,@FM,@SM)
    POS=GARNISHMENT.ALL.POS<1,3>

    R.NEW(AC.LCK.LOCAL.REF)<1,POS>=TEM.ACCTS.LOCKED
    POS=GARNISHMENT.ALL.POS<1,2>
    Y.TEMP.AMOUNT=AVAILABLE.BAL
    Y.TEMP.AMOUNT.FIR=FIELD(Y.TEMP.AMOUNT,'.',1)
    Y.TEMP.AMOUNT.DEC=FIELD(Y.TEMP.AMOUNT,'.',2)
    Y.TEMP.AMOUNT.DEC= FMT(Y.TEMP.AMOUNT.DEC,Y.LEN.CUR)
    AVAILABLE.BAL= Y.TEMP.AMOUNT.FIR:'.':Y.TEMP.AMOUNT.DEC
    R.NEW(AC.LCK.LOCAL.REF)<1,POS>=AVAILABLE.BAL

RETURN
*******************
CHECK.ACCOUNS.LIST:
*******************
    FIRST.COUNT=1
    TOTAL.COUNT=DCOUNT(ACCOUNT.LIST,@FM)
    LOOP
    WHILE FIRST.COUNT LE TOTAL.COUNT
        ACC.ID=FIELD(ACCOUNT.LIST,@FM,FIRST.COUNT)
        CALL F.READ(FN.ACCOUNT,ACC.ID,REC.ACCOUNT,F.ACCOUNT,ERR.ACC)
        BALANCE=REC.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>

        IF BALANCE GT 0 THEN

            TEM.ACCOUNT<-1>=FIELD(ACCOUNTS,@FM,FIRST.COUNT)
        END
        FIRST.COUNT += 1
    REPEAT

    ACCTS.LOCKED = TEM.ACCOUNT

RETURN
*----------------------------------------------------------------------
ADD.JOINT.ACCOUNT:
*------------------
    IF R.JOINT NE '' THEN
        ACCOUNT.LIST<-1>=R.JOINT
    END
RETURN
*------------------------------------------------------------
TOTAL.BALANCE:
    D.ACCOUNT.COUNT=1
    AVAILABLE.BAL=0
    TEMP.AVAILABLE.BAL=0
    NO.OF.ACCOUNT=DCOUNT(ACCOUNT.LIST,@FM)
    LOOP
    WHILE D.ACCOUNT.COUNT LE NO.OF.ACCOUNT
        ACCOUNT.ID=FIELD(ACCOUNT.LIST,@FM,D.ACCOUNT.COUNT)
        CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        TEMP.AVAILABLE.BAL=R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>

*********************************************************       AVAILABLE.BAL.LIST=AVAILABLE.BAL.LIST:FM:TEMP.AVAILABLE.BAL
        AVAILABLE.BAL += TEMP.AVAILABLE.BAL
        D.ACCOUNT.COUNT += 1


    REPEAT
RETURN
*-------------------------
ACCOUNT.PRODUCT:

    D.ACCOUNT.COUNT=1
    NO.OF.ACCOUNT=DCOUNT(ACCOUNT.LIST,@FM)
    LOOP
    WHILE D.ACCOUNT.COUNT LE NO.OF.ACCOUNT

        ACCOUNT.ID=FIELD(ACCOUNT.LIST,@FM,D.ACCOUNT.COUNT)
        CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        ALL.IN.ONE.PRODUCT =R.ACCOUNT<AC.ALL.IN.ONE.PRODUCT>
        JOINT.HOLDER =  R.ACCOUNT<AC.JOINT.HOLDER>
        IF JOINT.HOLDER EQ '' THEN
            GOSUB FILTER.ACCOUNTS
            IF AZ.ACCTS THEN
                AZ.ACCTS.NOT.JOINT<-1> = AZ.ACCTS
                AZ.BALANCE.NOT.JOINT<-1> = AZ.BALANCE
            END ELSE
                ACTUAL.ACCTS.NOT.JOINT<-1> = ACTUAL.ACCTS
                ACCT.ACTUAL.BAL.NOT.JOINT<-1> = ACCT.ACTUAL.BAL
            END

        END
        IF JOINT.HOLDER NE '' THEN
            GOSUB FILTER.ACCOUNTS
            IF AZ.ACCTS THEN
                AZ.ACCTS.JOINT<-1> = AZ.ACCTS
                AZ.BALANCE.JOINT<-1> = AZ.BALANCE
            END ELSE
                ACTUAL.ACCTS.JOINT<-1> = ACTUAL.ACCTS
                ACCT.ACTUAL.BAL.JOINT<-1> = ACCT.ACTUAL.BAL
            END
        END
        AZ.ACCTS=''
        D.ACCOUNT.COUNT += 1
    REPEAT

****************************************************SORTING CALL
    IF AZ.ACCTS.NOT.JOINT NE '' THEN
        ACCOUNTS = AZ.ACCTS.NOT.JOINT
        BALANCES=AZ.BALANCE.NOT.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
    END

    IF ACTUAL.ACCTS.NOT.JOINT NE '' THEN
        ACCOUNTS=ACTUAL.ACCTS.NOT.JOINT
        BALANCES=ACCT.ACTUAL.BAL.NOT.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
    END

    IF AZ.ACCTS.JOINT NE '' THEN
        ACCOUNTS=AZ.ACCTS.JOINT
        BALANCES=AZ.BALANCE.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
    END

    IF ACTUAL.ACCTS.JOINT NE '' THEN
        ACCOUNTS=ACTUAL.ACCTS.JOINT
        BALANCES=ACCT.ACTUAL.BAL.JOINT
        GOSUB SORT.ACCT.BY.BALANCE
        ACCTS.LOCKED<-1> = ACCOUNTS
    END
RETURN
*-------------------------
FILTER.ACCOUNTS:
    IF ALL.IN.ONE.PRODUCT NE '' THEN
        CALL F.READ(FN.AZ.ACCOUNT,ACCOUNT.ID,R.AZ.ACCOUNT,F.AZ.ACCOUNT,ERR.AZ.ACCOUNT)
        AZ.BALANCE=R.AZ.ACCOUNT<AZ.PRINCIPAL>
        AZ.ACCTS=ACCOUNT.ID
    END  ELSE
        ACCT.ACTUAL.BAL=R.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
        ACTUAL.ACCTS=ACCOUNT.ID
    END
RETURN
*--------------------------
SORT.ACCT.BY.BALANCE:
    FIRST.COUNT = 1
    SECOND.COUNT=1
    TOTAL.COUNT = DCOUNT(BALANCES,@FM)
    LOOP
    WHILE FIRST.COUNT LE TOTAL.COUNT
        SECOND.COUNT = FIRST.COUNT + 1
        LOOP
        WHILE SECOND.COUNT LE TOTAL.COUNT
            TEMP = ''
            TEMP1 = ''
            IF BALANCES<FIRST.COUNT> LT BALANCES<SECOND.COUNT> THEN
                TEMP = BALANCES<FIRST.COUNT>
                BALANCES<FIRST.COUNT> = BALANCES<SECOND.COUNT>
                BALANCES<SECOND.COUNT> = TEMP
                TEMP1 = ACCOUNTS<FIRST.COUNT>
                ACCOUNTS<FIRST.COUNT> = ACCOUNTS<SECOND.COUNT>
                ACCOUNTS<SECOND.COUNT> = TEMP1
            END
            SECOND.COUNT += 1
        REPEAT
        FIRST.COUNT +=1
    REPEAT
    GOSUB CHECK.ACCT.LIST
RETURN
****************
CHECK.ACCT.LIST:
****************

    FIRST.COUNT=1
    TOTAL.COUNT=DCOUNT(ACCOUNTS,@FM)
    LOOP
    WHILE FIRST.COUNT LE TOTAL.COUNT
        ACC.ID=FIELD(ACCOUNTS,@FM,FIRST.COUNT)
        CALL F.READ(FN.ACCOUNT,ACC.ID,REC.ACCOUNT,F.ACCOUNT,ERR.ACC)
        BALANCE=REC.ACCOUNT<AC.LOCAL.REF><1,L.AC.AV.BAL.POS>
        IF BALANCE GT 0 THEN

            TEM.ACCOUNT<-1>=FIELD(ACCOUNTS,@FM,FIRST.COUNT)
        END
        FIRST.COUNT += 1
    REPEAT

    ACCOUNTS = TEM.ACCOUNT

RETURN
*--------------------------
*Code for CR17
CR.17:
    LOOP
        REMOVE Y.ACC FROM ACCOUNT.LIST SETTING Y.ACC.POS
    WHILE Y.ACC:Y.ACC.POS
        CALL F.READ(FN.ACCOUNT,Y.ACC,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        Y.JOINT.HOLDER = R.ACCOUNT<AC.JOINT.HOLDER>
        IF NOT(Y.JOINT.HOLDER) THEN
            ACC.LIST<-1> = Y.ACC
            CONTINUE
        END
        GOSUB CHECKING.RELATION
    REPEAT
    ACCOUNT.LIST = ''
    ACCOUNT.LIST = ACC.LIST
RETURN
CHECKING.RELATION:
    Y.RELATION = R.ACCOUNT<AC.RELATION.CODE>
    Y.COUNT = DCOUNT(Y.RELATION,@VM)
    Y.CNT = 1
    Y.SET.FLAG = ''
    LOOP
    WHILE Y.CNT LE Y.COUNT
        Y.REL.CODE = Y.RELATION<1,Y.CNT>
        IF Y.REL.CODE GE 510 AND Y.REL.CODE LE 549 THEN
            Y.SET.FLAG = "YES"
            EXIT
        END
        Y.CNT += 1
    REPEAT
    IF NOT(Y.SET.FLAG) THEN
        ACC.LIST<-1> = Y.ACC
    END
RETURN
*Code for CR17

END
