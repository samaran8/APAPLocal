* @ValidationCode : MjozNzQ5ODE3NzU6Q3AxMjUyOjE2ODI0MTIzNDAzMjU6SGFyaXNodmlrcmFtQzotMTotMTowOjE6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 25 Apr 2023 14:15:40
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : HarishvikramC
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOVER
SUBROUTINE REDO.V.AUTH.TRANSFER.AMONG.AREAS
*-------------------------------------------------------------------------
* Description:
* This routine will be attached to the version REDO.ORDER.DETAIL,TRANSFER.AMONG.AREAS as
* a authorisation routine
*------------------------------------------------------------------------------------------
*------------------------------------------------------------------------------------------
* * Input / Output
*
* --------------
* IN     : -NA-
* OUT    : -NA-
*------------------------------------------------------------------------------------------
* COMPANY NAME : APAP
* DEVELOPED BY : MARIMUTHU S
* PROGRAM NAME : REDO.V.AUTH.TRANSFER.AMONG.AREAS
*------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
* DATE             WHO            REFERENCE         DESCRIPTION
* 30.04.2010  MARIMUTHU S         ODR-2009-11-0200  INITIAL CREATION
* 01.01.2018  GOPALA KRISHNAN R   PACS00643732      BUG FIX
*Modification history
*Date                Who               Reference                  Description
*13-04-2023      conversion tool     R22 Auto code conversion    TNO:'_':OPERATOR TO C$T24.SESSION.NO:'_':OPERATOR,VM TO @VM,FM TO @FM
*13-04-2023      Mohanraj R          R22 Manual code conversion   No changes
* -----------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.USER
    $INSERT I_F.REDO.H.PASSBOOK.INVENTORY
    $INSERT I_F.REDO.H.ADMIN.CHEQUES
    $INSERT I_F.REDO.H.BANK.DRAFTS
    $INSERT I_F.REDO.H.DEPOSIT.RECEIPTS
    $INSERT I_F.REDO.H.ORDER.DETAILS
    $INSERT I_F.REDO.ITEM.STOCK
    $INSERT I_F.REDO.ITEM.STOCK.BY.DATE
*-------------------------------------------------------------------------
MAIN:
*-------------------------------------------------------------------------

    GOSUB OPENFILES
    GOSUB PROCESS

    GOSUB PROGRAM.END
RETURN
*-------------------------------------------------------------------------
OPENFILES:
*-------------------------------------------------------------------------
    FN.REDO.H.PASSBOOK.INVENTORY = 'F.REDO.H.PASSBOOK.INVENTORY'
    F.REDO.H.PASSBOOK.INVENTORY = ''
    CALL OPF(FN.REDO.H.PASSBOOK.INVENTORY,F.REDO.H.PASSBOOK.INVENTORY)

    FN.REDO.ITEM.SERIES = 'F.REDO.ITEM.SERIES'
    F.REDO.ITEM.SERIES = ''
    CALL OPF(FN.REDO.ITEM.SERIES,F.REDO.ITEM.SERIES)

    FN.REDO.H.DEPOSIT.RECEIPTS = 'F.REDO.H.DEPOSIT.RECEIPTS'
    F.REDO.H.DEPOSIT.RECEIPTS = ''
    CALL OPF(FN.REDO.H.DEPOSIT.RECEIPTS,F.REDO.H.DEPOSIT.RECEIPTS)

    FN.REDO.H.ADMIN.CHEQUES = 'F.REDO.H.ADMIN.CHEQUES'
    F.REDO.H.ADMIN.CHEQUES = ''
    CALL OPF(FN.REDO.H.ADMIN.CHEQUES,F.REDO.H.ADMIN.CHEQUES)

    FN.REDO.H.BANK.DRAFTS = 'F.REDO.H.BANK.DRAFTS'
    F.REDO.H.BANK.DRAFTS = ''
    CALL OPF(FN.REDO.H.BANK.DRAFTS,F.REDO.H.BANK.DRAFTS)

    FN.REDO.ITEM.STOCK = 'F.REDO.ITEM.STOCK'
    F.REDO.ITEM.STOCK = ''
    CALL OPF(FN.REDO.ITEM.STOCK,F.REDO.ITEM.STOCK)

    FN.REDO.ITEM.STOCK.BY.DATE = 'F.REDO.ITEM.STOCK.BY.DATE'
    F.REDO.ITEM.STOCK.BY.DATE = ''
    CALL OPF(FN.REDO.ITEM.STOCK.BY.DATE,F.REDO.ITEM.STOCK.BY.DATE)

    R.REDO.ITEM.STK = ''
    R.REDO.ITEM.STOCK = ''
RETURN
*-------------------------------------------------------------------------
PROCESS:
*-------------------------------------------------------------------------

    R.REC = ''
    Y.ITEM.CODE = R.NEW(RE.ORD.ITEM.CODE)
    SEQ.COUNT = DCOUNT(R.NEW(RE.ORD.SERIES.FROM),@VM)
    INPUTTER = R.NEW(RE.ORD.INPUTTER)
    AUTHORISER = C$T24.SESSION.NO:'_':OPERATOR ;*R22 Auto code conversion
    Y.INV.MNT.ID = R.NEW(RE.ORD.ITEM.CODE)

    Y.DES = R.NEW(RE.ORD.DESCRIPTION)
    Y.SEQ.FROM = R.NEW(RE.ORD.SERIES.FROM)
    Y.SEQ.TO = R.NEW(RE.ORD.SERIES.TO)
    Y.REQ.COMP = R.NEW(RE.ORD.REQUEST.COMPANY)
    Y.DEL.QUL =  R.NEW(RE.ORD.RETURN.QUANTITY)
    R.NEW(RE.ORD.ORDER.STATUS) = 'Orden Recibida por Transferencia'
    CALL APAP.REDOVER.REDO.CHECK.APPLICATION(Y.INV.MNT.ID,APPL.NAME,APPL.PATH)
    DUP.APPL.NAME = APPL.NAME
    DUP.APPL.PATH = APPL.PATH

    CALL OPF(APPL.NAME,APPL.PATH)
    Y.S.ID = ''
    IF R.NEW(RE.ORD.BRANCH.CODE) THEN
        Y.FROM.COMAPNY = Y.FROM.COMAPNY:"-":R.NEW(RE.ORD.BRANCH.CODE)
        Y.S.ID = R.NEW(RE.ORD.TRANSFER.FROM):'-':R.NEW(RE.ORD.BRANCH.CODE):".":R.NEW(RE.ORD.ITEM.CODE)
    END ELSE
        Y.S.ID = R.NEW(RE.ORD.TRANSFER.FROM):".":R.NEW(RE.ORD.ITEM.CODE)
    END
    CALL F.READ(FN.REDO.ITEM.SERIES,Y.S.ID,R.REDO.ITEM.SERIES,F.REDO.ITEM.SERIES,Y.ERR)
    Y.CNT.TOT = DCOUNT(R.REDO.ITEM.SERIES,@FM)
    Y.SERIES.LIST.DUP = FIELDS(R.REDO.ITEM.SERIES,'*',1,1)
    Y.STATUS.LIST.DUP = FIELDS(R.REDO.ITEM.SERIES,'*',2,1)
    Y.BATCH.LIST.DUP = FIELDS(R.REDO.ITEM.SERIES,'*',3,1)


    IF DUP.APPL.NAME NE 'F.REDO.H.PIGGY.BANKS' THEN
        Y.CNT = 1
        LOOP
        WHILE Y.CNT LE SEQ.COUNT DO
            GOSUB LOOP.PROCESS.RETURN

        REPEAT
        CALL F.WRITE(FN.REDO.ITEM.SERIES,Y.S.ID,R.REDO.ITEM.SERIES)
    END ELSE
        Y.TRANS.QNTY = R.NEW(RE.ORD.TRANSFER.QUANTITY)
        Y.FROM.COMAPNY = R.NEW(RE.ORD.TRANSFER.FROM)
        Y.DEST.AREA = R.NEW(RE.ORD.TRANSFER.TO)
    END
    GOSUB STOCK.CNT.UPD

RETURN

*-----------------------------------------------------------------------------------------
LOOP.PROCESS.RETURN:
*-----------------------------------------------------------------------------------------

    Y.SEQ.FROM = R.NEW(RE.ORD.SERIES.FROM)<1,Y.CNT>
    Y.SEQ.TO = R.NEW(RE.ORD.SERIES.TO)<1,Y.CNT>
    LEN.SEQ = LEN(Y.SEQ.FROM)
    LOOP
    WHILE Y.SEQ.FROM LE Y.SEQ.TO DO
        GOSUB SELECT.PROCESS
        Y.SEQ.FROM += 1
        Y.SEQ.FROM = FMT(Y.SEQ.FROM, 'R%':LEN.SEQ)
    REPEAT
    Y.CNT += 1
RETURN

*-------------------------------------------------------------------------
SELECT.PROCESS:
*-------------------------------------------------------------------------
    POS.SR.VAL = ''
    SEL.LIST.1 = ''
    LOCATE Y.SEQ.FROM IN Y.SERIES.LIST.DUP SETTING POS.SR.VAL THEN
        SEL.LIST.1 = Y.BATCH.LIST.DUP<POS.SR.VAL>
    END
    R.REDO.ITEM.SERIES<POS.SR.VAL> = ''
    SEL.CMD.1 = ''
    DEP.ERR = ''
    NO.OF.RECS = ''
    BEGIN CASE
        CASE DUP.APPL.NAME EQ 'F.REDO.H.DEPOSIT.RECEIPTS'
            SEL.LIST.1 = SEL.LIST.1
            CALL F.READ(FN.REDO.H.DEPOSIT.RECEIPTS,SEL.LIST.1,R.REDO.H.DEPOSIT.RECEIPTS,F.REDO.H.DEPOSIT.RECEIPTS,Y.ERR.APP)
            R.REDO.H.DEPOSIT.RECEIPTS<REDO.DEP.STATUS> = 'TRANSFERIDO'
            R.REDO.H.DEPOSIT.RECEIPTS<REDO.DEP.INPUTTER> = INPUTTER
            R.REDO.H.DEPOSIT.RECEIPTS<REDO.DEP.AUTHORISER> = AUTHORISER
            R.REDO.H.DEPOSIT.RECEIPTS<REDO.DEP.DATE.UPDATED> = TODAY
            CALL F.WRITE(FN.REDO.H.DEPOSIT.RECEIPTS,SEL.LIST.1,R.REDO.H.DEPOSIT.RECEIPTS)
            GOSUB CASE.PROCESS
        CASE DUP.APPL.NAME EQ 'F.REDO.H.BANK.DRAFTS'
            SEL.LIST.2 = SEL.LIST.1
            CALL F.READ(FN.REDO.H.BANK.DRAFTS,SEL.LIST.1,R.REDO.H.BANK.DRAFTS,F.REDO.H.BANK.DRAFTS,Y.ERR.APP)
            R.REDO.H.BANK.DRAFTS<REDO.BANK.STATUS> = 'TRANSFERIDO'
            R.REDO.H.BANK.DRAFTS<REDO.BANK.INPUTTER> = INPUTTER
            R.REDO.H.BANK.DRAFTS<REDO.BANK.AUTHORISER> = AUTHORISER
            R.REDO.H.BANK.DRAFTS<REDO.BANK.DATE.UPDATED> = TODAY
            CALL F.WRITE(FN.REDO.H.BANK.DRAFTS,SEL.LIST.2,R.REDO.H.BANK.DRAFTS)
            GOSUB CASE.PROCESS

        CASE DUP.APPL.NAME EQ 'F.REDO.H.ADMIN.CHEQUES'
            SEL.LIST.3 = SEL.LIST.1
            CALL F.READ(FN.REDO.H.ADMIN.CHEQUES,SEL.LIST.1,R.REDO.H.ADMIN.CHEQUES,F.REDO.H.ADMIN.CHEQUES,Y.ERR.APP)
            R.REDO.H.ADMIN.CHEQUES<REDO.ADMIN.STATUS> = 'TRANSFERIDO'
            R.REDO.H.ADMIN.CHEQUES<REDO.ADMIN.INPUTTER> = INPUTTER
            R.REDO.H.ADMIN.CHEQUES<REDO.ADMIN.AUTHORISER> = AUTHORISER
            R.REDO.H.ADMIN.CHEQUES<REDO.ADMIN.DATE.UPDATED> = TODAY
            CALL F.WRITE(FN.REDO.H.ADMIN.CHEQUES,SEL.LIST.3,R.REDO.H.ADMIN.CHEQUES)
            GOSUB CASE.PROCESS

        CASE DUP.APPL.NAME EQ 'F.REDO.H.PASSBOOK.INVENTORY'
            SEL.LIST.4 = SEL.LIST.1
            CALL F.READ(FN.REDO.H.PASSBOOK.INVENTORY,nSEL.LIST.1,R.REDO.H.PASSBOOK.INVENTORY,F.REDO.H.PASSBOOK.INVENTORY,Y.ERR.APP)
            R.REDO.H.PASSBOOK.INVENTORY<REDO.PASS.STATUS> = 'TRANSFERIDO'
            R.REDO.H.PASSBOOK.INVENTORY<REDO.PASS.INPUTTER> = INPUTTER
            R.REDO.H.PASSBOOK.INVENTORY<REDO.PASS.AUTHORISER> = AUTHORISER
            R.REDO.H.PASSBOOK.INVENTORY<REDO.PASS.DATE.UPDATED> = TODAY
            CALL F.WRITE(FN.REDO.H.PASSBOOK.INVENTORY,SEL.LIST.4,R.REDO.H.PASSBOOK.INVENTORY)
            GOSUB CASE.PROCESS
    END CASE
RETURN
*-------------------------------------------------------------------------
CASE.PROCESS:
*-------------------------------------------------------------------------

    OFSFUNCTION='I'
    PROCESS='PROCESS'
    OFS.SOURCE.ID='UPDATE.PASSBOOK'
    OFSVERSION=''
    GTSMODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    OFSSTRING=''
    Y.DEST.CODE = ''
    Y.DEST.AREA =  R.NEW(RE.ORD.TRANSFER.TO)
    Y.DEST.CODE = R.NEW(RE.ORD.BRANCH.TRAN.CODE)
    IF SEL.LIST.4 THEN
        APPLN = 'REDO.H.PASSBOOK.INVENTORY'
        R.REC<REDO.PASS.ITEM.CODE> = Y.INV.MNT.ID
        R.REC<REDO.PASS.DESCRIPTION> = Y.DES
        R.REC<REDO.DEP.BRANCH.DEPT> = Y.DEST.AREA
        IF Y.DEST.CODE THEN
            R.REC<REDO.DEP.CODE> = Y.DEST.CODE
        END
        R.REC<REDO.PASS.SERIAL.NO> = Y.SEQ.FROM
        R.REC<REDO.PASS.STATUS> = 'AVAILABLE'
        R.REC<REDO.PASS.DATE.UPDATED> = TODAY
        R.REC<REDO.PASS.USER> = OPERATOR
        GOSUB GENERATE.OFS
    END
    IF SEL.LIST.1  THEN
        APPLN = 'REDO.H.DEPOSIT.RECEIPTS'
        R.REC<REDO.DEP.STATUS> = 'AVAILABLE'
        R.REC<REDO.DEP.DESCRIPTION> = Y.DES
        R.REC<REDO.DEP.BRANCH.DEPT> = Y.DEST.AREA
        R.REC<REDO.DEP.SERIAL.NO> = Y.SEQ.FROM
        IF Y.DEST.CODE THEN
            R.REC<REDO.DEP.CODE> = Y.DEST.CODE
        END
        R.REC<REDO.DEP.ITEM.CODE> = Y.INV.MNT.ID
        R.REC<REDO.DEP.DATE.UPDATED> = TODAY
        R.REC<REDO.DEP.USER> = OPERATOR
        GOSUB GENERATE.OFS
    END
    IF SEL.LIST.3 THEN
        APPLN = 'REDO.H.ADMIN.CHEQUES'
        R.REC<REDO.ADMIN.STATUS> = 'AVAILABLE'
        R.REC<REDO.ADMIN.SERIAL.NO> = Y.SEQ.FROM
        R.REC<REDO.ADMIN.BRANCH.DEPT> = Y.DEST.AREA
        R.REC<REDO.ADMIN.DESCRIPTION> = Y.DES
        R.REC<REDO.ADMIN.BRANCH.DEPT> = Y.DEST.AREA
        IF Y.DEST.CODE THEN
            R.REC<REDO.ADMIN.CODE>= Y.DEST.CODE
        END
        R.REC<REDO.ADMIN.ITEM.CODE> = Y.INV.MNT.ID
        R.REC<REDO.ADMIN.DATE.UPDATED> = TODAY
        R.REC<REDO.ADMIN.USER> = OPERATOR
        GOSUB GENERATE.OFS
    END

    IF SEL.LIST.2 THEN
        APPLN = 'REDO.H.BANK.DRAFTS'
        R.REC<REDO.BANK.STATUS> = 'AVAILABLE'
        R.REC<REDO.BANK.DESCRIPTION> = Y.DES
        R.REC<REDO.BANK.BRANCH.DEPT> = Y.DEST.AREA
        R.REC<REDO.BANK.SERIAL.NO> = Y.SEQ.FROM
        IF Y.DEST.CODE THEN
            R.REC<REDO.BANK.CODE> = Y.DEST.CODE
        END
        R.REC<REDO.BANK.ITEM.CODE> = Y.INV.MNT.ID
        R.REC<REDO.BANK.DATE.UPDATED> = TODAY
        R.REC<REDO.BANK.USER> = OPERATOR
        GOSUB GENERATE.OFS
    END

RETURN
*-------------------------------------------------------------------------
GENERATE.OFS:
*-------------------------------------------------------------------------
    Y.DEST.AREA =  R.NEW(RE.ORD.TRANSFER.TO)
    Y.FROM.COMAPNY = R.NEW(RE.ORD.TRANSFER.FROM)
    Y.TRANS.QNTY = R.NEW(RE.ORD.TRANSFER.QUANTITY)

*OFS.STRING = APPLN:',/I/PROCESS//0/,//':Y.DEST.AREA:'/////,,BRANCH.DEPT:1:1=':Y.DEST.AREA:',ITEM.CODE:1:1=':Y.INV.MNT.ID:',DESCRIPTION:1:1=':Y.DES:',SERIAL.NO:1:1=':Y.SEQ.FROM:',STATUS:1:1=AVAILABLE,DATE.UPDATED:1:1=':TODAY:',USER:1:1=':OPERATOR
*CALL OFS.POST.MESSAGE(OFS.STRING,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)

    OFSFUNCTION='I'
    PROCESS='PROCESS'
    OFS.SOURCE.ID='UPDATE.PASSBOOK'
    OFSVERSION= APPLN:','
    GTS.MODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    OFSSTRING=''
    CALL OFS.BUILD.RECORD(APPLN,OFSFUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.REC,OFSSTRING)


    CALL OFS.POST.MESSAGE(OFSSTRING,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)


RETURN
*-------------------------------------------------------------------------
STOCK.CNT.UPD:
*-------------------------------------------------------------------------

    IF R.NEW(RE.ORD.BRANCH.CODE) THEN
        Y.FROM.COMAPNY = Y.FROM.COMAPNY:"-":R.NEW(RE.ORD.BRANCH.CODE)
        Y.ITEM.STOCK.RPT.ID = R.NEW(RE.ORD.TRANSFER.FROM):'-':R.NEW(RE.ORD.BRANCH.CODE):".":R.NEW(RE.ORD.ITEM.CODE)
    END ELSE
        Y.ITEM.STOCK.RPT.ID = R.NEW(RE.ORD.TRANSFER.FROM):".":R.NEW(RE.ORD.ITEM.CODE)
    END
    IF R.NEW(RE.ORD.BRANCH.TRAN.CODE) THEN
        Y.DEST.AREA = Y.DEST.AREA:'-':R.NEW(RE.ORD.BRANCH.TRAN.CODE)
        Y.ITEM.STOCK.RPT.ID1 = R.NEW(RE.ORD.TRANSFER.TO):'-':R.NEW(RE.ORD.BRANCH.TRAN.CODE):".":R.NEW(RE.ORD.ITEM.CODE)
    END ELSE
        Y.ITEM.STOCK.RPT.ID1 = R.NEW(RE.ORD.TRANSFER.TO):".":R.NEW(RE.ORD.ITEM.CODE)
    END
    CALL F.READ(FN.REDO.ITEM.STOCK,Y.FROM.COMAPNY,R.REDO.ITEM.STOCK,F.REDO.ITEM.STOCK,Y.ERR.STOCK)

    Y.LIST.ITM = R.REDO.ITEM.STOCK<ITEM.REG.ITEM.CODE>
    LOCATE Y.INV.MNT.ID IN Y.LIST.ITM<1,1> SETTING POS THEN
        R.REDO.ITEM.STOCK<ITEM.REG.BAL,POS> = R.REDO.ITEM.STOCK<ITEM.REG.BAL,POS> - Y.TRANS.QNTY
    END

    CALL F.WRITE(FN.REDO.ITEM.STOCK,Y.FROM.COMAPNY,R.REDO.ITEM.STOCK)
    GOSUB UPD.ITEM.STOCK.RPT

    CALL F.READ(FN.REDO.ITEM.STOCK,Y.DEST.AREA,R.REDO.ITEM.STK,F.REDO.ITEM.STOCK,Y.ERR.STOCK)
    Y.LIST.ITM1 = R.REDO.ITEM.STK<ITEM.REG.ITEM.CODE>
    LOCATE Y.INV.MNT.ID IN Y.LIST.ITM1<1,1> SETTING POS.1 THEN
        R.REDO.ITEM.STK<ITEM.REG.BAL,POS.1> = Y.TRANS.QNTY + R.REDO.ITEM.STK<ITEM.REG.BAL,POS.1>
    END ELSE
        R.REDO.ITEM.STK<ITEM.REG.ITEM.CODE,-1> = R.REDO.ITEM.STOCK<ITEM.REG.ITEM.CODE,POS>
        R.REDO.ITEM.STK<ITEM.REG.DESC,-1> = R.REDO.ITEM.STOCK<ITEM.REG.DESC,POS>
        R.REDO.ITEM.STK<ITEM.REG.BAL,-1> = Y.TRANS.QNTY
    END
    CALL F.WRITE(FN.REDO.ITEM.STOCK,Y.DEST.AREA,R.REDO.ITEM.STK)
    GOSUB UPD.ITEM.STOCK.RPT1
RETURN
*-------------------------------
UPD.ITEM.STOCK.RPT:
*-------------------------------

    CALL F.READ(FN.REDO.ITEM.STOCK.BY.DATE,Y.ITEM.STOCK.RPT.ID,R.REDO.ITEM.STOCK.BY.DATE,F.REDO.ITEM.STOCK.BY.DATE,Y.ERR.DATE)
    Y.DATE.RPT = R.NEW(RE.ORD.DATE)
    IF R.REDO.ITEM.STOCK.BY.DATE THEN
        LOCATE Y.DATE.RPT IN R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.DATE,1> SETTING POS.RPT THEN
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.TRANSFER,POS.RPT>              =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.TRANSFER,POS.RPT> + Y.TRANS.QNTY
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,POS.RPT>             =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,POS.RPT> - Y.TRANS.QNTY
        END ELSE
            Y.DATE.COUNT1 = DCOUNT(R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.DATE>,@VM)
            Y.DATE.COUNT = Y.DATE.COUNT1 + 1

            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.DATE,Y.DATE.COUNT>                =   Y.DATE.RPT
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.ITEM.CODE,Y.DATE.COUNT>           =   R.NEW(RE.ORD.ITEM.CODE)
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.INITIAL.STOCK,Y.DATE.COUNT>       =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1>
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.TRANSFER,Y.DATE.COUNT>            =   Y.TRANS.QNTY
            R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT>           =   R.REDO.ITEM.STOCK.BY.DATE<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1> - Y.TRANS.QNTY
        END
    END
    CALL F.WRITE(FN.REDO.ITEM.STOCK.BY.DATE,Y.ITEM.STOCK.RPT.ID,R.REDO.ITEM.STOCK.BY.DATE)
RETURN
*-------------------------------------------------------------------------
UPD.ITEM.STOCK.RPT1:
*-------------------------------------------------------------------------
    CALL F.READ(FN.REDO.ITEM.STOCK.BY.DATE,Y.ITEM.STOCK.RPT.ID1,R.REDO.ITEM.STOCK.BY.DATE1,F.REDO.ITEM.STOCK.BY.DATE,Y.ERR.DATE)
    Y.DATE.RPT = R.NEW(RE.ORD.DATE)
    IF R.REDO.ITEM.STOCK.BY.DATE1 THEN
        LOCATE Y.DATE.RPT IN R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.DATE,1> SETTING POS.RPT THEN

            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.RECEIVED,POS.RPT>            =   R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.RECEIVED,POS.RPT> + Y.TRANS.QNTY
            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE,POS.RPT>           =   R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE,POS.RPT> + Y.TRANS.QNTY

        END ELSE
            Y.DATE.COUNT1 = DCOUNT(R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.DATE>,@VM)
            Y.DATE.COUNT = Y.DATE.COUNT1 + 1

            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.DATE,Y.DATE.COUNT>                =   Y.DATE.RPT
            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.ITEM.CODE,Y.DATE.COUNT>           =   R.NEW(RE.ORD.ITEM.CODE)
            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.INITIAL.STOCK,Y.DATE.COUNT>       =   R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1>
            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.RECEIVED,Y.DATE.COUNT>            =   Y.TRANS.QNTY
            R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE,Y.DATE.COUNT>           =   R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE,Y.DATE.COUNT1> + Y.TRANS.QNTY
        END
    END ELSE
        R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.DATE>           =   Y.DATE.RPT
        R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.ITEM.CODE>      =   R.NEW(RE.ORD.ITEM.CODE)
        R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.INITIAL.STOCK>  =   R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE>
        R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.RECEIVED>       =   Y.TRANS.QNTY
        R.REDO.ITEM.STOCK.BY.DATE1<ITEM.RPT.AVALIABLE>      =   Y.TRANS.QNTY


    END
    CALL F.WRITE(FN.REDO.ITEM.STOCK.BY.DATE,Y.ITEM.STOCK.RPT.ID1,R.REDO.ITEM.STOCK.BY.DATE1)
RETURN
*-------------------------------------------------------------------------
PROGRAM.END:
*-------------------------------------------------------------------------
END
