* @ValidationCode : MjotMTY0NTAyNjM4MDpDcDEyNTI6MTY4MjU4MTgxNzc2Njp2aWduZXNod2FyaTotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 27 Apr 2023 13:20:17
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : vigneshwari
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOENQ
SUBROUTINE REDO.NOF.PLASTIC.GNB130.REG
*-------------------------------------------------------------------------
*Company Name : APAP Bank
*Developed By : Temenos Application Management
*Program Name : REDO.NOF.PLASTIC.CARD.GNB130.BCK
*Date : 12.11.2010
*-------------------------------------------------------------------------
* Incoming/Outgoing Parameters
*-------------------------------
* In : --N/A--
* Out : Y.FINAL.ARRAY
*-----------------------------------------------------------------------------
* Revision History:
* -----------------
* Date Name Reference Version
* ------- ---- ---------- --------
* 1/11/2010 Riyas Ahamad Basha J ODR-2010-03-0108 Initial Version
*-----------------------------------------------------------------------------
*MODIFICATION HISTORY:
*
*  DATE               WHO                REFERENCE                 DESCRIPTION
* 18-APR-2023     Conversion tool   R22 Auto conversion       VM to @VM, SM to @SM, ++ to +=, -- to -=, I to I.VAR
* 18-APR-2023      Harishvikram C   Manual R22 conversion      CALL routine format modified
*-------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.ACCOUNT
    $INSERT I_F.STOCK.ENTRY
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.REDO.CARD.GENERATION
    $INSERT I_F.REDO.CARD.PRINT.LOST
    $INSERT I_F.REDO.CARD.DAMAGE
    $INSERT I_F.LATAM.CARD.ORDER
    $INSERT I_F.REDO.CARD.REORDER.DEST
    $INSERT I_F.REDO.CARD.DES.HIS
    $INSERT I_F.REDO.H.REPORTS.PARAM
    $USING APAP.REDOCHNLS

    GOSUB INIT
    GOSUB OPENFILES
    GOSUB PROCESS

RETURN
*------------------------------------------------------------------------------------
INIT:
*------------------------------------------------------
    GOSUB FILE.INIT
    GOSUB VAR.INIT
RETURN
*---------------------------------------------------------------------------------------
FILE.INIT:
*---------------
* initialise the files

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''

    FN.REDO.CARD.REQUEST='F.REDO.CARD.REQUEST'
    F.REDO.CARD.REQUEST=''

    FN.REDO.CARD.GENERATION='F.REDO.CARD.GENERATION'
    F.REDO.CARD.GENERATION=''

    FN.STOCK.ENTRY='F.STOCK.ENTRY'
    F.STOCK.ENTRY=''

    FN.REDO.CARD.DAMAGE='F.REDO.CARD.DAMAGE'
    F.REDO.CARD.DAMAGE=''

    FN.REDO.CARD.DAMAGE.HIS='F.REDO.CARD.DAMAGE$HIS'
    F.REDO.CARD.DAMAGE.HIS =''

    FN.REDO.CARD.REQUEST.HIS='F.REDO.CARD.REQUEST$HIS'
    F.REDO.CARD.REQUEST.HIS=''
    CALL OPF(FN.REDO.CARD.REQUEST.HIS,F.REDO.CARD.REQUEST.HIS)

    FN.LATAM.CARD.ORDER='F.LATAM.CARD.ORDER'
    F.LATAM.CARD.ORDER=''

    FN.REDO.CARD.REORDER.DEST='F.REDO.CARD.REORDER.DEST'
    F.REDO.CARD.REORDER.DEST=''

    FN.CARD.ISSUE='F.CARD.ISSUE'
    F.CARD.ISSUE=''

    FN.LATAM.CARD.ORDER.HIS='F.LATAM.CARD.ORDER$HIS'
    F.LATAM.CARD.ORDER.HIS=''

* FN.REDO.CARD.REORDER.DEST.HIS='F.REDO.CARD.REORDER.DEST$HIS'
* F.REDO.CARD.REORDER.DEST.HIS=''


    FN.REDO.CARD.DES.HIS='F.REDO.CARD.DES.HIS'
    F.REDO.CARD.DES.HIS =''

    FN.REDO.CARD.PRINT.LOST='F.REDO.CARD.PRINT.LOST'
    F.REDO.CARD.PRINT.LOST =''
    CALL OPF(FN.REDO.CARD.PRINT.LOST,F.REDO.CARD.PRINT.LOST)

    FN.REDO.CARD.PRINT.LOST.HIS='F.REDO.CARD.PRINT.LOST$HIS'
    F.REDO.CARD.PRINT.LOST.HIS =''
    CALL OPF(FN.REDO.CARD.PRINT.LOST,F.REDO.CARD.PRINT.LOST)

    FN.REDO.H.REPORTS.PARAM='F.REDO.H.REPORTS.PARAM'
    F.REDO.H.REPORTS.PARAM =''
    CALL OPF(FN.REDO.H.REPORTS.PARAM,F.REDO.H.REPORTS.PARAM)

    CALL F.READ(FN.REDO.H.REPORTS.PARAM,'TDN5',R.REDO.H.REPORTS.PARAM,F.REDO.H.REPORTS.PARAM,ERR)
    Y.OUT.DIR =R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.DIR>
    Y.OUT.FILE=R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.FILE.NAME>
    OPEN Y.OUT.DIR TO F.OUT.DIR ELSE

        CALL OCOMO("CANNOT OPEN OUT DIR PATH")
        REC.CON ="TDN5:CANNOT OPEN OUT DIR":Y.OUT.DIR
        DESC ="TDN5:CANNOT OPEN OUT DIR PATH"
        GOSUB LOG.ERROR.C22
        GOSUB PGM.END
    END
    IF Y.OUT.DIR AND Y.OUT.FILE THEN
        SHELL.CMD ='SH -c '
        EXE.RM="rm ":Y.OUT.DIR:"/":Y.OUT.FILE:'*'
        DAEMON.CMD = SHELL.CMD:EXE.RM
        EXECUTE DAEMON.CMD RETURNING RETURN.VALUE CAPTURING CAPTURE.RM.VALUE
    END
    Y.OUT.FILE=Y.OUT.FILE:'.':TODAY:'.':TIME():'.csv'
    OPENSEQ Y.OUT.DIR,Y.OUT.FILE TO Y.FILE.PATH ELSE
        CREATE Y.FILE.PATH ELSE
            CALL OCOMO("CANNOT OPEN FILE")
            REC.CON ="TDN5:CANNOT OPEN FILE PATH":Y.FILE.PATH
            DESC = Y.FILE.PATH
            GOSUB LOG.ERROR.C22
            GOSUB PGM.END
        END
    END
    Y.FINAL.ARRAY="TIPO DE PLASTICO,NUMERO DE PLASTICO,NO. SOLICITUD,ESTATUS SOLICITUD,FECHA VNCTO PLASTICO,SUCURSAL,FECHA SOLICITUD,USUARIO SOLICITUD,FECHA CREACION,USUARIO CREACION,FECHA PERDIDO EMBOS,USUARIO PERD EMBOS"
    Y.FINAL.ARRAY:=",FECHA ENVIO SUC,USUARIO ENVIO SUC,FECHA RECEP SUC,USUARIO RECEP SUC,FCH NO REC/PER/DAN,USUARIO EN SUC,REF NO RECEP EN SUC,FECHA RELACION CTA,CTA USUARIO,CUENTA RELACIONADA"
    Y.FINAL.ARRAY:=",TARJETAHABIENTE,ESTADO CTA RELACION,FECHA DE ACTIVACION,USUARIO ACTIVACION,FECHA DESTRUCCION,FECHA PERD. EN TRAN.,USUAR. PERD.TRANSITO"
    Y.FINAL.ARRAY:=",FECHA CANCELACION,USUARIO CANCELACION,MOTIVO CANCELACION,ESTATUS ACTUAL,TIEMPO PLAST EN SUC,USUARIO ULT. ESTATUS"
    GOSUB WR.REC.FILE
RETURN
*--------------------------------------------------------------------------------------------
VAR.INIT:
*------------

* intialise the variables

    Y.CARD.TYPE='' ; Y.CARD.NUMBER='' ; Y.REQ.NUMBER='' ; Y.REQ.STATUS='' ; Y.DUE.DATE='' ; Y.BRANCH='' ; Y.REQ.DATE=''
    Y.REQ.USER='' ; Y.CREATE.DATE='' ; Y.CREATE.USER='' ; Y.DATE.OF.LOST='' ; Y.USER.LOST='' ; Y.BR.REL.DATE='' ; Y.BR.REL.USER=''
    Y.BR.RECV.DATE='' ; Y.BR.RECV.USER='' ; Y.BR.COMMENT='' ; Y.DATE.NOT.RECV='' ; Y.DATE.REL.ACCT='' ; Y.USER.TR.LOST=''
    Y.REL.USER='' ; Y.REL.ACCT='' ; Y.HOLDER.NAME='' ; Y.REL.ACCT.STATUS='' ; Y.ACT.DATE='' ; Y.ACT.USER='' ; Y.DEST.DATE=''
    Y.DATE.TR.LOST='' ; Y.CAN.DATE='' ; Y.CAN.USER='' ; Y.CAN.REASON='' ; Y.CURR.STATUS='' ; Y.TIME.IN.BR='' ; Y.FIN.USER.STATUS='' ; Y.TIME.IN.BR.CR=''



    Y.CUSTOMER.POS = ''
    GOSUB LOCAL.REFERENCE.FIELDS
RETURN

*-------------------------------------------------
LOCAL.REFERENCE.FIELDS:
*---------------------------------------------------
    LOC.REF.APPL="ACCOUNT"
    LOC.REF.FIELDS="L.AC.STATUS1"
    LOC.REF.POS=" "
    CALL GET.LOC.REF(LOC.REF.APPL,LOC.REF.FIELDS,LOC.REF.POS)
    Y.PL.RT.POS=LOC.REF.POS

RETURN
*------------------------------------------------------------------------------------------------
OPENFILES:
*---------------------------------------------------------------

* open all the files

    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST)
    CALL OPF(FN.REDO.CARD.GENERATION,F.REDO.CARD.GENERATION)
    CALL OPF(FN.STOCK.ENTRY,F.STOCK.ENTRY)
    CALL OPF(FN.REDO.CARD.DAMAGE,F.REDO.CARD.DAMAGE)
    CALL OPF(FN.REDO.CARD.DAMAGE.HIS,F.REDO.CARD.DAMAGE.HIS)
    CALL OPF(FN.LATAM.CARD.ORDER,F.LATAM.CARD.ORDER)
    CALL OPF(FN.REDO.CARD.REORDER.DEST,F.REDO.CARD.REORDER.DEST)
    CALL OPF(FN.CARD.ISSUE,F.CARD.ISSUE)
    CALL OPF(FN.LATAM.CARD.ORDER.HIS,F.LATAM.CARD.ORDER.HIS)
    CALL OPF(FN.REDO.CARD.DES.HIS,F.REDO.CARD.DES.HIS)
* CALL OPF(FN.REDO.CARD.REORDER.DEST.HIS,F.REDO.CARD.REORDER.DEST.HIS)

RETURN
*-----------------------------------------------------------------
PROCESS:
*-----------------------------------------------------------------
    Y.CARD.NO=''

    Y.SEL.CR=''
    SEL.CMD="SELECT ":FN.REDO.CARD.REQUEST: " WITH STATUS GE 4"

* select all the id's if staus equal to delivered to branch
    Y.CARD.NUMBER=''
    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,RET.CODE)
    LOOP
        REMOVE Y.REQ.ID FROM SEL.LIST SETTING POS
    WHILE Y.REQ.ID:POS
* Read card request
        R.REDO.CARD.REQUEST=''
        Y.REQ.ERR=''
        R.LATAM.CARD.ORDER=''
        Y.LTM.ERR=''
        R.REDO.CARD.GENERATION=''
        Y.GEN.ERR=''
        R.STOCK.ENTRY=''
        Y.STK.ERR=''
        Y.RE.LST=''
        Y.USER.TR.LOST=''
        Y.DATE.TR.LOST=''
        CALL F.READ(FN.REDO.CARD.REQUEST,Y.REQ.ID,R.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST,Y.REQ.ERR)
        Y.CARD.TYPE=R.REDO.CARD.REQUEST<REDO.CARD.REQ.CARD.TYPE>
        Y.REQ.NUMBER=Y.REQ.ID
        Y.REQ.STATUS=R.REDO.CARD.REQUEST<REDO.CARD.REQ.STATUS>
        Y.BRANCH =R.REDO.CARD.REQUEST<REDO.CARD.REQ.AGENCY>
        Y.REQ.DATE =R.REDO.CARD.REQUEST<REDO.CARD.REQ.DATE.TIME>
        Y.REQ.DATE =TODAY[1,2]:Y.REQ.DATE[1,6]
        Y.REDO.REQ =R.REDO.CARD.REQUEST<REDO.CARD.REQ.AUTO.REQUEST.FLAG>
        R.REDO.CARD.REQUEST.HIS=R.REDO.CARD.REQUEST
        Y.BR.REL.DATE=''
        Y.BR.REL.USER=''
        Y.BR.RECV.DATE=''
        Y.BR.RECV.USER=''
        Y.DATE.NOT.RECV=''
        Y.BR.COMMENT=''
        Y.USER.NOT.RECV=''
        Y.TIME.IN.BR=''
        Y.REQ.USER=''
        GOSUB GET.BR.REC.DET
        Y.HIST.CUR.NO=R.REDO.CARD.REQUEST<REDO.CARD.REQ.CURR.NO>

        LOOP
        WHILE Y.HIST.CUR.NO GE 1
            Y.REQ.HIS.ID=Y.REQ.ID:';':Y.HIST.CUR.NO
            CALL F.READ(FN.REDO.CARD.REQUEST.HIS,Y.REQ.HIS.ID,R.REDO.CARD.REQUEST.HIS,F.REDO.CARD.REQUEST.HIS,Y.REQ.ERR)
            GOSUB GET.BR.REC.DET
            Y.HIST.CUR.NO -= 1
        REPEAT

        Y.REQ.CODE=R.REDO.CARD.REQUEST<REDO.CARD.REQ.CO.CODE>
        GOSUB READ.CARD.GENERATION
    REPEAT
RETURN

*---------------------
GET.BR.REC.DET:
*---------------------

    IF R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.STATUS> EQ '5' THEN
        Y.BR.REL.DATE=R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.DATE.TIME>
        Y.BR.REL.DATE=TODAY[1,2]:Y.BR.REL.DATE[1,6]
        Y.BR.REL.USER=R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.INPUTTER>
        Y.BR.REL.USER=FIELD(Y.BR.REL.USER,'_',2)
    END
    IF R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.STATUS> EQ '6' THEN
        Y.BR.RECV.DATE=R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.BR.RECEIVE.DATE>
        Y.BR.RECV.USER=FIELD(R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.INPUTTER>,'_',2)
        Y.TIME.IN.BR.1 =R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.BR.RECEIVE.DATE>
        IF Y.TIME.IN.BR.1 THEN
            Y.REGION = ''
            CALL CDD(Y.REGION,Y.TIME.IN.BR.1,TODAY,Y.DIFF)
            Y.TIME.IN.BR = Y.DIFF
        END
    END
    IF R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.STATUS> EQ '7' THEN
        Y.DATE.TR.LOST=R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.DATE.TIME>
        Y.DATE.TR.LOST=TODAY[1,2]:Y.DATE.TR.LOST[1,6]
        Y.USER.TR.LOST=R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.INPUTTER>
        Y.USER.TR.LOST=FIELD(Y.USER.TR.LOST,'_',2)
        Y.RE.LST='1'
    END
    IF R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.STATUS> EQ '1' THEN
        IF Y.REDO.REQ EQ 'YES' THEN
            Y.REQ.USER = '_AUTOM'
            Y.REQ.USER=FIELD(Y.REQ.USER,'_',2)
        END ELSE
            Y.REQ.USER=R.REDO.CARD.REQUEST.HIS<REDO.CARD.REQ.AUTHORISER>
            Y.REQ.USER=FIELD(Y.REQ.USER,'_',2)
        END
    END
RETURN

*--------------------------------------------------
READ.CARD.GENERATION:
*--------------------------------------------------------
    Y.DUE.DATE=''
    CALL F.READ(FN.REDO.CARD.GENERATION,Y.REQ.ID,R.REDO.CARD.GENERATION,F.REDO.CARD.GENERATION,Y.GEN.ERR)

    Y.CARD.NUMBER=R.REDO.CARD.GENERATION<REDO.CARD.GEN.CARD.NUMBERS>

    Y.NO.CARD1 = DCOUNT(Y.CARD.TYPE,@VM)
    FOR I.VAR = 1 TO Y.NO.CARD1
        Y.CARD1 = FIELD(Y.CARD.TYPE,@VM,I.VAR,1)
        Y.DUE.DATE.GEN=R.REDO.CARD.GENERATION<REDO.CARD.GEN.EXPIRY,I.VAR>
        Y.CARD.NUMBER=R.REDO.CARD.GENERATION<REDO.CARD.GEN.CARD.NUMBERS,I.VAR>
        LOOP
            REMOVE Y.CURR.CARD.NO FROM Y.CARD.NUMBER SETTING Y.CARD.POS
        WHILE Y.CURR.CARD.NO:Y.CARD.POS
            Y.CREATE.USER=R.REDO.CARD.GENERATION<REDO.CARD.GEN.AUTHORISER>
            Y.CREATE.USER=FIELD(Y.CREATE.USER,'_',2)
            GOSUB NEXTLATAMPROCESS
            GOSUB READ.CARD.DAMAGE
            GOSUB READ.CARD.PRINT.LOST
            GOSUB SELECT.CARD.ISSUE
* GOSUB READ.CARD.REORDER
            GOSUB READ.CARD.DEST
            GOSUB FINAL.ARRAY
        REPEAT

    NEXT I.VAR
RETURN
*-------------------
READ.CARD.PRINT.LOST:
*-------------------

    Y.DATE.OF.LOST=''
    Y.USER.LOST =''
    CALL F.READ(FN.REDO.CARD.PRINT.LOST,Y.REQ.ID,R.REDO.CARD.PRINT.LOST,F.REDO.CARD.PRINT.LOST,Y.DMG.ERR)
    Y.PR.LOST.CARD.LIST=R.REDO.CARD.PRINT.LOST<REDO.PRN.LST.OLD.CRD.LOST>
    Y.CARD.TYPE.LIST =R.REDO.CARD.PRINT.LOST<REDO.PRN.LST.OLD.CRD.TYPE>

    Y.PR.LOST.CARD.CNT=1
    Y.PR.LOST.CARD.TOT=DCOUNT(Y.CARD.TYPE.LIST,@VM)
    Y.PL.CON.FL=''
    LOOP
    WHILE Y.PR.LOST.CARD.CNT LE Y.PR.LOST.CARD.TOT
        Y.IN.LOOP.PLC=1
        Y.IN.LOOP.PLC.TOT=DCOUNT(Y.PR.LOST.CARD.LIST<1,Y.PR.LOST.CARD.CNT>,@SM)
        LOOP WHILE Y.IN.LOOP.PLC LE Y.IN.LOOP.PLC.TOT
            IF Y.CURR.CARD.NO EQ Y.PR.LOST.CARD.LIST<1,Y.PR.LOST.CARD.CNT,Y.IN.LOOP.PLC> AND Y.CARD1 EQ Y.CARD.TYPE.LIST<1,Y.PR.LOST.CARD.CNT> THEN
                Y.DATE.OF.LOST=R.REDO.CARD.PRINT.LOST<REDO.PRN.LST.DATE.TIME>
                Y.USER.LOST =R.REDO.CARD.PRINT.LOST<REDO.PRN.LST.AUTHORISER>
                Y.USER.LOST =FIELD(Y.USER.LOST,'_',2)
                Y.TIME.IN.BR.CR=''
                Y.PL.CON.FL='1'
            END
            Y.IN.LOOP.PLC += 1
        REPEAT
        Y.PR.LOST.CARD.CNT += 1
    REPEAT

    IF NOT(Y.PL.CON.FL) THEN
        RETURN
    END


    Y.PR.LOST.ID =Y.REQ.ID
    Y.PR.CARD.LOST.CUR.NO=R.REDO.CARD.PRINT.LOST<REDO.PRN.LST.CURR.NO>-1
    LOOP
    WHILE Y.PR.CARD.LOST.CUR.NO GE 1
        Y.PL.CON.FL=''
        Y.PR.LOST.ID=Y.REQ.ID:';':Y.PR.CARD.LOST.CUR.NO

        CALL F.READ(FN.REDO.CARD.PRINT.LOST.HIS,Y.PR.LOST.ID,R.REDO.CARD.PRINT.LOST.HIS,F.REDO.CARD.PRINT.LOST.HIS,ERR)

        Y.PR.LOST.CARD.LIST.HIS =R.REDO.CARD.PRINT.LOST.HIS<REDO.PRN.LST.OLD.CRD.LOST>
        Y.CARD.TYPE.LIST.HIS =R.REDO.CARD.PRINT.LOST.HIS<REDO.PRN.LST.OLD.CRD.TYPE>

        Y.PR.LOST.CARD.HIS.CNT=1
        Y.PR.LOST.CARD.HIS.TOT=DCOUNT(Y.CARD.TYPE.LIST.HIS,@VM)

        LOOP
        WHILE Y.PR.LOST.CARD.HIS.CNT LE Y.PR.LOST.CARD.HIS.TOT
            Y.PRLC.HIS.CNT=1
            Y.PRLC.HIS.TOT=DCOUNT(Y.PR.LOST.CARD.LIST.HIS<1,Y.PR.LOST.CARD.HIS.CNT>,@SM)
            LOOP
            WHILE Y.PRLC.HIS.CNT LE Y.PRLC.HIS.TOT
                IF Y.CURR.CARD.NO EQ Y.PR.LOST.CARD.LIST.HIS<1,Y.PR.LOST.CARD.HIS.CNT,Y.PRLC.HIS.CNT> AND Y.CARD1 EQ Y.CARD.TYPE.LIST.HIS<1,Y.PR.LOST.CARD.HIS.CNT> THEN
                    Y.DATE.OF.LOST =R.REDO.CARD.PRINT.LOST.HIS<REDO.PRN.LST.DATE.TIME>
                    Y.USER.LOST =R.REDO.CARD.PRINT.LOST.HIS<REDO.PRN.LST.AUTHORISER>
                    Y.USER.LOST =FIELD(Y.USER.LOST,'_',2)
                    Y.TIME.IN.BR.CR=''
                    Y.PL.CON.FL='1'
                END
                Y.PRLC.HIS.CNT += 1
            REPEAT
            Y.PR.LOST.CARD.HIS.CNT += 1
        REPEAT
        IF NOT(Y.PL.CON.FL) THEN
            RETURN
        END
        Y.PR.CARD.LOST.CUR.NO -= 1
    REPEAT
RETURN

*-------------------------------------------------------------------------------------
READ.CARD.DAMAGE:
*-----------------------------------------------------------------------------------
    IF Y.RE.LST THEN
        RETURN
    END
    CALL F.READ(FN.REDO.CARD.DAMAGE,Y.REQ.ID,R.REDO.CARD.DAMAGE,F.REDO.CARD.DAMAGE,Y.DMG.ERR)
    Y.DATE.NOT.RECV=''
    Y.BR.COMMENT=''
    Y.USER.NOT.RECV=''
    Y.DAM.CARD.TYPE =R.REDO.CARD.DAMAGE<REDO.CARD.DAM.CARD.TYPE>
    Y.DAM.CARD.LIST =R.REDO.CARD.DAMAGE<REDO.CARD.DAM.CARD.NUMBER.OLD>
    GOSUB CHECK.DAMAGE.LOST
    Y.CURR.NO=R.REDO.CARD.DAMAGE<REDO.CARD.DAM.CURR.NO>
    Y.CURR.NO-=1
    LOOP
    WHILE Y.CURR.NO GE 1
        Y.RCD.HIS.ID=Y.REQ.ID:";":Y.CURR.NO
        CALL F.READ(FN.REDO.CARD.DAMAGE.HIS,Y.RCD.HIS.ID,R.REDO.CARD.DAMAGE,F.REDO.CARD.DAMAGE.HIS,ERR)
        Y.DAM.CARD.TYPE =R.REDO.CARD.DAMAGE<REDO.CARD.DAM.CARD.TYPE>
        Y.DAM.CARD.LIST =R.REDO.CARD.DAMAGE<REDO.CARD.DAM.CARD.NUMBER.OLD>
        GOSUB CHECK.DAMAGE.LOST
        Y.CURR.NO -= 1
    REPEAT

RETURN
*----------------
CHECK.DAMAGE.LOST:
*----------------
    LOCATE Y.CARD1 IN Y.DAM.CARD.TYPE<1,1> SETTING Y.DAM.CARD.TY.POS THEN
        LOCATE Y.CURR.CARD.NO IN Y.DAM.CARD.LIST<1,Y.DAM.CARD.TY.POS,1> SETTING Y.DAM.CARD.TY.POS1 THEN
            GOSUB CHECK.DL.ASSIGN
        END
    END

RETURN
*---------------
CHECK.DL.ASSIGN:
*---------------
    Y.DATE.NOT.RECV=R.REDO.CARD.DAMAGE<REDO.CARD.DAM.DATE.TIME>
    Y.DATE.NOT.RECV=TODAY[1,2]:Y.DATE.NOT.RECV[1,6]
    Y.BR.COMMENT =R.REDO.CARD.DAMAGE<REDO.CARD.DAM.REMARKS.OLD><1,Y.DAM.CARD.TY.POS,Y.DAM.CARD.TY.POS1>
    Y.USER.NOT.RECV=R.REDO.CARD.DAMAGE<REDO.CARD.DAM.AUTHORISER>
    Y.USER.NOT.RECV=FIELD(Y.USER.NOT.RECV,'_',2)
    Y.TIME.IN.BR.CR=''
RETURN

NEXTLATAMPROCESS:
    R.ACCOUNT=''
    Y.ACC.ERR=''
    Y.ACT.USER=''
    Y.DATE.REL.ACCT=''
    Y.REL.ACCT=''
    Y.HOLDER.NAME=''
    Y.ACT.DATE=''
    Y.CAN.DATE=''
    Y.CAN.USER=''
    Y.CAN.REASON=''
    Y.CURR.STATUS=''
    ISS.STAGE =''
    Y.REL.ACCT.STATUS=''
    Y.TIME.IN.BR.CR=''
    Y.REL.USER=''
    Y.FIN.USER.STATUS=''
    Y.LTM.ID = Y.CARD1:".":Y.CURR.CARD.NO
    CALL F.READ(FN.LATAM.CARD.ORDER,Y.LTM.ID,R.LATAM.CARD.ORDER,F.LATAM.CARD.ORDER,Y.LTM.ERR)

    IF NOT(R.LATAM.CARD.ORDER) THEN
        Y.TIME.IN.BR.CR=Y.TIME.IN.BR
    END

    Y.DUE.DATE =R.LATAM.CARD.ORDER<CARD.IS.EXPIRY.DATE>
    IF Y.DUE.DATE LT Y.DUE.DATE.GEN THEN
        Y.DUE.DATE=''
        Y.TIME.IN.BR.CR=Y.TIME.IN.BR
        RETURN
    END
    Y.DATE.REL.ACCT=R.LATAM.CARD.ORDER<CARD.IS.ISSUE.DATE>

    Y.REL.ACCT=R.LATAM.CARD.ORDER<CARD.IS.ACCOUNT>

    Y.HOLDER.NAME=R.LATAM.CARD.ORDER<CARD.IS.NAME.ON.PLASTIC>
    Y.ACT.DATE=R.LATAM.CARD.ORDER<CARD.IS.ACTIVE.DATE>

    Y.FIN.USER.DET=R.LATAM.CARD.ORDER<CARD.IS.INPUTTER>
    Y.FIN.USER.STATUS=FIELD(Y.FIN.USER.DET,'_',2)

    Y.CURR.STATUS=R.LATAM.CARD.ORDER<CARD.IS.CARD.STATUS>

    CALL F.READ(FN.ACCOUNT,Y.REL.ACCT,R.ACCOUNT,F.ACCOUNT,Y.ACC.ERR)
    Y.REL.ACCT.STATUS=R.ACCOUNT<AC.LOCAL.REF,Y.PL.RT.POS>
    ISS.STAGE=R.LATAM.CARD.ORDER<CARD.IS.ISSUE.STAGE>
    R.LATAM.CARD.ORDER.HIS=R.LATAM.CARD.ORDER
    GOSUB READ.ASS.LCO.DATA
    GOSUB SEL.LATAM.HIS.FILE
RETURN
*------------------------------------------------------------
SELECT.CARD.ISSUE:
*------------------------------------------------------------
    Y.CREATE.DATE=20:R.REDO.CARD.GENERATION<REDO.CARD.GEN.DATE.TIME>[1,6]
RETURN
*-------------
READ.CARD.DEST:
*-------------
    Y.DEST.DATE=''
    Y.RCDH.ID=Y.REQ.ID:"-":Y.CARD1
    CALL F.READ(FN.REDO.CARD.DES.HIS,Y.RCDH.ID,R.REDO.CARD.DES.HIS,F.REDO.CARD.DES.HIS,ERR)
    Y.CARD.DES.NO=R.REDO.CARD.DES.HIS<REDO.DES.HIS.CARD.NUMBER>
    LOCATE Y.CURR.CARD.NO IN Y.CARD.DES.NO<1,1> SETTING Y.RCDH.POS THEN
        Y.DEST.DATE=R.REDO.CARD.DES.HIS<REDO.DES.HIS.DEST.DATE>
        Y.TIME.IN.BR.CR=''
    END
RETURN
*-----------------------------------------------------------
SEL.LATAM.HIS.FILE:
*-----------------------------------------------------------
*select all the card order history files
    Y.LAT.CURR.NO=R.LATAM.CARD.ORDER<CARD.IS.CURR.NO>
    Y.LAT.CARD.STATUS=R.LATAM.CARD.ORDER<CARD.IS.CARD.STATUS>
    Y.LAT.CURR.NO -= 1
    R.LATAM.CARD.ORDER.HIS.LAT=R.LATAM.CARD.ORDER
    GOSUB READ.LATAM.HIS
RETURN
*-----------------------------------------------------------------
READ.LATAM.HIS:
*-----------------------------------------------------------------
    Y.SET.USER=''
    IF Y.LAT.CURR.NO GE 1 THEN
        Y.CTR.CURR=Y.LAT.CURR.NO
        LOOP
        WHILE Y.CTR.CURR GE 1
            Y.LTMHIS.ID=Y.LTM.ID:';':Y.CTR.CURR
            CALL F.READ(FN.LATAM.CARD.ORDER.HIS,Y.LTMHIS.ID,R.LATAM.CARD.ORDER.HIS,F.LATAM.CARD.ORDER.HIS,Y.LTM.HIS.ERR)
            Y.OLD.CARD.STATUS=R.LATAM.CARD.ORDER.HIS<CARD.IS.CARD.STATUS>
            IF Y.OLD.CARD.STATUS NE Y.LAT.CARD.STATUS AND NOT(Y.SET.USER) THEN
                Y.FIN.USER.STATUS=FIELD(R.LATAM.CARD.ORDER.HIS.LAT<CARD.IS.INPUTTER>,'_',2)
                Y.SET.USER='1'
            END
            GOSUB READ.ASS.LCO.DATA
            R.LATAM.CARD.ORDER.HIS.LAT=R.LATAM.CARD.ORDER.HIS
            Y.CTR.CURR -= 1
        REPEAT
    END
RETURN
*------------------
READ.ASS.LCO.DATA:
*------------------

    Y.OLD.CARD.STATUS=R.LATAM.CARD.ORDER.HIS<CARD.IS.CARD.STATUS>

    IF Y.OLD.CARD.STATUS EQ '94' THEN
        Y.ACT.USER=FIELD(R.LATAM.CARD.ORDER.HIS<CARD.IS.INPUTTER>,'_',2)
    END
    IF Y.OLD.CARD.STATUS EQ '90' THEN
        Y.REL.USER=R.LATAM.CARD.ORDER.HIS<CARD.IS.INPUTTER>
        Y.REL.USER=FIELD(Y.REL.USER,'_',2)
    END
    IF Y.OLD.CARD.STATUS EQ '93' THEN
        Y.CAN.DATE=R.LATAM.CARD.ORDER.HIS<CARD.IS.CANCELLATION.DATE>
        Y.CAN.USER=FIELD(R.LATAM.CARD.ORDER.HIS<CARD.IS.INPUTTER>,'_',2)
        Y.CAN.REASON=R.LATAM.CARD.ORDER.HIS<CARD.IS.CAN.REASON>
    END
RETURN
*--------------------------------------------------------------
FINAL.ARRAY:
*--------------------------------------------------------------
    IF Y.DUE.DATE THEN
        IF Y.DUE.DATE.GEN NE Y.DUE.DATE THEN
            RETURN
        END
    END
    IF NOT(Y.USER.LOST) THEN
        Y.FINAL.ARRAY = Y.CARD1:",":Y.CURR.CARD.NO:",":Y.REQ.NUMBER:",":Y.REQ.STATUS:",":Y.DUE.DATE.GEN:",":Y.BRANCH:",":Y.REQ.DATE:",":Y.REQ.USER:",":Y.CREATE.DATE:",":Y.CREATE.USER:",":Y.DATE.OF.LOST:",":Y.USER.LOST:",":Y.BR.REL.DATE:",":Y.BR.REL.USER:",":Y.BR.RECV.DATE:",":Y.BR.RECV.USER:",":Y.DATE.NOT.RECV:",":Y.USER.NOT.RECV:",":Y.BR.COMMENT:",":Y.DATE.REL.ACCT:",":Y.REL.USER:",":Y.REL.ACCT:",":Y.HOLDER.NAME:",":Y.REL.ACCT.STATUS:",":Y.ACT.DATE:",":Y.ACT.USER:",":Y.DEST.DATE:",":Y.DATE.TR.LOST:",":Y.USER.TR.LOST:",":Y.CAN.DATE:",":Y.CAN.USER:",":Y.CAN.REASON:",":Y.CURR.STATUS:",":Y.TIME.IN.BR.CR:",":Y.FIN.USER.STATUS
    END
    ELSE
        Y.FINAL.ARRAY = Y.CARD1:",":Y.CURR.CARD.NO:",":Y.REQ.NUMBER:",":Y.REQ.STATUS:",":Y.DUE.DATE.GEN:",":Y.BRANCH:",":Y.REQ.DATE:",":Y.REQ.USER:",":Y.CREATE.DATE:",":Y.CREATE.USER:",":Y.DATE.OF.LOST:",":Y.USER.LOST:",":",":",":",":",":",":",":",":Y.DATE.REL.ACCT:",":Y.REL.USER:",":Y.REL.ACCT:",":Y.HOLDER.NAME:",":Y.REL.ACCT.STATUS:",":Y.ACT.DATE:",":Y.ACT.USER:",":",":",":",":Y.CAN.DATE:",":Y.CAN.USER:",":Y.CAN.REASON:",":Y.CURR.STATUS:",":Y.TIME.IN.BR.CR:",":Y.FIN.USER.STATUS
    END
    GOSUB WR.REC.FILE

RETURN
*---------------
WR.REC.FILE:
*--------------

    WRITESEQ Y.FINAL.ARRAY APPEND TO Y.FILE.PATH ELSE
        CALL OCOMO("TDN5:CANNOT WRITE TO FILE":Y.OUT.FILE)
        REC.CON ="TDN5:CANNOT WRITE FILE PATH":Y.FILE.PATH
        DESC = Y.OUT.FILE
        GOSUB LOG.ERROR.C22
        GOSUB PGM.END
    END

RETURN
*-----------------------------------------------------------------------------
LOG.ERROR.C22:
*-----------------------------------------------------------------------------
    MON.TP = '04'
    INT.CODE= 'REP001'
    INT.TYPE= 'BATCH'
    BAT.NO = ''
    BAT.TOT = ''
    INFO.OR = ''
    INFO.DE = ''
    ID.PROC = ''
    EX.USER = ''
    EX.PC = ''
    CALL APAP.REDOCHNLS.redoInterfaceRecAct(INT.CODE,INT.TYPE,BAT.NO,BAT.TOT,INFO.OR,INFO.DE,ID.PROC,MON.TP,DESC,REC.CON,EX.USER,EX.PC) ;*Manual R22 conversion
RETURN
*---------------------------------------------------------------
PGM.END:
*--------
END
