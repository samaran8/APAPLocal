* @ValidationCode : MjotMjEzMTQ4NzY3MDpDcDEyNTI6MTY4MzYzMDc3NjY3Nzphaml0aDotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 09 May 2023 16:42:56
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ajith
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.ATM
*---------------------------------------------------------------------------------------
*MODIFICATION HISTORY:
*DATE           WHO                 REFERENCE               DESCRIPTION
*24-APR-2023    CONVERSION TOOL     R22 AUTO CONVERSION     NO CHANGE
*24-APR-2023    VICTORIA S          R22 MANUAL CONVERSION   NO CHANGE
*----------------------------------------------------------------------------------------
SUBROUTINE V.FT.UPD.ENQ.ATM.KEY.ID

**************************************************************************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: BALAGURUNATHAN B
* PROGRAM NAME: V.FT.UPD.ENQ.ATM.KEY.ID
* ODR NO      : ODR-2010-08-0469
*-----------------------------------------------------------------------------------------------------
*DESCRIPTION: This routine is to update the details of enquiry transaction.
*When a reversal message come the value in transaction will be reversed.
*******************************************************************************************************
*linked with :
*In parameter:
*Out parameter:
*****************************************************************************************************

*    $INCLUDE T24.BP I_COMMON        ;*/ TUS START
*    $INCLUDE T24.BP I_EQUATE
*    $INCLUDE ATM.BP I_F.ATM.REVERSAL
*    $INCLUDE ATM.BP I_AT.ISO.COMMON
*    $INCLUDE ATM.BP I_ATM.BAL.ENQ.COMMON
*    $INCLUDE T24.BP I_F.ACCOUNT
*    $INCLUDE T24.BP I_GTS.COMMON

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ATM.REVERSAL
    $INSERT I_AT.ISO.COMMON
    $INSERT I_ATM.BAL.ENQ.COMMON
    $INSERT I_F.ACCOUNT
    $INSERT I_GTS.COMMON        ;*/ TUS END
*

    GOSUB INITIALISE
    GOSUB UPDATE.REC
RETURN
*
INITIALISE:
*----------*
*
    FN.ATM.REVERSAL = 'F.ATM.REVERSAL'
    CALL OPF(FN.ATM.REVERSAL,F.ATM.REVERSAL)

*
    REC.AT.REV =''

    FIELD.NAM='L.AC.AV.BAL'
    L.APP='ACCOUNT'
    CALL MULTI.GET.LOC.REF(L.APP,FIELD.NAM,LRF.POSN)

    LRF.POS2=LRF.POSN<1,1>

    ACCT.NUM=Y.ACCT.NO

    IF R.ACCOUNT NE '' AND R.ACCOUNT NE '0' THEN
        ALT.ACCT=R.ACCOUNT<AC.ALT.ACCT.ID,1>
        AVL.BAL=  R.ACCOUNT<AC.LOCAL.REF><1,LRF.POS2>

        LCK.AMT=AVL.BAL
        LCK.AMT.DEC=FIELDS(LCK.AMT,".",2)
        LCK.AMT.VAL=FIELDS(LCK.AMT,".",1)
        LCK.AMT.DEC=FMT(LCK.AMT.DEC,"L%2")
        LCK.AMT=LCK.AMT.VAL:".":LCK.AMT.DEC
        AVL.BAL=LCK.AMT
        REC.AT.REV<AT.REV.ACCOUNT.NUMBER.OLD>=ALT.ACCT
        REC.AT.REV<AT.REV.AVAILABLE.BALANCE>=AVL.BAL
    END
    REC.AT.REV<AT.REV.BILLING.AMT>= ENQ.Y.CHRG.AMT

    REC.AT.REV<AT.REV.TXN.CHRG>=ENQ.Y.CHRG.AMT
RETURN          ;*From initialise
*

*------------------------------------------------------------------------*
UPDATE.REC:
*---------*
*Commented by liril

    MSG.TYPE=AT$INCOMING.ISO.REQ(1)
    RET.MSG.TYPE=MSG.TYPE+10
    RET.MSG.TYPE=FMT(RET.MSG.TYPE,"R%4")
    REC.AT.REV<AT.REV.MTI.RESP>=RET.MSG.TYPE


*AT.REV.
*AT$INCOMING.ISO.REQ(
    AT.REV.ID  = AT$INCOMING.ISO.REQ(2) : '.' : Y.UNIQUE.ID

    REC.AT.REV<AT.REV.TRANSACTION.ID>=ENQ.NAME
    REC.AT.REV<AT.REV.TXN.DATE> =TODAY
* REC.AT.REV<AT.REV.TXN.AMOUNT> = (AT$INCOMING.ISO.REQ(4)
    REC.AT.REV<AT.REV.PROCESS.CODE>=AT$INCOMING.ISO.REQ(3)
    REC.AT.REV<AT.REV.CARD.NUMBER>=AT$INCOMING.ISO.REQ(2)
* REC.AT.REV<AT.REV.TRANSACTION.AMOUNT>=(AT$INCOMING.ISO.REQ(4))
    REC.AT.REV<AT.REV.MESSAGE.TYPE>=AT$INCOMING.ISO.REQ(1)
    REC.AT.REV<AT.REV.TRACE>=AT$INCOMING.ISO.REQ(11)
    REC.AT.REV<AT.REV.RESPONSE.CODE>='00'
    REC.AT.REV<AT.REV.AUTH.CODE>=FIELD(AT.REV.ID,'.',2)
    REC.AT.REV<AT.REV.REFERENCE.NO>=AT$INCOMING.ISO.REQ(37)
    REC.AT.REV<AT.REV.LOCAL.DATE>=AT$INCOMING.ISO.REQ(13)
    REC.AT.REV<AT.REV.LOCAL.TIME>=AT$INCOMING.ISO.REQ(12)
    SYS.DATE=OCONV(DATE(),'D4')
    REC.AT.REV<AT.REV.CAPTURE.DATE>=SYS.DATE
    REC.AT.REV<AT.REV.TERM.ID>=AT$INCOMING.ISO.REQ(41)
    REC.AT.REV<AT.REV.MERCHANT.ID>=AT$INCOMING.ISO.REQ(42)
    REC.AT.REV<AT.REV.ACCEPTOR.NAME>=AT$INCOMING.ISO.REQ(43)
    REC.AT.REV<AT.REV.EXCH.RATE>=EXH.RATE
    REC.AT.REV<AT.REV.ISSUER>=AT$INCOMING.ISO.REQ(2)[1,6]
    REC.AT.REV<AT.REV.TRANS.DATE.TIME>=AT$INCOMING.ISO.REQ(7)
    REC.AT.REV<AT.REV.T24.DATE>=TODAY
    REC.AT.REV<AT.REV.TXN.REF>=ENQ.NAME
    REC.AT.REV<AT.REV.VISA.STLMT.REF>=''
    REC.AT.REV<AT.REV.VISA.CHGBCK.REF>=''
    REC.AT.REV<AT.REV.POS.COND>=AT$INCOMING.ISO.REQ(25)
    REC.AT.REV<AT.REV.DEST.CCY>=  AT$INCOMING.ISO.REQ(51)
    REC.AT.REV<AT.REV.CURRENCY.CODE>=AT$INCOMING.ISO.REQ(49)
    REC.AT.REV<AT.REV.CONVERSION.RATE>=AT$INCOMING.ISO.REQ(10)
    REC.AT.REV<AT.REV.FRAUD.REF.NO>=''
    REC.AT.REV<AT.REV.DEST.AMT>=AT$INCOMING.ISO.REQ(6)
    REC.AT.REV<AT.REV.MRCHT.CATEG>=AT$INCOMING.ISO.REQ(18)
    REC.AT.REV<AT.REV.POS.ENTRY.MOD>=AT$INCOMING.ISO.REQ(22)[1,2]
    REC.AT.REV<AT.REV.TRANSACTION.FEE>=AT$INCOMING.ISO.REQ(28)

    REC.AT.REV<AT.REV.CARD.EXPIRY>=AT$INCOMING.ISO.REQ(14)
    REC.AT.REV<AT.REV.ACQ.COUNTRY.CDE>=AT$INCOMING.ISO.REQ(19)
    REC.AT.REV<AT.REV.ACQ.INST.CDE>=AT$INCOMING.ISO.REQ(32)
    REC.AT.REV<AT.REV.FWD.INST.CDE>=AT$INCOMING.ISO.REQ(33)
    REC.AT.REV<AT.REV.ADD.AMT>=AT$INCOMING.ISO.REQ(54)

    IF TXN.SOURCE EQ 0 OR TXN.SOURCE EQ '' THEN

        BEGIN CASE

            CASE AT$INCOMING.ISO.REQ(1) EQ '0200' AND AT$INCOMING.ISO.REQ(3)[1,2] EQ '01' AND (AT$INCOMING.ISO.REQ(32) EQ '1' OR AT$INCOMING.ISO.REQ(32) EQ '01')
                TXN.SOURCE='APAP ATM'
            CASE AT$INCOMING.ISO.REQ(1) EQ '0200' AND (AT$INCOMING.ISO.REQ(3)[1,2] EQ '00' OR AT$INCOMING.ISO.REQ(3)[1,2] EQ '09' OR AT$INCOMING.ISO.REQ(3)[1,2] EQ '14') AND (AT$INCOMING.ISO.REQ(32) EQ '1' OR AT$INCOMING.ISO.REQ(32) EQ '01')
                TXN.SOURCE='APAP POS'

        END CASE


    END
    REC.AT.REV<AT.REV.TXN.SOURCE>=TXN.SOURCE
    Y.AMT.85=AT$INCOMING.ISO.REQ(4)*1
    IF Y.AMT.85 EQ 0 AND AT$INCOMING.ISO.REQ(25) EQ '51' THEN
        REC.AT.REV<AT.REV.RESPONSE.CODE>='85'
        REC.AT.REV<AT.REV.TRANSACTION.ID>=''
        REC.AT.REV<AT.REV.TXN.REF>=''
    END

    IF AT$INCOMING.ISO.REQ(3)[1,2] EQ '94' THEN

        REC.AT.REV<AT.REV.TRANSACTION.ID>=''
        REC.AT.REV<AT.REV.TXN.REF>=''

    END
    IF AT.REV.ID THEN
        CALL F.READ(FN.ATM.REVERSAL,AT.REV.ID,R.ATM.REVERSAL,F.ATM.REVERSAL,ER.ATM.REVERSAL)
        IF R.ATM.REVERSAL THEN
            REC.AT.REV<AT.REV.TRANSACTION.ID> =''
        END

        CALL F.WRITE(FN.ATM.REVERSAL,AT.REV.ID,REC.AT.REV)
        CALL JOURNAL.UPDATE('')
    END



RETURN          ;*From update.rec



END
*----------------------------------------------------------------------*
