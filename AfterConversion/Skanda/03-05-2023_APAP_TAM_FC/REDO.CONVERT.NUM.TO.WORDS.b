* @ValidationCode : MjotMjAwMjAyODM2MjpDcDEyNTI6MTY4MDY3OTE5OTUxODpJVFNTOi0xOi0xOjA6MTpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 05 Apr 2023 12:49:59
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
SUBROUTINE REDO.CONVERT.NUM.TO.WORDS(IN.AMT, OUT.AMT, LINE.LENGTH, NO.OF.LINES, ERR.MSG)


*----------------------------------------------------------------------
*MODIFICATION DETAILS:
*---------------------
*   DATE       RESOURCE           REFERENCE             DESCRIPTION
* 20-03-2013   Arundev      PACS00254281 RTC-612021   El campo VALOR EN LETRAS debis mostrar el valor MIL no UN MIL"
*                                                     En un cheque emitido sslo con valor de centavos el campo
*                                                     VALOR EN LETRAS debe decir iniciar con CERO PESOS
** 05-04-2023 R22 Auto Conversion - FM TO @FM, VM to @VM, SM to @SM, I to I.VAR, > to GT, >= to GE, <= to LE, = to EQ, < to LT, <> to NE
** 05-04-2023 Skanda R22 Manual Conversion - No changes
*----------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE

    $INSERT I_F.ACCOUNT

    $INSERT I_F.CATEGORY

    Y.CHQ.FLAG = ''
    IF IN.AMT[1,3] EQ 'CHQ' THEN
        Y.GET.LENGTH = LEN(IN.AMT)
        IN.AMT = IN.AMT[4,Y.GET.LENGTH-3]
        Y.CHQ.FLAG = 'Y'
    END


* Main Program Loop
***************************
*VARIABLES USADAS
***************************
*   LONGITUD DE LA LINEA A ENVIAR
    LONGITUD.LINEA = 55
*   ARREGLO QUE CONTIENE LOS DIGITOS DE LA CANTIDAD Y SU DESCRIPCION
    DIM ARREGLOUNIDADES(15,2)
*   ARREGLO QUE CONTIENE LAS DESCRIPCIONES DE LOS GRUPOS DE CANTIDADES
    DIM ARREGLOGRUPOS(5)
*   VARIABLE QUE CONTIENE LA ULTIMA POSICION DEL STRING DE LA CANTIDAD
    ULTIMAPOSICION = 0
*   VARIABLE QUE CONTIENE EL GRUPO QUE SE ESTA PROCESANDO
    GRUPO = 0
    ARREGLOGRUPOS(1)=""
    ARREGLOGRUPOS(2)="mil"
    ARREGLOGRUPOS(3)="millones"
    ARREGLOGRUPOS(4)="mil"
    ARREGLOGRUPOS(5)="billones"

    CONSTLONGLINEA = 60

*    CANTIDAD = COMI
    CANTIDAD = IN.AMT
    GOSUB CANTIDAD.LETRA

    OUT.AMT = CANTIDADLETRAFINAL

RETURN

CANTIDAD.LETRA:
    CONSTBILLON = 1000000000000
    CONSTMILMILLONES = 1000000000
    CONSTMILLONES = 1000000
    CONSTMILES = 1000
    BILLON = CANTIDAD / CONSTBILLON
    INTBILLON = INT(BILLON)
    RESTAN = CANTIDAD - (INTBILLON * CONSTBILLON)
    MILMILLONES = RESTAN / CONSTMILMILLONES
    INTMILMILLONES = INT(MILMILLONES)
    RESTAN = RESTAN - (INTMILMILLONES * CONSTMILMILLONES)
    MILLONES = RESTAN / CONSTMILLONES
    INTMILLONES = INT(MILLONES)
    RESTAN = RESTAN - (INTMILLONES * CONSTMILLONES)
    MILES = RESTAN / CONSTMILES
    INTMILES = INT(MILES)
    RESTAN = RESTAN - (INTMILES * CONSTMILES)
    ENTERO = INT(CANTIDAD)
    FRACCION = (CANTIDAD - ENTERO) * 100
    FOR I.VAR=1 TO 15 STEP 1
        ARREGLOUNIDADES(I.VAR,1) = 0
        ARREGLOUNIDADES(I.VAR,2) = ""
    NEXT I.VAR
    CANTIDADLETRA = ""
    POSICIONSTRING = LEN(ENTERO)
    FOR I.VAR=15 TO 1 STEP -1 UNTIL POSICIONSTRING = 0
        ARREGLOUNIDADES(I.VAR,1)= SUBSTRINGS(ENTERO,POSICIONSTRING,1)
        POSICIONSTRING -= 1
    NEXT I.VAR
    ULTIMAPOSICION = I.VAR + 1
    CANTIDADLETRA = ""
    FOR GRUPO = 1 TO 5
        GOSUB EVALUA.CANTIDAD
    NEXT GRUPO
    FOR I.VAR = 1 TO 15
        IF I.VAR EQ 4 THEN
            IF INTBILLON GT 0 THEN
                CANTIDADLETRA = CATS(CANTIDADLETRA," ")
                CANTIDADLETRA = CATS(CANTIDADLETRA,ARREGLOGRUPOS(5))
            END
        END ELSE
            IF I.VAR EQ 7 THEN
                IF INTMILMILLONES GT 0 THEN
                    CANTIDADLETRA = CATS(CANTIDADLETRA," ")
                    CANTIDADLETRA = CATS(CANTIDADLETRA,ARREGLOGRUPOS(4))
                END
            END ELSE
                IF I.VAR EQ 10 THEN
                    IF (INTMILLONES GT 0) OR (INTMILMILLONES GT 0) THEN
                        CANTIDADLETRA = CATS(CANTIDADLETRA," ")
                        CANTIDADLETRA = CATS(CANTIDADLETRA,ARREGLOGRUPOS(3))
                    END
                END ELSE
                    IF I.VAR EQ 13 THEN
                        IF INTMILES GT 0 THEN
                            CANTIDADLETRA = CATS(CANTIDADLETRA," ")
                            CANTIDADLETRA = CATS(CANTIDADLETRA,ARREGLOGRUPOS(2))
                        END
                    END
                END
            END
        END
        IF ARREGLOUNIDADES(I.VAR,2) NE "" THEN
            CANTIDADLETRA = CATS(CANTIDADLETRA," ")
            CANTIDADLETRA = CATS(CANTIDADLETRA,ARREGLOUNIDADES(I.VAR,2))
        END
    NEXT I.VAR
    IF SUBSTRINGS(CANTIDADLETRA,1,1) EQ " " THEN
        CANTIDADLETRA = SUBSTRINGS(CANTIDADLETRA,2,LEN(CANTIDADLETRA)-1)
    END
    CAPITAL = SUBSTRINGS(CANTIDADLETRA,1,1)
    CAPITAL = UPCASE(CAPITAL)
    PESOS = " pesos "
    IF ENTERO EQ 1 THEN
        PESOS = " peso "
    END ELSE
        IF ULTIMAPOSICION LE 9 THEN
            BANDERAMILLON = 1
            FOR I.VAR=10 TO 15
                IF ARREGLOUNIDADES(I.VAR,1) NE 0 THEN
                    BANDERAMILLON = 0
                END
            NEXT I.VAR
            IF BANDERAMILLON EQ 1 THEN
                PESOS = " de pesos "
            END
        END
    END
    IF FRACCION GT 0 THEN
        IF FRACCION LT 10 THEN
            CENTAVOS = CATS("0",FRACCION)
        END ELSE
            CENTAVOS = FRACCION
        END
    END ELSE
        CENTAVOS = "00"
    END

**PACS00254281-start
**CANTIDADLETRAFINAL = CATS(CAPITAL,SUBSTRINGS(CANTIDADLETRA,2,LEN(CANTIDADLETRA)-1))

    TEMP.CANTIDADLETRAFINAL = CATS(CAPITAL,SUBSTRINGS(CANTIDADLETRA,2,LEN(CANTIDADLETRA)-1))

    IF TEMP.CANTIDADLETRAFINAL THEN
        CANTIDADLETRAFINAL = TEMP.CANTIDADLETRAFINAL
    END ELSE
        CANTIDADLETRAFINAL = 'CERO'
    END

**PACS00254281-End

*PACS00265891 - START
** This part is re-fix PACS00254281 Issue and comment previous fix related to "un"

*    IF CANTIDADLETRAFINAL[1,2] EQ 'Un' THEN

*        UNO.CNT = DCOUNT(CANTIDADLETRAFINAL,' ')

*        IF UNO.CNT GT 1 THEN
*            Y.LEN = LEN(CANTIDADLETRAFINAL)
*            Y.FIRST.VALUE     = CANTIDADLETRAFINAL[5,1]
*            Y.REMAINING.VALUE = CANTIDADLETRAFINAL[6,Y.LEN]
*            Y.CAPITAL         = UPCASE(Y.FIRST.VALUE)
*            CANTIDADLETRAFINAL = CATS(Y.CAPITAL,Y.REMAINING.VALUE)
*        END

*    END
*PACS00265891 - END

    CANTIDADLETRAFINAL = CATS(CANTIDADLETRAFINAL,PESOS)
    CANTIDADLETRAFINAL = CATS(CANTIDADLETRAFINAL,"con ")
    CANTIDADLETRAFINAL = CATS(CANTIDADLETRAFINAL,CENTAVOS)
    CANTIDADLETRAFINAL = CATS(CANTIDADLETRAFINAL,"/100 ")

    RENGLONES = INT(LEN(CANTIDADLETRAFINAL) / CONSTLONGLINEA)
    CARACTERESRESTAN = MOD(LEN(CANTIDADLETRAFINAL),CONSTLONGLINEA)

    IF CARACTERESRESTAN GT 0 THEN
        RENGLONES += 1 ;* R22 Auto conversion
    END

* FLAG BEEN RAISED TO NOT TO SORT IT OUT BASED ON 60 CHARS

    IF Y.CHQ.FLAG THEN
        RENGLONES = 0
    END

    STRPASO = CANTIDADLETRAFINAL
    CANTIDADLETRAFINAL = ""
    IF RENGLONES GT 1 THEN
        FOR INDICECADENA = 1 TO RENGLONES
            IF LEN(STRPASO) GT CONSTLONGLINEA THEN
                GOSUB PARTE.CADENA
                CANTIDADLETRAFINAL = CANTIDADLETRAFINAL:CADENAPARTIDA:@VM
            END ELSE
                CANTIDADLETRAFINAL = CANTIDADLETRAFINAL:STRPASO
            END
        NEXT
    END ELSE
        CANTIDADLETRAFINAL = STRPASO
    END

RETURN

EVALUA.CANTIDAD:
    BANDERAVEINTINUEVE = 0
    BEGIN CASE
        CASE GRUPO EQ 1
            POSICION = 13
        CASE GRUPO EQ 2
            POSICION = 10
        CASE GRUPO EQ 3
            POSICION = 7
        CASE GRUPO EQ 4
            POSICION = 4
        CASE GRUPO EQ 5
            POSICION = 1
    END CASE
    IF (POSICION+2) GE ULTIMAPOSICION THEN
        GOSUB EVALUA.GRUPO
        IF  GRUPO EQ 3 THEN
            IF ARREGLOUNIDADES(POSICION,1) EQ 0 AND ARREGLOUNIDADES(POSICION+1,1) EQ 0 AND ARREGLOUNIDADES(POSICION+2,1) EQ 1 THEN
                ARREGLOGRUPOS(3) = "millon"
            END ELSE
                ARREGLOGRUPOS(3) = "millones"
            END
        END
        IF  GRUPO EQ 4 THEN
            IF ARREGLOUNIDADES(POSICION,1) NE 0 OR ARREGLOUNIDADES(POSICION+1,1) NE 0 OR ARREGLOUNIDADES(POSICION+2,1) NE 0 THEN
                ARREGLOGRUPOS(3) = "millones"
            END
        END
        IF  GRUPO EQ 5 THEN
            IF  ARREGLOUNIDADES(POSICION,1) EQ 0 AND ARREGLOUNIDADES(POSICION+1,1) EQ 0 AND ARREGLOUNIDADES(POSICION+2,1) EQ 1 THEN
                ARREGLOGRUPOS(5) = "billon"
            END ELSE
                ARREGLOGRUPOS(5) = "billones"
            END
        END
        IF  ARREGLOUNIDADES(POSICION+1,1) LE 2 THEN
            BANDERAVEINTINUEVE = 1
            NUMERO = CATS(ARREGLOUNIDADES(POSICION+1,1),ARREGLOUNIDADES(POSICION+2,1))
            BEGIN CASE
                CASE NUMERO EQ 0
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = ""
                CASE NUMERO EQ 1
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
**PACS00265891 - START
**PACS00254281-start
**ARREGLOUNIDADES(POSICION + 2,2) = "un"
**ARREGLOUNIDADES(POSICION + 2,2) = " "
**PACS00254281-End
                    ARREGLOUNIDADES(POSICION + 2,2) = "un"
**PACS00265891 - END
                CASE NUMERO EQ 2
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "dos"
                CASE NUMERO EQ 3
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "tres"
                CASE NUMERO EQ 4
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "cuatro"
                CASE NUMERO EQ 5
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "cinco"
                CASE NUMERO EQ 6
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "seis"
                CASE NUMERO EQ 7
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "siete"
                CASE NUMERO EQ 8
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "ocho"
                CASE NUMERO EQ 9
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "nueve"
                CASE NUMERO EQ 10
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "diez"
                CASE NUMERO EQ 11
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "once"
                CASE NUMERO EQ 12
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "doce"
                CASE NUMERO EQ 13
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "trece"
                CASE NUMERO EQ 14
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "catorce"
                CASE NUMERO EQ 15
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "quince"
                CASE NUMERO EQ 16
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "dieciseis"
                CASE NUMERO EQ 17
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "diecisiete"
                CASE NUMERO EQ 18
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "dieciocho"
                CASE NUMERO EQ 19
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "diecinueve"
                CASE NUMERO EQ 20
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veinte"
                CASE NUMERO EQ 21
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintiuno"
                CASE NUMERO EQ 22
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintidos"
                CASE NUMERO EQ 23
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintitres"
                CASE NUMERO EQ 24
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veinticuatro"
                CASE NUMERO EQ 25
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veinticinco"
                CASE NUMERO EQ 26
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintiseis"
                CASE NUMERO EQ 27
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintisiete"
                CASE NUMERO EQ 28
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintiocho"
                CASE NUMERO EQ 29
                    ARREGLOUNIDADES(POSICION + 1,2) = ""
                    ARREGLOUNIDADES(POSICION + 2,2) = "veintinueve"
            END CASE
        END ELSE
            IF  ARREGLOUNIDADES(POSICION+2,1) GT 0 THEN
                ARREGLOUNIDADES(POSICION+2,2) = CATS("y ",ARREGLOUNIDADES(POSICION+2,2))
            END
        END
    END
RETURN
EVALUA.GRUPO:
    IF  ARREGLOUNIDADES(POSICION+2,1) NE 0 THEN
        GOSUB TRAE.LETRA.UNIDADES
        ARREGLOUNIDADES(POSICION+2,2) = LETRAUNIDADES
    END ELSE
        ARREGLOUNIDADES(POSICION+2,2) = ""
    END
    IF  ARREGLOUNIDADES(POSICION+1,1) NE 0 THEN
        GOSUB TRAE.LETRA.DECENAS
        ARREGLOUNIDADES(POSICION+1,2) = LETRADECENAS
    END ELSE
        ARREGLOUNIDADES(POSICION+1,2) = ""
    END
    IF  ARREGLOUNIDADES(POSICION,2) NE 0 THEN
        GOSUB TRAE.LETRA.CENTENAS
        ARREGLOUNIDADES(POSICION,2)= LETRACENTENAS
        IF  (ARREGLOUNIDADES(POSICION,2) EQ "ciento") AND (ARREGLOUNIDADES(POSICION+1,1) EQ 0) AND (ARREGLOUNIDADES(POSICION+2,1) EQ 0) THEN
            ARREGLOUNIDADES(POSICION,2)="cien"
        END
    END ELSE
        ARREGLOUNIDADES(POSICION,2) = ""
    END
RETURN
TRAE.LETRA.UNIDADES:
    LETRAUNIDADES = ""
    BEGIN CASE
        CASE ARREGLOUNIDADES(POSICION+2,1) EQ 0
            LETRAUNIDADES=""
        CASE ARREGLOUNIDADES(POSICION+2,1) EQ 1
**PACS00265891 - START
**PACS00254281-start
**LETRAUNIDADES="un"
** LETRAUNIDADES = " "
**PACS00254281-End
            LETRAUNIDADES = "uno"
**PACS00265891 - END
        CASE ARREGLOUNIDADES(POSICION+2,1)=2
            LETRAUNIDADES="dos"
        CASE ARREGLOUNIDADES(POSICION+2,1)=3
            LETRAUNIDADES="tres"
        CASE ARREGLOUNIDADES(POSICION+2,1)=4
            LETRAUNIDADES="cuatro"
        CASE ARREGLOUNIDADES(POSICION+2,1)=5
            LETRAUNIDADES="cinco"
        CASE ARREGLOUNIDADES(POSICION+2,1)=6
            LETRAUNIDADES="seis"
        CASE ARREGLOUNIDADES(POSICION+2,1)=7
            LETRAUNIDADES="siete"
        CASE ARREGLOUNIDADES(POSICION+2,1)=8
            LETRAUNIDADES="ocho"
        CASE ARREGLOUNIDADES(POSICION+2,1)=9
            LETRAUNIDADES="nueve"
    END CASE
RETURN
TRAE.LETRA.DECENAS:
    LETRADECENAS = ""
    BEGIN CASE
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 0
            LETRADECENAS = ""
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 1
            LETRADECENAS = "diez"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 2
            LETRADECENAS = "veinte"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 3
            LETRADECENAS = "treinta"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 4
            LETRADECENAS = "cuarenta"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 5
            LETRADECENAS = "cincuenta"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 6
            LETRADECENAS = "sesenta"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 7
            LETRADECENAS = "setenta"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 8
            LETRADECENAS = "ochenta"
        CASE ARREGLOUNIDADES(POSICION+1,1) EQ 9
            LETRADECENAS = "noventa"
    END CASE
RETURN
TRAE.LETRA.CENTENAS:
    LETRACENTENAS=""
    BEGIN CASE
        CASE ARREGLOUNIDADES(POSICION,1) EQ 0
            LETRACENTENAS=""
        CASE ARREGLOUNIDADES(POSICION,1) EQ 1
            LETRACENTENAS="ciento"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 2
            LETRACENTENAS="doscientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 3
            LETRACENTENAS="trescientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 4
            LETRACENTENAS="cuatrocientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 5
            LETRACENTENAS="quinientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 6
            LETRACENTENAS="seiscientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 7
            LETRACENTENAS="setecientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 8
            LETRACENTENAS="ochocientos"
        CASE ARREGLOUNIDADES(POSICION,1) EQ 9
            LETRACENTENAS="novecientos"
    END CASE
RETURN

PARTE.CADENA:

    IF  SUBSTRINGS(SUBSTRINGS(STRPASO,1,CONSTLONGLINEA),CONSTLONGLINEA,1) EQ " " THEN
        CADENAPARTIDA = SUBSTRINGS(STRPASO,1,CONSTLONGLINEA-1)
        STRPASO = SUBSTRINGS(STRPASO,CONSTLONGLINEA+1,LEN(STRPASO))
    END ELSE
        SALIRFOR = 0
        FOR INDICEPARTIR = CONSTLONGLINEA TO 2 STEP -1 WHILE SALIRFOR = 0
            IF  SUBSTRINGS(STRPASO, INDICEPARTIR,1) EQ " " THEN
                LONGITUDLINEAPARTIR = INDICEPARTIR
                SALIRFOR = 1
            END
        NEXT
        IF  INDICEPARTIR GT 2 THEN
            CADENAPARTIDA = SUBSTRINGS(STRPASO,1,INDICEPARTIR)
            CADENAPARTIDA = CADENAPARTIDA:STR("*",CONSTLONGLINEA - INDICEPARTIR)
            STRPASO = SUBSTRINGS(STRPASO,INDICEPARTIR+1,LEN(STRPASO))
        END
    END

RETURN
