$PACKAGE APAP.TAM
SUBROUTINE REDO.STOCK.ENTRY.AUTHORISE
*--------------------------------------------------------------------------------
*Company   Name    :Asociacion Popular de Ahorros y Prestamos
*Developed By      :GANESH.R
*Program   Name    :REDO.STOCK.ENTRY.AUTHORISE
*---------------------------------------------------------------------------------

*DESCRIPTION       :This program is used to get the Stock details and update in REDO.STOCK.REGISTER

*LINKED WITH       :
* 6 JUN 2011       : Modification done for PACS00024249
** 17-04-2023 R22 Auto Conversion - FM TO @FM, VM to @VM, SM to @SM
** 17-04-2023 Skanda R22 Manual Conversion - No changes
* ----------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.REDO.STOCK.ENTRY
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.BRANCH.REQ.STOCK
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.CARD.REG.STOCK



    GOSUB OPENFILE
    GOSUB PROCESS
RETURN


OPENFILE:
* Opening the Register File

    CARD.AVAIL.BAL = ''
    Y.REG.STK.SERIES.LIST = ''
    Y.TO.REG.STK.SERIES.LIST = ''

    LOC.RET.FLAG = ''

    FN.BRANCH.REQ.STOCK = 'F.REDO.BRANCH.REQ.STOCK'
    F.BRANCH.REQ.STOCK = ''
    CALL OPF(FN.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK)

    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)

    FN.REDO.STOCK.REGISTER = 'F.REDO.STOCK.REGISTER'
    F.REDO.STOCK.REGISTER  = ''
    CALL OPF(FN.REDO.STOCK.REGISTER,F.REDO.STOCK.REGISTER)

    FN.REDO.CARD.SERIES.PARAM = 'F.REDO.CARD.SERIES.PARAM'
    F.REDO.CARD.SERIES.PARAM = ''
    CALL OPF(FN.REDO.CARD.SERIES.PARAM,F.REDO.CARD.SERIES.PARAM)

RETURN

PROCESS:
*Fetching the values entered by the user in

    CALL CACHE.READ('F.REDO.CARD.SERIES.PARAM','SYSTEM',R.REDO.CARD.SERIES.PARAM,PARAM.ERR)

    CARD.TYPE.PARAM = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.TYPE>
    CARD.SERIES.PARAM = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.SERIES>
    CHANGE @VM TO @FM IN CARD.SERIES.PARAM
    CHANGE @VM TO @FM IN CARD.TYPE.PARAM


    Y.FETCH.FROM.REG     = R.NEW(STK.FROM.REGISTER)
    Y.FETCH.STK.SERIES   = R.NEW(STK.STOCK.SERIES)
    Y.FETCH.STK.QUANTITY = R.NEW(STK.STOCK.QUANTITY)
    Y.FETCH.TO.REG       = R.NEW(STK.TO.REGISTER)

*Read the Register Table and check for the Quantity

    RTR = ''
    CALL F.READU(FN.REDO.STOCK.REGISTER,Y.FETCH.FROM.REG,R.REDO.STOCK.REGISTER,F.REDO.STOCK.REGISTER,STOCK.ERR,RTR)
    CALL F.READU(FN.REDO.STOCK.REGISTER,Y.FETCH.TO.REG,R.TO.REDO.STOCK.REGISTER,F.REDO.STOCK.REGISTER,TO.STOCK.ERR,RTR)

*Get the series and stock quantity of From Registers

    IF R.REDO.STOCK.REGISTER THEN
        Y.REG.STK.SERIES.LIST = R.REDO.STOCK.REGISTER<STK.REG.SERIES.ID>
        Y.REG.STK.QUANTITY    = R.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL>
    END
    IF R.TO.REDO.STOCK.REGISTER THEN
        Y.TO.REG.STK.SERIES.LIST = R.TO.REDO.STOCK.REGISTER<STK.REG.SERIES.ID>
        Y.TO.REG.STK.QUANTITY    = R.TO.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL>
    END
    GOSUB CHECK.QUANTITY
RETURN


CHECK.QUANTITY:
*Get the count of Series from Register
    Y.STK.SERIES.CNT = DCOUNT(Y.FETCH.STK.SERIES,@VM)

*Locate the series obtained and update in both registers

    Y.INIT.CNT = 1
    LOOP
        REMOVE Y.TYPE.ID FROM Y.FETCH.STK.SERIES SETTING Y.SERIES.POS
    WHILE Y.INIT.CNT LE Y.STK.SERIES.CNT

        LOCATE Y.TYPE.ID IN CARD.TYPE.PARAM SETTING AVAIL.PAR.POS THEN
            Y.SERIES.ID = CARD.SERIES.PARAM<AVAIL.PAR.POS>
        END

        CARD.AVAIL.BAL = 0
        ASSIG.INT.QTY = 0
        LOCATE Y.SERIES.ID IN Y.REG.STK.SERIES.LIST<1,1> SETTING Y.STK.REG.POS THEN
            R.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.STK.REG.POS> = R.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.STK.REG.POS> - Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
            R.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL> = R.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL> - Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
        END
        LOCATE Y.SERIES.ID IN Y.TO.REG.STK.SERIES.LIST<1,1> SETTING Y.STK.TO.REG.POS THEN
            R.TO.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.STK.TO.REG.POS> = R.TO.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.STK.TO.REG.POS> + Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
            R.TO.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL> = R.TO.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL> + Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
        END
        ELSE
            R.TO.REDO.STOCK.REGISTER<STK.REG.SERIES.ID,-1>   = Y.SERIES.ID
            R.TO.REDO.STOCK.REGISTER<STK.REG.SERIES.BAL,-1>  = Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
            TEMP.VAL = R.TO.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL>
            TEMP.VAL = TEMP.VAL + Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
            R.TO.REDO.STOCK.REGISTER<STK.REG.STO.REG.BAL> = TEMP.VAL
        END

        IF PGM.VERSION EQ ",VIRGIN" THEN ;* R22 Auto conversion
            GOSUB UPDATE.STOCK.COUNT
        END

        Y.INIT.CNT += 1 ;* R22 Auto conversion
    REPEAT

    CALL F.WRITE(FN.REDO.STOCK.REGISTER,Y.FETCH.FROM.REG,R.REDO.STOCK.REGISTER)
    CALL F.WRITE(FN.REDO.STOCK.REGISTER,Y.FETCH.TO.REG,R.TO.REDO.STOCK.REGISTER)

*    CALL JOURNAL.UPDATE('')

RETURN
*------------
UPDATE.STOCK.COUNT:

*PACS00024249-S
    CARD.TYPE.FETCH = Y.SERIES.ID

*    LOCATE CARD.TYPE.FETCH IN CARD.SERIES.PARAM SETTING LOC.POS THEN
*       GET.CARD.TYPE = CARD.TYPE.PARAM<LOC.POS>
*    END

    GET.CARD.TYPE = Y.SERIES.ID

    CALL F.READU(FN.REDO.CARD.REG.STOCK,CARD.TYPE.FETCH,R.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK,STOCK.ERR,"")
    IF R.REDO.CARD.REG.STOCK THEN
        CARD.AVAIL.BAL = R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL>
        STORE.AVAIL.BAL = CARD.AVAIL.BAL
        ASSIG.INT.QTY = CARD.AVAIL.BAL
        GOSUB UPDATE.CAL.CNT
    END ELSE
        STORE.AVAIL.BAL = ''
        GOSUB UPDATE.CAL.CNT
    END


    CONCAT.FILE.ID = TODAY:"-":GET.CARD.TYPE
    CALL F.READU(FN.BRANCH.REQ.STOCK,CONCAT.FILE.ID,R.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK,STK.ENT.ERR,'P')

    IF R.BRANCH.REQ.STOCK THEN
        TOT.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK>,@VM)
        IF TOT.CNTR LT 1 THEN
            TOT.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD>,@VM)
        END
        LOOP.REST.CNT = TOT.CNTR
        LOC.RET.FLAG = 'Y'
    END

    GOSUB APPEND.RETURN.VAL


    CALL F.WRITE(FN.BRANCH.REQ.STOCK,CONCAT.FILE.ID,R.BRANCH.REQ.STOCK)

    CALL F.WRITE(FN.REDO.CARD.REG.STOCK,CARD.TYPE.FETCH,R.REDO.CARD.REG.STOCK)

RETURN
*------------
UPDATE.CAL.CNT:

    IF PGM.VERSION EQ ",VIRGIN" THEN ;* R22 Auto conversion
        CARD.AVAIL.BAL = CARD.AVAIL.BAL + Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
        R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL
    END

*IF PGM.VERSION = ',MV.INIT' THEN
*CARD.AVAIL.BAL = CARD.AVAIL.BAL - Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
*R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL
*END

*PACS00024249-E

RETURN
*------------
APPEND.RETURN.VAL:

    IF LOC.RET.FLAG EQ 'Y' THEN ;* R22 Auto conversion
        TOT.CNTR += 1
    END ELSE
        TOT.CNTR = 1
    END

    R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE> = Y.TYPE.ID
    R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,TOT.CNTR> = STORE.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID,TOT.CNTR> = ID.NEW
    R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD,TOT.CNTR> = Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
    R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,TOT.CNTR> = STORE.AVAIL.BAL + Y.FETCH.STK.QUANTITY<1,Y.INIT.CNT>
    R.BRANCH.REQ.STOCK<BRAN.STK.TXN.DATE> = TODAY

RETURN
*PACS00024249-E
*---------------------


END
