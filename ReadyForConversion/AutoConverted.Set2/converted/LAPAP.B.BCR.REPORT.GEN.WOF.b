* Busca para los prestamo castigago PRODUCTO.WOF
* los campos total de cuota, valor de la cuota, fecha ultimo y monto ultimo pago
* MDP-2591                      Incosistencia en los total cuota, monto cuota
*                                fecha ultimo pago y monto ultimo pago
*-----------------------------------------------------------------------------
SUBROUTINE LAPAP.B.BCR.REPORT.GEN.WOF (Y.AA.ID,Y.TOTAL.CUOTAS,Y.LASTPAY.AMT, Y.LASTPAY.DAT,Y.FIN.AMT )
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.ACTIVITY.HISTORY
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.REFERENCE.DETAILS
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.AA.PAYMENT.SCHEDULE
    $INSERT I_F.REDO.BCR.REPORT.DATA
    $INSERT I_REDO.B.BCR.REPORT.GEN.COMMON
    $INSERT I_F.REDO.INTERFACE.PARAM
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.DATES
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.ARRANGEMENT

    GOSUB INITIALISE
    GOSUB Extract
***total de cuota pr y monto factura pr
    IF Y.TOTAL.CUOTAS EQ 0 THEN
        GOSUB GET.ALL.BILL
    END
*** fecha ultimo pago pr y monto ultimo pago pr
    IF NOT (Y.LASTPAY.AMT) THEN
        GOSUB READ.FROM.ACCOUNT
    END
RETURN
*-----------------------------------------------------------------------------
INITIALISE:
*-----------------------------------------------------------------------------
    Y.PAID.BILLS.CNT = ''
    Y.PAID.BILLS.CNT = Y.TOTAL.CUOTAS
    Y.TOTAL.CUOTAS = ''
    Y.LASTPAY.AMT  = ''
    Y.LASTPAY.DAT  = ''
RETURN

*-----------------------------------------------------------------------------
Extract:
*-----------------------------------------------------------------------------
    GOSUB EXTRACT.NUM.CUOTAS
    GOSUB GET.HISTORY.PAYMENT
RETURN

*-----------------------------------------------------------------------------
EXTRACT.NUM.CUOTAS:
*-----------------------------------------------------------------------------
    CALL F.READ(FN.AA.ACCOUNT.DETAILS,Y.AA.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,ACT.ERR)
    CALL F.READ(FN.REDO.AA.SCHEDULE,Y.AA.ID,R.REDO.AA.SCHEDULE,F.REDO.AA.SCHEDULE,SCH.ERR)
    Y.TOTAL.CUOTAS = DCOUNT(R.REDO.AA.SCHEDULE<2>,@VM) + Y.PAID.BILLS.CNT

    Y.FIN.AMT       = ''
    Y.NEXT.PAYAMT   = ''
    Y.LAST.PAYAMT   = ''
    Y.FIN.AMT       = ''
    Y.OTHER.AMT     = ''
    Y.OTHER.DATE    = ''
    Y.LAST.PAY.DATE = ''

    ACCOUNT.PROPERTY = ''
    CALL REDO.GET.PROPERTY.NAME(Y.AA.ID,'ACCOUNTWOF',R.OUT.AA.RECORD,ACCOUNT.PROPERTY,OUT.ERR)
    Y.PAYMENT.DATES     = RAISE(R.REDO.AA.SCHEDULE<2>)
    Y.PROPERTY          = RAISE(R.REDO.AA.SCHEDULE<6>)
    Y.DUE.AMTS          = RAISE(R.REDO.AA.SCHEDULE<1>)
    Y.PAYMENT.DATES.CNT = DCOUNT(Y.PAYMENT.DATES,@FM)
    Y.VAR1 = 1
    LOOP
    WHILE Y.VAR1 LE Y.PAYMENT.DATES.CNT
        Y.PROP.LIST = Y.PROPERTY<Y.VAR1>
        Y.DATE      = Y.PAYMENT.DATES<Y.VAR1>
        IF Y.DATE GE TODAY THEN
            FINDSTR 'ACCOUNTWOF' IN Y.PROP.LIST SETTING POS.AF,POS.AV THEN
                Y.NEXT.PAYAMT = Y.DUE.AMTS<Y.VAR1>
                IF Y.NEXT.PAYAMT THEN
                    Y.VAR1 = Y.PAYMENT.DATES.CNT + 1        ;* Break
                END
            END ELSE
                FINDSTR 'PRINCIPALINTWOF' IN Y.PROP.LIST SETTING POS.AF,POS.AV THEN
                    Y.NEXT.PAYAMT = Y.DUE.AMTS<Y.VAR1>
                    IF Y.NEXT.PAYAMT THEN
                        Y.VAR1 = Y.PAYMENT.DATES.CNT + 1    ;* Break
                    END
                END ELSE
                    Y.OTHER.AMT  = Y.DUE.AMTS<Y.VAR1>
                    Y.OTHER.DATE = Y.DATE
                END
            END
        END ELSE
            FINDSTR 'ACCOUNTWOF' IN Y.PROP.LIST SETTING POS.AF,POS.AV THEN
                Y.LAST.PAYAMT   = Y.DUE.AMTS<Y.VAR1>
                Y.LAST.PAY.DATE = Y.DATE
            END ELSE
                FINDSTR 'PRINCIPALINTWOF' IN Y.PROP.LIST SETTING POS.AF,POS.AV THEN
                    Y.LAST.PAYAMT = Y.DUE.AMTS<Y.VAR1>
                    Y.LAST.PAY.DATE = Y.DATE
                END ELSE
                    Y.OTHER.AMT = Y.DUE.AMTS<Y.VAR1>
                    Y.OTHER.DATE = Y.DATE
                END
            END
        END

        Y.VAR1 += 1
    REPEAT
    GOSUB EXTRACT.NUM.CUOTAS.PART

RETURN
*-----------------------------------------------------------------------------
EXTRACT.NUM.CUOTAS.PART:
*-----------------------------------------------------------------------------
    IF Y.NEXT.PAYAMT THEN
        Y.FIN.AMT = Y.NEXT.PAYAMT
        LOCATE Y.DATE IN R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE,1> SETTING BILL.POS THEN
            Y.BILL.IDS   = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,BILL.POS>
            Y.BILL.TYPES = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE,BILL.POS>
            CHANGE @SM TO @FM IN Y.BILL.IDS
            CHANGE @SM TO @FM IN Y.BILL.TYPES
            GOSUB REMOVE.PAYOFF.BILLS   ;* No need to sum the amount of payoff bill
            GOSUB PROCESS.BILL
            Y.FIN.AMT = SUM(R.ARRAY<4>)
        END
    END ELSE
        IF Y.LAST.PAYAMT THEN
            Y.FIN.AMT = Y.LAST.PAYAMT
            LOCATE Y.LAST.PAY.DATE IN R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE,1> SETTING BILL.POS THEN
                Y.BILL.IDS   = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,BILL.POS>
                Y.BILL.TYPES = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE,BILL.POS>
                CHANGE @SM TO @FM IN Y.BILL.IDS
                CHANGE @SM TO @FM IN Y.BILL.TYPES
                GOSUB REMOVE.PAYOFF.BILLS         ;* No need to sum the amount of payoff bill
                GOSUB PROCESS.BILL
                Y.FIN.AMT = SUM(R.ARRAY<4>)
            END ELSE
                GOSUB READ.AA.DET.HIST
                LOCATE Y.LAST.PAY.DATE IN R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE,1> SETTING BILL.POSN THEN
                    Y.BILL.IDS   = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,BILL.POS>
                    Y.BILL.TYPES = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE,BILL.POS>
                    CHANGE @SM TO @FM IN Y.BILL.IDS
                    CHANGE @SM TO @FM IN Y.BILL.TYPES
                    GOSUB REMOVE.PAYOFF.BILLS     ;* No need to sum the amount of payoff bill
                    GOSUB PROCESS.BILL
                    Y.FIN.AMT = SUM(R.ARRAY<4>)
                END
            END
        END ELSE
            Y.FIN.AMT = Y.OTHER.AMT
            LOCATE Y.OTHER.DATE IN R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE,1> SETTING BILL.POS THEN
                Y.BILL.IDS   = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,BILL.POS>
                Y.BILL.TYPES = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE,BILL.POS>
                CHANGE @SM TO @FM IN Y.BILL.IDS
                CHANGE @SM TO @FM IN Y.BILL.TYPES
                GOSUB REMOVE.PAYOFF.BILLS         ;* No need to sum the amount of payoff bill
                GOSUB PROCESS.BILL
                Y.FIN.AMT = SUM(R.ARRAY<4>)
            END ELSE
                GOSUB READ.AA.DET.HIST
                LOCATE Y.OTHER.DATE IN R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE,1> SETTING BILL.POSN THEN
                    Y.BILL.IDS   = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID,BILL.POS>
                    Y.BILL.TYPES = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE,BILL.POS>
                    CHANGE @SM TO @FM IN Y.BILL.IDS
                    CHANGE @SM TO @FM IN Y.BILL.TYPES
                    GOSUB REMOVE.PAYOFF.BILLS     ;* No need to sum the amount of payoff bill
                    GOSUB PROCESS.BILL
                    Y.FIN.AMT = SUM(R.ARRAY<4>)
                END
            END
        END
    END
RETURN

READ.AA.DET.HIST:
*****************
    R.AA.ACCOUNT.DETAILS = ''; ACT.ERR = ''
    CALL F.READ(FN.AA.DETAILS.HST,Y.AA.ID,R.AA.ACCOUNT.DETAILS,F.AA.DETAILS.HST,ACT.ERR)
RETURN

*-----------------------------------------------------------------------------
GET.HISTORY.PAYMENT:
*-----------------------------------------------------------------------------
    Y.LAST.WORK.DAY = R.DATES(EB.DAT.LAST.WORKING.DAY)
    CALL F.READ(FN.AA.REFERENCE.DETAILS,Y.AA.ID,R.AA.TXN.DET,F.AA.REFERENCE.DETAILS,TXN.REF.ERR)
    IF R.AA.TXN.DET THEN
        Y.ACTIVITY.CNT = DCOUNT(R.AA.TXN.DET<AA.REF.TRANS.REF>,@VM)
        Y.VAR1 = 1
        LOOP
        WHILE Y.VAR1 LE Y.ACTIVITY.CNT
            Y.AAA.ID = R.AA.TXN.DET<AA.REF.AAA.ID,Y.VAR1>
            CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY,Y.AAA.ID,R.AAA,F.AA.ARRANGEMENT.ACTIVITY,AAA.ERR)
            Y.ACT.CLASS = R.AAA<AA.ARR.ACT.ACTIVITY.CLASS>
            IF Y.ACT.CLASS NE 'LENDING-DISBURSE-TERM.AMOUNT' AND Y.ACT.CLASS NE '' THEN
*IF R.AAA<AA.ARR.ACT.EFFECTIVE.DATE> LE TODAY THEN
                IF R.AAA<AA.ARR.ACT.EFFECTIVE.DATE> LE Y.LAST.WORK.DAY THEN
                    Y.FINAL.AAA.ID = Y.AAA.ID
                END
            END
            Y.VAR1 += 1
        REPEAT
    END
    IF Y.FINAL.AAA.ID ELSE
        RETURN
    END

    CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY,Y.FINAL.AAA.ID,R.AAA,F.AA.ARRANGEMENT.ACTIVITY,AAA.ERR)

    Y.LASTPAY.AMT    = R.AAA<AA.ARR.ACT.ORIG.TXN.AMT>
    Y.LASTPAY.DAT    = R.AAA<AA.ARR.ACT.EFFECTIVE.DATE>
RETURN
*-----------------------------------------------------------------------------
REMOVE.PAYOFF.BILLS:
*-----------------------------------------------------------------------------
    LOCATE 'PAYOFF' IN Y.BILL.TYPES<1> SETTING POS.PAYOFF THEN
        DEL Y.BILL.IDS<POS.PAYOFF>
    END
RETURN

*-----------------------------------------------------------------------------
PROCESS.BILL:
*************
    Y.BILL.CNT = DCOUNT(Y.BILL.IDS,@FM)
    Y.VAR1 = 1
    LOOP
    WHILE Y.VAR1 LE Y.BILL.CNT
        Y.BILL.ID = Y.BILL.IDS<Y.VAR1>
        R.ARRAY<1,Y.VAR1> = Y.BILL.ID
        CALL F.READ(FN.AA.BILL,Y.BILL.ID,R.BILL.DETAILS,F.AA.BILL,BILL.ERR)
        IF NOT(R.BILL.DETAILS) THEN
            R.BILL.DETAILS = ''; BILL.ERR = ''
            CALL F.READ(FN.AA.BILL.HST,Y.BILL.ID,R.BILL.DETAILS,F.AA.BILL.HST,BILL.ERR)
        END
        GOSUB GET.RESPECTIVES.AMOUNT
        Y.VAR1 += 1
    REPEAT
RETURN

*---------------------------------------------------
GET.RESPECTIVES.AMOUNT:
*---------------------------------------------------
    Y.PROPERTIES  =  R.BILL.DETAILS<AA.BD.PROPERTY>
    Y.PROP.CNT    =  DCOUNT(Y.PROPERTIES,@VM)
    Y.VAR2 = 1
    LOOP
    WHILE Y.VAR2 LE Y.PROP.CNT
        Y.PROPERTY = Y.PROPERTIES<1,Y.VAR2>
        GOSUB GET.AMOUNT
        R.ARRAY<2,Y.VAR1,Y.VAR2> = Y.PROPERTY
        R.ARRAY<3,Y.VAR1,Y.VAR2> = R.BILL.DETAILS<AA.BD.OR.PROP.AMOUNT,Y.VAR2> + ADJ.AMOUNT
        R.ARRAY<4,Y.VAR1>        = R.ARRAY<4,Y.VAR1> + (R.BILL.DETAILS<AA.BD.OR.PROP.AMOUNT,Y.VAR2> + ADJ.AMOUNT)
        Y.VAR2 += 1
    REPEAT
RETURN

*-------------------------------------
GET.AMOUNT:
*-------------------------------------
    Y.EXCLUSION.ADJ.STATUS = 'SUSPEND':@VM:'CAPTURE.BILL':@VM:'RESUME'
    Y.FINAL.AMOUNT = 0
    ADJ.AMOUNT     = 0
    Y.ADJUSTED.REF = R.BILL.DETAILS<AA.BD.ADJUST.REF,Y.VAR2>
    Y.ADJUSTED.AMT = R.BILL.DETAILS<AA.BD.ADJUST.AMT,Y.VAR2>
    Y.ADJUSTED.CNT = DCOUNT(Y.ADJUSTED.REF,@SM)
    Y.VAR3 = 1
    LOOP
    WHILE Y.VAR3 LE Y.ADJUSTED.CNT
        Y.ADJUSTED.ID = Y.ADJUSTED.REF<1,1,Y.VAR3>
        Y.SECOND.PART = FIELD(Y.ADJUSTED.ID,'-',2)
        IF Y.SECOND.PART MATCHES Y.EXCLUSION.ADJ.STATUS ELSE
            ADJ.AMOUNT += Y.ADJUSTED.AMT<1,1,Y.VAR3>
        END
        Y.VAR3 += 1
    REPEAT
RETURN

GET.ALL.BILL:

    GOSUB GET.FIND.CANCELADO
    SEL.CMD = ''; SEL.LIST = ''; NO.OF.RECS = ''; RET.CODE = '';
    SEL.CMD = "SELECT ":FN.AA.BILL:" WITH ARRANGEMENT.ID EQ ":Y.AA.ID:
    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.RECS,RET.CODE)
    Y.TOTAL.CUOTAS = NO.OF.RECS

    IF NO.OF.RECS EQ 0 THEN
        SEL.CMD = ''; SEL.LIST = ''; NO.OF.RECS = ''; RET.CODE = '';
        SEL.CMD = "SELECT ":FN.AA.BILL.HST:" WITH ARRANGEMENT.ID EQ ":Y.AA.ID:
        CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.RECS,RET.CODE)
        Y.TOTAL.CUOTAS = NO.OF.RECS
        IF NO.OF.RECS EQ 0 THEN
            Y.TOTAL.CUOTAS = NO.OF.RECS
        END
    END
    LOOP
        REMOVE Y.BILL.WOF.ID FROM SEL.LIST SETTING BIL.POST1
    WHILE  Y.BILL.WOF.ID  DO

        CALL F.READ (FN.AA.BILL,Y.BILL.WOF.ID,R.AA.BILL.1,F.AA.BILL,ERROR.AA.BILL.1)
        IF NOT (R.AA.BILL.1) THEN
            CALL F.READ (FN.AA.BILL.HST,Y.BILL.WOF.ID,R.AA.BILL.1,F.AA.BILL.HST,ERROR.AA.BILL.1)
        END

        IF Y.ESTADO.CANCELADO EQ 'YES' THEN
            Y.REPAY.REF =     R.AA.BILL.1<AA.BD.REPAY.REF>
            Y.REPAY.AMOUNT =  R.AA.BILL.1<AA.BD.REPAY.AMOUNT>
            Y.REPAY.REF = CHANGE(Y.REPAY.REF,@SM,@FM)
            Y.REPAY.REF = CHANGE(Y.REPAY.REF,@VM,@FM)
            Y.REPAY.AMOUNT = CHANGE(Y.REPAY.AMOUNT,@SM,@FM)
            Y.REPAY.AMOUNT = CHANGE(Y.REPAY.AMOUNT,@VM,@FM)
            Y.RECORD = Y.REPAY.REF<1>
            Y.FIN.AMT = Y.REPAY.AMOUNT<1>
            IF Y.FIN.AMT GT 0 THEN
                RETURN
            END
        END

        BEGIN CASE
            CASE  SUM(R.AA.BILL.1<AA.BD.OS.PROP.AMOUNT>) GT 0
                Y.FIN.AMT = Y.FIN.AMT + SUM(R.AA.BILL.1<AA.BD.OS.PROP.AMOUNT>)
            CASE SUM(R.AA.BILL.1<AA.BD.OS.PROP.AMOUNT>) EQ 0 AND SUM(R.AA.BILL.1<AA.BD.REPAY.AMOUNT>) GT 0
                Y.REPAY.AMOUNT =  R.AA.BILL.1<AA.BD.REPAY.AMOUNT>
                Y.REPAY.AMOUNT = CHANGE(Y.REPAY.AMOUNT,@SM,@FM)
                Y.REPAY.AMOUNT = CHANGE(Y.REPAY.AMOUNT,@VM,@FM)
                Y.FIN.AMT = Y.REPAY.AMOUNT<1>

            CASE  1

                Y.FIN.AMT = Y.FIN.AMT + SUM(R.AA.BILL.1<AA.BD.OR.TOTAL.AMOUNT>)
        END CASE
        RETURN
    REPEAT
RETURN


READ.FROM.ACCOUNT:
    Y.ERROR  = @FALSE
    R.AA = ''; Y.ERR = ''; R.REDO.LOG = '' ; Y.LINKED.APP.ID = ''
    CALL F.READ(FN.AA,Y.AA.ID,R.AA,F.AA,Y.ERR)
    Y.LINKED.APP.ID = R.AA<AA.ARR.LINKED.APPL.ID,1>
    CALL F.READ(FN.ACCOUNT,Y.LINKED.APP.ID,R.ACCOUNT,F.ACCOUNT,Y.ACC.ERR)
    IF NOT(R.ACCOUNT) THEN
        YACC.HID = Y.LINKED.APP.ID
        CALL EB.READ.HISTORY.REC(F.ACCOUNT.HST,YACC.HID,R.ACCOUNT,ERR.ACCOUNT)
    END

    GOSUB GET.ALT.IDWOF

RETURN


GET.ALT.IDWOF:
    ID.ALTENO = '' ; Y.ALT.ACCT.ID = '' ; Y.ALT.TYPE = ''
    Y.ALT.TYPE = R.ACCOUNT<AC.ALT.ACCT.TYPE>
    ID.ALTENO  = R.ACCOUNT<AC.ALT.ACCT.ID>
    LOCATE R.ACCOUNT<AC.CATEGORY> IN Y.CATEGORIA.WOF<1,1> SETTING C.WOF.POS THEN
        CHANGE @VM TO @FM IN Y.ALT.TYPE
        CHANGE @SM TO @FM IN Y.ALT.TYPE
        CHANGE @VM TO @FM IN ID.ALTENO
        CHANGE @SM TO @FM IN ID.ALTENO

        Y.CNT.TYPE = DCOUNT(Y.ALT.TYPE,@FM)

        FOR I.VAR = 1 TO Y.CNT.TYPE
            ID.TYPE.ACTUAL = Y.ALT.TYPE<I.VAR>[1,7]

            IF ID.TYPE.ACTUAL NE 'ALTERNO' THEN
                CONTINUE
            END
            Y.ALT.ACCT.ID = ID.ALTENO<I.VAR>[3,LEN(ID.ALTENO)]

            CALL F.READ(FN.ACCOUNT,Y.ALT.ACCT.ID,R.ACCOUNT.1,F.ACCOUNT,Y.ACC.ERR.1)
            IF NOT(R.ACCOUNT.1) THEN
                YACC.HID.HIST  = Y.ALT.ACCT.ID
                Y.ALT.ACCT.ID =YACC.HID.HIST:";1"
                CALL F.READ(FN.ACCOUNT.HST,Y.ALT.ACCT.ID,R.ACCOUNT.1,F.ACCOUNT.HST,Y.ACC.ERR.1)
            END
            Y.LEGACY.ARR =  R.ACCOUNT.1<AC.ARRANGEMENT.ID>
            Y.TOTAL.CUOTAS.1 = 0 ;  Y.LASTPAY.AMT.1 = 0
            Y.PRODUCTO.GRUPO = 'PRODUCTOS.WOF'
            CALL REDO.B.BCR.REPORT.GEN.EXT(Y.LEGACY.ARR,Y.TOTAL.CUOTAS.1,Y.LASTPAY.AMT,Y.LASTPAY.DAT, Y.MNTPAY,Y.PRODUCTO.GRUPO)

            IF Y.LASTPAY.AMT NE '' AND Y.LASTPAY.DAT NE '' THEN
                RETURN
            END
            GOSUB GET.PAGOS.FROM.AAA
            IF Y.LASTPAY.AMT NE '' AND Y.LASTPAY.DAT NE '' THEN
                RETURN
            END

        NEXT I.VAR


    END


RETURN

GET.PAGOS.FROM.AAA:
    Y.ACTIVIDADES = ''
    Y.ACTIVIDADES = ' LENDING-APPLYPAYMENT-RP.COM.SG.ADV':" ":'LENDING-APPLYPAYMENT-RP.COM.SG.ADV.CHQ'
    Y.ACTIVIDADES:= " ":'LENDING-APPLYPAYMENT-RP.CAP.INT.PYT':" ":'LENDING-APPLYPAYMENT-RP.DIR.DEBIT'
    Y.ACTIVIDADES:= " ":'LENDING-APPLYPAYMENT-RP.COM.SG.ADV.OL':" ":'LENDING-APPLYPAYMENT-RP.COM.SG.ADV.BL'
    Y.ACTIVIDADES:= " ":'LENDING-APPLYPAYMENT-RP.PAYMENT':" ":'LENDING-APPLYPAYMENT-RP.PAYOFF.CHQ'
    Y.ACTIVIDADES:= " ":'LENDING-APPLYPAYMENT-RP.PAYOFF':" ":'LENDING-SETTLE-RP.PAGO.ANTICIPADO'
    SEL.CMD.AAA = '' ; SEL.LIST.AAA = '' ; NO.OF.REC.AAA = '' ; RET.CODE.AAA = ''
    SEL.CMD.AAA = "SELECT ":FN.AA.ARRANGEMENT.ACTIVITY:" WITH ARRANGEMENT EQ ":Y.LEGACY.ARR:" AND ACTIVITY EQ ":Y.ACTIVIDADES:" BY-DSND EFFECTIVE.DATE"
    CALL EB.READLIST(SEL.CMD.AAA,SEL.LIST.AAA,'',NO.OF.REC.AAA,RET.CODE.AAA)
    LOOP
        REMOVE LEGACY.ID.AAA FROM SEL.LIST.AAA SETTING AAA.POS
    WHILE LEGACY.ID.AAA DO
        CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY,LEGACY.ID.AAA,R.AAA.LEGACY,F.AA.ARRANGEMENT.ACTIVITY,AAA.ERR.LEGACY)
        IF(R.AAA.LEGACY) THEN
            Y.LASTPAY.AMT    = R.AAA.LEGACY<AA.ARR.ACT.ORIG.TXN.AMT>
            Y.LASTPAY.DAT    = R.AAA.LEGACY<AA.ARR.ACT.EFFECTIVE.DATE>
            RETURN
        END
    REPEAT

RETURN

GET.FIND.CANCELADO:
    Y.ESTADO.CANCELADO = '';
    CALL F.READ (FN.AA,Y.AA.ID,R.AA.1,F.AA,ERROR.AA.1)
    IF R.AA.1<AA.ARR.ARR.STATUS> EQ 'CLOSE' OR R.AA.1<AA.ARR.ARR.STATUS>  EQ 'PENDING.CLOSURE' THEN
        Y.ESTADO.CANCELADO = 'YES'
    END

RETURN

END
