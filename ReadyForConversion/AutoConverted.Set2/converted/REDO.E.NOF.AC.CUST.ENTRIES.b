SUBROUTINE REDO.E.NOF.AC.CUST.ENTRIES(ENQ.DATA)

******************************************************************************
* Description : The Nofile enquiry routine to select the last system dated
*               processed transactions for the inputted customer.
* Dev by : V.P.Ashokkumar
******************************************************************************

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.DATES
    $INSERT I_F.ACCOUNT.CLASS
    $INSERT I_F.CUSTOMER.ACCOUNT
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.ACCOUNT
    $INSERT I_F.TELLER
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.REDO.H.REPORTS.PARAM


    GOSUB INIT
    GOSUB LOCATE.DET
    GOSUB PROCESS.MAIN
RETURN

INIT:
*****
    YCUST.NO = ''; Y.CUS.ENT = ''; Y.SAVINGS.CATEG = ''; ERR.ACCOUNT.CLASS = ''; YCUST.ID = ''
    R.ACCOUNT.CLASS = ''; R.CUSTOMER.ACCOUNT = ''; ERR.CUSTOMER.ACCOUNT = ''; YHDR.ARR= ''
    R.JOINT.CONTRACTS.XREF = ''; ERR.JOINT.CONTRACTS.XREF = ''; YTOT.AMT = 0
    FN.CUSTOMER.ACCOUNT = 'F.CUSTOMER.ACCOUNT'; F.CUSTOMER.ACCOUNT = ''
    CALL OPF(FN.CUSTOMER.ACCOUNT,F.CUSTOMER.ACCOUNT)
    FN.TELLER = 'F.TELLER'; F.TELLER = ''
    CALL OPF(FN.TELLER,F.TELLER)
    FN.FUNDS.TRANSFER = 'F.FUNDS.TRANSFER'; F.FUNDS.TRANSFER = ''
    CALL OPF(FN.FUNDS.TRANSFER,F.FUNDS.TRANSFER)
    FN.TELLER.HST = 'F.TELLER$HIS'; F.TELLER.HST = ''
    CALL OPF(FN.TELLER.HST,F.TELLER.HST)
    FN.FUNDS.TRANSFER.HST = 'F.FUNDS.TRANSFER$HIS'; F.FUNDS.TRANSFER.HST = ''
    CALL OPF(FN.FUNDS.TRANSFER.HST,F.FUNDS.TRANSFER.HST)
    FN.ACCOUNT = 'F.ACCOUNT'; F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    FN.ACCOUNT.CLASS = 'F.ACCOUNT.CLASS'; F.ACCOUNT.CLASS = ''
    CALL OPF(FN.ACCOUNT.CLASS,F.ACCOUNT.CLASS)
    FN.STMT.ENTRY = 'F.STMT.ENTRY'; F.STMT.ENTRY = ''
    CALL OPF(FN.STMT.ENTRY,F.STMT.ENTRY)
    FN.JOINT.CONTRACTS.XREF='F.JOINT.CONTRACTS.XREF'; F.JOINT.CONTRACTS.XREF=''
    CALL OPF(FN.JOINT.CONTRACTS.XREF,F.JOINT.CONTRACTS.XREF)
    FN.ACCT.ENT = 'F.ACCT.ENT.LWORK.DAY'; F.ACCT.ENT = ''
    CALL OPF(FN.ACCT.ENT,F.ACCT.ENT)
    FN.REDO.H.REPORTS.PARAM = 'F.REDO.H.REPORTS.PARAM'; F.REDO.H.REPORTS.PARAM = ''
    CALL OPF(FN.REDO.H.REPORTS.PARAM,F.REDO.H.REPORTS.PARAM)
RETURN

LOCATE.DET:
***********
    YHDR.ARR = "Numero Cuenta|Fecha|Hora TRX|Cajero|Sucursal|Numero de TRX|Valor Transacc|Usuario Autoriza|Nombre Cliente|CONCEPTO"
    REDO.H.REPORTS.PARAM.ID = 'REDO.OPER.ENQ'
    R.REDO.H.REPORTS.PARAM = ''; REDO.PARAM.ERR = ''
    CALL F.READ(FN.REDO.H.REPORTS.PARAM,REDO.H.REPORTS.PARAM.ID,R.REDO.H.REPORTS.PARAM,F.REDO.H.REPORTS.PARAM,REDO.PARAM.ERR)
    IF R.REDO.H.REPORTS.PARAM THEN
        FN.CHK.DIR = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.DIR>
    END


    LOCATE "ENTRY.DATE" IN D.FIELDS<1> SETTING Y.AC.ENT.POS THEN
        Y.CUS.DTE = D.RANGE.AND.VALUE<Y.AC.ENT.POS>
    END
    YLST.DATE = R.DATES(EB.DAT.LAST.WORKING.DAY)
    IF NOT(Y.CUS.DTE) THEN
        Y.CUS.DTE = YLST.DATE
    END

    CALL CACHE.READ(FN.ACCOUNT.CLASS, 'SAVINGS', R.ACCOUNT.CLASS, ERR.ACCOUNT.CLASS)
    Y.SAVINGS.CATEG = R.ACCOUNT.CLASS<AC.CLS.CATEGORY>
    Y.SAVINGS.CATEG = SORT(Y.SAVINGS.CATEG)

    F.CHK.DIR = ''
    CALL OPF(FN.CHK.DIR,F.CHK.DIR)
    EXTRACT.FILE.ID = 'Reporte.Abonos.Unidades.':YLST.DATE:'.csv'
    R.FIL = ''; READ.FIL.ERR = ''
    CALL F.READ(FN.CHK.DIR,EXTRACT.FILE.ID,R.FIL,F.CHK.DIR,READ.FIL.ERR)
    IF R.FIL THEN
        DELETE F.CHK.DIR,EXTRACT.FILE.ID
    END
RETURN

PROCESS.MAIN:
*************

    YTOT.AMT = 0
    GOSUB PROCESS

    IF ENQ.DATA THEN
        YHDR.ARR<-1> = ENQ.DATA
    END
    CHANGE ',' TO ' ' IN YHDR.ARR
    CHANGE '|' TO ',' IN YHDR.ARR
    WRITE YHDR.ARR ON F.CHK.DIR, EXTRACT.FILE.ID ON ERROR
        RETURN
    END
RETURN

PROCESS:
********

    SEL.CMD = ""
    SEL.LIST = ""
    NO.OF.REC = ""
    SEL.ERR = ""
    FI.POS = ""

    SEL.CMD = "SELECT FBNK.ACCOUNT WITH CATEGORY EQ 6023"
    CALL EB.READLIST(SEL.CMD,SEL.LIST,"",NO.OF.RECS,SEL.ERR)

    LOOP
        REMOVE ACCT.ID FROM SEL.LIST SETTING CU.POSN
    WHILE ACCT.ID:CU.POSN

        CALL OCOMO("CUENTA :" : ACCT.ID)

        ERR.ACCOUNT = ''; R.ACCOUNT = ''; YAC.CATEG = ''; YCUST = ''
        YACCT.TIT.1 = ''; YACCT.TIT.2 = ''; YACCT.TIT = ''
        CALL F.READ(FN.ACCOUNT,ACCT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
        YAC.CATEG = R.ACCOUNT<AC.CATEGORY>
        YCUST = R.ACCOUNT<AC.CUSTOMER>
        YACCT.TIT.1 = R.ACCOUNT<AC.ACCOUNT.TITLE.1>
        YACCT.TIT.2 = R.ACCOUNT<AC.ACCOUNT.TITLE.2>
        YACCT.TIT = YACCT.TIT.1:" ":YACCT.TIT.2
        LOCATE YAC.CATEG IN Y.SAVINGS.CATEG SETTING CATEG.POS ELSE
            CONTINUE
        END

        YRELAT.CDE = R.ACCOUNT<AC.RELATION.CODE>
        IF YRELAT.CDE AND YCUST.NO NE YCUST THEN
            GOSUB GET.JOINT.HOLD
            IF YGRP.FLG NE 1 THEN
                CONTINUE
            END
        END

        ACCT.ERR = ''; YID.LIST = ''
        CALL F.READ(FN.ACCT.ENT,ACCT.ID,YID.LIST,F.ACCT.ENT,ACCT.ERR)
        IF YID.LIST THEN
            GOSUB GET.STMT.ENTRY
        END
    REPEAT
    IF ENQ.DATA AND YTOT.AMT NE 0 THEN
        ENQ.DATA<-1> = "TOTAL ||||||":YTOT.AMT:"|||"
    END
RETURN

GET.STMT.ENTRY:
***************
    LOOP
        REMOVE Y.STMT.ENTRY FROM YID.LIST SETTING STMT.POS
    WHILE Y.STMT.ENTRY:STMT.POS
        R.STMT.ENTRY = ''; STMT.ERR = ''; FLD1 = ''; FLD2 = ''; FLD3 = ''; FLD4 = ''
        FLD6 = ''; FLD7 = ''; FLD8 = ''; FLD9 = ''; FLD10 = ''
        CALL F.READ(FN.STMT.ENTRY,Y.STMT.ENTRY,R.STMT.ENTRY,F.STMT.ENTRY,STMT.ERR)
        IF NOT(R.STMT.ENTRY) THEN
            CONTINUE
        END
        FLD1 = R.STMT.ENTRY<AC.STE.ACCOUNT.NUMBER>
        FLD2 = R.STMT.ENTRY<AC.STE.BOOKING.DATE>
        FLD3 = R.STMT.ENTRY<AC.STE.DATE.TIME>[7,5]
        FLD4 = R.STMT.ENTRY<AC.STE.COMPANY.CODE>
        FLD6 = R.STMT.ENTRY<AC.STE.AMOUNT.LCY>
        FLD7 = R.STMT.ENTRY<AC.STE.INPUTTER>
        FLD7 = FIELD(FLD7,'_',2)
        FLD8 = R.STMT.ENTRY<AC.STE.TRANS.REFERENCE>
        IF NOT(FLD8) THEN
            FLD8 = R.STMT.ENTRY<AC.STE.OUR.REFERENCE>
        END
        FLD8 = FIELD(FLD8,'\',1)
        IF FLD8[1,1] EQ '1' THEN
            FLD8 = FLD8[2,99]
        END

        IF FLD8[1,2] EQ 'FT' THEN
            YREF.ID = FLD8
            GOSUB READ.FT
        END
        IF FLD8[1,2] EQ 'TT' THEN
            YREF.ID = FLD8
            GOSUB READ.TT
        END
        YTOT.AMT += FLD6
        ENQ.DATA<-1> = FLD1:'|':FLD2:'|':FLD3:'|':FLD10:'|':FLD4:'|':FLD8:'|':FLD6:'|':FLD7:'|':YACCT.TIT:'|':FLD9
    REPEAT
RETURN

READ.FT:
********
    R.FUNDS.TRANSFER = ''; FUNDS.TRANSFER.ERR = ''
    CALL F.READ(FN.FUNDS.TRANSFER,YREF.ID,R.FUNDS.TRANSFER,F.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)
    IF NOT(R.FUNDS.TRANSFER) THEN
        YREF.ID.HST = YREF.ID; FUNDS.TRANSFER.ERR = ''
        CALL EB.READ.HISTORY.REC(F.FUNDS.TRANSFER.HST,YREF.ID.HST,R.FUNDS.TRANSFER,FUNDS.TRANSFER.ERR)
    END
    FLD9 = R.FUNDS.TRANSFER<FT.PAYMENT.DETAILS>
RETURN

READ.TT:
********
    R.TELLER = ''; TELLER.ERR = ''
    CALL F.READ(FN.TELLER,YREF.ID,R.TELLER,F.TELLER,TELLER.ERR)
    IF NOT(R.TELLER) THEN
        YREF.ID.HST = YREF.ID; TELLER.ERR = ''
        CALL EB.READ.HISTORY.REC(F.TELLER.HST,YREF.ID.HST,R.TELLER,TELLER.ERR)
    END
    FLD10 = R.TELLER<TT.TE.TELLER.ID.1>
    FLD9 = R.TELLER<TT.TE.NARRATIVE.2>
    CHANGE @VM TO ' ' IN FLD9
    CHANGE @SM TO ' ' IN FLD9
RETURN

GET.JOINT.HOLD:
***************
    JOINT.HOLD.VAL = "500":@FM:"501":@FM:"600":@FM:"601"
    YCNT = 1
    LOOP
        REMOVE JT.HOLD.ID FROM YRELAT.CDE SETTING JT.POSN
    WHILE JT.HOLD.ID:JT.POSN

        LOCATE JT.HOLD.ID IN JOINT.HOLD.VAL SETTING PONN THEN
            Y.RELAT.CDE = ''; YJOIN.HOLD = ''
            YJOIN.HOLD = R.ACCOUNT<AC.JOINT.HOLDER,YCNT>
            IF YJOIN.HOLD EQ YCUST.NO THEN
                YGRP.FLG = 1
            END
        END
        YCNT += 1
    REPEAT
RETURN

END
