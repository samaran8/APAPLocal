SUBROUTINE REDO.V.AUT.DD.NCF.GEN
*-------------------------------------------------------------------------------
* DESCRIPTION:This AUTH routine will assign NCF for the AA  payment.
* ------------------------------------------------------------------------------------------
* Input/Output:
*--------------
* IN  : Y.CUSTOMER.ID
* OUT : -NA-
*
* Dependencies:
*---------------
* CALLS     : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference            Description
* 24-01-2012         H GANESH       PACS00175283 -N.45    Modified to add a condition to check the repay account has interest comp.
*---------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.ACCOUNT
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.TELLER
    $INSERT I_F.TAX
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.CATEG.ENTRY
    $INSERT I_F.USER
    $INSERT I_F.REDO.L.NCF.UNMAPPED
    $INSERT I_F.REDO.NCF.ISSUED
    $INSERT I_F.REDO.L.NCF.STATUS
    $INSERT I_F.REDO.AA.REPAY
    $INSERT I_F.REDO.L.NCF.STOCK
    $INSERT I_F.REDO.AA.INTEREST.CHARGE

    GOSUB INIT
    GOSUB GET.LOC.REF
    GOSUB CHECK.PROCESS
RETURN
*----
INIT:
*-----
    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    MULTI.STMT = ''

    FN.AA.ACCOUNT.DETAILS='F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS=''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)

    FN.AA.BILL.DETAILS='F.AA.BILL.DETAILS'
    F.AA.BILL.DETAILS =''
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)

    FN.TAX = 'F.TAX'
    F.TAX = ''
    CALL OPF(FN.TAX,F.TAX)

    FN.REDO.L.NCF.ISSUED='F.REDO.NCF.ISSUED'
    F.REDO.NCF.ISSUED=''
    CALL OPF(FN.REDO.L.NCF.ISSUED,F.REDO.L.NCF.ISSUED)

    FN.REDO.L.NCF.STATUS='F.REDO.L.NCF.STATUS'
    F.REDO.L.NCF.STATUS=''
    CALL OPF(FN.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS)

    FN.REDO.L.NCF.UNMAPPED='F.REDO.L.NCF.UNMAPPED'
    F.REDO.L.NCF.UNMAPPED =''
    CALL OPF(FN.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED)

    FN.REDO.L.NCF.STOCK='F.REDO.L.NCF.STOCK'
    F.REDO.L.NCF.STOCK=''
    CALL OPF(FN.REDO.L.NCF.STOCK,F.REDO.L.NCF.STOCK)

    FN.REDO.AA.REPAY='F.REDO.AA.REPAY'
    F.REDO.AA.REPAY=''
    CALL OPF(FN.REDO.AA.REPAY,F.REDO.AA.REPAY)

RETURN
*-----------
GET.LOC.REF:
*-----------
    LREF.APP='FUNDS.TRANSFER':@FM:'TELLER'
    LREF.FIELD='INTEREST.AMOUNT':@VM:'L.NCF.REQUIRED':@VM:'L.NCF.NUMBER':@VM:'L.PRINC.AMT.DUE':@VM:'L.INT.AMT.DUE':@VM:'L.FT.OVRDUE.AMT':@VM:'L.FT.TAX.TYPE':@VM:'L.NCF.TAX.NUM':@VM:'WAIVE.TAX':@VM:'L.TT.WV.TAX':@VM:'L.TT.TAX.AMT'
    LREF.FIELD<-1>:='INTEREST.AMOUNT':@VM:'L.NCF.REQUIRED':@VM:'L.NCF.NUMBER':@VM:'L.PRINC.AMT.DUE':@VM:'L.INT.AMT.DUE':@VM:'L.TT.OVRDUE.AMT':@VM:'L.TT.TAX.TYPE':@VM:'L.NCF.TAX.NUM':'TAX.AMOUNT':@VM:'WAIVE.TAX'
    LREF.POS=''
    CALL MULTI.GET.LOC.REF(LREF.APP,LREF.FIELD,LREF.POS)
    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        Y.INT.AMT.POS = LREF.POS<1,1>
        Y.L.NCF.REQ.POS = LREF.POS<1,2>
        Y.NCF.NUM.POS = LREF.POS<1,3>
        Y.PRINC.AMT.DUE.POS = LREF.POS<1,4>
        Y.INT.AMT.DUE.POS = LREF.POS<1,5>
        Y.OVERDUE.AMT.POS = LREF.POS<1,6>
        Y.TAX.TYPE = LREF.POS<1,7>
        Y.NCF.TAX.NUM.POS = LREF.POS<1,8>
        FT.WAIVE.TAX.POS = LREF.POS<1,9>
        Y.POS.AV.TAX = LREF.POS<1,10>
        Y.POS.TX.AMT = LREF.POS<1,11>
    END
RETURN
*-------------
CHECK.PROCESS:
*-------------


    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        VAR.STATUS=R.NEW(FT.RECORD.STATUS)
        VAR.TXN.DATE     = R.NEW(FT.DATE.TIME)
        VAR.DATE         = 20:VAR.TXN.DATE[1,6]
    END
    IF APPLICATION EQ 'TELLER' THEN
        VAR.STATUS=R.NEW(TT.TE.RECORD.STATUS)
        VAR.TXN.DATE     = R.NEW(TT.TE.DATE.TIME)
        VAR.DATE         = 20:VAR.TXN.DATE[1,6]
    END


    IF VAR.STATUS[1,1] EQ 'R' THEN
        GOSUB DELETION
    END ELSE
        GOSUB SELECTION
    END
RETURN
*---------
SELECTION:
*---------

    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        VAR.ACCOUNT=R.NEW(FT.CREDIT.ACCT.NO)
        VAR.AMOUNT=R.NEW(FT.CREDIT.AMOUNT)
        IF NOT(VAR.AMOUNT) THEN
            VAR.AMOUNT = R.NEW(FT.DEBIT.AMOUNT)
        END
        VAR.CUSTOMER=R.NEW(FT.CREDIT.CUSTOMER)
        VAR.CURRENCY = R.NEW(FT.CREDIT.CURRENCY)
        VAL.DATE = VAR.DATE
        VAR.DR.ACCOUNT = R.NEW(FT.DEBIT.ACCT.NO)
        VAR.DR.CUSTOMER = R.NEW(FT.DEBIT.CUSTOMER)
        VAR.DR.CURRENCY = R.NEW(FT.DEBIT.CURRENCY)
        GOSUB PROCESS
        LOC.WAIVE.TAX = R.NEW(FT.LOCAL.REF)<1,FT.WAIVE.TAX.POS>
        TAXATION.CODE = R.NEW(FT.LOCAL.REF)<1,Y.TAX.TYPE>
        GOSUB CHECK.TAX.AMT
        IF VAR.AA.ID NE '' THEN
            GOSUB FT.ASSIGN
        END
    END
RETURN
*-------
PROCESS:
*-------
    CALL F.READ(FN.ACCOUNT,VAR.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ACCT.ERR)
    VAR.AA.ID=R.ACCOUNT<AC.ARRANGEMENT.ID>

    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        Y.OS.PROP.AMT.ACCOUNT=R.NEW(FT.LOCAL.REF)<1,Y.PRINC.AMT.DUE.POS>
        Y.OS.PROP.AMT.INT=R.NEW(FT.LOCAL.REF)<1,Y.INT.AMT.DUE.POS>

    END
    Y.OS.PROP.AMT.TOT=Y.OS.PROP.AMT.INT+Y.OS.PROP.AMT.ACCOUNT
RETURN
*----------
FT.ASSIGN:
*----------

    R.NEW(FT.LOCAL.REF)<1,Y.INT.AMT.POS>=Y.OS.PROP.AMT.INT
    IF Y.OS.PROP.AMT.TOT EQ '' THEN
        Y.OS.PROP.AMT.TOT='0'
    END
    R.REDO.AA.REPAY<AA.RP.AMOUNT>=VAR.AMOUNT-Y.OS.PROP.AMT.TOT
    R.REDO.AA.REPAY<AA.RP.DATE.PAYMENT>=TODAY
    R.REDO.AA.REPAY<AA.RP.TXN.ID>=ID.NEW

*IF VAR.AMOUNT GT 0 THEN   ;* Interst component for repay acc should be higher than 0.
*VAR.AMOUNT = VAR.CURRENCY:' ':VAR.AMOUNT
*GOSUB GET.NCF ;* We are generating the NCF for AA amount @ ACTIVITY API routine level.
*GOSUB ASSIGN.NCF.FT
*END
    IF VAR.TAX.AMT GT 0 THEN
        GOSUB GET.NCF.TAX
        GOSUB ASSIGN.NCF.FT.TAX
    END
    IF Y.OS.PROP.AMT.INT NE '' AND Y.OS.PROP.AMT.INT NE '0' ELSE
        GOSUB AA.REPAY.UPD
    END

    CALL F.RELEASE(FN.REDO.L.NCF.STOCK,Y.STK.ID,F.REDO.L.NCF.STOCK)

RETURN
*----------
GET.NCF:
*----------
    Y.STK.ID = 'SYSTEM'
    Y.RTT = ''
    R.NCF.STOCK=''

    CALL F.READU(FN.REDO.L.NCF.STOCK,Y.STK.ID,R.NCF.STOCK,F.REDO.L.NCF.STOCK,ST.ERR,Y.RTT)

    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG> GT '0' THEN
        VAR.SER =R.NCF.STOCK<ST.SERIES>
        VAR.BUS.DIV = R.NCF.STOCK<ST.BUSINESS.DIV>
        VAR.PECF =R.NCF.STOCK<ST.PECF>
        VAR.AICF = R.NCF.STOCK<ST.AICF>
        VAR.TCF = R.NCF.STOCK<ST.TCF>
        VAR.SEQ.NO = R.NCF.STOCK<ST.SEQUENCE.NO>
        NCF.NUMBER = VAR.SER:VAR.BUS.DIV:VAR.PECF:VAR.AICF:VAR.TCF:VAR.SEQ.NO
        VAR.PREV.RANGE=R.NCF.STOCK<ST.PRE.ED.RG.OR>
        VAR.PREV.RANGE=VAR.PREV.RANGE<DCOUNT(VAR.PREV.RANGE,@VM)>
        IF R.NCF.STOCK<ST.SEQUENCE.NO> EQ VAR.PREV.RANGE THEN
            R.NCF.STOCK<ST.SEQUENCE.NO>=R.NCF.STOCK<ST.L.STRT.RNGE.ORG>
        END ELSE
            R.NCF.STOCK<ST.SEQUENCE.NO>=R.NCF.STOCK<ST.SEQUENCE.NO>+1
        END
        R.NCF.STOCK<ST.SEQUENCE.NO>=FMT(R.NCF.STOCK<ST.SEQUENCE.NO>,'8"0"R')
        R.NCF.STOCK<ST.NCF.ISSUED.ORG>=R.NCF.STOCK<ST.NCF.ISSUED.ORG>+1
        R.NCF.STOCK<ST.QTY.AVAIL.ORG>=R.NCF.STOCK<ST.QTY.AVAIL.ORG>-1
        IF  R.NCF.STOCK<ST.QTY.AVAIL.ORG> GE R.NCF.STOCK<ST.L.MIN.NCF.ORG>  THEN
            R.NCF.STOCK<ST.NCF.STATUS.ORG>='AVAILABLE'
        END ELSE
            R.NCF.STOCK<ST.NCF.STATUS.ORG>='UNAVAILABLE'
        END
    END
RETURN
*-------------
ASSIGN.NCF.FT:
*-------------
    R.REDO.AA.REPAY<AA.RP.ACCOUNT>      = R.NEW(FT.CREDIT.ACCT.NO)
    R.REDO.AA.REPAY<AA.RP.CUSTOMER>     = VAR.CUSTOMER
    R.NCF.ISSUED<ST.IS.TXN.ID>          = ID.NEW
    R.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>   = VAR.AMOUNT
    R.NCF.ISSUED<ST.IS.ACCOUNT>         = R.NEW(FT.DEBIT.ACCT.NO)
    R.NCF.ISSUED<ST.IS.CUSTOMER>        = R.NEW(FT.DEBIT.CUSTOMER)
    R.NCF.ISSUED<ST.IS.TXN.TYPE>        = R.NEW(FT.TRANSACTION.TYPE)
    R.NCF.ISSUED<ST.IS.DATE>            = VAR.DATE
    NCF.IS.CNT                          = DCOUNT(R.NCF.ISSUED<ST.IS.NCF>,@VM)
    R.NCF.ISSUED<ST.IS.NCF,NCF.IS.CNT+1>= NCF.NUMBER
    R.NCF.STATUS<NCF.ST.TRANSACTION.ID> = ID.NEW
    R.NCF.STATUS<NCF.ST.CUSTOMER.ID>    = R.NEW(FT.DEBIT.CUSTOMER)
    R.NCF.STATUS<NCF.ST.STATUS>         = 'AVAILABLE'
    R.NCF.STATUS<NCF.ST.DATE>           = VAR.DATE
    R.NCF.STATUS<NCF.ST.CHARGE.AMOUNT>  = VAR.AMOUNT
    NCF.CNT                             = DCOUNT(R.NCF.STATUS<NCF.ST.NCF>,@VM)
    R.NCF.STATUS<NCF.ST.NCF,NCF.CNT+1>  = NCF.NUMBER
    R.NCF.UNMAPPED<ST.UN.TXN.TYPE>      = R.NEW(FT.TRANSACTION.TYPE)
    R.NCF.UNMAPPED<ST.UN.CHARGE.AMOUNT> = VAR.AMOUNT
    R.NCF.UNMAPPED<ST.UN.TXN.ID>        = ID.NEW
    R.NCF.UNMAPPED<ST.UN.DATE>          = VAR.DATE
    R.NCF.UNMAPPED<ST.UN.BATCH>         ='NO'
    R.NCF.UNMAPPED<ST.UN.ACCOUNT>       = R.NEW(FT.DEBIT.ACCT.NO)
    R.NCF.UNMAPPED<ST.UN.CUSTOMER>      = R.NEW(FT.DEBIT.CUSTOMER)
    R.NCF.ID                            = R.NEW(FT.DEBIT.CUSTOMER):'.':VAR.DATE:'.':ID.NEW
    GOSUB WRITE.NCF
RETURN
*---------
WRITE.NCF:
*---------
    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN

        VAR.NCF.REQUIRED=R.NEW(FT.LOCAL.REF)<1,Y.L.NCF.REQ.POS>
        R.NEW(FT.LOCAL.REF)<1,Y.NCF.NUM.POS>=NCF.NUMBER
    END
    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG>  GT '0' AND VAR.NCF.REQUIRED EQ 'YES' THEN
        CALL F.WRITE(FN.REDO.L.NCF.ISSUED,R.NCF.ID,R.NCF.ISSUED)
    END
    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG>  GT '0' OR VAR.NCF.REQUIRED EQ 'YES' ELSE
        CALL F.WRITE(FN.REDO.L.NCF.UNMAPPED,R.NCF.ID,R.NCF.UNMAPPED)
    END
    CALL F.WRITE(FN.REDO.L.NCF.STOCK,'SYSTEM',R.NCF.STOCK)
    CALL F.WRITE(FN.REDO.L.NCF.STATUS,R.NCF.ID,R.NCF.STATUS)
    IF Y.OS.PROP.AMT.TOT EQ '0' THEN
        CALL F.WRITE(FN.REDO.AA.REPAY,VAR.AA.ID,R.REDO.AA.REPAY)
    END

* CALL F.RELEASE(FN.REDO.L.NCF.STOCK,Y.STK.ID,F.REDO.L.NCF.STOCK)

RETURN
*----------
GET.NCF.TAX:
*----------
    Y.STK.ID = 'SYSTEM' ; Y.RTT = ''
    IF NOT(R.NCF.STOCK) THEN

*    CALL F.READ(FN.REDO.L.NCF.STOCK,Y.STK.ID,R.NCF.STOCK,F.REDO.L.NCF.STOCK,ST.ERR) ;*Tus Start
        CALL CACHE.READ(FN.REDO.L.NCF.STOCK,Y.STK.ID,R.NCF.STOCK,ST.ERR) ; * Tus End
    END
    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG> GT '0' THEN
        VAR.SER =R.NCF.STOCK<ST.SERIES>
        VAR.BUS.DIV = R.NCF.STOCK<ST.BUSINESS.DIV>
        VAR.PECF =R.NCF.STOCK<ST.PECF>
        VAR.AICF = R.NCF.STOCK<ST.AICF>
        VAR.TCF = R.NCF.STOCK<ST.TCF>
        VAR.SEQ.NO = R.NCF.STOCK<ST.SEQUENCE.NO>
        IF NCF.NUMBER THEN
            VAR.SEQ.NO = FMT(VAR.SEQ.NO,'8"0"R')
            NCF.NUMBER.TAX = VAR.SER:VAR.BUS.DIV:VAR.PECF:VAR.AICF:VAR.TCF:VAR.SEQ.NO
        END ELSE
            NCF.NUMBER.TAX = VAR.SER:VAR.BUS.DIV:VAR.PECF:VAR.AICF:VAR.TCF:VAR.SEQ.NO
        END
        VAR.PREV.RANGE=R.NCF.STOCK<ST.PRE.ED.RG.OR>
        VAR.PREV.RANGE=VAR.PREV.RANGE<DCOUNT(VAR.PREV.RANGE,@VM)>
        IF R.NCF.STOCK<ST.SEQUENCE.NO> EQ VAR.PREV.RANGE THEN
            R.NCF.STOCK<ST.SEQUENCE.NO>=R.NCF.STOCK<ST.L.STRT.RNGE.ORG>
        END ELSE
            R.NCF.STOCK<ST.SEQUENCE.NO>=R.NCF.STOCK<ST.SEQUENCE.NO>+1
        END
        R.NCF.STOCK<ST.SEQUENCE.NO>=FMT(R.NCF.STOCK<ST.SEQUENCE.NO>,'8"0"R')
        R.NCF.STOCK<ST.NCF.ISSUED.ORG>=R.NCF.STOCK<ST.NCF.ISSUED.ORG>+1
        R.NCF.STOCK<ST.QTY.AVAIL.ORG>=R.NCF.STOCK<ST.QTY.AVAIL.ORG>-1
        IF  R.NCF.STOCK<ST.QTY.AVAIL.ORG> GE R.NCF.STOCK<ST.L.MIN.NCF.ORG>  THEN
            R.NCF.STOCK<ST.NCF.STATUS.ORG>='AVAILABLE'
        END ELSE
            R.NCF.STOCK<ST.NCF.STATUS.ORG>='UNAVAILABLE'
        END
    END
RETURN
*------------------
ASSIGN.NCF.FT.TAX:
*------------------
    R.NCF.ISSUED<ST.IS.TXN.ID>            = ID.NEW
    R.NCF.ISSUED<ST.IS.TAX.AMOUNT>        = VAR.TAX.AMT
    R.NCF.ISSUED<ST.IS.ACCOUNT>           = R.NEW(FT.DEBIT.ACCT.NO)
    R.NCF.ISSUED<ST.IS.CUSTOMER>          = R.NEW(FT.DEBIT.CUSTOMER)
    R.NCF.ISSUED<ST.IS.TXN.TYPE>          = R.NEW(FT.TRANSACTION.TYPE)
    R.NCF.ISSUED<ST.IS.DATE>              = VAR.DATE
    NCF.IS.CNT                            = DCOUNT(R.NCF.ISSUED<ST.IS.NCF>,@VM)
    R.NCF.ISSUED<ST.IS.NCF,NCF.IS.CNT+1>  = NCF.NUMBER.TAX
    R.NCF.STATUS<NCF.ST.TRANSACTION.ID>   = ID.NEW
    R.NCF.STATUS<NCF.ST.CUSTOMER.ID>      = R.NEW(FT.DEBIT.CUSTOMER)
    R.NCF.STATUS<NCF.ST.STATUS>           = 'AVAILABLE'
    R.NCF.STATUS<NCF.ST.DATE>             = VAR.DATE
    R.NCF.STATUS<NCF.ST.TAX.AMOUNT>       = VAR.TAX.AMT
    NCF.CNT                               = DCOUNT(R.NCF.STATUS<NCF.ST.NCF>,@VM)
    R.NCF.STATUS<NCF.ST.NCF,NCF.CNT+1>    = NCF.NUMBER.TAX
    R.NCF.UNMAPPED<ST.UN.TXN.TYPE>        = R.NEW(FT.TRANSACTION.TYPE)
    R.NCF.UNMAPPED<ST.UN.TAX.AMOUNT>      = VAR.TAX.AMT
    R.NCF.UNMAPPED<ST.UN.TXN.ID>          = ID.NEW
    R.NCF.UNMAPPED<ST.UN.DATE>            = VAR.DATE
    R.NCF.UNMAPPED<ST.UN.BATCH>           ='NO'
    R.NCF.UNMAPPED<ST.UN.ACCOUNT>         = R.NEW(FT.DEBIT.ACCT.NO)
    R.NCF.UNMAPPED<ST.UN.CUSTOMER>        = R.NEW(FT.DEBIT.CUSTOMER)
    R.NCF.ID                              = R.NEW(FT.DEBIT.CUSTOMER):'.':VAR.DATE:'.':ID.NEW
    GOSUB WRITE.NCF.TAX
RETURN
*-------------
WRITE.NCF.TAX:
*-------------
    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        VAR.NCF.REQUIRED=R.NEW(FT.LOCAL.REF)<1,Y.L.NCF.REQ.POS>
*        IF VAR.NCF.REQUIRED EQ 'YES' THEN
        R.NEW(FT.LOCAL.REF)<1,Y.NCF.TAX.NUM.POS>=NCF.NUMBER.TAX
*       END
    END
    IF APPLICATION EQ 'TELLER' THEN
        VAR.NCF.REQUIRED=R.NEW(TT.TE.LOCAL.REF)<1,Y.L.NCF.REQ.POS>
        IF VAR.NCF.REQUIRED EQ 'YES' THEN
            R.NEW(TT.TE.LOCAL.REF)<1,Y.NCF.TAX.NUM.POS>=NCF.NUMBER.TAX
        END
    END
    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG>  GT '0' AND VAR.NCF.REQUIRED EQ 'YES' THEN
        CALL F.WRITE(FN.REDO.L.NCF.ISSUED,R.NCF.ID,R.NCF.ISSUED)
    END
    IF R.NCF.STOCK<ST.QTY.AVAIL.ORG>  GT '0' OR VAR.NCF.REQUIRED EQ 'YES' ELSE
        CALL F.WRITE(FN.REDO.L.NCF.UNMAPPED,R.NCF.ID,R.NCF.UNMAPPED)
    END
    CALL F.WRITE(FN.REDO.L.NCF.STOCK,'SYSTEM',R.NCF.STOCK)
    CALL F.WRITE(FN.REDO.L.NCF.STATUS,R.NCF.ID,R.NCF.STATUS)

*   CALL F.RELEASE(FN.REDO.L.NCF.STOCK,Y.STK.ID,F.REDO.L.NCF.STOCK)

RETURN
*----------
DELETION:
*----------
    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        VAR.ACCOUNT=R.NEW(FT.CREDIT.ACCT.NO)
    END
    IF APPLICATION EQ 'TELLER' THEN
        IF R.NEW(TT.TE.DR.CR.MARKER) EQ 'CREDIT' THEN
            VAR.ACCOUNT=R.NEW(TT.TE.ACCOUNT.1)
        END ELSE
            VAR.ACCOUNT=R.NEW(TT.TE.ACCOUNT.2)
        END
    END
    CALL F.READ(FN.ACCOUNT,VAR.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ACCT.ERR)
    VAR.AA.ID=R.ACCOUNT<AC.ARRANGEMENT.ID>
    CALL F.DELETE(FN.REDO.AA.REPAY,VAR.AA.ID)
RETURN
*-----------
AA.REPAY.UPD:
*-----------
    IF VAR.AMOUNT GT Y.OS.PROP.AMT.TOT THEN
        R.REDO.AA.REPAY<AA.RP.AMOUNT>=VAR.AMOUNT-Y.OS.PROP.AMT.TOT
        R.REDO.AA.REPAY<AA.RP.DATE.PAYMENT>=TODAY
        R.REDO.AA.REPAY<AA.RP.TXN.ID>=ID.NEW
        CALL F.WRITE(FN.REDO.AA.REPAY,VAR.AA.ID,R.REDO.AA.REPAY)
    END
RETURN
*----------------------
CHECK.TAX.AMT:
*----------------------
* IF R.NEW(FT.TOTAL.CHARGE.AMOUNT) THEN
*     VAR.TAX.AMT = R.NEW(FT.TOTAL.CHARGE.AMOUNT)
* END

    Y.WAIVE.TX = R.NEW(FT.LOCAL.REF)<1,Y.POS.AV.TAX>
    Y.WAIVE.TX = CHANGE(Y.WAIVE.TX,@SM,@FM)
    LOC.WAIVE.TAX.CNT = DCOUNT(Y.WAIVE.TX,@FM)

    FT.DR.CURRENCY  = R.NEW(FT.DEBIT.CURRENCY)

    VAR.TAX.AMT = ''

    TAX.CNT = 1
    LOOP
    WHILE TAX.CNT LE LOC.WAIVE.TAX.CNT
        Y.LOC.WAIVE.TAX.VALUE = Y.WAIVE.TX<TAX.CNT>
        IF Y.LOC.WAIVE.TAX.VALUE NE 'YES' THEN
            VAR.TAX.AMT = R.NEW(FT.LOCAL.REF)<1,Y.POS.TX.AMT,TAX.CNT> + VAR.TAX.AMT
            LOC.WAIVE.TAX.FLAG = 1
        END
        TAX.CNT += 1
    REPEAT

    IF VAR.TAX.AMT THEN
        VAR.TAX.AMT = FT.DR.CURRENCY:' ':VAR.TAX.AMT
    END ELSE
        VAR.TAX.AMT = '0.00'
    END

RETURN

END
