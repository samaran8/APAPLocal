*-----------------------------------------------------------------------------
* <Rating>247</Rating>
* Name report: REPORTE DE PRESTAMOS EN ATRASO
*
* MODIFICATIONS:
***************
* Autor: Oliver Fermin
* Date: 11/01/2019
* Description: Add news fields [CALIF. RIESGO AMBIENTAL, FECHA CAMBIO STATUS, SEGUNDA CONDICION, CEDULA CODEUDOR, NOMBRE CODEUDOR, OFICIAL DE CUENTA, SUCURSAL ORG., SUCURSAL CARTERIZACION, CAMPANA, FECHA PROX. PAGO ]
*-----------------------------------------------------------------------------
* Autor: Oliver Fermin
* Date: 06/08/2019
* Description: Agregar producto WOFF (Productos castigados) al reporte
*-----------------------------------------------------------------------------
* Autor: Oliver Fermin
* Date: 13/09/2019
* Description: Agregar el prestamo anterior LINEA.DE.CREDITO.TC
*-----------------------------------------------------------------------------

    SUBROUTINE REDO.B.OVR.LOAN.REPORT(Y.AA.ID)

    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.DATES
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.AA.INTEREST.ACCRUALS
    $INCLUDE T24.BP I_F.AA.INTEREST
    $INCLUDE T24.BP I_F.AA.CUSTOMER
    $INCLUDE T24.BP I_F.AA.OVERDUE
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT.ACTIVITY
    $INCLUDE T24.BP I_F.CUSTOMER
    $INCLUDE T24.BP I_F.AA.ACCOUNT.DETAILS
    $INCLUDE T24.BP I_F.AA.BILL.DETAILS
    $INCLUDE T24.BP I_F.AA.ACTIVITY.HISTORY
    $INCLUDE T24.BP I_ENQUIRY.COMMON
    $INCLUDE T24.BP I_F.EB.LOOKUP
    $INCLUDE TAM.BP I_F.REDO.H.CUSTOMER.PROVISIONING
    $INCLUDE LAPAP.BP I_REDO.B.OVR.LOAN.REPORT.COMMON
    $INCLUDE T24.BP I_F.DATES
    $INCLUDE T24.BP I_F.AA.PAYMENT.SCHEDULE
    $INCLUDE TAM.BP I_F.REDO.CAMPAIGN.TYPES
    $INCLUDE T24.BP I_F.AA.PRODUCT

    Y.SIMPLE = "'"
    Y.SUSPEN = '...'
    Y.DOBLES = '"'
    Y.OVERDUE = 'APAP.OVERDUE'

    GOSUB PROCESS

    RETURN

PROCESS:
********

    Y.STT1 = ''; Y.STT = ''; Y.FIN.ARR = ''; AA.AC.ER = ''; R.AA.AC = ''
    CALL F.READ(FN.AA.AC,Y.AA.ID,R.AA.AC,F.AA.AC,AA.AC.ER)
    Y.SETTLE.STATUS = R.AA.AC<AA.AD.SET.STATUS>
    CHANGE SM TO FM IN Y.SETTLE.STATUS
    CHANGE VM TO FM IN Y.SETTLE.STATUS

* Atleast one bill has to be unpaid status, then only that loan has to be displayed on report.
    LOCATE "UNPAID" IN Y.SETTLE.STATUS SETTING SET.POS ELSE
        RETURN
    END

    YLST.TODAY = TODAY
    GOSUB RETREIVE.VALUES
    GOSUB GET.HIS
    GOSUB GET.PROVIN.BALANCE
    GOSUB GET.DISB.AMT
    GOSUB FINAL.ARR

    RETURN


RETREIVE.VALUES:
****************

    CALL F.READ(FN.AA,Y.AA.ID,R.AA,F.AA,AA.ERR)
    Y.PRD.GRP = R.AA<AA.ARR.PRODUCT.GROUP,1>
    Y.PRD = R.AA<AA.ARR.PRODUCT,1>
    Y.PRODUCTO = R.AA<AA.ARR.PRODUCT,1>
    Y.CURR = R.AA<AA.ARR.CURRENCY,1>
    Y.COMP = R.AA<AA.ARR.CO.CODE,1>
    Y.AC.ID = R.AA<AA.ARR.LINKED.APPL.ID,1>
    Y.CUS = R.AA<AA.ARR.CUSTOMER,1>
    Y.START = R.AA<AA.ARR.START.DATE,1>

*---TIPO PRODUCTO:

    R.AA.PRODUCT = '' ; ERROR.AA.PRODUCT = '' ; Y.AA.PRODUCT.DESCRIPTION = '';
    CALL F.READ(FN.AA.PRODUCT, Y.PRD, R.AA.PRODUCT, F.AA.PRODUCT, ERROR.AA.PRODUCT)
    Y.AA.PRODUCT.DESCRIPTION =  R.AA.PRODUCT<1,1>

*---CODIGO SUCURSAL ORIGINACION

    Y.AA.CO.CODE = R.AA<AA.ARR.CO.CODE, 1>
    R.AA.COMPANY = '' ; ERROR.AA.COMPANY = '' ; Y.AA.SUC.ORIGINACION = '';
    CALL F.READ(FN.COMPANY, Y.AA.CO.CODE, R.AA.COMPANY, F.COMPANY, ERROR.AA.COMPANY)
    Y.AA.SUC.ORIGINACION = R.AA.COMPANY<1>


    CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.AA.ID,'CUSTOMER','','','',RET.COND,RET.ERR)
    RET.COND = RAISE(RET.COND)

*---NOMBRE DE LA PROMOCION O CAMPANA

    Y.CAMP.TYPE = RET.COND<AA.CUS.LOCAL.REF,Y.CA.POS>
    ERROR.CAMPAIGN.TYPES = ''; R.CAMPAIGN.TYPES = '';
    CALL F.READ(FN.CAMPAIGN.TYPES,Y.CAMP.TYPE, R.CAMPAIGN.TYPES, F.CAMPAIGN, ERROR.CAMPAIGN.TYPES)
    Y.CAMP.NAME = R.CAMPAIGN.TYPES<1>

*---CALIFICACION DEL RIESGO AMBIENTAL
    R.CUS.CALIF.RIEGO = '' ; ERROR.CUS.CALIF.RIEGO = '' ; Y.CALIF.RIESGO.AMB = '';
    CALL F.READ(FN.CUS, Y.CUS, R.CUS.CALIF.RIEGO, F.CUS, ERROR.CUS.CALIF.RIEGO)

    CALL GET.LOC.REF("CUSTOMER","L.CU.SCO.COB",Y.CU.CALIF.RIESGO.POS)
    Y.CALIF.RIESGO.AMB = R.CUS.CALIF.RIEGO<EB.CUS.LOCAL.REF,Y.CU.CALIF.RIESGO.POS>

*---CODIGO DEL CLIENTE
    Y.CUS.CUSTOMER.CODE = Y.CUS;

    Y.OTHER.PARTY = RET.COND<AA.CUS.OTHER.PARTY>
    IF Y.OTHER.PARTY NE '' THEN

*---NOMBRE Y CEDULA DEL DEUDOR

        R.CUSTOMER.DEUDOR = '' ; ERROR.CUS.DEUDOR = '' ; Y.CUS.CEDULA.DEUDOR = '' ; Y.CUS.NOMBRE.CEDULA = '' ;
        CALL F.READ(FN.CUS, Y.OTHER.PARTY, R.CUSTOMER.DEUDOR, F.CUS, ERROR.CUS.DEUDOR)

        CALL GET.LOC.REF("CUSTOMER","L.CU.CIDENT",POS)
        Y.CUS.CEDULA.DEUDOR = R.CUSTOMER.DEUDOR<EB.CUS.LOCAL.REF,POS>

        IF Y.CUS.CEDULA.DEUDOR NE "" THEN
            Y.CUS.NOMBRE.DEUDOR =  R.CUSTOMER.DEUDOR<EB.CUS.SHORT.NAME>
        END

    END

    CALL F.READ(FN.AC,Y.AC.ID,R.AC,F.AC,AC.ERR)
    Y.ALT.ID = R.AC<AC.ALT.ACCT.ID,1>

    IF Y.PRD.GRP EQ 'LINEAS.DE.CREDITO.TC' THEN
        Y.ALT.ID = R.AC<AC.ALT.ACCT.ID,2>
    END

    IF Y.PRD.GRP EQ 'PRODUCTOS.WOF' THEN
        Y.ALT.ID = R.AC<AC.ALT.ACCT.ID,5>
    END

*---OFICIAL DE CUENTA

    CALL F.READ(FN.CUS,Y.CUS,R.CUS,F.CUS,CUS.ERR);
    Y.CUS.ACCT.OFFICER = R.CUS<EB.CUS.ACCOUNT.OFFICER>;
    Y.CUS.OTHER.OFFICER  = R.CUS<EB.CUS.OTHER.OFFICER>;

    R.DEPT.ACCT = '' ; ERROR.DEPT.ACCT ='';

    FN.DEPT.ACCT.OFFICER ='F.DEPT.ACCT.OFFICER'
    F.DEPT.ACCT.OFFICER = ''
    CALL OPF(FN.DEPT.ACCT.OFFICER, F.DEPT.ACCT.OFFICER)
    CALL F.READ(FN.DEPT.ACCT.OFFICER, Y.CUS.ACCT.OFFICER, R.DEPT.ACCT, F.DEPT.ACCT.OFFICER, ERROR.DEPT.ACCT)

    Y.CUS.ACT.OFFICER.NAME =  R.DEPT.ACCT<2>

*---SUCURSAL DE CARTERIZACION

    R.DEPT.ACCT.SUC = ''; ERROR.DEPT.ACCT.SUC ='';
    CALL F.READ(FN.DEPT.ACCT.OFFICER, Y.CUS.OTHER.OFFICER, R.DEPT.ACCT.SUC, F.DEPT.ACCT.OFFICER, ERROR.DEPT.ACCT.SUC)
    Y.CUS.SUC.CARTERIZACION = R.DEPT.ACCT.SUC<1>


*---NOMBRE CLIENTE

    Y.NAME.1 = R.CUS<EB.CUS.NAME.1,1> ;
*Y.NAME.2 = R.CUS<EB.CUS.NAME.2,LNGG,1>
    Y.NAME.2 = R.CUS<EB.CUS.NAME.2,1>

    Y.NAME = Y.NAME.1:' ':Y.NAME.2
    IF Y.NAME.1 EQ '' AND Y.NAME.2 EQ '' THEN
        Y.NAME = R.CUS<EB.CUS.NAME.1,2>:' ':R.CUS<EB.CUS.NAME.2,2>
    END
  
**---------------------------------------------------------------------------------------------------------todo
    IF Y.NAME.1 NE '' AND Y.NAME.2 NE '' AND R.CUS<EB.CUS.LOCAL.REF,L.CU.TIPO.CL.POS> NE 'PERSONA JURIDICA' THEN

        Y.NAME = R.CUS<EB.CUS.GIVEN.NAMES>:' ':R.CUS<EB.CUS.FAMILY.NAME>

    END
**-------------------------------------------------------------------------------------------------------------

    Y.IDS.CUS = ''
    Y.CIDENT = R.CUS<EB.CUS.LOCAL.REF,Y.CID.POS>
    IF Y.CIDENT THEN
        Y.IDS.CUS<1,-1> := Y.CIDENT
    END

    Y.RNC = R.CUS<EB.CUS.LOCAL.REF,Y.RNC.POS>
    IF Y.RNC THEN
        Y.IDS.CUS<1,-1> := Y.RNC
    END

    Y.LEGAL.ID = R.CUS<EB.CUS.LEGAL.ID>
    IF Y.LEGAL.ID THEN
        Y.IDS.CUS<1,-1> := Y.LEGAL.ID
    END

    Y.NOUNICA = R.CUS<EB.CUS.LOCAL.REF,Y.NOUN.POS>
    IF Y.NOUNICA THEN
        Y.IDS.CUS<1,-1> := Y.NOUNICA
    END

*---CEDULA CLIENTE

    Y.ACTI = R.CUS<EB.CUS.LOCAL.REF,Y.ACT.POS>
    IF Y.ACTI THEN
        Y.IDS.CUS<1,-1> := Y.ACTI
    END

*Y.PHO = R.CUS<EB.CUS.PHONE.1> ;* Commented since local fields holds the phone no.

*---TELEFONO CLIENTE

    Y.PHO = ""
    Y.PHO = CATS(R.CUS<EB.CUS.LOCAL.REF,POS.L.CU.TEL.AREA,1>,R.CUS<EB.CUS.LOCAL.REF,Y.TEL.NO.PS,1>)
    CHANGE SM TO VM IN Y.PHO

    GOSUB GET.OVRDUE

    RETURN

GET.OVRDUE:
***********

    CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.AA.ID,'OVERDUE','','','',RET.PR.OV,OV.ERR)
    RET.PR.OV = RAISE(RET.PR.OV)

    Y.LOAN.STATUS = RET.PR.OV<AA.OD.LOCAL.REF,Y.LN.ST.POS>;
    Y.LOAN.STATUS = CHANGE(Y.LOAN.STATUS,SM,VM)

    Y.LOAN.COND = RET.PR.OV<AA.OD.LOCAL.REF,Y.LN.COND.POS>;
    Y.LOAN.COND = CHANGE(Y.LOAN.COND,SM,VM)

*---FECHA CAMBIO STATUS CASTIGO

    Y.FECHA.C.STATUS  = RET.PR.OV<AA.OD.LOCAL.REF,Y.L.STATUS.CHG.POS>;
    Y.FECHA.C.STATUS = CHANGE(Y.FECHA.C.STATUS,VM,FM)
    Y.FECHA.C.STATUS = CHANGE(Y.FECHA.C.STATUS,SM,FM)

*---SI LA DATA LLEGA EN BLANCO ENTONCES PROCEDEMOS CON ESTE METODO

    IF Y.LOAN.COND EQ "" THEN
        Y.OVERDUE.ID = Y.AA.ID:"-":Y.OVERDUE

        SEL.CMD = ''; SEL.LIST =''; NO.OF.REC = ''; REC.ERR = '';
        SEL.CMD = 'SELECT ':FN.AA.ARR.OVERDUE:' WITH @ID LIKE ':Y.DOBLES:Y.SIMPLE:Y.OVERDUE.ID:Y.SIMPLE:Y.SUSPEN:Y.DOBLES
        CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NO.OF.REC,REC.ERR)

        LOOP
            REMOVE Y.SEL.LIST FROM SEL.LIST SETTING PROCESO.POS
        WHILE Y.SEL.LIST DO

            Y.SEL.LIST = CHANGE(Y.SEL.LIST,'-',FM);
            Y.ARRAGLO<-1> = Y.SEL.LIST<3>

        REPEAT
    END

    Y.VALOR = MAXIMUM(Y.ARRAGLO)

    Y.FINAL.OVERDUE = Y.OVERDUE.ID:"-":Y.VALOR
    CALL F.READ(FN.AA.ARR.OVERDUE,Y.FINAL.OVERDUE,R.AA.ARR.OVERDUE,F.AA.ARR.OVERDUE,AA.ARR.OVERDUE.ER)
    Y.LOCAL = R.AA.ARR.OVERDUE<AA.OD.LOCAL.REF>


    IF Y.LOAN.COND EQ "" THEN
        CALL GET.LOC.REF("AA.ARR.OVERDUE", "L.LOAN.COND",L.LOAN.COND.POS)
        Y.LOAN.COND = R.AA.ARR.OVERDUE<AA.OD.LOCAL.REF,L.LOAN.COND.POS>
        Y.LOAN.COND = CHANGE(Y.LOAN.COND,SM,VM)
    END
    IF Y.LOAN.STATUS EQ "" THEN
        CALL GET.LOC.REF("AA.PRD.DES.OVERDUE","L.LOAN.STATUS.1",L.LOAN.STATUS.1.POS)
        Y.LOAN.STATUS = R.AA.ARR.OVERDUE<AA.OD.LOCAL.REF,L.LOAN.STATUS.1.POS>
        Y.LOAN.STATUS = CHANGE(Y.LOAN.STATUS,SM,VM)
    END

    IF Y.FECHA.C.STATUS EQ "" THEN
        CALL GET.LOC.REF("AA.ARR.OVERDUE", "L.STATUS.CHG.DT",L.STATUS.CHG.DT.POS)
        Y.FECHA.C.STATUS = R.AA.ARR.OVERDUE<AA.OD.LOCAL.REF,L.STATUS.CHG.DT.POS>
        Y.FECHA.C.STATUS = CHANGE(Y.FECHA.C.STATUS,VM,FM)
        Y.FECHA.C.STATUS = CHANGE(Y.FECHA.C.STATUS,SM,FM)
    END

    GOSUB CK.DESC.LM

    Y.OVR.STATUS = RET.PR.OV<AA.OD.OVERDUE.STATUS>
    CHANGE SM TO VM IN Y.OVR.STATUS

* CALL F.READ(FN.AA.AC,Y.AA.ID,R.AA.AC,F.AA.AC,AA.AC.ER)

    Y.BIL.IDS = R.AA.AC<AA.AD.BILL.ID> ;
    Y.BIL.IDS = CHANGE(Y.BIL.IDS,SM,FM) ;
    Y.BIL.IDS = CHANGE(Y.BIL.IDS,VM,FM)

    Y.BIL.TYPE = R.AA.AC<AA.AD.BILL.TYPE> ;
    Y.BIL.TYPE =  CHANGE(Y.BIL.TYPE,SM,FM) ;
    Y.BIL.TYPE =  CHANGE(Y.BIL.TYPE,VM,FM)

    Y.BILL.DATE = R.AA.AC<AA.AD.BILL.DATE> ;
    Y.BILL.DATE = CHANGE(Y.BILL.DATE,SM,FM) ;
    Y.BILL.DATE = CHANGE(Y.BILL.DATE,VM,FM)

    Y.BILL.STATUS = R.AA.AC<AA.AD.BILL.STATUS> ;
    Y.BILL.STATUS = CHANGE(Y.BILL.STATUS,SM,FM) ;
    Y.BILL.STATUS = CHANGE(Y.BILL.STATUS,VM,FM)

    Y.BILL.PAY.DATE = R.AA.AC<AA.AD.BILL.PAY.DATE>;

*--FECHA PROXIMA DE PAGO

    Y.AA.AD.MAX.BILL.DATE = MAXIMUM(Y.BILL.PAY.DATE)
    Y.AA.AD.PAYMENT.END.DATE = R.AA.AC<AA.AD.PAYMENT.END.DATE>

    CALL L.APAP.DATEADD.MONTH(1, Y.AA.AD.MAX.BILL.DATE)

*-- SI LA FECHA CALCULADA ES MENOR A LA FECHA DEL ULTIMO PAGO SEGUN CALENDARIO, TOMARA ESTA COMO FECHA DEL PROXIMO PAGO
*--DE LO CONTRARIO TOMARA LA ULTIMA FECHA DE PAGO DEL CALENDARIO DE PAGOS

    IF Y.AA.AD.MAX.BILL.DATE LE Y.AA.AD.PAYMENT.END.DATE THEN
        Y.FECHA.PROXIMO.PAGO = Y.AA.AD.MAX.BILL.DATE
    END ELSE
        Y.FECHA.PROXIMO.PAGO = Y.AA.AD.PAYMENT.END.DATE
    END

    Y.FECHA.PROXIMO.PAGO = OCONV(ICONV(Y.FECHA.PROXIMO.PAGO,'D'),'D')

    Y.BILL.PAY.DATE = CHANGE(Y.BILL.PAY.DATE,SM,FM);
    Y.BILL.PAY.DATE = CHANGE(Y.BILL.PAY.DATE,VM,FM)

    YBILL.CNT = DCOUNT(Y.BIL.IDS,FM) ;
    Y.BILL.SETCNT = R.AA.AC<AA.AD.BILLS.SETTLED.CNT>;
    YBILL.DTECNT = DCOUNT(Y.BILL.PAY.DATE,FM)

    Y.DELAY = 0; Y.CNT.ML = DCOUNT(Y.BILL.STATUS,VM)
    FLG.PO = '' ; Y.HJ = '' ; Y.DFDD = ''
    Y.DFDD = YLST.TODAY
    YCOURT.TEMP = Y.BILL.PAY.DATE<YBILL.DTECNT>
    GOSUB GET.BILL.SETT.DETAILS

*----- PRODUCTOS WOF ------
    Y.RATE  = 0;

    IF Y.PRD.GRP EQ 'PRODUCTOS.WOF' THEN

        Y.INT.AC = Y.AA.ID:'-PRINCIPALINTWOF'
        CALL F.READ(FN.AA.INT,Y.INT.AC,R.AA.INT,F.AA.INT,INT.ERR)
        Y.RATE = R.AA.INT<AA.INT.ACC.RATE,1,1>

        IF NOT(Y.RATE) THEN
            CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.AA.ID,'INTEREST','PRINCIPALINT','','',RET.PR.OV,OV.ERR)
            RET.PR.OV = RAISE(RET.PR.OV)
            Y.RATE = RET.PR.OV<AA.INT.EFFECTIVE.RATE>
        END

    END ELSE

        Y.INT.AC = Y.AA.ID:'-PRINCIPALINT'
        CALL F.READ(FN.AA.INT,Y.INT.AC,R.AA.INT,F.AA.INT,INT.ERR)
        Y.RATE = R.AA.INT<AA.INT.ACC.RATE,1,1>

        IF NOT(Y.RATE) THEN
            CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.AA.ID,'INTEREST','PRINCIPALINTWOF','','',RET.PR.OV,OV.ERR)
            RET.PR.OV = RAISE(RET.PR.OV)
            Y.RATE = RET.PR.OV<AA.INT.EFFECTIVE.RATE>
        END

    END

*-- MDA-17608
    IF Y.RATE EQ '' THEN
        Y.RATE  = '0.00';
    END

    FLG.R = '' ; Y.OVR.AMT = '' ; Y.INS.AMT = ''; Y.CARG.AMT = '' ; Y.OVR.AMT.CNT = 0

    GOSUB CK.CRT.DATE

    RETURN

GET.BILL.SETT.DETAILS:
**********************

    Y.CNT = 1
    LOOP
    WHILE Y.CNT LE YBILL.CNT
        IF Y.BILL.STATUS<Y.CNT> NE 'SETTLED' AND Y.BIL.TYPE<Y.CNT> EQ 'PAYMENT' THEN
            Y.BL.DATE = Y.BILL.DATE<Y.CNT>
            IF NOT(Y.BL.DATE) THEN
                Y.CNT = Y.CNT + 1
                CONTINUE
            END
            Y.CNT = YBILL.CNT
            Y.DAYS = 'C'
            CALL CDD(Y.REG,Y.BL.DATE,Y.DFDD,Y.DAYS)
            Y.DELAY = Y.DAYS
            Y.HJ = 'Y'
        END
        Y.CNT = Y.CNT + 1
    REPEAT

    RETURN

CK.CRT.DATE:
************

    LOOP
    WHILE YBILL.CNT GT 0 DO
        FLG.R += 1
        Y.BL.ID = Y.BIL.IDS<FLG.R>
        BL.ERR = ''; R.AA.BILL = ''
        CALL F.READ(FN.AA.BILL,Y.BL.ID,R.AA.BILL,F.AA.BILL,BL.ERR)
        IF NOT(R.AA.BILL) THEN
            BL.ERR = ''; R.AA.BILL = ''
            CALL F.READ(FN.AA.BILL.HST,Y.BL.ID,R.AA.BILL,F.AA.BILL.HST,BL.ERR)
        END
        IF R.AA.BILL<AA.BD.SETTLE.STATUS,1> EQ 'UNPAID'  THEN
            Y.OVR.AMT += SUM(R.AA.BILL<AA.BD.OS.PROP.AMOUNT>)
            Y.OVR.AMT.CNT += 1
        END

        LOCATE 'INSURANCE' IN R.AA.BILL<AA.BD.PAYMENT.TYPE,1> SETTING POS.INS THEN
            Y.INS.AMT += SUM(R.AA.BILL<AA.BD.OS.PR.AMT,POS.INS>)
        END

* --- PRODUCTOS.WOFF ---
        IF Y.PRD.GRP EQ 'PRODUCTOS.WOF' THEN

            LOCATE 'CARGOS' IN R.AA.BILL<AA.BD.PAYMENT.TYPE,1> SETTING POS.CARG THEN
                Y.CARG.AMT += SUM(R.AA.BILL<AA.BD.OS.PR.AMT,POS.CARG>)
                LOCATE 'PRMORAWOF' IN R.AA.BILL<AA.BD.PAY.PROPERTY,POS.CARG,1> SETTING POS.PRSD THEN
                    Y.CARG.AMT -= R.AA.BILL<AA.BD.OS.PR.AMT,POS.CARG,POS.PRSD>
                END
            END

        END ELSE

            LOCATE 'CARGOS' IN R.AA.BILL<AA.BD.PAYMENT.TYPE,1> SETTING POS.CARG THEN
                Y.CARG.AMT += SUM(R.AA.BILL<AA.BD.OS.PR.AMT,POS.CARG>)
                LOCATE 'PRMORA' IN R.AA.BILL<AA.BD.PAY.PROPERTY,POS.CARG,1> SETTING POS.PRSD THEN
                    Y.CARG.AMT -= R.AA.BILL<AA.BD.OS.PR.AMT,POS.CARG,POS.PRSD>
                END
            END


        END

        YBILL.CNT -= 1
    REPEAT

    RETURN

CK.DESC.LM:
***********

*--ESTATUS DEL PRESTAMO

    Y.ST.DESC = '' ; Y.ST.C.DESC = ''
    Y.ST.DNT = DCOUNT(Y.LOAN.STATUS,VM)
    Y.ST.D = Y.LOAN.STATUS<1,1>

    IF NOT(Y.ST.D) THEN
        Y.ST.D = Y.LOAN.STATUS<1,2>
    END

    Y.ST.ID = 'L.LOAN.STATUS.1*':Y.ST.D

    CALL F.READ(FN.EB.LOOKUP,Y.ST.ID,R.EB.LOOKUP,F.EB.LOOKUP,LK.ERR)
    IF R.EB.LOOKUP<EB.LU.DESCRIPTION,2> EQ '' THEN
        Y.ST.DESC = R.EB.LOOKUP<EB.LU.DESCRIPTION,1>
    END ELSE
        Y.ST.DESC = R.EB.LOOKUP<EB.LU.DESCRIPTION,2>
    END


*--CONDICION DEL PRESTAMO

    Y.ST.CND = DCOUNT(Y.LOAN.COND,VM)
    Y.ST.C = Y.LOAN.COND<1,1>

    IF Y.ST.CND GT 0 THEN

        Y.ST.C.ID = 'L.LOAN.COND*':Y.ST.C

        CALL F.READ(FN.EB.LOOKUP,Y.ST.C.ID,R.EB.LOOKUP,F.EB.LOOKUP,LK.ERR)

        IF R.EB.LOOKUP<EB.LU.DESCRIPTION,2> EQ '' THEN
            Y.ST.C.DESC = R.EB.LOOKUP<EB.LU.DESCRIPTION,1>
        END ELSE
            Y.ST.C.DESC = R.EB.LOOKUP<EB.LU.DESCRIPTION,2>
        END

    END ELSE
        Y.ST.C.DESC = ''
    END


*---SEGUNDA CONDICION DEL PRESTAMO

    IF Y.ST.CND GT 1 THEN

        Y.2DA.CONDICION = Y.LOAN.COND<1,2>
        Y.2DA.CONDICION.D = 'L.LOAN.COND*':Y.2DA.CONDICION

        CALL F.READ(FN.EB.LOOKUP,Y.2DA.CONDICION.D,R.EB.LOOKUP,F.EB.LOOKUP,LK.ERR)

        IF R.EB.LOOKUP<EB.LU.DESCRIPTION,2> EQ '' THEN
            Y.2DA.CONDICION.DESC = R.EB.LOOKUP<EB.LU.DESCRIPTION,1>
        END ELSE
            Y.2DA.CONDICION.DESC  = R.EB.LOOKUP<EB.LU.DESCRIPTION,2>
        END

    END ELSE
        Y.2DA.CONDICION.DESC  = ''
    END


*---FECHA DEL STATUS EN CASTIGO

    IF  Y.ST.DESC EQ "CASTIGO" OR  Y.ST.DESC EQ "CASTIGADO" OR  Y.ST.DESC EQ "Write-off" THEN

        Y.CNT.FECHA = DCOUNT(Y.FECHA.C.STATUS,FM)

        IF Y.CNT.FECHA EQ 1 THEN
            Y.FECHA.C.STATUS = Y.FECHA.C.STATUS<1>
        END

        IF Y.CNT.FECHA EQ 2 THEN
            Y.FECHA.C.STATUS = Y.FECHA.C.STATUS<2>
        END

        Y.FECHA.C.STATUS = OCONV(ICONV(Y.FECHA.C.STATUS,'D'),'D')

    END ELSE
        Y.FECHA.C.STATUS = ''
    END

    RETURN

GET.HIS:
*******

    ERR.AA.HIS = ''; R.AA.HIS = ''
    CALL F.READ(FN.AA.HIS,Y.AA.ID,R.AA.HIS,F.AA.HIS,ERR.AA.HIS)
    IF R.AA.HIS THEN
        ARC.CNT = DCOUNT(R.AA.HIS<AA.AH.ARC.DATE.TILL>,VM)
        IF ARC.CNT GE 1 THEN
            Y.START = R.AA.HIS<AA.AH.ARC.DATE.TILL,ARC.CNT>
        END
    END

    REQD.MODE = ''; EFF.DATE = Y.START; R.AA.HIS = ''
    CALL AA.READ.ACTIVITY.HISTORY(Y.AA.ID, REQD.MODE, EFF.DATE, R.AA.HIS)
    Y.ACTY = R.AA.HIS<AA.AH.ACTIVITY> ; Y.ACTY = CHANGE(Y.ACTY,SM,VM) ; Y.ACTY.DUP = Y.ACTY
    Y.ACTY.REF = R.AA.HIS<AA.AH.ACTIVITY.REF> ; Y.ACTY.REF = CHANGE(Y.ACTY.REF,SM,VM); Y.ACTY.REF.DUP = Y.ACTY.REF
    Y.ACT.STS = R.AA.HIS<AA.AH.ACT.STATUS> ; Y.ACT.STS = CHANGE(Y.ACT.STS,SM,VM) ; CK = '' ; Y.ACT.STS.DUP = Y.ACT.STS
    Y.INT.TYPES = R.AA.HIS<AA.AH.INITIATION> ; Y.INT.TYPES = CHANGE(Y.INT.TYPES,SM,VM) ; Y.LAST.REP.DATE = '' ; Y.LAST.REP.AMT = ''
    Y.LAST.REP.DATE.TP = ''; Y.LAST.REP.AMT.TP = '';

    LOOP
    WHILE CK EQ '' DO
        LOCATE 'TRANSACTION' IN Y.INT.TYPES<1,1> SETTING POS.LP THEN
            IF Y.ACT.STS<1,POS.LP> EQ 'AUTH' AND Y.ACTY<1,POS.LP> MATCHES 'LENDING-APPLYPAYMENT...' THEN

                Y.APL.ACT = Y.ACTY.REF<1,POS.LP>
                CALL F.READ(FN.AAA,Y.APL.ACT,R.AAA,F.AAA,AAA.ERR)
                Y.LAST.REP.DATE.TP = R.AAA<AA.ARR.ACT.EFFECTIVE.DATE>
                Y.LAST.REP.AMT.TP = R.AAA<AA.ARR.ACT.ORIG.TXN.AMT>

                IF Y.LAST.REP.DATE AND Y.LAST.REP.DATE.TP NE Y.LAST.REP.DATE THEN
                    CK = 1
                END ELSE
                    Y.LAST.REP.DATE = Y.LAST.REP.DATE.TP
                    Y.LAST.REP.AMT += Y.LAST.REP.AMT.TP

                    DEL Y.ACTY<1,POS.LP>
                    DEL Y.ACTY.REF<1,POS.LP>
                    DEL Y.ACT.STS<1,POS.LP>
                    DEL Y.INT.TYPES<1,POS.LP>
                END
            END ELSE
                DEL Y.ACTY<1,POS.LP>
                DEL Y.ACTY.REF<1,POS.LP>
                DEL Y.ACT.STS<1,POS.LP>
                DEL Y.INT.TYPES<1,POS.LP>
            END
        END ELSE
            CK = 1
        END
    REPEAT

    IF Y.LAST.REP.DATE THEN
        Y.LAST.REP.DATE = OCONV(ICONV(Y.LAST.REP.DATE,'D'),'D')
    END

    RETURN

GET.PROVIN.BALANCE:
*******************

    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'
    Y.OV.ST.PR = 'DUE':VM:Y.OVR.STATUS
    Y.OV.ST.IN = 'DUE':VM:Y.OVR.STATUS
    Y.OV.MORA = 'DUE':VM:Y.OVR.STATUS
    Y.CNT.O = DCOUNT(Y.OV.ST.PR,VM)

    FLG.T = 0; Y.PRIN.BAL = 0; Y.INT.BAL =0 ; Y.INT.PN = 0; Y.INT.BAL1 = 0; Y.INT.BAL2 = 0; Y.PR.I.SP = 0; Y.MORA.BAL = 0;

    SYSTEM.DATE = '' ; END.DATE = '' ; BAL.DETAILS = 0
    START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '' ; REQUEST.DATE = YLST.TODAY


    Y.PR.PN = 'ACCPENALTINT'
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.PN, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INT.PN = ABS(BAL.DETAILS<4>)

    LOOP
    WHILE Y.CNT.O GT 0 DO

        IF Y.PRD.GRP EQ 'LINEAS.DE.CREDITO.TC' THEN
            GOSUB GET.BILL.TARJETA
            CONTINUE
        END

        IF Y.PRD.GRP EQ 'PRODUCTOS.WOF' THEN
            GOSUB GET.BILL.PRODUCT.WOF
            CONTINUE
        END

        FLG.T += 1

        Y.PRO = Y.OV.ST.PR<1,FLG.T>:'ACCOUNT'
        REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
        CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PRO, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
        Y.PRIN.BAL += ABS(BAL.DETAILS<4>)

        Y.PR.I = Y.OV.ST.IN<1,FLG.T>:'PRINCIPALINT'
        REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
        CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.I, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
        Y.INT.BAL += ABS(BAL.DETAILS<4>)

        Y.PR.MORA = Y.OV.MORA<1,FLG.T>:'PRMORA'
        REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
        CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.MORA, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
        Y.MORA.BAL += ABS(BAL.DETAILS<4>)


        Y.CNT.O -= 1

    REPEAT


    CALL F.READ(FN.REDO.H.CUSTOMER.PROVISIONING,Y.CUS,R.REDO.H.CUSTOMER.PROVISIONING,F.REDO.H.CUSTOMER.PROVISIONING,PROV.ERR)
    LOCATE Y.AA.ID IN R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.ARRANGEMENT.ID,1> SETTING PROV.POS THEN
        Y.PROV.BAL = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.TOTAL.PROV,PROV.POS>
    END ELSE
        Y.PROV.BAL = Y.PRIN.BAL + Y.INT.BAL       ;* In case if arrangement not found in provisioning table.
    END

    RETURN

GET.BILL.PRODUCT.WOF:
********************
    FLG.T += 1

    Y.PRO = Y.OV.ST.PR<1,FLG.T>:'ACCOUNTWOF'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PRO, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.PRIN.BAL += ABS(BAL.DETAILS<4>)

    Y.PR.PN = 'DUEPENALTYINTWOF';
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.PN, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INT.PN = ABS(BAL.DETAILS<4>)

    Y.PR.I = Y.OV.ST.IN<1,FLG.T>:'PRINCIPALINTWOF'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.I, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INT.BAL += ABS(BAL.DETAILS<4>)

    Y.PR.SEG = Y.OV.ST.IN<1,FLG.T>:'PRADMSEGWOF'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.SEG, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INS.AMT += ABS(BAL.DETAILS<4>)

    Y.PR.I.SP = Y.OV.ST.IN<1,FLG.T>:'PRINCIPALINWOF'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.I.SP, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INT.BAL += ABS(BAL.DETAILS<4>)

    Y.PR.MORA = Y.OV.MORA<1,FLG.T>:'PRMORAWOF'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.MORA, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.MORA.BAL += ABS(BAL.DETAILS<4>)

    Y.CNT.O -= 1

    RETURN

GET.BILL.TARJETA:
*****************

    FLG.T += 1
    Y.PRO = Y.OV.ST.PR<1,FLG.T>:'ACCOUNTTC'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PRO, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.PRIN.BAL += ABS(BAL.DETAILS<4>)

    Y.PR.I = Y.OV.ST.IN<1,FLG.T>:'PRINCIPALINTTCC'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.I, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INT.BAL1 += ABS(BAL.DETAILS<4>)

    Y.PR.I = Y.OV.ST.IN<1,FLG.T>:'PRINCIPALINTTC'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.I, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.INT.BAL2 += ABS(BAL.DETAILS<4>)

    Y.INT.BAL = Y.INT.BAL1 + Y.INT.BAL2

    Y.PR.MORA = Y.OV.MORA<1,FLG.T>:'COMISIONTC'
    REQUEST.TYPE = ''; REQUEST.TYPE<4> = 'ECB'; START.DATE = YLST.TODAY ; END.DATE = '' ; SYSTEM.DATE = '';BAL.DETAILS = ''
    CALL AA.GET.PERIOD.BALANCES(Y.AC.ID, Y.PR.MORA, REQUEST.TYPE, START.DATE, END.DATE, SYSTEM.DATE, BAL.DETAILS, RET.ERROR)
    Y.MORA.BAL += ABS(BAL.DETAILS<4>)

    Y.CNT.O -= 1

    RETURN

GET.DISB.AMT:
*************

    Y.IDS.DETAILS<1> = Y.AA.ID
    Y.IDS.DETAILS<2> = "YES"
    CALL REDO.L.GET.DISBURSEMENT.DETAILS(Y.IDS.DETAILS,R.DISB.DETAILS,Y.COMMITED.AMT,Y.PEND.DISB)
    Y.TOT.DIS.AMT = R.DISB.DETAILS<3>

    RETURN


FINAL.ARR:
**********

    Y.TOT.DEF.BAL = Y.INT.PN + Y.INS.AMT + Y.MORA.BAL + Y.PRIN.BAL + Y.INT.BAL + Y.CARG.AMT

    Y.FIN.ARR = FMT(TRIM(Y.PRD.GRP),'L#30'):'|':FMT(TRIM(Y.AA.PRODUCT.DESCRIPTION),'L#30'):'|':FMT(TRIM(Y.AC.ID),'L#21'):'|':FMT(TRIM(Y.ALT.ID),'L#20'):'|':FMT(TRIM(Y.CUS.CUSTOMER.CODE),'L#15'):'|':FMT(TRIM(Y.NAME),'L#47'):'|':FMT(TRIM(Y.IDS.CUS),'L#19'):'|':FMT(TRIM(Y.PHO),'L#20'):'|':FMT(TRIM(Y.CALIF.RIESGO.AMB),'L#23'):'|':FMT(TRIM(Y.ST.DESC),'L#22'):'|':FMT(TRIM(Y.FECHA.C.STATUS),'L#23'):'|'
*                           1                                   2                                       3                               4                               5                                    6                              7                               8                                   9                               10                                   11
    Y.FIN.ARR := FMT(TRIM(Y.ST.C.DESC),'L#22'):'|':FMT(TRIM(Y.2DA.CONDICION.DESC),'L#17'):'|':FMT(TRIM(Y.CUS.CEDULA.DEUDOR), 'L#15'):'|':FMT(TRIM(Y.CUS.NOMBRE.DEUDOR),'L#47'):'|':FMT(TRIM(Y.CUS.ACT.OFFICER.NAME),'L#47'):'|':FMT(TRIM(Y.AA.SUC.ORIGINACION), 'L#23'):'|':FMT(TRIM(Y.CUS.SUC.CARTERIZACION), 'L#23'):'|':FMT(TRIM(Y.CAMP.NAME), 'L#47'):'|':FMT(TRIM(Y.DELAY),'L#19'):'|':FMT(TRIM(Y.CURR),'L#20'):'|':FMT(TRIM(Y.RATE),'L#22'):'|':FMT(TRIM(Y.OVR.AMT.CNT),'R#20'):'|':FMT(TRIM(Y.LAST.REP.DATE),'R#23'):'|':FMT(TRIM(Y.FECHA.PROXIMO.PAGO),'R#23'):'|'
*                           12                                      13                                      14                                              15                                          16                                       17                                         18                                          19                               20                             21                       22                                  23                                  24                                     25
    Y.FIN.ARR := FMT(TRIM(Y.LAST.REP.AMT),'R2,#22'):'|':FMT(TRIM(Y.PROV.BAL),'R2,#20'):'|':FMT(TRIM(Y.TOT.DIS.AMT),'R2,#20'):'|':FMT(TRIM(Y.PRIN.BAL),'R2,#20'):'|':FMT(TRIM(Y.INT.BAL),'R2,#20'):'|':FMT(TRIM(Y.MORA.BAL),'R2,#20'):'|':FMT(TRIM(Y.INS.AMT),'R2,#20'):'|':FMT(TRIM(Y.CARG.AMT),'R2,#20'):'|':FMT(TRIM(Y.INT.PN),'R2,#20'):'|':FMT(TRIM(Y.TOT.DEF.BAL),'R2,#20'):'|'
*                            26                                     27                               28                                    29                               30                                      31                                32                                   33                              34                               35
    Y.FIN.ARR<2> = Y.PRD.GRP:FM:Y.PRODUCTO

    CALL F.WRITE(FN.DR.REG.OVR.LOAN.WORKFILE,Y.AA.ID,Y.FIN.ARR)
    Y.FIN.ARR = ''

    RETURN

END
