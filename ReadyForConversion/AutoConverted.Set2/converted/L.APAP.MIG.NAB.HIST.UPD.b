SUBROUTINE L.APAP.MIG.NAB.HIST.UPD

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.DATES
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.REDO.AA.NAB.HISTORY

    GOSUB INIT
    GOSUB PROCESS
RETURN


INIT:
*****
    YRTN = 0
    FN.FILEPATH = "../EXTRACT/MASSIVE.BP/MIG.BP"
    F.FILEPATH = ''
    CALL OPF(FN.FILEPATH,F.FILEPATH)
    YTODAY = TODAY
    FILEEXTRACT.ID = "MIG.NEW.ARR.":YTODAY:".csv"
    INT.PROPERTY = 'PRINCIPALINT'

    FN.AA.ACCOUNT.DETAILS = 'F.AA.ACCOUNT.DETAILS'; F.AA.ACCOUNT.DETAILS = ''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)
    FN.AA.BILL.DETAILS = 'F.AA.BILL.DETAILS'; F.AA.BILL.DETAILS = ''
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)
    FN.REDO.AA.NAB.HISTORY = 'F.REDO.AA.NAB.HISTORY'; F.REDO.AA.NAB.HISTORY = ''
    CALL OPF(FN.REDO.AA.NAB.HISTORY,F.REDO.AA.NAB.HISTORY)

RETURN

PROCESS:
********
    ERR.FILEPATH = ''; R.FILEPATH = ''
    CALL F.READ(FN.FILEPATH,FILEEXTRACT.ID,R.FILEPATH,F.FILEPATH,ERR.FILEPATH)
    LOOP
        REMOVE PROCESS.ID FROM R.FILEPATH SETTING PR.POSN
    WHILE PROCESS.ID:PR.POSN
        YAA.ID = ''; YAA.ID = FIELD(PROCESS.ID,'|',2)
        YOLDAA.ID = ''; YOLDAA.ID = FIELD(PROCESS.ID,'|',1)

        ERR.AA.ACCOUNT.DETAILS = ''; R.AA.ACCOUNT.DETAILS = ''; YARR.AGE.STATUS = ''
        CALL F.READ(FN.AA.ACCOUNT.DETAILS,YAA.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,ERR.AA.ACCOUNT.DETAILS)
        IF R.AA.ACCOUNT.DETAILS EQ '' THEN
            CONTINUE
        END

        YARR.AGE.STATUS = R.AA.ACCOUNT.DETAILS<AA.AD.ARR.AGE.STATUS>
        IF YARR.AGE.STATUS NE 'NAB' THEN
            CONTINUE
        END

        NAB.BILLS = ''; INT.NAB.AMT = ''; INT.AMT = ''
        ERR.REDO.AA.NAB.HISTORY = ''; R.NAB.HISTORY.REC = ''
        CALL F.READ(FN.REDO.AA.NAB.HISTORY,YAA.ID,R.NAB.HISTORY.REC,F.REDO.AA.NAB.HISTORY,ERR.REDO.AA.NAB.HISTORY)
        NAB.BILLS =  R.NAB.HISTORY.REC<REDO.NAB.HIST.BILL.ID>
        GOSUB GET.BILL.INFO
        GOSUB GET.NAB.SUM
        GOSUB GET.NAB.HIST.OLD

        R.NAB.HISTORY.REC<REDO.NAB.HIST.CURRENCY> = R.NAB.HISTORY.RECHST<REDO.NAB.HIST.CURRENCY>
        R.NAB.HISTORY.REC<REDO.NAB.HIST.SECTOR> = R.NAB.HISTORY.RECHST<REDO.NAB.HIST.SECTOR>
        R.NAB.HISTORY.REC<REDO.NAB.HIST.L.LOAN.STATUS> = R.NAB.HISTORY.RECHST<REDO.NAB.HIST.L.LOAN.STATUS>
        R.NAB.HISTORY.REC<REDO.NAB.HIST.CATEGORY> = R.NAB.HISTORY.RECHST<REDO.NAB.HIST.CATEGORY>
        R.NAB.HISTORY.REC<REDO.NAB.HIST.NXT.BILL.DATE> = R.NAB.HISTORY.RECHST<REDO.NAB.HIST.NXT.BILL.DATE>
        IF R.NAB.HISTORY.RECHST<REDO.NAB.HIST.NAB.CHANGE.DATE> NE '' THEN
            R.NAB.HISTORY.REC<REDO.NAB.HIST.NAB.CHANGE.DATE> = R.NAB.HISTORY.RECHST<REDO.NAB.HIST.NAB.CHANGE.DATE>
        END

        R.NAB.HISTORY.REC<REDO.NAB.HIST.TOT.INT.PAID> = INT.AMT
        R.NAB.HISTORY.REC<REDO.NAB.HIST.NAB.INTEREST> = INT.NAB.AMT
        R.NAB.HISTORY.REC<REDO.NAB.HIST.STATUS> = 'STARTED'
        R.NAB.HISTORY.REC<REDO.NAB.HIST.BACK.DATED.LN> = 'YES'
        R.NAB.HISTORY.REC<REDO.NAB.HIST.ACCT.YES.NO> = 'YES'
        CALL F.WRITE(FN.REDO.AA.NAB.HISTORY, YAA.ID, R.NAB.HISTORY.REC)
        CALL JOURNAL.UPDATE('')

    REPEAT
RETURN

GET.NAB.HIST.OLD:
*****************
    ERR.REDO.AA.NAB.HISTORY = ''; R.NAB.HISTORY.RECHST = ''
    CALL F.READ(FN.REDO.AA.NAB.HISTORY,YOLDAA.ID,R.NAB.HISTORY.RECHST,F.REDO.AA.NAB.HISTORY,ERR.REDO.AA.NAB.HISTORY)
RETURN

GET.BILL.INFO:
**************
    PROCESS = 0; ARR.BILL.IDS = ''; ARR.BILL.STATUS = ''; ARR.BILL.TYPE = ''; YARR.BILL.DATE = ''
    ARR.BILL.IDS = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID>      ;* Get the Arrangement BILL ids
    ARR.BILL.STATUS = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.STATUS>         ;* Get the Bill Status for the corresponding BILLS
    ARR.BILL.TYPE = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.TYPE>   ;* Get the Bill Type, Coz only the Scheduled BILLS are aged
    YARR.BILL.DATE = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.DATE>

    CHANGE @VM TO @FM IN ARR.BILL.IDS
    CHANGE @SM TO @FM IN ARR.BILL.IDS

    CHANGE @VM TO @FM IN ARR.BILL.STATUS
    CHANGE @SM TO @FM IN ARR.BILL.STATUS

    CHANGE @VM TO @FM IN ARR.BILL.TYPE
    CHANGE @SM TO @FM IN ARR.BILL.TYPE

    CHANGE @VM TO @FM IN YARR.BILL.DATE
    CHANGE @SM TO @FM IN YARR.BILL.DATE

    BILL.COUNT = DCOUNT(ARR.BILL.IDS, @FM)
    YSKIP = 0
    YACT.BILL = YARR.BILL.DATE<1>
    CALL CDT('',YACT.BILL,'+90C')
    YTP.ACT.BILL = YACT.BILL

    R.NAB.HISTORY.REC<REDO.NAB.HIST.BILL.ID> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.AMT> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.PAYMENT.DATE> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.PAID> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.BALANCE> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.ACCT.AMT.RAISED> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.ACC.AMT> = ''
    R.NAB.HISTORY.REC<REDO.NAB.HIST.NAB.INTEREST> = ''

    FOR BILL = 1 TO BILL.COUNT
        YAD.BILLDTE = ''; YAD.BILLDTE = YARR.BILL.DATE<BILL>
        IF ARR.BILL.STATUS<BILL> EQ 'SETTLED' AND YSKIP EQ 0 THEN
            YACT.BILL = YARR.BILL.DATE<BILL + 1>
            CALL CDT('',YACT.BILL,'+90C')
            YTP.ACT.BILL = YACT.BILL
            CONTINUE
        END
        IF ARR.BILL.STATUS<BILL> NE 'SETTLED' AND ARR.BILL.TYPE<BILL> EQ 'PAYMENT' AND YAD.BILLDTE LE YACT.BILL THEN
            GOSUB GET.BILL.DETAILS
        END
        IF ARR.BILL.STATUS<BILL> NE 'SETTLED' AND ARR.BILL.TYPE<BILL> EQ 'PAYMENT' AND YAD.BILLDTE GT YACT.BILL AND YSKIP NE 1 THEN
            GOSUB GET.BILL.DETAILS.PEND
            YSKIP = 1
        END
        YLST.BILLDTE = ''; YLST.BILLDTE = YARR.BILL.DATE<BILL>
    NEXT BILL
RETURN

GET.BILL.DETAILS:
*****************
    BILL.ID = ARR.BILL.IDS<BILL>

    CALL F.READ(FN.AA.BILL.DETAILS, BILL.ID, R.BILL.DETAILS, F.AA.BILL.DETAILS, RET.ERR)
    Y.AGE.ST = R.BILL.DETAILS<AA.BD.AGING.STATUS,1>

    LOCATE INT.PROPERTY IN R.BILL.DETAILS<AA.BD.PROPERTY,1> SETTING  INT.POS THEN
        INT.OS.AMT = R.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,INT.POS>
        REPAY.REF = R.BILL.DETAILS<AA.BD.REPAY.REF, INT.POS>
        PAYMENT.DATE = FIELD(REPAY.REF,2,'-')
        GOSUB UPDATE.BILL.HISTORY
    END
RETURN

GET.BILL.DETAILS.PEND:
**********************
    BILL.ID = ARR.BILL.IDS<BILL>

    CALL F.READ(FN.AA.BILL.DETAILS, BILL.ID, R.BILL.DETAILS, F.AA.BILL.DETAILS, RET.ERR)
    Y.AGE.ST = R.BILL.DETAILS<AA.BD.AGING.STATUS,1>
    Y.CK.DTW = R.BILL.DETAILS<AA.BD.PAYMENT.DATE,1>

    Y.DAYS = 'C'
    CALL CDD('',YLST.BILLDTE,Y.CK.DTW,Y.DAYS)
    YP.DAYS = 'C'
    CALL CDD('',YLST.BILLDTE,YACT.BILL,YP.DAYS)

    LOCATE INT.PROPERTY IN R.BILL.DETAILS<AA.BD.PROPERTY,1> SETTING  INT.POS THEN
        INT.OS.AMT = R.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT,INT.POS>
        REPAY.REF = R.BILL.DETAILS<AA.BD.REPAY.REF, INT.POS>
        PAYMENT.DATE = FIELD(REPAY.REF,2,'-')
        ACC.AMT = 0; TP.INT.PAID = 0
        TP.INT.PAID = INT.OS.AMT / Y.DAYS
        ACC.AMT = TP.INT.PAID * YP.DAYS
        CALL EB.ROUND.AMOUNT('DOP',ACC.AMT,"","")
        R.NAB.HISTORY.REC<REDO.NAB.HIST.ACC.AMT> = ACC.AMT
    END
RETURN

UPDATE.BILL.HISTORY:
********************
    NAB.BILLS =  R.NAB.HISTORY.REC<REDO.NAB.HIST.BILL.ID>
    CHANGE @VM TO @FM IN NAB.BILLS
    CHANGE @SM TO @FM IN NAB.BILLS

    BILL.COUNT1 = DCOUNT(NAB.BILLS,@FM)

    LOCATE 'NAB' IN R.BILL.DETAILS<AA.BD.AGING.STATUS,1> SETTING NAB.POS THEN
        NAB.DATE = R.BILL.DETAILS< AA.BD.AGING.ST.CHG.DT,NAB.POS>
        R.NAB.HISTORY.REC<REDO.NAB.HIST.NAB.CHANGE.DATE> = NAB.DATE
    END

    IF (NAB.BILLS) THEN

        NAB.BILL.REC = ''

        LOCATE BILL.ID IN NAB.BILL.REC SETTING BILL.POS THEN

            R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.AMT,BILL.POS> = INT.OS.AMT
            R.NAB.HISTORY.REC<REDO.NAB.HIST.PAYMENT.DATE,BILL.POS> = PAYMENT.DATE
            R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.BALANCE,BILL.POS> = INT.OS.AMT
        END ELSE

            HIST.BILL.ID = BILL.ID:'-':NAB.DATE

            R.NAB.HISTORY.REC<REDO.NAB.HIST.BILL.ID,-1> = HIST.BILL.ID
            R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.AMT,-1> = INT.OS.AMT
            R.NAB.HISTORY.REC<REDO.NAB.HIST.PAYMENT.DATE,-1> = PAYMENT.DATE
            R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.BALANCE,-1> = INT.OS.AMT
        END

    END ELSE

        HIST.BILL.ID = BILL.ID:'-':NAB.DATE

        R.NAB.HISTORY.REC<REDO.NAB.HIST.BILL.ID,-1> = HIST.BILL.ID
        R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.AMT,-1> = INT.OS.AMT
        R.NAB.HISTORY.REC<REDO.NAB.HIST.PAYMENT.DATE,-1> = PAYMENT.DATE
        R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.BALANCE,-1> = INT.OS.AMT
    END

RETURN

GET.NAB.SUM:

    NAB.INT.COUNT = DCOUNT(R.NAB.HISTORY.REC<REDO.NAB.HIST.BILL.ID>,@VM)        ;* Loop thru each Outstanding BILL for total of INTEREST amount

    FOR NAB.COUNT = 1 TO NAB.INT.COUNT

        INT.AMT = INT.AMT + R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.PAID,NAB.COUNT>
        INT.NAB.AMT = INT.NAB.AMT + R.NAB.HISTORY.REC<REDO.NAB.HIST.INT.BALANCE,NAB.COUNT>

    NEXT NAB.COUNT

RETURN

END
