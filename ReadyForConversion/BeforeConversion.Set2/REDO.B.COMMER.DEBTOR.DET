*-----------------------------------------------------------------------------
* <Rating>-177</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE REDO.B.COMMER.DEBTOR.DET(REC.ID)
*----------------------------------------------------------------------------
*----------------------------------------------------------------------------
* Description:
*------------
* This multi-thread job is meant for to extact the AA Commercial loans happened on daily basis
*----------------------------------------------------------------------------
*
* Modification History :
* ----------------------
*   Date       Author              Modification Description
*----------------------------------------------------------------------------

    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_BATCH.FILES
    $INSERT T24.BP I_TSA.COMMON
    $INSERT T24.BP I_F.AA.ARRANGEMENT
    $INSERT T24.BP I_F.AA.INTEREST.ACCRUALS
    $INSERT T24.BP I_F.CUSTOMER
    $INSERT T24.BP I_F.AA.ACCOUNT.DETAILS
    $INSERT T24.BP I_F.AA.ACCOUNT
    $INSERT T24.BP I_F.AA.OVERDUE
    $INSERT T24.BP I_F.AA.TERM.AMOUNT
    $INSERT T24.BP I_F.EB.CONTRACT.BALANCES
    $INSERT T24.BP I_F.RE.STAT.REP.LINE
    $INSERT T24.BP I_F.AA.PRODUCT.GROUP
    $INSERT T24.BP I_F.AA.INTEREST
    $INSERT T24.BP I_F.ACCOUNT
    $INSERT T24.BP I_F.DATES
    $INSERT T24.BP I_F.AA.ACCOUNT
    $INSERT T24.BP I_F.AA.ACTIVITY.HISTORY
    $INCLUDE LAPAP.BP I_REDO.B.COMMER.DEBTOR.DET.COMMON
    $INCLUDE LAPAP.BP I_DR.REG.COMM.LOAN.SECTOR.COMMON
    $INSERT TAM.BP I_F.REDO.APAP.PROPERTY.PARAM
    $INSERT TAM.BP I_REDO.GENERIC.FIELD.POS.COMMON
*
    GOSUB PROCESS
    RETURN
*----------------------------------------------------------------------------
PROCESS:
*------*
    YCOMM.FLG = 0
    GOSUB PROCESS.INIT
    CALL F.READ(FN.AA.ARRANGEMENT,REC.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ARRANGEMENT.ERR)
    IF NOT(R.AA.ARRANGEMENT) THEN
        RETURN
    END
    YAA.PROD = ''; YAA.PROD.GRP = ''; YAA.ARR.STAT = ''
    YAA.PROD = R.AA.ARRANGEMENT<AA.ARR.PRODUCT>
    YAA.PROD.GRP = R.AA.ARRANGEMENT<AA.ARR.PRODUCT.GROUP>
    YAA.ARR.STAT = R.AA.ARRANGEMENT<AA.ARR.ARR.STATUS>
    STAR.DATE.VAL = R.AA.ARRANGEMENT<AA.ARR.START.DATE>
    IF STAR.DATE.VAL GT YLST.TODAY THEN
        RETURN
    END

    IF YAA.ARR.STAT NE 'CURRENT' AND YAA.ARR.STAT NE 'EXPIRED' AND YAA.ARR.STAT NE 'AUTH' THEN
        RETURN
    END

    Y.LOAN.STATUS = ''; Y.CLOSE.LN.FLG = 0
    GOSUB GET.LOAN.STATUS
    IF Y.LOAN.STATUS EQ "Write-off" THEN
        RETURN
    END

    GOSUB GET.CLOSED.LOAN.CHK
    IF YAA.ARR.STAT EQ 'AUTH' AND Y.CLOSE.LN.FLG NE 1 THEN
        YCANCEL0 = "Auth"
    END
    IF YAA.PROD.GRP EQ "LINEAS.DE.CREDITO" THEN
        FINDSTR 'COM' IN YAA.PROD SETTING PFM,PVM,PSM THEN
            YAA.PROD.GRP = "COMERCIAL"
        END
        PFM = '';PVM = ''; PSM = ''
        FINDSTR 'CONS' IN YAA.PROD SETTING PFM,PVM,PSM THEN
            YAA.PROD.GRP = "CONSUMO"
        END
    END

    GOSUB GET.SECTOR
    GOSUB GET.SUB.SECTOR
    GOSUB GET.ARR.DETAILS
    CUS.ID = R.AA.ARRANGEMENT<AA.ARR.CUSTOMER>
    CALL F.READ(FN.CUSTOMER,CUS.ID,R.CUSTOMER,F.CUSTOMER,CUSTOMER.ERR)
    IF R.CUSTOMER THEN
        GOSUB GET.CUST.DETAIL
    END
    YPOST.RESTRICT = ''
    GOSUB GET.ACC.ACCOUNT
    GOSUB ACC.NAB.PROCESS
    GOSUB RUN.PROCESS
    RETURN
*----------------------------------------------------------------------------
GET.SECTOR:
    Y.SECTOR = ''
    BEGIN CASE
    CASE YAA.PROD.GRP EQ 'COMERCIAL'
        Y.SECTOR = '36'
    CASE YAA.PROD.GRP EQ 'CONSUMO'
        Y.SECTOR = '37'
    CASE YAA.PROD.GRP EQ 'HIPOTECARIO'
        Y.SECTOR = '38'
    CASE YAA.PROD.GRP EQ 'LINEAS.DE.CREDITO'
        Y.SECTOR = '36'
    END CASE
    RETURN

GET.SUB.SECTOR:
*---------------------*
    ArrangementID = REC.ID
    idPropertyClass = 'ACCOUNT'; Y.SUB.SECTOR = ''
    idProperty = ''; returnIds = ''; returnConditions = ''; returnError = ''; effectiveDate = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    R.AA.ACCOUNT = RAISE(returnConditions)
    Y.L.AA.LOAN.DSN = R.AA.ACCOUNT<AA.AC.LOCAL.REF,L.AA.LOAN.DSN.POST>
    Y.SUB.SECTOR = Y.L.AA.LOAN.DSN
    RETURN

GET.ACC.ACCOUNT:
****************
    IF ACCOUNT.ID EQ '' THEN
        RETURN
    END
    R.ACCOUNT = ''; ERR.ACCOUNT = ''; YNAB.STATUS = ''; YPRINCIP.GRP = 0; YACCT.GRP = 0
    DAT.BALANCES = 0; BAL.DETAILS = 0; YAA.ARR.ID = ''; ID.ALTENO4 = '' ; Y.PREV.ACCOUNT = ''
    CALL F.READ(FN.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
    YNAB.STATUS = R.ACCOUNT<AC.LOCAL.REF,L.OD.STATUS.POS>
    YPOST.RESTRICT = R.ACCOUNT<AC.POSTING.RESTRICT>
    YAA.ARR.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>
**---------------------------------------------------------
    Y.ALT.TYPE = R.ACCOUNT<AC.ALT.ACCT.TYPE>
    CHANGE VM TO FM IN Y.ALT.TYPE
    CHANGE SM TO FM IN Y.ALT.TYPE
    LOCATE "ALTERNO2" IN Y.ALT.TYPE<1> SETTING EYPO.POS THEN
        ID.ALTENO4 = R.ACCOUNT<AC.ALT.ACCT.ID,EYPO.POS,1>
        FINDSTR "VI" IN ID.ALTENO4 SETTING Ap, Vp THEN
            Y.PREV.ACCOUNT = ID.ALTENO4[3,LEN(ID.ALTENO4)]
            GOSUB GET.ACCOUTNHIS
        END
    END
**------------------------------------------------------------
*   IF YPOST.RESTRICT EQ '75' THEN
*   RETURN
*   END
    CALL F.READ(FN.EB.CONTRACT.BALANCES,ACCOUNT.ID,R.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES,EB.CONTRACT.BALANCES.ERR)
    IF R.EB.CONTRACT.BALANCES THEN
        Y.CONSOL.KEY = R.EB.CONTRACT.BALANCES<ECB.CONSOL.KEY>
        Y.CONSOL.PART = FIELD(Y.CONSOL.KEY,'.',1,16)
        Y.ASSET.TYPE = R.EB.CONTRACT.BALANCES<ECB.CURR.ASSET.TYPE>
        CTR.BAL.TYPE = 1
        CNT.BAL.TYPE = DCOUNT(Y.ASSET.TYPE,VM)
        LOOP
        WHILE CTR.BAL.TYPE LE CNT.BAL.TYPE
            ACC.POS = ''; Y.SAP.ACC.NO = ''
            BAL.TYPE1 = Y.ASSET.TYPE<1,CTR.BAL.TYPE>
            IF BAL.TYPE1[1,3] EQ 'UNC' THEN
                CTR.BAL.TYPE = CTR.BAL.TYPE + 1
                CONTINUE
            END
            LEN.TYPE = LEN(BAL.TYPE1)
            REQ.LEN = BAL.TYPE1[((LEN.TYPE-AC.LEN)+1),AC.LEN]
            REQ.INT.LEN = BAL.TYPE1[((LEN.TYPE-PRIN.INT.LEN)+1),PRIN.INT.LEN]
            IF (REQ.LEN EQ 'ACCOUNT') OR (REQ.INT.LEN EQ 'PRINCIPALINT') THEN
                Y.IN.CONSOL.KEY = Y.CONSOL.PART:'.':BAL.TYPE1         ;*alter the consol key with current balance type in analysis
                Y.VARIABLE = ''
                CALL RE.CALCUL.REP.AL.LINE(Y.IN.CONSOL.KEY,Y.RPRTS,Y.LINES,Y.VARIABLE)
                Y.LINE = Y.RPRTS:'.':Y.LINES
                CALL F.READ(FN.RE.STAT.REP.LINE,Y.LINE,R.LINE,F.RE.STAT.REP.LINE,REP.ERR)
                GOSUB REG.ACCOUNT.NO
            END
            CTR.BAL.TYPE += 1
        REPEAT
    END
    RETURN

GET.ACCOUTNHIS:
    R.AC1 = ''; ACCOUNT.ERR = ''; AC.ERROR = '' ; Y.ALTHISID = ''
    SEL.LIST = ''; NO.OF.RECS = ''; SEL.ERR = ''
    CALL F.READ(FN.ACCOUNT,Y.PREV.ACCOUNT,R.AC1,F.ACCOUNT,ACCOUNT.ERR)
    IF (R.AC1) THEN
        Y.NUMARRANGEMENT = R.AC1<AC.ARRANGEMENT.ID>
    END ELSE
        SEL.CMD = " SELECT " : FN.ACCOUNT.HST : " WITH @ID LIKE " :Y.PREV.ACCOUNT:"..."
        CALL EB.READLIST(SEL.CMD, SEL.LIST, '',NO.OF.RECS,SEL.ERR)
        LOOP
            REMOVE Y.ALTHISID FROM SEL.LIST SETTING FI.POS
        WHILE Y.ALTHISID DO
            CALL F.READ(FN.ACCOUNT.HST, Y.ALTHISID, R.AC1, F.ACCOUNT.HST, AC.ERROR)
            Y.NUMARRANGEMENT = R.AC1<AC.ARRANGEMENT.ID>
            IF Y.NUMARRANGEMENT NE '' THEN
                RETURN
            END
        REPEAT
    END
    RETURN

REG.ACCOUNT.NO:
***************
    IF NOT(R.LINE) THEN
        RETURN
    END
    Y.REGULATORY.ACC.NO = R.LINE<RE.SRL.DESC,1>   ;* get accounting account for the current balance type in analysis
    Y.SAP.ACC.NO = R.LINE<RE.SRL.DESC,3>
    LOCATE Y.REGULATORY.ACC.NO IN SAVE.ACC.AC<1> SETTING ACC.POS THEN
        GOSUB CHECK.ASSET.TYPE
    END ELSE
        GOSUB SAVE.UNIQUE.AC.ACC
    END
    IF REQ.LEN EQ 'ACCOUNT' THEN
        YACCT.GRP += DAT.BALANCES
    END
    IF REQ.LEN EQ 'PRINCIPALINT' THEN
        YPRINCIP.GRP += DAT.BALANCES
    END
    RETURN

SAVE.UNIQUE.AC.ACC:
*******************
    ASSET.TYPE.ARRAY<-1> = BAL.TYPE1
    CALL AA.GET.PERIOD.BALANCES(ACCOUNT.ID, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    DAT.BALANCES = BAL.DETAILS<4>
    IF DAT.BALANCES NE 0 THEN
        SAVE.ACC.AC<-1> = Y.REGULATORY.ACC.NO
        SAP.ACC.NO<-1> = Y.SAP.ACC.NO
        BAL.AMT<-1> = DAT.BALANCES
    END
    RETURN
*----------------------------------------------------------------------------
SAVE.EXISTING.AC.ACC:
*********************
    CALL AA.GET.PERIOD.BALANCES(ACCOUNT.ID, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    DAT.BALANCES = BAL.DETAILS<4>
    NEW.AMT = DAT.BALANCES + BAL.AMT<ACC.POS>
    BAL.AMT<ACC.POS> = NEW.AMT
    RETURN
*----------------------------------------------------------------------------
CHECK.ASSET.TYPE:
*****************
    LOCATE BAL.TYPE1 IN ASSET.TYPE.ARRAY<1> SETTING ASSET.POS THEN
        ASSET.POS = ''
    END ELSE
        ASSET.TYPE.ARRAY<-1> = BAL.TYPE1
        GOSUB SAVE.EXISTING.AC.ACC
    END
    RETURN
*----------------------------------------------------------------------------
RUN.PROCESS:
*----------*
*    IF YACCT.GRP EQ 0 AND YPRINCIP.GRP EQ 0 AND YACC.NABBAL EQ 0 THEN
*        RETURN
*    END
    CTR.LINE = 1
    CNT.LINE = DCOUNT(SAVE.ACC.AC,FM)
    LOOP
    WHILE CTR.LINE LE CNT.LINE
        SAP.NO.LINE = ''; ACC.NO.LINE = ''
        ACC.NO.LINE = SAVE.ACC.AC<CTR.LINE>
        SAP.NO.LINE = SAP.ACC.NO<CTR.LINE>
        BAL.AMT.LINE = BAL.AMT<CTR.LINE>
        NOT.PRINT.INT.ACC = ACC.NO.LINE[1,1]
        IF BAL.AMT.LINE EQ '0' THEN
            CTR.LINE += 1
            CONTINUE
        END
        IF NOT.PRINT.INT.ACC NE '8' AND BAL.AMT.LINE THEN
            AC.BAL.PRINT = BAL.AMT.LINE
            TOT.SEC.PROD = AC.BAL.PRINT
            FINDSTR "VI" IN ID.ALTENO4 SETTING Ap, Vp THEN
                RETURN.MSG = Y.CUST.IDEN:'|':CUS.ID:'|':Y.CUST.TYPE:'|':NU.LOAN.PRINT:'|':Y.INDUS.CODE:'|':Y.L.CU.DEBTOR:'|':Y.L.TIP.CLI:'|':Y.PREV.ACCOUNT:'|':Y.NUMARRANGEMENT:'|':YCANCEL0:'|':YAA.PROD:'|':YAA.PROD.GRP:'|':ACC.NO.LINE:'|':SAP.NO.LINE:'|':AC.BAL.PRINT:'|':Y.SECTOR:'|':Y.SUB.SECTOR
            END ELSE
                RETURN.MSG = Y.CUST.IDEN:'|':CUS.ID:'|':Y.CUST.TYPE:'|':NU.LOAN.PRINT:'|':Y.INDUS.CODE:'|':Y.L.CU.DEBTOR:'|':Y.L.TIP.CLI:'|':ACCOUNT.ID:'|':YAA.ARR.ID:'|':YCANCEL0:'|':YAA.PROD:'|':YAA.PROD.GRP:'|':ACC.NO.LINE:'|':SAP.NO.LINE:'|':AC.BAL.PRINT:'|':Y.SECTOR:'|':Y.SUB.SECTOR
            END
            WRK.FILE.ID = REC.ID:'.':CTR.LINE
            CALL F.WRITE(FN.DR.REG.DE08DT.WORKFILE,WRK.FILE.ID,RETURN.MSG)
            WRK.FILE.ID = ''
        END
        CTR.LINE += 1
    REPEAT
    RETURN

ACC.NAB.PROCESS:
****************
    ERR.AA.ACCOUNT.DETAILS = ''; R.AA.ACCOUNT.DETAILS = ''; SUSPEND.VAL = ''; SUSPEND.STAT = ''; SUSPEND.DTE = ''
    CALL F.READ(FN.AA.ACCOUNT.DETAILS,REC.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,ERR.AA.ACCOUNT.DETAILS)
    SUSPEND.VAL = R.AA.ACCOUNT.DETAILS<AA.AD.SUSPENDED>
    SUSPEND.STAT = R.AA.ACCOUNT.DETAILS<AA.AD.SUSP.STATUS,1>
    SUSPEND.DTE = R.AA.ACCOUNT.DETAILS<AA.AD.SUSP.DATE,1>
    IF SUSPEND.STAT EQ 'SUSPEND' AND SUSPEND.DTE GT YLST.TODAY THEN
        RETURN
    END
    R.REDO.CONCAT.ACC.NAB = ''; NAB.ERR = ''; ERR.ACCOUNT = ''; R.ACCOUNT = ''; YACC.NABBAL = ''; YNAB.STATUS = ''
    CALL F.READ(FN.REDO.CONCAT.ACC.NAB,ACCOUNT.ID,R.REDO.CONCAT.ACC.NAB,F.REDO.CONCAT.ACC.NAB,NAB.ERR)
    IF NOT(R.REDO.CONCAT.ACC.NAB) THEN
        RETURN
    END
    Y.ACCT.ID = ''; Y.ACCT.ID = R.REDO.CONCAT.ACC.NAB
    YSAP.ACC.NO = '';  BAL.TYPE1 = "OFFDB";   REQUEST.TYPE<4> = "ECB"
    START.DATE = YLST.TODAY; END.DATE = YLST.TODAY; BAL.DETAILS = 0; ERROR.MESSAGE = ''
    CALL AA.GET.PERIOD.BALANCES(Y.ACCT.ID, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    YCR.AMT = BAL.DETAILS<4>
    YACC.NABBAL = YCR.AMT

    YGL.CODE.TMP = ''; R.EB.CONTRACT.BALANCES = ''; Y.IN.CONSOL.KEY = ''
    CALL F.READ(FN.EB.CONTRACT.BALANCES,R.REDO.CONCAT.ACC.NAB,R.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES,EB.CONTRACT.BALANCES.ERR)
    IF NOT(R.EB.CONTRACT.BALANCES) THEN
        RETURN
    END
    Y.CONSOL.KEY = R.EB.CONTRACT.BALANCES<ECB.CONSOL.KEY>
    Y.CONSOL.PART = FIELD(Y.CONSOL.KEY,'.',1,16)
    Y.IN.CONSOL.KEY = Y.CONSOL.PART:'.':BAL.TYPE1
    Y.VARIABLE = ''; Y.RPRTS = ''; Y.LINES = ''
    CALL RE.CALCUL.REP.AL.LINE(Y.IN.CONSOL.KEY,Y.RPRTS,Y.LINES,Y.VARIABLE)
    Y.LINE = Y.RPRTS:'.':Y.LINES
    CALL F.READ(FN.RE.STAT.REP.LINE,Y.LINE,R.LINE,F.RE.STAT.REP.LINE,REP.ERR)
    YGL.CODE.TMP = R.LINE<RE.SRL.DESC,1>
    YSAP.ACC.NO = R.LINE<RE.SRL.DESC,3>
    TOT.SEC.PROD = YACC.NABBAL
    IF YACC.NABBAL AND YACC.NABBAL NE 0 THEN
        FINDSTR "VI" IN ID.ALTENO4 SETTING Ap, Vp THEN
            RETURN.MSG = Y.CUST.IDEN:'|':CUS.ID:'|':Y.CUST.TYPE:'|':NU.LOAN.PRINT:'|':Y.INDUS.CODE:'|':Y.L.CU.DEBTOR:'|':Y.L.TIP.CLI:'|':R.REDO.CONCAT.ACC.NAB:'|':Y.NUMARRANGEMENT:'|':YCANCEL0:'|':YAA.PROD:'|':YAA.PROD.GRP:'|':YGL.CODE.TMP:'|':YSAP.ACC.NO:'|':YACC.NABBAL:'|':Y.SECTOR:'|':Y.SUB.SECTOR
        END ELSE
            RETURN.MSG = Y.CUST.IDEN:'|':CUS.ID:'|':Y.CUST.TYPE:'|':NU.LOAN.PRINT:'|':Y.INDUS.CODE:'|':Y.L.CU.DEBTOR:'|':Y.L.TIP.CLI:'|':R.REDO.CONCAT.ACC.NAB:'|':YAA.ARR.ID:'|':YCANCEL0:'|':YAA.PROD:'|':YAA.PROD.GRP:'|':YGL.CODE.TMP:'|':YSAP.ACC.NO:'|':YACC.NABBAL:'|':Y.SECTOR:'|':Y.SUB.SECTOR
        END
        CNT.LINE = CNT.LINE + 15
        WRK.FILE.ID = REC.ID:'.':CNT.LINE
        CALL F.WRITE(FN.DR.REG.DE08DT.WORKFILE,WRK.FILE.ID,RETURN.MSG)
    END
    RETURN

GET.ARR.DETAILS:
*--------------*
    LOCATE 'ACCOUNT' IN R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL,1> SETTING LINK.POS THEN
        ACCOUNT.ID = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID,LINK.POS>
    END
    RETURN
*----------------------------------------------------------------------------
PROCESS.INIT1:
*************
    R.AA.ARRANGEMENT = ''
    AA.ARRANGEMENT.ERR = ''
    REQUEST.TYPE = ''
    R.CUSTOMER = ''
    CUSTOMER.ERR = ''
    START.DATE = ''
    START.DATE = STAR.DATE.VAL
    END.DATE = YLST.TODAY
    REQUEST.TYPE<4>='ECB'
    STRT.DATE.PRINT = ''
    NU.LOAN.PRINT = ''
    CUST.NAME.PRINT = ''
    CUST.ID.PRINT = ''
    INT.ACCRUAL.PRINT = ''
    AC.BAL.PRINT = ''
    AC.ACCOUNT.PRINT = ''
    AC.INTEREST.PRINT = ''
    LINK.POS = ''
    STRT.DATE = ''
    ACCOUNT.ID = ''
    LEN.TERM = ''
    D.PART = ''
    TERM.PRINT = ''
    ASSET.TYPE.ARRAY = ''
    RETURN
*----------------------------------------------------------------------------
PROCESS.INIT:
*************
    GOSUB PROCESS.INIT1
    SAVE.ACC.AC = ''
    SAP.ACC.NO = ''
    BAL.AMT = ''
    R.EB.CONTRACT.BALANCES = ''
    EB.CONTRACT.BALANCES.ERR = ''
    AC.LEN = 7      ;* This is length of word 'ACCOUNT'
    PRIN.INT.LEN = 12         ;* This is length of word 'PRINCIPALINT'
    RETURN
*----------------------------------------------------------------------------
GET.CUST.DETAIL:
****************
    Y.L.AA.MMD.PYME = ''; Y.INDUS.CODE = ''; Y.PRODUCT.GROUP = ''; Y.REL.CODE = ''
    OUT.ARR = ''; Y.L.TIP.CLI = ''; Y.L.CU.DEBTOR = ''; Y.CUST.TYPE = ''; NU.LOAN.PRINT = ''
    CALL REDO.S.REG.CUSTOMER.EXTRACT(CUS.ID,Y.PRODUCT.GROUP,Y.REL.CODE,OUT.ARR)
    Y.CUST.IDEN    = OUT.ARR<1>
    Y.CUST.TYPE    = OUT.ARR<2>
    Y.CUST.NAME    = OUT.ARR<3>
    Y.CUST.GN.NAME = OUT.ARR<4>
    Y.L.TIP.CLI = OUT.ARR<8>
    Y.L.CU.DEBTOR = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.DEBTOR.POS>
    Y.INDUS.CODE = R.CUSTOMER<EB.CUS.LOCAL.REF,L.APAP.INDUSTRY.POS>
    NU.LOAN.PRINT = Y.CUST.NAME:' ':Y.CUST.GN.NAME
    RETURN

GET.LOAN.STATUS:
*--------------*
    ArrangementID = REC.ID
    idPropertyClass = 'OVERDUE'; Y.LOAN.STATUS = ''
    idProperty = ''; returnIds = ''; returnConditions = ''; returnError = ''; effectiveDate = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    R.AA.OVERDUE = RAISE(returnConditions)
    Y.LOAN.STATUS = R.AA.OVERDUE<AA.OD.LOCAL.REF,L.LOAN.STATUS.1.POS>
    RETURN
GET.CLOSED.LOAN.CHK:
********************
    REQD.MODE = ''; EFF.DATE = STAR.DATE.VAL; R.AA.ACTIVITY.HISTORY = ''
    CALL AA.READ.ACTIVITY.HISTORY(REC.ID, REQD.MODE, EFF.DATE, R.AA.ACTIVITY.HISTORY)
    Y.CLOSE.LN.FLG = 0; YACT.IS.STAT = ''; YACT.ID.ARR = ''
    IF R.AA.ACTIVITY.HISTORY THEN
        YACT.ID.ARR = R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY>
        YACT.IS.STAT = R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS>
        CHANGE VM TO FM IN YACT.ID.ARR
        CHANGE SM TO FM IN YACT.ID.ARR
        CHANGE VM TO FM IN YACT.IS.STAT
        CHANGE SM TO FM IN YACT.IS.STAT
    END
    ERR.REDO.APAP.PROPERTY.PARAM = ''; R.REDO.APAP.PROPERTY.PARAM = ''; YPAYOFF.ACT = ''; YPAY.CNT = 0; YCANCEL0 = ''
    CALL F.READ(FN.REDO.APAP.PROPERTY.PARAM,YAA.PROD.GRP,R.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM,ERR.REDO.APAP.PROPERTY.PARAM)
    IF R.REDO.APAP.PROPERTY.PARAM THEN
        YPAYOFF.ACT = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY>
        YPAY.CNT = DCOUNT(YPAYOFF.ACT,VM)
    END

    YCNT = 1
    LOOP
    WHILE YCNT LE YPAY.CNT
        YPAYOFF.ACT.1 = ''
        YPAYOFF.ACT.1 = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY,YCNT>
        LOCATE YPAYOFF.ACT.1 IN YACT.ID.ARR<1> SETTING CHG.POSN.1 THEN
            YARR.STAT = YACT.IS.STAT<CHG.POSN.1>
            IF YARR.STAT EQ 'AUTH' THEN
                Y.CLOSE.LN.FLG = 1
                YCANCEL0 = "Cancelado"
                YCNT = YPAY.CNT + 1
                CONTINUE
            END
        END
        YCNT++
    REPEAT
    RETURN
END
