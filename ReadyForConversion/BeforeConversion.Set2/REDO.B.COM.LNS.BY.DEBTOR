*-----------------------------------------------------------------------------
* <Rating>6980</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE REDO.B.COM.LNS.BY.DEBTOR(AA.ARR.ID)
*--------------------------------------------------------------------------------------------------
* Description           : This is the Batch Main Process Routine used to process the all AA ID and get the
*                         and get the Report Related details and Write the details in Temp Bp
* Developed On          : 23-Sep-2013
* Developed By          : Amaravathi Krithika BP
* Development Reference : DE11
*--------------------------------------------------------------------------------------------------
*  M O D I F I C A T I O N S
* ***************************
* Defect Reference       Modified By                    Date of Change        Change Details
* (RTC/TUT/PACS)
* PACS00382500           Ashokkumar.V.P                  06/03/2015      Added new fields based on mapping
* PACS00382500           Ashokkumar.V.P                  31/03/2015      Insert file compilation.
* PACS00460182           Ashokkumar.V.P                  11/06/2015      Adding cahnges based on new mapping
* CN008074               Ashokkumar                      21/01/2018      New REA changes
*--------------------------------------------------------------------------------------------------
    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_F.DATES
    $INSERT T24.BP I_F.LIMIT
    $INSERT T24.BP I_F.CUSTOMER
    $INSERT T24.BP I_F.CURRENCY
    $INSERT T24.BP I_F.EB.LOOKUP
    $INSERT T24.BP I_F.AA.CHARGE
    $INSERT T24.BP I_F.AA.LIMIT
    $INSERT T24.BP I_F.AA.INTEREST
    $INSERT T24.BP I_F.CCY.HISTORY
    $INSERT T24.BP I_F.AA.OVERDUE
    $INSERT T24.BP I_F.AA.ARRANGEMENT
    $INSERT T24.BP I_F.AA.PRODUCT.GROUP
    $INSERT T24.BP I_F.AA.TERM.AMOUNT
    $INSERT T24.BP I_F.AA.PAYMENT.SCHEDULE
    $INSERT T24.BP I_F.AA.ACCOUNT.DETAILS
    $INSERT T24.BP I_F.AA.ACTIVITY.HISTORY
    $INSERT T24.BP I_F.AA.ACTIVITY.CHARGES
    $INSERT T24.BP I_F.AA.PRODUCT.DESIGNER
    $INSERT T24.BP I_F.AA.INTEREST.ACCRUALS
    $INSERT T24.BP I_F.AA.SCHEDULED.ACTIVITY
    $INSERT T24.BP I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT TAM.BP I_F.REDO.H.CUSTOMER.PROVISIONING
    $INSERT TAM.BP I_REDO.GENERIC.FIELD.POS.COMMON
    $INSERT LAPAP.BP I_REDO.B.COM.LNS.BY.DEBTOR.COMMON
    $INSERT TAM.BP I_F.REDO.H.PROVISION.PARAMETER
    $INSERT T24.BP I_F.AA.ACCOUNT
    $INSERT T24.BP I_F.COLLATERAL
    $INSERT T24.BP I_F.COUNTRY
    $INSERT T24.BP I_F.INDUSTRY
    $INSERT TAM.BP I_F.REDO.APAP.PROPERTY.PARAM
    $INSERT T24.BP I_F.ACCOUNT
    $INSERT T24.BP I_F.AZ.ACCOUNT
    $INSERT TAM.BP I_F.REDO.AA.MIG.PAY.START.DTE
    $INSERT TAM.BP I_F.REDO.CAMPAIGN.TYPES
    $INSERT T24.BP I_F.AA.CUSTOMER
    $INSERT T24.BP I_F.AA.BILL.DETAILS
    $INSERT T24.BP I_F.RE.STAT.REP.LINE
    $INSERT T24.BP I_F.EB.CONTRACT.BALANCES
    $INSERT TAM.BP I_F.REDO.CATEGORY.CIUU

    GOSUB INIT
    RETURN

INIT:
*---
    ARR.ERR = ""; R.ARR.APPL = ""; Y.PAMENT.DATE.EXTRA.BILL = ''; Y.RESTRUCT.DATE.DIS = ''; Y.RESTRUCT.DATE = ''; Y.LIMIT.REF = ''
    Y.NROPRESTAMO = ''; YY.FIN.ECB.AMT.CONS = 0
    CALL AA.GET.ARRANGEMENT(AA.ARR.ID,R.ARR.APPL,ARR.ERR)
    Y.MAIN.PROD.GROUP = R.ARR.APPL<AA.ARR.PRODUCT.GROUP>
    Y.MAIN.ARR.STATUS = R.ARR.APPL<AA.ARR.ARR.STATUS>
    Y.MAIN.ARR.PRCT = R.ARR.APPL<AA.ARR.PRODUCT>
    YORG.CONT.DTE = R.ARR.APPL<AA.ARR.ORIG.CONTRACT.DATE>
    YSTART.DTE = R.ARR.APPL<AA.ARR.START.DATE>
    YCO.CODE = R.ARR.APPL<AA.ARR.CO.CODE>

    IF YSTART.DTE GT Y.TODAY THEN
        RETURN
    END
    IF Y.MAIN.ARR.STATUS NE 'CURRENT' AND Y.MAIN.ARR.STATUS NE 'EXPIRED' THEN
        RETURN
    END

    IF Y.MAIN.PROD.GROUP EQ 'LINEAS.DE.CREDITO' THEN
        PFM = '';PVM = ''; PSM = ''
        FINDSTR 'COM' IN Y.MAIN.ARR.PRCT SETTING PFM,PVM,PSM THEN
            Y.PRODUCT.GROUP = "COMERCIAL"
        END ELSE
            RETURN
        END
    END
    GOSUB CHK.CURRENT.EXP
    RETURN

CHK.CURRENT.EXP:
*--------------
    IF YORG.CONT.DTE THEN
        Y.ORG.CONT.DTE = YORG.CONT.DTE[7,2]:"/":YORG.CONT.DTE[5,2]:"/":YORG.CONT.DTE[1,4]
    END

    Y.LOAN.STATUS = ''; Y.CLOSE.LN.FLG = 0; YDE11.CLOSE.LN.FLG = 0

    GOSUB GET.LOAN.STATUS

    IF Y.LOAN.STATUS EQ "Write-off" THEN
        RETURN
    END

    GOSUB GET.CLOSED.LOAN.CHK

** ---------
    Y.CUSTOMER.ID = R.ARR.APPL<AA.ARR.CUSTOMER>
    Y.CURRENCY    = R.ARR.APPL<AA.ARR.CURRENCY>
    AA.ID = AA.ARR.ID
    CALL REDO.B.CON.LNS.BY.DEBTOR.AA.RECS(AA.ID,OUT.RECORD)
    R.AA.TERM.AMOUNT.APP      = FIELD(OUT.RECORD,"*",1)
    R.AA.ACCOUNT.DETAILS.APP  = FIELD(OUT.RECORD,"*",2)
    R.AA.PAYMENT.SCHEDULE.APP = FIELD(OUT.RECORD,"*",3)
    R.INTEREST.ACCRUALS.APP   = FIELD(OUT.RECORD,"*",4)
    R.AA.OVERDUE.APP          = FIELD(OUT.RECORD,"*",5)
    R.AA.LIMIT.APP            = FIELD(OUT.RECORD,"*",6)
    R.AA.INTEREST.APP         = FIELD(OUT.RECORD,"*",7)
    R.AA.ACCOUNT.APP          = FIELD(OUT.RECORD,"*",8)
    R.AA.CUSTOMER             = FIELD(OUT.RECORD,"*",9)
    GOSUB GET.MAPPING.FLDS
    RETURN

GET.MAPPING.FLDS:
*---------------
    GOSUB CUS.GIVEN.DTLS.4
    GOSUB GET.LN.CODE.5
    IF YTEMP.ACT.FLG EQ 1 THEN
        RETURN
    END
*-------------------todo
    GOSUB READ.EB.CONTRAC.BALANCE
    Y.MONTO.EBTP = ABS(Y.FIN.ECB.AMT.CONS)

    IF NOT(Y.FIN.ECB.AMT.CONS) THEN
        RETURN
    END

    IF Y.FIN.ECB.AMT.CONS LE '0' THEN
        RETURN
    END

    IF (YACCT.GRP EQ 0 OR YACCT.GRP EQ '') AND Y.CLOSE.LN.FLG EQ 1 THEN
        RETURN
    END

    ERR.REDO.APAP.COMMER.DEBT.DET = ''; R.REDO.APAP.COMMER.DEBT.DET = ''; YCONS.AMT = ''; YL.CU.DEBT.CALC = ''; YL.CU.DEBTOLD.CALC = ''
    CALL F.READ(FN.REDO.APAP.COMMER.DEBT.DET,Y.CUSTOMER.ID,R.REDO.APAP.COMMER.DEBT.DET,F.REDO.APAP.COMMER.DEBT.DET,ERR.REDO.APAP.COMMER.DEBT.DET)
    YCONS.AMT = R.REDO.APAP.COMMER.DEBT.DET<4>
    YCONS.AMT = FIELD(YCONS.AMT,'_',2)
    YL.CU.DEBT.CALC = R.REDO.APAP.COMMER.DEBT.DET<5>
    YL.CU.DEBT.CALC = FIELD(YL.CU.DEBT.CALC,'_',2)
    YL.CU.DEBTOLD.CALC = R.REDO.APAP.COMMER.DEBT.DET<6>
    YL.CU.DEBTOLD.CALC = FIELD(YL.CU.DEBTOLD.CALC,'_',2)

*-------------------
    GOSUB GET.CALL.RTN.FLDS
    GOSUB GET.MAT.DATE.11.12.13
    GOSUB GET.PRIC.PAY.MTHD.14.INIT15
    GOSUB GET.GRCE.PRD.16.17
    GOSUB GET.CCY.TYPE.18.JUD.19
    GOSUB GET.DEBT.RISK.20
    GOSUB GET.UNSEC.SEC.AMT.21
    GOSUB GET.VINC.TYPE.25
    GOSUB GET.COLL.AMT.26
    GOSUB GET.LOC.CATEG.CRISK.29.30.33
    GOSUB GET.PENALTY.PAYOFF.35.1
    GOSUB GET.REVIEW.INT.RATE.40
    GOSUB GET.CUS.TYPE.43.45
    GOSUB FORM.ARRAY
    RETURN
*
CUS.GIVEN.DTLS.4:
*--------------
    Y.PRDT.GROUP = ""; Y.RLN.CODE = ""; OUT.ARR  = ""; Y.L.CU.PRO.RATING = ''
    Y.L.AA.MMD.PYME = ''; Y.L.AA.CAL.ISSUER = ''
    CALL F.READ(FN.CUSTOMER,Y.CUSTOMER.ID,R.CUSTOMER,F.CUSTOMER,CUS.ERR)
    CALL REDO.S.REP.CUSTOMER.EXTRACT(Y.CUSTOMER.ID,Y.PRODUCT.GROUP,Y.REL.CODE,OUT.ARR)

    Y.CUST.NAME    = OUT.ARR<3>
    Y.CUST.GN.NAME = OUT.ARR<4>
    C$SPARE(353) = Y.CUST.NAME
    C$SPARE(354) = Y.CUST.GN.NAME

*--CHANGE FOR REQUERIMENT CN008754
    NO.FMT.PASSPORT = ""
    OUT.ARR = ""

    CALL DR.REG.GET.CUST.TYPE(R.CUSTOMER, OUT.ARR)
    CALL GET.LOC.REF("CUSTOMER", "L.CU.PASS.NAT", L.CU.PASS.NAT.POS)
    L.CU.PASS.NAT = R.CUSTOMER<EB.CUS.LOCAL.REF, L.CU.PASS.NAT.POS, 1>

    IF L.CU.PASS.NAT NE '' THEN
        CALL LAPAP.GET.FMT.PASSPORT(L.CU.PASS.NAT, NO.FMT.PASSPORT)
        Y.CUST.IDEN = NO.FMT.PASSPORT
    END ELSE
        Y.CUST.IDEN = OUT.ARR<2>
    END

    Y.CUST.TYPE = OUT.ARR<1>
    C$SPARE(352) = Y.CUST.TYPE
    C$SPARE(351) = Y.CUST.IDEN

    Y.L.CU.PRO.RATING = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.PRO.RATING.POS>
    Y.L.AA.CAL.ISSUER = R.CUSTOMER<EB.CUS.LOCAL.REF,L.AA.CAL.ISSUER.POS>
    Y.L.AA.MMD.PYME = R.CUSTOMER<EB.CUS.LOCAL.REF,L.AA.MMD.PYME.POS>

    RETURN

GET.LN.CODE.5:
*------------
    Y.LINKED.APPL    = R.ARR.APPL<AA.ARR.LINKED.APPL>
    Y.LINKED.APPL.ID = R.ARR.APPL<AA.ARR.LINKED.APPL.ID>
    LOCATE "ACCOUNT" IN Y.LINKED.APPL<1,1> SETTING Y.LINKED.POS THEN
        CHANGE VM TO FM IN Y.LINKED.APPL.ID
        Y.LOAN.CODE  = Y.LINKED.APPL.ID<Y.LINKED.POS>
    END
    ERR.ACCOUNT = ''; R.ACCOUNT = ''; Y.PREV.ACCOUNT = ''; YTEMP.ACT.FLG = 0
    Y.POSTING.RESTRICT = ''; Y.NROPRESTAMO = ''
    CALL F.READ(FN.ACCOUNT,Y.LOAN.CODE,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
    IF ERR.ACCOUNT THEN
        YTEMP.ACT.FLG = 1
        RETURN
    END
    Y.NROPRESTAMO = Y.LOAN.CODE
    YPOST.RESTRICT = R.ACCOUNT<AC.POSTING.RESTRICT>
    IF YPOST.RESTRICT EQ '75' OR YPOST.RESTRICT EQ '90' THEN
        YDE11.CLOSE.LN.FLG = 1
    END
    Y.ARRAY.VAL = ''
    YACCT.GROUP = R.ACCOUNT:"###":R.ARR.APPL
    CALL REDO.RPT.ACCT.ALT.LOANS(YACCT.GROUP,Y.PREV.ACCOUNT)
    IF NOT(Y.PREV.ACCOUNT) THEN
        Y.PREV.ACCOUNT = Y.LOAN.CODE
    END
    GOSUB GET.LN.CODE.5.1
    C$SPARE(355) = Y.PREV.ACCOUNT
    RETURN
*---------------
GET.LN.CODE.5.1:
*---------------
**Verificar si tiene id alteno 4
    IF Y.LOAN.CODE EQ Y.PREV.ACCOUNT THEN
        ID.ALTENO4 = '' ; Y.ALT.TYPE = ''
        Y.ALT.TYPE = R.ACCOUNT<AC.ALT.ACCT.TYPE>
        CHANGE VM TO FM IN Y.ALT.TYPE
        CHANGE SM TO FM IN Y.ALT.TYPE
        LOCATE "ALTERNO2" IN Y.ALT.TYPE<1> SETTING EYPO.POS THEN
            ID.ALTENO4  = R.ACCOUNT<AC.ALT.ACCT.ID,EYPO.POS,1>
            FINDSTR "VI" IN ID.ALTENO4 SETTING Ap, Vp THEN
                Y.PREV.ACCOUNT = ID.ALTENO4[3,LEN(ID.ALTENO4)]
            END
        END
    END
    RETURN

*-----------------
GET.CALL.RTN.FLDS:
*-----------------
    IN.REC.VAL =  AA.ARR.ID:"#~":Y.CUSTOMER.ID:"#~":Y.CURRENCY:"#~":Y.LOAN.STATUS:"#~":R.AA.TERM.AMOUNT.APP:"#~":R.AA.ACCOUNT.DETAILS.APP:"#~":R.AA.OVERDUE.APP:"#~":Y.LOAN.CODE:"#~":R.AA.LIMIT.APP
    CALL REDO.COM.LNS.CALC.DISB.DATE.AMT(IN.REC.VAL,OUT.REC.VAL)
    Y.LIMIT.REF = OUT.REC.VAL<3>
    Y.EARLY.PAY.OFF = OUT.REC.VAL<5>; Y.APROVAL.DATE.DIS = OUT.REC.VAL<6>
    Y.RESTRUCT.DATE.DIS = OUT.REC.VAL<7>; Y.RENEWAL.DATE.DIS = OUT.REC.VAL<8>
    Y.AMT.APPROVE = OUT.REC.VAL<9>; Y.COUN.CODE = OUT.REC.VAL<10>
    Y.MULT.LIMIT.REF = OUT.REC.VAL<11>; Y.MG.TOT.COMMIT = OUT.REC.VAL<12>

    Y.DISBURSE.AMT = OUT.REC.VAL<4>;  Y.DISBURSE.DATE.DIS = OUT.REC.VAL<1>

    IF NOT(Y.MG.TOT.COMMIT) THEN
        Y.MG.TOT.COMMIT = Y.DISBURSE.AMT
    END

    IF NOT(Y.DISBURSE.AMT) THEN
        Y.DISBURSE.AMT = Y.MG.TOT.COMMIT
    END

    IF NOT(Y.MULT.LIMIT.REF) THEN
        Y.MULT.LIMIT.REF = Y.LIMIT.REF
    END
    C$SPARE(382) = YCO.CODE[6,4]
    C$SPARE(356) = Y.MULT.LIMIT.REF
    C$SPARE(388) = Y.TXNEYPO.VAL.ARR
*--C$SPARE(377) = Y.RESTRUCT.DATE.DIS
    C$SPARE(378) = Y.RENEWAL.DATE.DIS
    C$SPARE(384) = R.CUSTOMER<EB.CUS.NATIONALITY>
    C$SPARE(386) = ""; C$SPARE(387) = ""; C$SPARE(392) = ""; C$SPARE(407) = ""
    RETURN

GET.MAT.DATE.11.12.13:
*---------------------
    Y.MAT.DATE.DIS = ''; Y.START.DATE.DIS = ''; Y.MAT.DATE = ''
    Y.MAT.DATE = R.AA.TERM.AMOUNT.APP<AA.AMT.MATURITY.DATE>
    IF Y.MAT.DATE THEN
        Y.MAT.DATE.DIS = Y.MAT.DATE[7,2]:"/":Y.MAT.DATE[5,2]:"/":Y.MAT.DATE[1,4]
    END
    C$SPARE(361) = Y.MAT.DATE.DIS
    ERR.REDO.AA.MIG.PAY.START.DTE = ''; R.REDO.AA.MIG.PAY.START.DTE = ''; YL.FIRST.PAY.DATE = ''; YACTUAL.DATE = ''
    CALL F.READ(FN.REDO.AA.MIG.PAY.START.DTE,AA.ARR.ID,R.REDO.AA.MIG.PAY.START.DTE,F.REDO.AA.MIG.PAY.START.DTE,ERR.REDO.AA.MIG.PAY.START.DTE)
    IF R.REDO.AA.MIG.PAY.START.DTE THEN
        YL.FIRST.PAY.DATE = R.REDO.AA.MIG.PAY.START.DTE<REDO.AA.MPSD.FIRST.PAY.DATE>
    END
    Y.L.MIGRATED.LN = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.LOCAL.REF,L.MIGRATED.LN.POS>
    Y.PAYMENT.TYPE = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.PAYMENT.TYPE>
    Y.ACTUAL.AMT   = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.ACTUAL.AMT>
    Y.CALC.AMT     = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.CALC.AMOUNT>
    IF Y.L.MIGRATED.LN EQ 'YES' THEN
        Y.FIRST.PAY.DATE = YL.FIRST.PAY.DATE
        YACTUAL.DATE = YORG.CONT.DTE
        C$SPARE(357) = Y.ORG.CONT.DTE
        C$SPARE(358) = Y.MG.TOT.COMMIT
        C$SPARE(359) = Y.ORG.CONT.DTE
        C$SPARE(360) = Y.MG.TOT.COMMIT
    END
    GOSUB GET.MAT.DATE.11.12.13.1
    RETURN

GET.MAT.DATE.11.12.13.1:
************************
    IF Y.L.MIGRATED.LN NE 'YES' THEN
        Y.FIRST.PAY.DATE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.PAYMENT.START.DATE>
        YACTUAL.DATE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.CONTRACT.DATE>
        C$SPARE(357) = Y.APROVAL.DATE.DIS
        C$SPARE(358) = Y.MG.TOT.COMMIT
        C$SPARE(359) = Y.DISBURSE.DATE.DIS
        C$SPARE(360) = Y.DISBURSE.AMT
    END
    IF Y.FIRST.PAY.DATE THEN
        Y.START.DATE.DIS = Y.FIRST.PAY.DATE[7,2]:"/":Y.FIRST.PAY.DATE[5,2]:"/":Y.FIRST.PAY.DATE[1,4]
    END
    C$SPARE(362) =  Y.START.DATE.DIS
    GOSUB GET.PAYMENT.BILL.41
    RETURN

GET.PRIC.PAY.MTHD.14.INIT15:
*---------------------------
    Y.AA.PROPERTY  = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.PROPERTY>
    Y.AA.DUE.FREQ  = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.DUE.FREQ>
    Y.RESIDUAL.AMT = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.RESIDUAL.AMOUNT>
    Y.START.DATE = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.START.DATE>
    Y.LOAN.AMOUNT  = R.AA.TERM.AMOUNT.APP<AA.AMT.AMOUNT>
    YPS.PAYMENT.TYPE = ''; YPS.PAYMENT.TYPE = R.AA.PAYMENT.SCHEDULE.APP<AA.PS.PAYMENT.TYPE>

    FINDSTR "ACCOUNT" IN Y.AA.PROPERTY<1> SETTING Y.AA.PROP.FM, Y.AA.PROP.SM, Y.AA.PROP.VM THEN
        LOCATE "CAPPROG" IN YPS.PAYMENT.TYPE<1,1> SETTING VAL.POSN ELSE
            IF (YPS.PAYMENT.TYPE<Y.AA.PROP.FM,Y.AA.PROP.SM> EQ 'CUOTA.CAPITAL.AL.VENCIMIENTO' OR YPS.PAYMENT.TYPE<Y.AA.PROP.FM,Y.AA.PROP.SM> EQ 'CAPITAL.VCTO' OR YPS.PAYMENT.TYPE<Y.AA.PROP.FM,Y.AA.PROP.SM> EQ 'CAPVENC') THEN
                C$SPARE(364)  = "V"
                GOSUB INIT.PAY.MTHD
                RETURN
            END
            IF (YPS.PAYMENT.TYPE<Y.AA.PROP.FM,Y.AA.PROP.SM> EQ 'SOLO.CAPITAL' OR YPS.PAYMENT.TYPE<Y.AA.PROP.FM,Y.AA.PROP.SM> EQ 'CUOTA.SOLO.DE.CAPITAL') AND (Y.START.DATE NE '' AND Y.START.DATE<Y.AA.PROP.FM,Y.AA.PROP.SM,Y.AA.PROP.VM> EQ Y.MAT.DATE) THEN
                C$SPARE(364)  = "V"
                GOSUB INIT.PAY.MTHD
                RETURN
            END
        END

        Y.NEW.DUE.FREQ = Y.AA.DUE.FREQ<Y.AA.PROP.FM, Y.AA.PROP.SM>
        Y.YEAR.VAL  = Y.NEW.DUE.FREQ[2,1]
        Y.MONTH.VAL = Y.NEW.DUE.FREQ[6,1]
        IF Y.YEAR.VAL GT "0" THEN
            Y.CAP.PAY.METHOD = "A"
        END
        LOCATE Y.MONTH.VAL IN Y.CAP.INT.PAY.MTD.DATA.NAME<1> SETTING CAP.INT.POS THEN
            Y.CAP.PAY.METHOD = Y.CAP.INT.PAY.MTD.DATA.VAL<CAP.INT.POS>
        END
        IF Y.RESIDUAL.AMT EQ Y.LOAN.AMOUNT THEN
            Y.CAP.PAY.METHOD = "V"
        END
    END
    IF Y.CAP.PAY.METHOD EQ "" THEN
        Y.CAP.PAY.METHOD = "I"
    END
    C$SPARE(364)  = Y.CAP.PAY.METHOD
    GOSUB INIT.PAY.MTHD
    RETURN

INIT.PAY.MTHD:
*------------
    Y.CAP.PAY.METHOD = ''
    FINDSTR "PRINCIPALINT" IN Y.AA.PROPERTY<1> SETTING Y.AA.PRO.FM, Y.AA.PRO.SM, Y.AA.PRO.VM THEN
        LOCATE "CAPPROG" IN YPS.PAYMENT.TYPE<1,1> SETTING VCAP.POSN ELSE
            IF (YPS.PAYMENT.TYPE<Y.AA.PRO.FM,Y.AA.PRO.SM> EQ 'SOLO.INTERES' OR YPS.PAYMENT.TYPE<Y.AA.PRO.FM,Y.AA.PRO.SM> EQ 'CUOTA.SOLO.INTERES' OR YPS.PAYMENT.TYPE<Y.AA.PRO.FM,Y.AA.PRO.SM> EQ 'INTEREST.ONLY') THEN
                C$SPARE(364)  = "V"
            END
        END
        Y.NEW.DUE.FREQ = Y.AA.DUE.FREQ<Y.AA.PRO.FM, Y.AA.PRO.SM>
        Y.YEAR.VAL  = Y.NEW.DUE.FREQ[2,1]
        Y.MONTH.VAL = Y.NEW.DUE.FREQ[6,1]
        IF Y.YEAR.VAL GT "0" THEN
            Y.CAP.PAY.METHOD = "A"
        END
        LOCATE Y.MONTH.VAL IN Y.CAP.INT.PAY.MTD.DATA.NAME<1> SETTING CAP.INT.POS THEN
            Y.CAP.PAY.METHOD = Y.CAP.INT.PAY.MTD.DATA.VAL<CAP.INT.POS>
        END
    END
    IF Y.CAP.PAY.METHOD EQ "" THEN
        Y.CAP.PAY.METHOD = "V"
    END
    C$SPARE(365) = Y.CAP.PAY.METHOD
    RETURN

GET.GRCE.PRD.16.17:
*------------------
    NO.OF.MONTHS = ''; Y.MNTH = ''
    Y.EFC.RATE = R.AA.INTEREST.APP<AA.INT.EFFECTIVE.RATE>
    Y.DATE1 = Y.FIRST.PAY.DATE
    Y.DATE2 = YACTUAL.DATE

    IF Y.DATE1 GE Y.DATE2 THEN
        CALL EB.NO.OF.MONTHS(Y.DATE1,Y.DATE2,NO.OF.MONTHS)
    END

    Y.GDAYS = 'C'
    IF LEN(Y.DATE1) EQ 8 AND LEN(Y.DATE2) EQ 8 THEN
        CALL CDD('',Y.DATE1,Y.DATE2,Y.GDAYS)
    END

    IF Y.GDAYS LE '30' THEN
        Y.MNTH = 0
    END ELSE
        Y.MNTH = NO.OF.MONTHS:'M'
    END

    IF Y.MNTH NE '0M' THEN
        Y.MNTH = 0
    END

    C$SPARE(366)  = Y.MNTH
    GOSUB GET.GRCE.PRD.16.17.1
    RETURN

*--------------------
GET.GRCE.PRD.16.17.1:
*--------------------
    Y.RATE = ''
    Y.RATE = R.INTEREST.ACCRUALS.APP<AA.INT.ACC.RATE,1,1>
    IF NOT(Y.RATE) THEN
        Y.RATE =  R.AA.INTEREST.APP<AA.INT.FIXED.RATE,1>
    END
    C$SPARE(367)  = ABS(Y.RATE)
    RETURN

*----------------------
GET.CCY.TYPE.18.JUD.19:
*----------------------
    Y.CCY.TYPE  = "E"
    IF Y.CURRENCY EQ LCCY THEN
        Y.CCY.TYPE  = "N"
    END
    C$SPARE(368)  = Y.CCY.TYPE
    Y.JUDIC.COLL = 'N'
    YJC.L.STATUS.CHG = R.AA.OVERDUE.APP<AA.OD.LOCAL.REF,Y.L.STATUS.CHG.DT.POS>

    IF Y.LOAN.STATUS EQ "JudicialCollection" THEN
        Y.JUDIC.COLL = 'S'
    END

    Y.ADJ.STA.DATE.DIS = ""

    IF YJC.L.STATUS.CHG EQ "JudicialCollection" THEN
        Y.ADJ.STA.DATE = R.AA.OVERDUE.APP<AA.OD.LOCAL.REF,ADJ.STA.DATE.POS>
        Y.ADJ.STA.DATE.DIS = Y.ADJ.STA.DATE[7,2]:"/":Y.ADJ.STA.DATE[5,2]:"/":Y.ADJ.STA.DATE[1,4]
    END

    C$SPARE(385) = Y.ADJ.STA.DATE.DIS
    C$SPARE(369)  = Y.JUDIC.COLL
    RETURN

GET.DEBT.RISK.20:
*---------------
    R.REDO.H.CUSTOMER.PROVISIONING = ''; CUS.PROV.ERR = ''; Y.LN.TYPE.PROV = ''
    CALL F.READ(FN.REDO.H.CUSTOMER.PROVISIONING,Y.CUSTOMER.ID,R.REDO.H.CUSTOMER.PROVISIONING,F.REDO.H.CUSTOMER.PROVISIONING,CUS.PROV.ERR)
    Y.LN.TYPE.PROV= R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.LOAN.TYPE>

    YCNT = 1; YFLD2 = ''
    LOOP
        REMOVE DAY.ID FROM Y.LN.TYPE.PROV SETTING SL.POSN
    WHILE DAY.ID:SL.POSN
        YDAYS = ''; YARR.ID = ''
        YDAYS = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.DAYS.OD,YCNT>
        YARR.ID = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.ARRANGEMENT.ID,YCNT>
        IF DAY.ID EQ 'LINEAS.DE.CREDITO' THEN
            RY.ARR.APPL = ''
            CALL AA.GET.ARRANGEMENT(YARR.ID,RY.ARR.APPL,ARR.ERR)
            Y.MAIN.ARR.PRCT = RY.ARR.APPL<AA.ARR.PRODUCT>
            PFM = '';PVM = ''; PSM = ''
            FINDSTR 'COM' IN Y.MAIN.ARR.PRCT SETTING PFM,PVM,PSM THEN
                YFLD2<-1> = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.DAYS.OD,YCNT>
            END
        END
        IF DAY.ID EQ 'COMERCIAL' THEN
            YFLD2<-1> = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.DAYS.OD,YCNT>
        END

        YCNT++
    REPEAT
    YNO.OF.DAYS = ''; YNO.OF.DAYS = MAXIMUM(YFLD2)

    RETURN

GET.UNSEC.SEC.AMT.21:
*-------------------
    Y.CLS.POS = ''
    Y.CO.CODE = R.ARR.APPL<AA.ARR.CO.CODE>
    CALL F.READ(FN.REDO.H.PROVISION.PARAM,Y.CO.CODE,R.REDO.PROV.PARAM.CO,F.REDO.H.PROVISION.PARAM,REDO.PROV.ERR)
    IF R.REDO.PROV.PARAM.CO THEN
        R.REDO.H.PROVISION.PARAM = R.REDO.PROV.PARAM.CO
    END

    C$SPARE(408) = ''
    GOSUB GET.UNSEC.SEC.AMT.21.1
    RETURN

GET.UNSEC.SEC.AMT.21.1:
***********************
    Y.AA.REDO.PROV.ID = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.ARRANGEMENT.ID>
    LOCATE AA.ARR.ID IN Y.AA.REDO.PROV.ID<1,1> SETTING Y.REDO.PROV.POS THEN
        Y.PROV.PRIC = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.PROV.PRINC,Y.REDO.PROV.POS>
        Y.PROV.INTEREST = R.REDO.H.CUSTOMER.PROVISIONING<REDO.CUS.PROV.PROV.INTEREST,Y.REDO.PROV.POS>
    END

    C$SPARE(373) = Y.PROV.PRIC
    C$SPARE(391) = Y.PROV.INTEREST
    Y.ORIEGN = R.AA.ACCOUNT.APP<AA.AC.LOCAL.REF,Y.ORGN.FUND.POS>
    C$SPARE(374) = R.AA.ACCOUNT.APP<AA.AC.LOCAL.REF,Y.ORGN.FUND.POS>
    YCATEG = R.AA.ACCOUNT.APP<AA.AC.LOCAL.REF,L.AA.CATEG.POS,1>
    R.REDO.CATEGORY.CIUU = ''; ECON.INDUST = ''; REDO.CATEGORY.CIUU.ERR = ''

    IF YCATEG THEN
        CALL F.READ(FN.REDO.CATEGORY.CIUU,YCATEG,R.REDO.CATEGORY.CIUU,F.REDO.CATEGORY.CIUU,REDO.CATEGORY.CIUU.ERR)
        ECON.INDUST = R.REDO.CATEGORY.CIUU<CAT.CIU.BRANCH,1>
    END

    C$SPARE(381) = ECON.INDUST
    Y.AA.LOAN = R.AA.ACCOUNT.APP<AA.AC.LOCAL.REF,Y.L.AA.LOAN.DSN.POS>
    RETURN

GET.VINC.TYPE.25:
*---------------
    Y.RLN.VAL = ''
    IF NOT(R.CUSTOMER) THEN
        C$SPARE(375) = Y.RLN.VAL
        RETURN
    END
    Y.RLN.CODE.VAL = R.CUSTOMER<EB.CUS.RELATION.CODE>
    Y.RL.DCNT = DCOUNT(Y.RLN.CODE.VAL,VM)
    Y.RL.CNT = '1'
    LOOP
    WHILE Y.RL.CNT LE Y.RL.DCNT
        Y.RLN.CODE = Y.RLN.CODE.VAL<1,Y.RL.CNT>
        LOCATE Y.RLN.CODE IN Y.VINCATION.DATA.NAME<1> SETTING Y.LNK.TYP.POS THEN
            Y.RLN.VAL = R.EB.LOOKUP<EB.LU.DATA.VALUE,Y.LNK.TYP.POS>
        END
        IF Y.RLN.VAL THEN
            Y.RL.CNT =  Y.RL.DCNT
        END
        Y.RL.CNT += 1
    REPEAT
    IF NOT(Y.RLN.VAL) THEN
        Y.RLN.VAL = 'NI'
    END
    C$SPARE(375) = Y.RLN.VAL
    RETURN

GET.COLL.AMT.26:
*--------------
    Y.ID.COMP.2 = ''; Y.ID.COMP = ''
    Y.ID.COMP.2 = R.AA.TERM.AMOUNT.APP<AA.AMT.ID.COMP.3>
    Y.ID.COMP = FIELD(Y.ID.COMP.2,'.',1)

    Y.AA.COL = R.AA.TERM.AMOUNT.APP<AA.AMT.LOCAL.REF,POS.L.AA.COL>
    IF NOT(Y.AA.COL) THEN
        GOSUB FIND.COLL.VAL
        Y.AA.COL = R.AA.ARR.TERM.AMOUNT<AA.AMT.LOCAL.REF,POS.L.AA.COL>
    END
    CHANGE SM TO FM IN Y.AA.COL
    CHANGE VM TO FM IN Y.AA.COL
    Y.DCNT.COLL = DCOUNT(Y.AA.COL,FM)
    Y.DCNT.STA = '1'; FIN.BNK.VAL = ''; YTOT.NOMINAL.VALUE = 0
    Y.L.REV.RT.TYPE = R.AA.INTEREST.APP<AA.INT.LOCAL.REF, Y.L.AA.REV.RT.TY.POS>
    Y.NXT.REV.DT.FINAL = ""
    Y.NXT.REV.DT = ""

    FN.ACCOUNT1 = "F.ACCOUNT"; FV.ACCOUNT1 = ""; R.ACCOUNT1 = ""; ERR.ACCOUNT1 = ""
    FN.AZ.ACCOUNT = "F.AZ.ACCOUNT"; FV.AZ.ACCOUNT = ""; R.AZ.ACCOUNT = ""; ERR.AZ.ACCOUNT = ""

    IF Y.L.REV.RT.TYPE EQ "BACK.TO.BACK" THEN
        CALL OPF(FN.ACCOUNT1, FV.ACCOUNT1)
        CALL OPF(FN.AZ.ACCOUNT, FV.AZ.ACCOUNT)
    END

    LOOP
    WHILE Y.DCNT.STA LE Y.DCNT.COLL
        Y.COLL.ID = Y.AA.COL<Y.DCNT.STA>
        CALL F.READ(FN.COLLATERAL,Y.COLL.ID,R.COLLATERAL,F.COLLATERAL,COLL.ERR)
        Y.CENTARL.BNK.VAL = ''

        IF NOT(R.COLLATERAL) THEN
            Y.DCNT.STA += 1
            CONTINUE

        END ELSE

            IF Y.L.REV.RT.TYPE EQ "BACK.TO.BACK" THEN

                CALL GET.LOC.REF("COLLATERAL", "L.COL.NUM.INSTR", L.COL.NUM.INSTR.POS)
                Y.L.COL.NUM.INSTR = R.COLLATERAL<COLL.LOCAL.REF, L.COL.NUM.INSTR.POS, 1>

                IF Y.L.COL.NUM.INSTR THEN

                    CALL F.READ(FN.AZ.ACCOUNT, Y.L.COL.NUM.INSTR, R.AZ.ACCOUNT, FV.AZ.ACCOUNT, ERR.AZ.ACCOUNT)

                    IF NOT(R.AZ.ACCOUNT) THEN

                        CALL F.READ(FN.ACCOUNT1, Y.L.COL.NUM.INSTR, R.ACCOUNT1, FV.ACCOUNT1, ERR.ACCOUNT1)

                        IF R.ACCOUNT1 THEN

                            Y.DATE3 = YORG.CONT.DTE
                            Y.BREAK3 = 0
                            Y.DAY.COUNT3 = "+360C"

                            IF LEN(YORG.CONT.DTE) EQ 8 THEN
                                LOOP
                                WHILE Y.BREAK3 LT 1 DO

                                    IF Y.DATE3 GT TODAY THEN
                                        Y.BREAK3 = 1
                                    END

                                    CALL CDT('', Y.DATE3, Y.DAY.COUNT3)
                                REPEAT
                            END
                            Y.NXT.REV.DT = Y.DATE3
                        END

                    END ELSE

                        Y.NXT.REV.DT = R.AZ.ACCOUNT<AZ.MATURITY.DATE>

                        IF Y.NXT.REV.DT.FINAL GT Y.NXT.REV.DT THEN
                            Y.NXT.REV.DT = Y.NXT.REV.DT.FINAL
                        END

                        Y.NXT.REV.DT.FINAL = Y.NXT.REV.DT
                    END
                END
            END
        END

        Y.CENTARL.BNK.VAL = R.COLLATERAL<COLL.CENTRAL.BANK.VALUE>

        IF FIN.BNK.VAL THEN
            FIN.BNK.VAL += Y.CENTARL.BNK.VAL
        END ELSE
            FIN.BNK.VAL = Y.CENTARL.BNK.VAL
        END

        Y.DCNT.STA += 1
    REPEAT

    YTOT.NOMINAL.VALUE = FIN.BNK.VAL

    IF FIN.BNK.VAL GT Y.MONTO.EBTP THEN
        FIN.BNK.VAL = Y.MONTO.EBTP
    END

    IF Y.NXT.REV.DT THEN
        Y.NXT.REV.DT = Y.NXT.REV.DT[7,2]:"/":Y.NXT.REV.DT[5,2]:"/":Y.NXT.REV.DT[1,4]
    END

    C$SPARE(393) = Y.NXT.REV.DT
    C$SPARE(376) = FIN.BNK.VAL
    RETURN

FIND.COLL.VAL:
**************
    IF R.AA.ACTIVITY.HISTORY THEN
        YACT.ID.ARR = R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.ID>
    END

    YACT.DTE.ID = ''
    LOCATE "LENDING-TAKEOVER-ARRANGEMENT" IN YACT.ID.ARR<1,1> SETTING CHG.POSN.1 THEN
        YACT.DTE.ID = R.AA.ACTIVITY.HISTORY<AA.AH.ACT.DATE,CHG.POSN.1,1>
        TERM.AMT.ID = AA.ARR.ID:'-COMMITMENT-':YACT.DTE.ID:'.1'
        GOSUB READ.TERM.AMT
    END

    YACT.DTE.ID = ''
    LOCATE "LENDING-NEW-ARRANGEMENT" IN YACT.ID.ARR<1,1> SETTING CHG.POSN.2 THEN
        YACT.DTE.ID = R.AA.ACTIVITY.HISTORY<AA.AH.ACT.DATE,CHG.POSN.2,1>
        TERM.AMT.ID = AA.ARR.ID:'-COMMITMENT-':YACT.DTE.ID:'.1'
        GOSUB READ.TERM.AMT
    END
    RETURN

READ.TERM.AMT:
**************
    AA.ARR.TERM.AMOUNT.ERR = ''; R.AA.ARR.TERM.AMOUNT = ''
    CALL F.READ(FN.AA.ARR.TERM.AMOUNT,TERM.AMT.ID,R.AA.ARR.TERM.AMOUNT,F.AA.ARR.TERM.AMOUNT,AA.ARR.TERM.AMOUNT.ERR)
    RETURN

GET.LOC.CATEG.CRISK.29.30.33:
*----------------------------
    Y.LOCALIDAD = R.CUSTOMER<EB.CUS.LOCAL.REF,Y.L.LOCALIDAD.POS>
    C$SPARE(379) = Y.LOCALIDAD
    Y.L.APAP.INDUSTRY = ''; R.COUNTRY = ''; COUN.ERR = ''
    Y.L.APAP.INDUSTRY = R.CUSTOMER<EB.CUS.LOCAL.REF,L.APAP.INDUSTRY.POS>
    C$SPARE(380) = Y.L.APAP.INDUSTRY
    CALL F.READ(FN.COUNTRY,Y.COUN.CODE,R.COUNTRY,F.COUNTRY,COUN.ERR)
    Y.CO.RISL.CLS = ''; Y.CO.RISL.CLS = R.COUNTRY<EB.COU.LOCAL.REF,Y.RISK.CLS.POS>

    IF NOT(Y.CO.RISL.CLS) THEN
        Y.CO.RISL.CLS = "A"
    END

    C$SPARE(383) = Y.CO.RISL.CLS
    RETURN

    C$SPARE(385) = Y.ADJ.STA.DATE.DIS
    RETURN

GET.PENALTY.PAYOFF.35.1:
*----------------------
    Y.CHARGE.PROP = 'PRCANCANTIC'
    PROP.CLASS='CHARGE'
    PROPERTY = Y.CHARGE.PROP
    R.CONDITION = ''; ERR.MSG = ''; EFF.DATE = ''
    CALL REDO.CRR.GET.CONDITIONS(AA.ARR.ID,EFF.DATE,PROP.CLASS,PROPERTY,R.CONDITION,ERR.MSG)
    Y.CHG.RATE = R.CONDITION<AA.CHG.LOCAL.REF,Y.L.AA.CHG.RATE.POS>    ;* Payoff charge %
    C$SPARE(389) = Y.TXNEYPOP.VAL.ARR
    RETURN

*----------------------
GET.REVIEW.INT.RATE.40:
*----------------------
    Y.L.REV.RT.TYPE   = ""; Y.L.REV.RT.TYPE = ""; Y.DATE1 = ""; Y.DATE2 = ""; Y.DAY.COUNT2 = ""
    Y.L.REV.RT.TYPE   = R.AA.INTEREST.APP<AA.INT.LOCAL.REF,Y.L.AA.REV.RT.TY.POS>
    Y.L.AA.NXT.REV.DT = R.AA.INTEREST.APP<AA.INT.LOCAL.REF,Y.L.AA.NXT.REV.DT.POS>
    CALL GET.LOC.REF("AA.ARR.INTEREST", "L.AA.RT.RV.FREQ", L.AA.RT.RV.FREQ.POS)
    L.AA.RT.RV.FREQ = R.AA.INTEREST.APP<AA.INT.LOCAL.REF, L.AA.RT.RV.FREQ.POS, 1>

    IF L.AA.RT.RV.FREQ NE "" THEN
        Y.DAY.COUNT2 = EREPLACE(L.AA.RT.RV.FREQ, "M", "") * 30
        Y.DAY.COUNT2 = "+" : Y.DAY.COUNT2 : "C"
    END

    IF Y.L.REV.RT.TYPE EQ "PERIODICO" THEN

        IF Y.L.AA.NXT.REV.DT GT Y.MAT.DATE OR (Y.MAT.DATE GT TODAY AND Y.L.AA.NXT.REV.DT EQ "") THEN
            Y.L.AA.NXT.REV.DT = Y.MAT.DATE
        END

        Y.DATE1 = Y.L.AA.NXT.REV.DT
        CALL CDT('', Y.DATE1, Y.DAY.COUNT2)

        IF Y.L.AA.NXT.REV.DT LT TODAY AND Y.DATE1 GT Y.MAT.DATE AND Y.MAT.DATE GT TODAY THEN
            Y.L.AA.NXT.REV.DT = Y.MAT.DATE
        END

        IF (Y.MAIN.ARR.STATUS EQ 'EXPIRED' AND Y.L.AA.NXT.REV.DT LT TODAY) OR (Y.L.AA.NXT.REV.DT LT TODAY AND Y.MAT.DATE LT TODAY) THEN

            Y.DATE2 = Y.L.AA.NXT.REV.DT
            Y.BREAK2 = 0

            LOOP
            WHILE Y.BREAK2 LT 1 DO

                IF Y.DATE2 GT TODAY THEN
                    Y.BREAK2 = 1
                END

                CALL CDT('', Y.DATE2, Y.DAY.COUNT2)
            REPEAT

            Y.L.AA.NXT.REV.DT = Y.DATE2
        END

        IF Y.L.AA.NXT.REV.DT THEN
            C$SPARE(393) = Y.L.AA.NXT.REV.DT[7,2]:"/":Y.L.AA.NXT.REV.DT[5,2]:"/":Y.L.AA.NXT.REV.DT[1,4]
        END
    END

    RETURN

GET.PAYMENT.BILL.41:
*------------------
    IF Y.MAIN.ARR.STATUS EQ 'EXPIRED' THEN
        ERR.AA.BILL = ''; R.AA.BILL.DETAILS = ''; YBILL.ID = ''; Y.BILL.CNT = 0; YBILL.VAL = ''; YBILL.TYPE = ''
        Y.TOT.BILL.AMT = 0; YBILL.AMT = 0; YOS.TOT.AMT = 0; SCHEDULE.DATE = ''; YBILL.CNT.TP = 0; NO.OF.DAYS = 0
        YBILL.ID = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.ID>
        YBILL.TYPE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.TYPE>
        YBILL.STATUS = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.STATUS>
        YBILL.DATE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.DATE>
        YBILL.CNT = DCOUNT(YBILL.ID,VM)
        YBILL.CNT = DCOUNT(YBILL.ID,VM)
        YBILL.CNT.TP = YBILL.CNT
        XY = 0
        LOOP
        UNTIL XY EQ YBILL.CNT
            YBILL.VAL = ''; Y.BILL.TYPE = ''; YBILL.VAL.TP = ''
            YBILL.DATE.VAL = ''; YBILL.STATUS.VAL = ''
            YBILL.VAL = YBILL.ID<1,YBILL.CNT,1>
            Y.BILL.TYPE = YBILL.TYPE<1,YBILL.CNT,1>
            YBILL.DATE.VAL = YBILL.DATE<1,YBILL.CNT,1>
            YBILL.STATUS.VAL = YBILL.STATUS<1,YBILL.CNT,1>
            IF Y.BILL.TYPE EQ 'PAYMENT' AND YBILL.VAL.TP NE '' THEN
                YBILL.VAL.TP = YBILL.VAL
*             YBILL.CNT = 0
*             CONTINUE
            END
            IF Y.BILL.TYPE EQ 'PAYMENT' AND YBILL.STATUS.VAL NE 'SETTLED' THEN
                IF YBILL.STATUS.VAL NE 'ISSUED' THEN
                    NO.OF.DAYS  = 'C'
                    Y.NEXT.DATE = Y.TODAY
                    CALL CDD('',YBILL.DATE.VAL,Y.NEXT.DATE,NO.OF.DAYS)
                    NO.OF.DAYS = NO.OF.DAYS + 1
                END
            END
            IF (NO.OF.DAYS NE 0 AND Y.BILL.TYPE EQ 'PAYMENT' AND YBILL.STATUS.VAL EQ 'SETTLED') AND YBILL.VAL.TP NE '' THEN
                YBILL.CNT = 0
                CONTINUE
            END
            YBILL.CNT--
        REPEAT

        IF NOT(YBILL.VAL.TP) THEN
            YBILL.VAL.TP = YBILL.ID<1,YBILL.CNT.TP,1>
        END
        CALL F.READ(FN.AA.BILL.DETAILS,YBILL.VAL.TP,R.AA.BILL.DETAILS,F.AA.BILL.DETAILS,ERR.AA.BILL)
        Y.TOT.BILL.AMT = R.AA.BILL.DETAILS<AA.BD.OR.TOTAL.AMOUNT>
        SCHEDULE.DATE = R.AA.BILL.DETAILS<AA.BD.PAYMENT.DATE>
        YBILL.AMT = SUM(R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT>)
        IF NOT(YBILL.AMT) OR YBILL.AMT EQ 0 THEN
            YBILL.AMT = ABS(Y.TOT.BILL.AMT)
        END
        IF SCHEDULE.DATE THEN
            Y.PAMENT.DATE.EXTRA.BILL.DIS = SCHEDULE.DATE[7,2]:"/":SCHEDULE.DATE[5,2]:"/":SCHEDULE.DATE[1,4]
        END
    END ELSE
        GOSUB GET.DAYS.PROCESS
        GOSUB GET.NEXT.PAY.AMT.1
    END
    GOSUB FIN.PAY.AMT
    GOSUB Get.Monto.Expuesto
    RETURN

GET.NEXT.PAY.AMT.1:
*******************
    R.REDO.AA.SCHEDULE = ''; REDO.AA.SCHEDULE.ERR = ''; YRANGE.AMT = ''; SCHEDULE.DATE = ''; Y.PAMENT.DATE.EXTRA.BILL.DIS = ''
    Y.DUE.TYPE.51 = 'INSURANCE'; Y.DUE.TYPE.52 = 'CARGOS'; YBILL.AMT = ''; DUE.DATES = ''; DUE.TYPES = ''; YBILL.AMT = 0
    DUE.TYPE.AMTS = ''; DUE.PROPS = ''; DUE.PROP.AMTS = ''; TOT.PAY = ''; FLG.VAL1 = 0; FLG.VAL2 = 0; Y = 0; YRANGE.AMT = 0
    CALL F.READ(FN.REDO.AA.SCHEDULE,AA.ARR.ID,R.REDO.AA.SCHEDULE,F.REDO.AA.SCHEDULE,REDO.AA.SCHEDULE.ERR)
    IF R.REDO.AA.SCHEDULE THEN
        TOT.PAY = RAISE(R.REDO.AA.SCHEDULE<1>)
        DUE.DATES = RAISE(R.REDO.AA.SCHEDULE<2>)
        DUE.TYPES = RAISE(R.REDO.AA.SCHEDULE<3>)
        DUE.TYPE.AMTS = RAISE(R.REDO.AA.SCHEDULE<5>)
        DUE.PROPS = RAISE(R.REDO.AA.SCHEDULE<6>)
        DUE.PROP.AMTS = RAISE(R.REDO.AA.SCHEDULE<7>)
    END
    TOT.DUE.DATE=DCOUNT(DUE.DATES,FM)
    TOT.DUE.DATE.TMP = TOT.DUE.DATE
    J = 1
    LOOP
    WHILE J LE TOT.DUE.DATE
        SCHEDULE.DATE = DUE.DATES<J>
        IF SCHEDULE.DATE LE Y.TODAY THEN
            Y = J
            J +=1
            CONTINUE
        END
        YACCT.RANGE.AMT = 0; YSC.RANGE.AMT = 0; YCAP.RANGE.AMT = 0; FMPOS = ''; VMPOS = ''; SMPOS = ''
        FMS.POS = ''; VMS.POS = ''; SMS.POS = ''; FMSPOS = ''; VMSPOS = ''; SMSPOS = ''
        GOSUB SCHED.VAL.1
        GOSUB SCHED.VAL.2
        J = TOT.DUE.DATE + 1
    REPEAT
    IF SCHEDULE.DATE THEN
        Y.PAMENT.DATE.EXTRA.BILL.DIS = SCHEDULE.DATE[7,2]:"/":SCHEDULE.DATE[5,2]:"/":SCHEDULE.DATE[1,4]
    END
    IF YBILL.AMT EQ 0 OR NOT(YBILL.AMT) THEN
        FMPOS1 = ''; VMPOS1 = ''; SMPOS1 = ''
        FINDSTR 'ACCOUNT' IN DUE.PROPS<Y> SETTING FMPOS1,VMPOS1,SMPOS1 THEN
            YBILL.AMT = TOT.PAY<Y,FMPOS1>
        END
        FMPOS1 = ''; VMPOS1 = ''; SMPOS1 = ''
        FINDSTR 'PRINCIPALINT' IN DUE.PROPS<Y> SETTING FMPOS1,VMPOS1,SMPOS1 THEN
            YBILL.AMT = TOT.PAY<Y,FMPOS1>
        END
    END
    RETURN

FIN.PAY.AMT:
************
    C$SPARE(363) = YBILL.AMT
    IF YRANGE.AMT EQ '' THEN
        Y.PAMENT.DATE.EXTRA.BILL.DIS = ''
    END
    IF YRANGE.AMT EQ 0 THEN
        Y.PAMENT.DATE.EXTRA.BILL.DIS = ''
    END
    C$SPARE(394) = Y.PAMENT.DATE.EXTRA.BILL.DIS
    C$SPARE(395) = YRANGE.AMT
    RETURN

SCHED.VAL.1:
************
    FINDSTR 'ACCOUNT' IN DUE.PROPS<J> SETTING FMPOS,VMPOS,SMPOS THEN
        YACCT.RANGE.AMT = DUE.PROP.AMTS<J,VMPOS,SMPOS>
    END
    FINDSTR 'SOLO.CAPITAL' IN DUE.TYPES<J> SETTING FMS.POS,VMS.POS,SMS.POS THEN
        YSC.RANGE.AMT = DUE.PROP.AMTS<J,VMS.POS,SMS.POS>
    END
    FINDSTR 'CAPPROG' IN DUE.TYPES<J> SETTING FMSPOS,VMSPOS,SMSPOS THEN
        YCAP.RANGE.AMT = DUE.PROP.AMTS<J,VMSPOS,SMSPOS>
    END
    YRANGE.AMT = YSC.RANGE.AMT + YCAP.RANGE.AMT + YACCT.RANGE.AMT
    RETURN

SCHED.VAL.2:
************
    FINDSTR 'ACCOUNT' IN DUE.PROPS<J> SETTING FMPOS1,VMPOS1,SMPOS1 THEN
        YBILL.AMT = TOT.PAY<J,FMPOS1>
    END
    IF YBILL.AMT EQ 0 OR NOT(YBILL.AMT) THEN
        FMPOS1 = ''; VMPOS1 = ''; SMPOS1 = ''
        FINDSTR 'PRINCIPALINT' IN DUE.PROPS<J> SETTING FMPOS1,VMPOS1,SMPOS1 THEN
            YBILL.AMT = TOT.PAY<J,FMPOS1>
        END
    END
    RETURN

Get.Monto.Expuesto:
*******************
    IF YNO.OF.DAYS AND YNO.OF.DAYS NE 0 THEN
        NO.OF.DAYS = YNO.OF.DAYS
    END
    YCOVERED.AMT = 0; YEXPOSE.AMT = 0; YCOVERED.PER = 0; YEXPOSE.PER = 0; YGRP = 0
    Y.MONTO.EBTP = ABS(Y.MONTO.EBTP)
    IF (YTOT.NOMINAL.VALUE AND YTOT.NOMINAL.VALUE NE 0) THEN
        IF Y.MONTO.EBTP LE YTOT.NOMINAL.VALUE THEN
            YCOVERED.AMT = Y.MONTO.EBTP
            YEXPOSE.AMT = 0
            YCOVERED.PER = 100
            YEXPOSE.PER = 0
            YCOVERED.PER = FMT(YCOVERED.PER,'R%3')
        END ELSE
            YCOVERED.AMT = YTOT.NOMINAL.VALUE
            YEXPOSE.AMT = Y.MONTO.EBTP - YTOT.NOMINAL.VALUE
            YEXPOSE.AMT = ABS(YEXPOSE.AMT)
            YCOVERED.PER = (YCOVERED.AMT / YTOT.NOMINAL.VALUE) * 100
            YEXPOSE.PER = (YEXPOSE.AMT / YTOT.NOMINAL.VALUE) * 100
            YCOVERED.PER = FMT(YCOVERED.PER,'R%3')
            YEXPOSE.PER = FMT(YEXPOSE.PER,'R%3')
        END
    END ELSE
        YCOVERED.AMT = 0
        YEXPOSE.AMT = Y.MONTO.EBTP
        YCOVERED.PER = 0
        YEXPOSE.PER = 100
    END

    YCOV.PNT = ''
    BEGIN CASE
    CASE YCOVERED.PER EQ 0
        C$SPARE(372) = 'A'
        YGRP = 1
    CASE (NO.OF.DAYS EQ 0 AND (Y.LOAN.STATUS NE 'Restructured' AND Y.LOAN.STATUS NE 'JudicialCollection'))
        GOSUB GET.COMMER.VAL
        C$SPARE(372) = YCOV.PNT
        YGRP = 1

    CASE (Y.LOAN.STATUS EQ "JudicialCollection")
        GOSUB GET.cubierto.COND1
        YGRP = 1

    CASE (NO.OF.DAYS LT 181 AND Y.LOAN.STATUS NE "Restructured")
        GOSUB GET.cubierto.COND1
        YGRP = 1

    CASE (Y.LOAN.STATUS NE "Restructured" AND NO.OF.DAYS GT 365)
        GOSUB GET.cubierto.COND1
        YGRP = 1

    CASE (NO.OF.DAYS GE 181 AND NO.OF.DAYS LE 365)
        C$SPARE(372) = 'C'
        YGRP = 2

    CASE (Y.LOAN.STATUS EQ "Restructured")
        C$SPARE(372) = 'C'
        YGRP = 2

    CASE NO.OF.DAYS LT 365
        C$SPARE(372) = 'D1'
        YGRP =1
    END CASE

    GOSUB GET.EXPOSE.VAL
    RETURN

GET.COMMER.VAL:
***************
    BEGIN CASE
    CASE YCOVERED.PER LE 1
        YCOV.PNT = 'A'
    CASE YCOVERED.PER GT 1 AND YCOVERED.PER LE 3
        YCOV.PNT  = 'B'
    CASE YCOVERED.PER GT 3 AND YCOVERED.PER LE 20
        YCOV.PNT = 'C'
    CASE YCOVERED.PER GT 20 AND YCOVERED.PER LE 40
        YCOV.PNT = 'D1'
    CASE YCOVERED.PER GT 40 AND YCOVERED.PER LE 60
        YCOV.PNT = 'D2'
    CASE YCOVERED.PER GT 60
        YCOV.PNT = 'E'
    END CASE
    RETURN

GET.EXPOSE.VAL:
**************
    BEGIN CASE
    CASE YGRP EQ 1 AND YEXPOSE.PER LE 1
        C$SPARE(371) = 'A'
    CASE YGRP EQ 1 AND (YEXPOSE.PER GT 1 AND YEXPOSE.PER LE 3)
        C$SPARE(371) = 'B'
    CASE YGRP EQ 2 AND YEXPOSE.PER LE 20
        C$SPARE(371) = 'C'
    CASE (YEXPOSE.PER GT 3 AND YEXPOSE.PER LE 20)
        C$SPARE(371) = 'C'
    CASE (YEXPOSE.PER GT 20 AND YEXPOSE.PER LE 40)
        C$SPARE(371) = 'D1'
    CASE (YEXPOSE.PER GT 40 AND YEXPOSE.PER LE 60)
        C$SPARE(371) = 'D2'
    CASE YEXPOSE.PER GT 60
        C$SPARE(371) = 'E'
    END CASE
    RETURN

GET.cubierto.COND1:
*******************
    BEGIN CASE
    CASE YCOVERED.PER LE 40
        C$SPARE(372) = 'A'
    CASE YCOVERED.PER GT 40 AND YCOVERED.PER LE 60
        C$SPARE(372) = 'B'
    CASE YCOVERED.PER GT 60
        C$SPARE(372) = 'C'
    END CASE
    RETURN

GET.DAYS.PROCESS:
****************
    ERR.AA.BILL = ''; R.AA.BILL.DETAILS = ''; YBILL.ID = ''; Y.BILL.CNT = 0; YBILL.VAL = ''; YBILL.TYPE = ''; YBILL.CNT = 0
    Y.TOT.BILL.AMT = 0; YBILL.AMT = 0; YOS.TOT.AMT = 0; SCHEDULE.DATE = ''; YBILL.CNT.TP = 0; NO.OF.DAYS = ''
    YBILL.ID = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.ID>
    YBILL.TYPE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.TYPE>
    YBILL.STATUS = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.STATUS>
    YBILL.DATE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.BILL.DATE>
    YBILL.CNT = DCOUNT(YBILL.ID,VM)
    YBILL.CNT = DCOUNT(YBILL.ID,VM)
    YBILL.CNT.TP = YBILL.CNT
    XY = 0
    LOOP
    UNTIL XY EQ YBILL.CNT
        YBILL.VAL = ''; Y.BILL.TYPE = ''; YBILL.VAL.TP = ''
        YBILL.DATE.VAL = ''; YBILL.STATUS.VAL = ''
        YBILL.VAL = YBILL.ID<1,YBILL.CNT,1>
        Y.BILL.TYPE = YBILL.TYPE<1,YBILL.CNT,1>
        YBILL.DATE.VAL = YBILL.DATE<1,YBILL.CNT,1>
        YBILL.STATUS.VAL = YBILL.STATUS<1,YBILL.CNT,1>

        IF Y.BILL.TYPE EQ 'PAYMENT' AND YBILL.STATUS.VAL NE 'SETTLED' THEN
            IF YBILL.STATUS.VAL NE 'ISSUED' THEN
                NO.OF.DAYS  = 'C'
                Y.NEXT.DATE = Y.TODAY
                CALL CDD('',YBILL.DATE.VAL,Y.NEXT.DATE,NO.OF.DAYS)
                NO.OF.DAYS = NO.OF.DAYS + 1
            END
        END
        IF Y.BILL.TYPE EQ 'PAYMENT' AND YBILL.STATUS.VAL EQ 'SETTLED' THEN
            YBILL.CNT = 0
            CONTINUE
        END
        YBILL.CNT--
    REPEAT
    RETURN

GET.MORA.DETAL:
***************
    BEGIN CASE
    CASE (NO.OF.DAYS LE 30)
        YMORA = 'A'
    CASE (NO.OF.DAYS GE 31 AND NO.OF.DAYS LE 60)
        YMORA = 'B'
    CASE (NO.OF.DAYS GE 61 AND NO.OF.DAYS LE 90)
        YMORA = 'C'
    CASE (NO.OF.DAYS GE 91 AND NO.OF.DAYS LE 180)
        YMORA = 'D1'
    CASE (NO.OF.DAYS GE 181 AND NO.OF.DAYS LE 270)
        YMORA = 'D2'
    CASE (NO.OF.DAYS GE 271)
        YMORA = 'E'
    END CASE
    RETURN

GET.RESTRUC.DETAL:
******************
    YMORA1 = ''
    BEGIN CASE
    CASE (NO.OF.DAYS LE 30)
        YMORA1 = 'B'
    CASE (NO.OF.DAYS GE 31 AND NO.OF.DAYS LE 60)
        YMORA1 = 'C'
    CASE (NO.OF.DAYS GE 61 AND NO.OF.DAYS LE 90)
        YMORA1 = 'D1'
    CASE (NO.OF.DAYS GE 91 AND NO.OF.DAYS LE 180)
        YMORA1 = 'D2'
    CASE (NO.OF.DAYS GE 181)
        YMORA1 = 'E'
    END CASE
    RETURN

GET.CUS.TYPE.43.45:
*-----------------
    Y.CU.DEBTOR = '' ; Y.L.TIP.CLI = ''; Y.CR.FACT = ''; YMORA = ''; YL.CU.COM.CLASIF = ''
    Y.L.TIP.CLI = R.CUSTOMER<EB.CUS.LOCAL.REF,Y.L.TIP.CLI.POS>
    C$SPARE(396) =  Y.L.TIP.CLI
    Y.CR.FACT  = R.AA.ACCOUNT.APP<AA.AC.LOCAL.REF,Y.L.CR.FACILITY.POS>
    C$SPARE(397) = Y.CR.FACT
    C$SPARE(398) = ''; C$SPARE(399) = ''; C$SPARE(402) = ''; C$SPARE(403) = ''; C$SPARE(404) = ''
    Y.CU.DEBTOR =  R.CUSTOMER<EB.CUS.LOCAL.REF,Y.CU.DEBTOR.POS>
    IF Y.CU.DEBTOR EQ '' THEN
        Y.CU.DEBTOR = YL.CU.DEBT.CALC
    END

    YL.CU.COM.CLASIF = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.COM.CLASIF.POS>
    GOSUB GET.MORA.DETAL
    IF Y.CU.DEBTOR MATCHES "C":VM:"D" THEN
        IF NOT(YL.CU.COM.CLASIF) THEN
            YL.CU.COM.CLASIF = YMORA
        END
        C$SPARE(370) = YL.CU.COM.CLASIF
    END ELSE
        C$SPARE(370) = YMORA
    END

    LOCATE Y.L.REV.RT.TYPE IN Y.TXNTDT.VAL.ARR<1,1> SETTING TXNTE.POS THEN
        YOPER.TYPE = Y.TXNTDT.DIS.ARR<1,TXNTE.POS>
    END

    C$SPARE(400) = Y.CU.DEBTOR
    C$SPARE(401) = YOPER.TYPE
    GOSUB GET.CUS.TYPE.43.45.1
    RETURN

GET.CUS.TYPE.43.45.1:
*********************
    YRESTRUCT = 0; L.RESTRUCT.TYPE.VAL = ''; Y.RESTRUCT.DATE = ''; Y.L.LOAN.COND = '';
    Y.RESTRUCT.VAL = 'NR'; Y.RESTRUCTURED.DATE = ''
    C$SPARE(377) = ''

    L.RESTRUCT.TYPE.VAL = R.AA.OVERDUE.APP<AA.OD.LOCAL.REF,Y.L.RESTRUCT.TYPE.POS>
    Y.RESTRUCT.DATE = R.AA.OVERDUE.APP<AA.OD.LOCAL.REF,Y.L.STATUS.CHG.DT.POS>

    CALL GET.LOC.REF("AA.ARR.OVERDUE", "L.LOAN.COND", L.LOAN.COND.POS)
    Y.L.LOAN.COND = R.AA.OVERDUE.APP<AA.OD.LOCAL.REF, L.LOAN.COND.POS>
    Y.CANT.RECS = DCOUNT(Y.L.LOAN.COND, @SM)

    FOR A = 1 TO Y.CANT.RECS STEP 1
        IF Y.L.LOAN.COND<1,1,A> EQ "Restructured" THEN
            YRESTRUCT = 1
            Y.RESTRUCT.VAL = 'RN'
        END
    NEXT A

    IF LEN(Y.RESTRUCT.DATE) EQ 8 AND Y.RESTRUCT.VAL EQ 'RN' THEN
        C$SPARE(377) =  Y.RESTRUCT.DATE[7,2]:"/": Y.RESTRUCT.DATE[5,2]:"/": Y.RESTRUCT.DATE[1,4]
    END

    C$SPARE(405) = Y.RESTRUCT.VAL

    IF YRESTRUCT EQ 1 THEN
        GOSUB GET.RESTRUC.DETAL
        IF Y.CU.DEBTOR MATCHES "C":VM:"D" THEN
        END ELSE
            C$SPARE(370) = ''
            C$SPARE(370) = YMORA1
        END
    END

    YL.AA.CAMP.TY = R.AA.CUSTOMER<AA.CUS.LOCAL.REF,L.AA.CAMP.TY.POS>
    ERR.REDO.CAMPAIGN.TYPES = ''; R.REDO.CAMPAIGN.TYPES = ''

    CALL F.READ(FN.REDO.CAMPAIGN.TYPES,YL.AA.CAMP.TY,R.REDO.CAMPAIGN.TYPES,F.REDO.CAMPAIGN.TYPES,ERR.REDO.CAMPAIGN.TYPES)

    IF R.REDO.CAMPAIGN.TYPES THEN
        YCAMP.SHRTNME = R.REDO.CAMPAIGN.TYPES<CG.TYP.CAM.SHORT.DESC>
        Y.CAM.TYPE.DESC = R.REDO.CAMPAIGN.TYPES<CG.TYP.CAM.TYPE.DESC>
    END

    C$SPARE(406) = YCAMP.SHRTNME
    C$SPARE(408) = ''

    RETURN

FORM.ARRAY:
*---------
    MAP.FMT = "MAP"
    Y.MAP.ID = "REDO.RCL.DE11"
    Y.RCL.APPL = FN.AA.ARRANGEMENT
    Y.RCL.AA.ID = AA.ARR.ID
    CALL RAD.CONDUIT.LINEAR.TRANSLATION(MAP.FMT,Y.MAP.ID,Y.RCL.APPL,Y.RCL.AA.ID,R.AZ.,R.RETURN.MSG,ERR.MSG)
    CALL F.WRITE(FN.DR.REG.DE11.WORKFILE,AA.ARR.ID,R.RETURN.MSG)
    RETURN

GET.LOAN.STATUS:
*--------------*
    ArrangementID = AA.ARR.ID
    idPropertyClass = 'OVERDUE'; Y.LOAN.STATUS = ''
    idProperty = ''; returnIds = ''; returnConditions = ''; returnError = ''; effectiveDate = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    R.AA.OVERDUE = RAISE(returnConditions)
    Y.LOAN.STATUS = R.AA.OVERDUE<AA.OD.LOCAL.REF,Y.L.LOAN.STATUS.1.POS>
    RETURN

GET.CLOSED.LOAN.CHK:
********************
    ERR.AA.ACTIVITY.HISTORY = ''; R.AA.ACTIVITY.HISTORY = ''; Y.CLOSE.LN.FLG = 0; YACT.IS.STAT = ''; YACT.ID.ARR = ''
    CALL F.READ(FN.AA.ACTIVITY.HISTORY,AA.ARR.ID,R.AA.ACTIVITY.HISTORY,F.AA.ACTIVITY.HISTORY,ERR.AA.ACTIVITY.HISTORY)
    IF R.AA.ACTIVITY.HISTORY THEN
        YACT.ID.ARR = R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY>
        YACT.IS.STAT = R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS>
        CHANGE VM TO FM IN YACT.ID.ARR
        CHANGE SM TO FM IN YACT.ID.ARR
        CHANGE VM TO FM IN YACT.IS.STAT
        CHANGE SM TO FM IN YACT.IS.STAT
    END
    ERR.REDO.APAP.PROPERTY.PARAM = ''; R.REDO.APAP.PROPERTY.PARAM = ''; YPAYOFF.ACT = ''; YPAY.CNT = 0
    CALL F.READ(FN.REDO.APAP.PROPERTY.PARAM,Y.MAIN.PROD.GROUP,R.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM,ERR.REDO.APAP.PROPERTY.PARAM)
    IF R.REDO.APAP.PROPERTY.PARAM THEN
        YPAYOFF.ACT = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY>
        YPAY.CNT = DCOUNT(YPAYOFF.ACT,VM)
    END

    YCNT = 1
    LOOP
    WHILE YCNT LE YPAY.CNT
        YPAYOFF.ACT.1 = ''
        YPAYOFF.ACT.1 = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY,YCNT>
        LOCATE YPAYOFF.ACT.1 IN YACT.ID.ARR<1> SETTING CHG.POSN.1 THEN
            YARR.STAT = YACT.IS.STAT<CHG.POSN.1>
            IF YARR.STAT EQ 'AUTH' OR YARR.STAT EQ 'DELETE-REV' THEN
                Y.CLOSE.LN.FLG = 1
                YCNT = YPAY.CNT + 1
                CONTINUE
            END
        END
        YCNT++
    REPEAT
    RETURN

READ.EB.CONTRAC.BALANCE:
************************
    START.DATE = ''; START.DATE = YSTART.DTE
    END.DATE = Y.TODAY
    REQUEST.TYPE<4>='ECB'; Y.REGULATORY.ACC.NO = ''; SAVE.ACC.AC = ''; ASSET.TYPE.ARRAY = ''; YPOST.RESTRICT = ''
    AC.LEN = 7      ;* This is length of word 'ACCOUNT'
    PRIN.INT.LEN = 12         ;* This is length of word 'PRINCIPALINT'
    YACCT.GRP = 0; YNAB.STATUS = ''; ERR.ACCOUNT = ''; R.ACCOUNT = ''
    TACCT.VAL = 0; EB.CON.BAL.ERR = ''; R.EB.CON.BAL = ''; YNAB.AMT = 0; CNT.BAL.TYPE = 0
    DAT.BALANCES = ''; ACCT.SET.STAT =''; ACCT.YINSTALL.CNT = ''
    CALL F.READ(FN.EB.CON.BAL,Y.LOAN.CODE,R.EB.CON.BAL,F.EB.CON.BAL,EB.CON.BAL.ERR)
    IF R.EB.CON.BAL THEN
        Y.CONSOL.KEY = R.EB.CON.BAL<ECB.CONSOL.KEY>
        Y.CONSOL.PART = FIELD(Y.CONSOL.KEY,'.',1,16)
        Y.ASSET.TYPE = R.EB.CON.BAL<ECB.CURR.ASSET.TYPE>
        CTR.BAL.TYPE = 1
        CNT.BAL.TYPE = DCOUNT(Y.ASSET.TYPE,VM)
        LOOP
        WHILE CTR.BAL.TYPE LE CNT.BAL.TYPE
            ACC.POS = ''
            BAL.TYPE1 = Y.ASSET.TYPE<1,CTR.BAL.TYPE>
            IF BAL.TYPE1[1,3] EQ 'UNC' THEN
                CTR.BAL.TYPE = CTR.BAL.TYPE + 1
                CONTINUE
            END
            LEN.TYPE = LEN(BAL.TYPE1)
            REQ.LEN = BAL.TYPE1[((LEN.TYPE-AC.LEN)+1),AC.LEN]
            REQ.INT.LEN = BAL.TYPE1[((LEN.TYPE-PRIN.INT.LEN)+1),PRIN.INT.LEN]
            IF (REQ.LEN EQ 'ACCOUNT') OR (REQ.INT.LEN EQ 'PRINCIPALINT') THEN
                Y.IN.CONSOL.KEY = Y.CONSOL.PART:'.':BAL.TYPE1         ;*alter the consol key with current balance type in analysis
                Y.VARIABLE = ''
                CALL RE.CALCUL.REP.AL.LINE(Y.IN.CONSOL.KEY,Y.RPRTS,Y.LINES,Y.VARIABLE)
                Y.LINE = Y.RPRTS:'.':Y.LINES
                CALL F.READ(FN.RE.STAT.REP.LINE,Y.LINE,R.LINE,F.RE.STAT.REP.LINE,REP.ERR)
                GOSUB REG.ACCOUNT.NO
            END
            CTR.BAL.TYPE = CTR.BAL.TYPE + 1
        REPEAT
    END
    GOSUB ACC.NAB.PROCESS
    Y.FIN.ECB.AMT.CONS = ABS(Y.FIN.ECB.AMT.CONS)
    RETURN

REG.ACCOUNT.NO:
***************
    IF NOT(R.LINE) THEN
        RETURN
    END
    Y.REGULATORY.ACC.NO = R.LINE<RE.SRL.DESC,1>   ;* get accounting account for the current balance type in analysis
    IF Y.REGULATORY.ACC.NO[1,1] EQ '8' THEN
        RETURN
    END
    IF Y.REGULATORY.ACC.NO[1,3] EQ '241' THEN
        RETURN
    END
    LOCATE Y.REGULATORY.ACC.NO IN SAVE.ACC.AC<1> SETTING ACC.POS THEN
        GOSUB CHECK.ASSET.TYPE
    END ELSE
        GOSUB SAVE.UNIQUE.AC.ACC
    END

    IF REQ.LEN EQ 'ACCOUNT' THEN
        YACCT.GRP += DAT.BALANCES
    END

    IF DAT.BALANCES THEN
        Y.FIN.ECB.AMT.CONS = Y.FIN.ECB.AMT.CONS + DAT.BALANCES
    END
    DAT.BALANCES = ''
    RETURN

SAVE.UNIQUE.AC.ACC:
*******************
    SAVE.ACC.AC<-1> = Y.REGULATORY.ACC.NO
    CALL AA.GET.PERIOD.BALANCES(Y.LOAN.CODE, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    ASSET.TYPE.ARRAY<-1> = BAL.TYPE1
    DAT.BALANCES = BAL.DETAILS<4>
    RETURN

SAVE.EXISTING.AC.ACC:
*********************
    CALL AA.GET.PERIOD.BALANCES(Y.LOAN.CODE, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    DAT.BALANCES = BAL.DETAILS<4>
    RETURN

CHECK.ASSET.TYPE:
*****************
    LOCATE BAL.TYPE1 IN ASSET.TYPE.ARRAY<1> SETTING ASSET.POS THEN
        ASSET.POS = ''
    END ELSE
        ASSET.TYPE.ARRAY<-1> = BAL.TYPE1
        GOSUB SAVE.EXISTING.AC.ACC
    END
    RETURN

ACC.NAB.PROCESS:
****************
    R.REDO.CONCAT.ACC.NAB = ''; NAB.ERR = ''; YACC.NABBAL = ''; YNAB.STATUS = ''; REQUEST.TYPE = ''; YNAB.VAL = 0
    YCR.DTE = ''; YCR.AMT = 0; SUSPEND.VAL = ''; SUSPEND.STAT = ''; SUSPEND.DTE = ''
    SUSPEND.VAL = R.AA.ACCOUNT.DETAILS.APP<AA.AD.SUSPENDED>
    SUSPEND.STAT = R.AA.ACCOUNT.DETAILS.APP<AA.AD.SUSP.STATUS,1>
    SUSPEND.DTE = R.AA.ACCOUNT.DETAILS.APP<AA.AD.SUSP.DATE,1>
    IF SUSPEND.STAT EQ 'SUSPEND' AND SUSPEND.DTE GT Y.TODAY THEN
        RETURN
    END
    CALL F.READ(FN.REDO.CONCAT.ACC.NAB,Y.LOAN.CODE,R.REDO.CONCAT.ACC.NAB,F.REDO.CONCAT.ACC.NAB,NAB.ERR)
    IF NOT(R.REDO.CONCAT.ACC.NAB) THEN
        RETURN
    END
    Y.ACCT.ID = ''; Y.ACCT.ID = R.REDO.CONCAT.ACC.NAB
    BAL.TYPE1 = "OFFDB";   REQUEST.TYPE<4> = "ECB"
    START.DATE = Y.TODAY; END.DATE = Y.TODAY; BAL.DETAILS = 0; ERROR.MESSAGE = ''
    CALL AA.GET.PERIOD.BALANCES(Y.ACCT.ID, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    YCR.AMT = BAL.DETAILS<4>
    YACC.NABBAL = YCR.AMT
    IF YACC.NABBAL THEN
        Y.FIN.ECB.AMT.CONS = Y.FIN.ECB.AMT.CONS + YACC.NABBAL
    END
    YACC.NABBAL = ''
    RETURN
END
