*-----------------------------------------------------------------------------
* <Rating>225</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE REDO.B.COMMER.DEBTOR.UPD(Y.AA.CUS.ID)
*--------------------------------------------------------------------------------------------------
*
*--------------------------------------------------------------------------------------------------
* Input Parameter:
* ---------------*
* Argument#1 : NA
*-----------------*
* Output Parameter:
* ----------------*
* Argument#2 : NA
*--------------------------------------------------------------------------------------------------
*  M O D I F I C A T I O N S
* ***************************
*--------------------------------------------------------------------------------------------------
* Defect Reference       Modified By                    Date of Change        Change Details
* (RTC/TUT/PACS)
*--------------------------------------------------------------------------------------------------
* Include files
*--------------------------------------------------------------------------------------------------

    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_F.EB.CONTRACT.BALANCES
    $INSERT T24.BP I_F.AA.ARRANGEMENT
    $INSERT T24.BP I_F.CUSTOMER
    $INSERT T24.BP I_F.AA.OVERDUE
    $INSERT T24.BP I_F.AA.TERM.AMOUNT
    $INSERT T24.BP I_BATCH.FILES
    $INSERT T24.BP I_F.ACCOUNT
    $INSERT T24.BP I_F.AA.ACCOUNT.DETAILS
    $INSERT T24.BP I_F.AA.ACTIVITY.HISTORY
    $INSERT T24.BP I_F.RE.STAT.REP.LINE
    $INSERT TAM.BP I_F.REDO.APAP.PROPERTY.PARAM
    $INSERT LAPAP.BP I_REDO.B.COMMER.DEBTOR.UPD.COMMON
    $INSERT TAM.BP I_F.REDO.CUSTOMER.ARRANGEMENT

    GOSUB PROCESS
    RETURN

PROCESS:
*------
    R.REDO.CUSTOMER.ARRANGEMENT = ''; CUS.ARR.ERR = ''; Y.CREDIT.TYPE = ''; Y.BRANCH = ''
    Y.AA.OWNER = ''; Y.DCNT.OWNER = 0; AA.ARR.TEMP = ''; YARRY = ''
    CALL F.READ(FN.REDO.CUSTOMER.ARRANGEMENT,Y.AA.CUS.ID,R.REDO.CUSTOMER.ARRANGEMENT,F.REDO.CUSTOMER.ARRANGEMENT,CUS.ARR.ERR)
    IF R.REDO.CUSTOMER.ARRANGEMENT THEN
        GOSUB GET.FLD.VALUES
    END
    RETURN

GET.FLD.VALUES:
*--------------
    Y.AA.OWNER = R.REDO.CUSTOMER.ARRANGEMENT<CUS.ARR.OWNER>
    IF Y.AA.OWNER THEN
        Y.DCNT.OWNER = DCOUNT(Y.AA.OWNER,VM)
        Y.STA.COUNT = '1'
        Y.APPROVED.AMT = ''; Y.WRITE.FLG = ''; Y.FIN.ECB.AMT.HIP = 0
        Y.FIN.ECB.AMT.COM = 0; Y.FIN.ECB.AMT.CONS = 0
        GOSUB GET.CHK.AA.ID
        IF NOT(Y.FIN.ECB.AMT.COM) AND NOT(Y.FIN.ECB.AMT.CONS) AND NOT(Y.FIN.ECB.AMT.HIP) THEN
            RETURN
        END
        IF Y.FIN.ECB.AMT.COM LE '0' THEN
            IF Y.FIN.ECB.AMT.CONS LE '0' THEN
                IF Y.FIN.ECB.AMT.HIP LE '0' THEN
                    RETURN
                END
            END
        END

        IF Y.WRITE.FLG EQ '1' THEN
            GOSUB WRITE.REC.FLE
        END
    END
    RETURN

GET.CHK.AA.ID:
*-------------
    LOOP
    WHILE Y.STA.COUNT LE Y.DCNT.OWNER
        AA.ARR.ID = ''; AA.POSN = ''; YPOST.RESTRICT = ''
        AA.ARR.ID = Y.AA.OWNER<1,Y.STA.COUNT>
        LOCATE AA.ARR.ID IN AA.ARR.TEMP<1> SETTING AA.POSN THEN
            Y.STA.COUNT = Y.STA.COUNT + 1
            CONTINUE
        END
        AA.ARR.TEMP<-1> = AA.ARR.ID
        GOSUB GET.DTLS.AA.ID
        Y.STA.COUNT = Y.STA.COUNT + 1
    REPEAT
    GOSUB GET.ECB.AMT
    RETURN

GET.DTLS.AA.ID:
*--------------
    R.ARR.APPL = ''; ARR.ERR = ''
    CALL AA.GET.ARRANGEMENT(AA.ARR.ID,R.ARR.APPL,ARR.ERR)
    IF NOT(R.ARR.APPL) THEN
        RETURN
    END
    Y.MAIN.PRDT.LNE = R.ARR.APPL<AA.ARR.PRODUCT.LINE>
    Y.MAIN.PROD.GROUP = R.ARR.APPL<AA.ARR.PRODUCT.GROUP>
    Y.MAIN.ARR.STATUS = R.ARR.APPL<AA.ARR.ARR.STATUS>
    Y.MAIN.ARR.PRCT = R.ARR.APPL<AA.ARR.PRODUCT>
    Y.MAIN.STRT.DTE = R.ARR.APPL<AA.ARR.START.DATE>

    IF Y.MAIN.PRDT.LNE NE "LENDING" THEN
        RETURN
    END
    IF Y.MAIN.STRT.DTE GT YTODAY.DAT THEN
        RETURN
    END
    IF Y.MAIN.ARR.STATUS NE "CURRENT" AND Y.MAIN.ARR.STATUS NE "EXPIRED" THEN
        RETURN
    END
    GOSUB CHK.CURRENT.EXP
    RETURN

GET.ECB.AMT:
*----------
    IF Y.FIN.ECB.AMT.COM THEN
        Y.FIN.ECB.AMT.COM = ABS(Y.FIN.ECB.AMT.COM)
    END
    YARRY = "COMERCIAL_":Y.FIN.ECB.AMT.COM
    IF Y.FIN.ECB.AMT.CONS THEN
        Y.FIN.ECB.AMT.CONS = ABS(Y.FIN.ECB.AMT.CONS)
    END
    YARRY<-1> = "CONSUMO_":Y.FIN.ECB.AMT.CONS
    IF Y.FIN.ECB.AMT.HIP THEN
        Y.FIN.ECB.AMT.HIP = ABS(Y.FIN.ECB.AMT.HIP)
    END
    YARRY<-1> = "MORGAGE_":Y.FIN.ECB.AMT.HIP
    IF YFIN.ECB.COM THEN
        YFIN.ECB.COM = ABS(YFIN.ECB.COM)
    END
    YARRY<-1> = "COMERCIALACC_":YFIN.ECB.COM


    IF NOT(YFIN.ECB.COM) THEN
        YARRY<-1> = "L.CU.DEBTOR_"
        IF R.CUSTOMER<EB.CUS.LOCAL.REF,L.AA.MMD.PYME.POS> EQ '' AND R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.DEBTOR.POS> EQ 'M' THEN
            YARRY<-1> = "L.CU.DEBTOR.OLD_"
        END ELSE
            YARRY<-1> = "L.CU.DEBTOR.OLD_":R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.DEBTOR.POS>
        END
        RETURN
    END ELSE

        IF YFIN.ECB.COM LE '25000000' THEN
            YDEBT.VAL = "M"
            YARRY<-1> = "L.CU.DEBTOR_":YDEBT.VAL
        END
        IF YFIN.ECB.COM GT '25000000' AND YFIN.ECB.COM LE '40000000' THEN
            YDEBT.VAL = "D"
            YARRY<-1> = "L.CU.DEBTOR_":YDEBT.VAL
        END
        IF YFIN.ECB.COM GT '40000000' THEN
            YDEBT.VAL = "C"
            YARRY<-1> = "L.CU.DEBTOR_":YDEBT.VAL
        END
        YARRY<-1> = "L.CU.DEBTOR.OLD_":R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.DEBTOR.POS>

        YDEBT.VAL.ORG = ''; YDEBT.VAL.ORG = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.DEBTOR.POS>
        IF (YDEBT.VAL.ORG EQ 'M' AND YDEBT.VAL NE 'M') THEN
                YCO.CODE = R.CUSTOMER<EB.CUS.COMPANY.BOOK>
                CALL LOAD.COMPANY(YCO.CODE)
            GOSUB OFS.FILE.PROCES
            FIRST = ''; SECOND = ''; ACT.ERRR = ''
            FIRST = FIELD(OFS.CUSTOMER,',',1)
            SECOND = FIELD(FIRST,'/',3)
            ACT.ERRR = FIELD(OFS.CUSTOMER,',',2)
            FINDSTR "UNIQUE IS 'SYSTEM'" IN ACT.ERRR SETTING LPOSN THEN
                IF SECOND EQ '-1' THEN
                    YCO.CODE = R.CUSTOMER<EB.CUS.COMPANY.BOOK>
                    CALL LOAD.COMPANY(YCO.CODE)
                    GOSUB OFS.FILE.PROCES
                END
            END
        END
        IF (YDEBT.VAL.ORG EQ '' AND YDEBT.VAL NE '') THEN
                YCO.CODE = R.CUSTOMER<EB.CUS.COMPANY.BOOK>
                CALL LOAD.COMPANY(YCO.CODE)
            GOSUB OFS.FILE.PROCES
            FIRST = ''; SECOND = ''; ACT.ERRR = ''
            FIRST = FIELD(OFS.CUSTOMER,',',1)
            SECOND = FIELD(FIRST,'/',3)
            ACT.ERRR = FIELD(OFS.CUSTOMER,',',2)
            FINDSTR "UNIQUE IS 'SYSTEM'" IN ACT.ERRR SETTING LPOSN THEN
                IF SECOND EQ '-1' THEN
                    YCO.CODE = R.CUSTOMER<EB.CUS.COMPANY.BOOK>
                    CALL LOAD.COMPANY(YCO.CODE)
                    GOSUB OFS.FILE.PROCES
                END
            END
        END
    END
    RETURN

OFS.FILE.PROCES:
****************
    YCO.CODE = R.CUSTOMER<EB.CUS.CO.CODE>
    R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.DEBTOR.POS> = YDEBT.VAL
    OFS.SOURCE.ID = 'DC.OFS.PACS'
    APPLICATION.NAME = 'CUSTOMER'
    TRANS.FUNC.VAL = 'I'
    TRANS.OPER.VAL = 'PROCESS'
    APPLICATION.NAME.VERSION = 'CUSTOMER,AUTH'
    NO.AUT = '0'
    OFS.MSG.ID = 'DC.OFS.PACS'
    APPLICATION.ID = Y.AA.CUS.ID
    OFS.CUSTOMER = ''; TEMP.REST = ''
*    CALL LOAD.COMPANY(YCO.CODE)
    CALL OFS.BUILD.RECORD(APPLICATION.NAME,TRANS.FUNC.VAL,TRANS.OPER.VAL,APPLICATION.NAME.VERSION,"",NO.AUT,APPLICATION.ID,R.CUSTOMER,OFS.CUSTOMER)
    CRT OFS.CUSTOMER
    CALL OFS.GLOBUS.MANAGER(OFS.SOURCE.ID,OFS.CUSTOMER)
    CRT OFS.CUSTOMER
    RETURN

CHK.CURRENT.EXP:
*--------------
    Y.BAL.PRIC = '0'
    YCOM.FLG = 0; YCON.FLG = 0; YHIP.FLG = 0
    IF Y.MAIN.PROD.GROUP EQ "COMERCIAL" THEN
        YCOM.FLG = 1
        GOSUB CHK.LN.STATUS
    END
    IF Y.MAIN.PROD.GROUP EQ "LINEAS.DE.CREDITO" THEN
        FINDSTR "COM" IN Y.MAIN.ARR.PRCT SETTING Y.MAIN.PRCT.POS THEN
            YCOM.FLG = 1
            GOSUB CHK.LN.STATUS
        END
        FINDSTR "CONS" IN Y.MAIN.ARR.PRCT SETTING Y.MAIN.PRCT.POSC THEN
            YCON.FLG = 1
            GOSUB CHK.LN.STATUS
        END
    END
    IF Y.MAIN.PROD.GROUP EQ "CONSUMO" THEN
        YCON.FLG = 1
        GOSUB CHK.LN.STATUS
    END
    IF Y.MAIN.PROD.GROUP EQ "HIPOTECARIO" THEN
        YHIP.FLG = 1
        GOSUB CHK.LN.STATUS
    END
    RETURN

CHK.LN.STATUS:
*------------
    Y.LOAN.STATUS = ''; Y.CLOSE.LN.FLG = 0
    GOSUB GET.LOAN.STATUS
    IF Y.LOAN.STATUS EQ "Write-off" THEN
        RETURN
    END
    GOSUB GET.CLOSED.LOAN.CHK
    IF Y.CLOSE.LN.FLG EQ 1 THEN
        RETURN
    END
    Y.CUSTOMER.ID = R.ARR.APPL<AA.ARR.CUSTOMER>
    Y.CURRENCY    = R.ARR.APPL<AA.ARR.CURRENCY>
    Y.LINKED.APPL = R.ARR.APPL<AA.ARR.LINKED.APPL>
    Y.LINKED.APPL.ID = R.ARR.APPL<AA.ARR.LINKED.APPL.ID>
    LOCATE "ACCOUNT" IN Y.LINKED.APPL<1,1> SETTING Y.LINK.POS THEN
        Y.ACCOUNT =Y.LINKED.APPL.ID<Y.LINK.POS>
    END
    R.CUSTOMER = ''; CUS.ERR= ''
    CALL F.READ(FN.CUSTOMER,Y.AA.CUS.ID,R.CUSTOMER,F.CUSTOMER,CUS.ERR)
    Y.WRITE.FLG = '1'
    GOSUB OPEN.BAL.CALC
    RETURN

OPEN.BAL.CALC:
*------------
    IF Y.ACCOUNT EQ '' THEN
        RETURN
    END
    START.DATE = ''
    START.DATE = Y.MAIN.STRT.DTE
    END.DATE = YTODAY.DAT
    REQUEST.TYPE<4>='ECB'; Y.REGULATORY.ACC.NO = ''; SAVE.ACC.AC = ''; ASSET.TYPE.ARRAY = ''; YPOST.RESTRICT = ''
    AC.LEN = 7      ;* This is length of word 'ACCOUNT'
    PRIN.INT.LEN = 12         ;* This is length of word 'PRINCIPALINT'
    YPRINCIP.GRP = 0; YACCT.GRP = 0; YNAB.STATUS = ''; ERR.ACCOUNT = ''; R.ACCOUNT = ''
    TACCT.VAL = 0; EB.CON.BAL.ERR = ''; R.EB.CON.BAL = ''; YNAB.AMT = 0; CNT.BAL.TYPE = 0
    CALL F.READ(FN.ACCOUNT,Y.ACCOUNT,R.ACCOUNT,F.ACCOUNT,ERR.ACCOUNT)
    YNAB.STATUS = R.ACCOUNT<AC.LOCAL.REF,L.OD.STATUS.POS>
    YPOST.RESTRICT = R.ACCOUNT<AC.POSTING.RESTRICT>
    IF YPOST.RESTRICT EQ '75' OR YPOST.RESTRICT EQ '90' THEN
        RETURN
    END
    CALL F.READ(FN.EB.CON.BAL,Y.ACCOUNT,R.EB.CON.BAL,F.EB.CON.BAL,EB.CON.BAL.ERR)
    IF R.EB.CON.BAL THEN
        Y.CONSOL.KEY = R.EB.CON.BAL<ECB.CONSOL.KEY>
        Y.CONSOL.PART = FIELD(Y.CONSOL.KEY,'.',1,16)
        Y.ASSET.TYPE = R.EB.CON.BAL<ECB.CURR.ASSET.TYPE>
        CTR.BAL.TYPE = 1
        CNT.BAL.TYPE = DCOUNT(Y.ASSET.TYPE,VM)
        LOOP
        WHILE CTR.BAL.TYPE LE CNT.BAL.TYPE
            ACC.POS = ''
            BAL.TYPE1 = Y.ASSET.TYPE<1,CTR.BAL.TYPE>
            IF BAL.TYPE1[1,3] EQ 'UNC' THEN
                CTR.BAL.TYPE = CTR.BAL.TYPE + 1
                CONTINUE
            END
            LEN.TYPE = LEN(BAL.TYPE1)
            REQ.LEN = BAL.TYPE1[((LEN.TYPE-AC.LEN)+1),AC.LEN]
            REQ.INT.LEN = BAL.TYPE1[((LEN.TYPE-PRIN.INT.LEN)+1),PRIN.INT.LEN]
            IF (REQ.LEN EQ 'ACCOUNT') OR (REQ.INT.LEN EQ 'PRINCIPALINT') THEN
                Y.IN.CONSOL.KEY = Y.CONSOL.PART:'.':BAL.TYPE1         ;*alter the consol key with current balance type in analysis
                Y.VARIABLE = ''
                CALL RE.CALCUL.REP.AL.LINE(Y.IN.CONSOL.KEY,Y.RPRTS,Y.LINES,Y.VARIABLE)
                Y.LINE = Y.RPRTS:'.':Y.LINES
                CALL F.READ(FN.RE.STAT.REP.LINE,Y.LINE,R.LINE,F.RE.STAT.REP.LINE,REP.ERR)
                GOSUB REG.ACCOUNT.NO
            END
*
            CTR.BAL.TYPE = CTR.BAL.TYPE + 1
        REPEAT
    END
    GOSUB READ.AA.ACCT.DET
    GOSUB ACC.NAB.PROCESS
    RETURN

REG.ACCOUNT.NO:
***************
    IF NOT(R.LINE) THEN
        RETURN
    END
    Y.REGULATORY.ACC.NO = R.LINE<RE.SRL.DESC,1>   ;* get accounting account for the current balance type in analysis
    IF Y.REGULATORY.ACC.NO[1,1] EQ '8' THEN
        RETURN
    END
    LOCATE Y.REGULATORY.ACC.NO IN SAVE.ACC.AC<1> SETTING ACC.POS THEN
        GOSUB CHECK.ASSET.TYPE
    END ELSE
        GOSUB SAVE.UNIQUE.AC.ACC
    END

    IF YCOM.FLG EQ 1 AND DAT.BALANCES THEN
        Y.FIN.ECB.AMT.COM = Y.FIN.ECB.AMT.COM + DAT.BALANCES
        IF REQ.LEN EQ 'ACCOUNT' THEN
            YFIN.ECB.COM = YFIN.ECB.COM + DAT.BALANCES
        END
    END
    IF YCON.FLG EQ 1 AND DAT.BALANCES THEN
        Y.FIN.ECB.AMT.CONS = Y.FIN.ECB.AMT.CONS + DAT.BALANCES
    END
    IF YHIP.FLG EQ 1 AND DAT.BALANCES THEN
        Y.FIN.ECB.AMT.HIP = Y.FIN.ECB.AMT.HIP + DAT.BALANCES
    END
    DAT.BALANCES = ''
    RETURN

SAVE.UNIQUE.AC.ACC:
*******************
*
    SAVE.ACC.AC<-1> = Y.REGULATORY.ACC.NO
    CALL AA.GET.PERIOD.BALANCES(Y.ACCOUNT, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    ASSET.TYPE.ARRAY<-1> = BAL.TYPE1
    DAT.BALANCES = BAL.DETAILS<4>
    RETURN
*----------------------------------------------------------------------------
SAVE.EXISTING.AC.ACC:
*********************
*
    CALL AA.GET.PERIOD.BALANCES(Y.ACCOUNT, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    DAT.BALANCES = BAL.DETAILS<4>
    RETURN
*----------------------------------------------------------------------------
CHECK.ASSET.TYPE:
*****************
*
    LOCATE BAL.TYPE1 IN ASSET.TYPE.ARRAY<1> SETTING ASSET.POS THEN
        ASSET.POS = ''
    END ELSE
        ASSET.TYPE.ARRAY<-1> = BAL.TYPE1
        GOSUB SAVE.EXISTING.AC.ACC
    END
    RETURN

ACC.NAB.PROCESS:
****************
    R.REDO.CONCAT.ACC.NAB = ''; NAB.ERR = ''; YACC.NABBAL = ''; YNAB.STATUS = ''; REQUEST.TYPE = ''; YNAB.VAL = 0
    YCR.DTE = ''; YCR.AMT = 0; SUSPEND.VAL = ''; SUSPEND.STAT = ''; SUSPEND.DTE = ''
    SUSPEND.VAL = R.AA.ACCT.DET<AA.AD.SUSPENDED>
    SUSPEND.STAT = R.AA.ACCT.DET<AA.AD.SUSP.STATUS,1>
    SUSPEND.DTE = R.AA.ACCT.DET<AA.AD.SUSP.DATE,1>
    IF SUSPEND.STAT EQ 'SUSPEND' AND SUSPEND.DTE GT YTODAY.DAT THEN
        RETURN
    END
    CALL F.READ(FN.REDO.CONCAT.ACC.NAB,Y.ACCOUNT,R.REDO.CONCAT.ACC.NAB,F.REDO.CONCAT.ACC.NAB,NAB.ERR)
    IF NOT(R.REDO.CONCAT.ACC.NAB) THEN
        RETURN
    END
    Y.ACCT.ID = ''; Y.ACCT.ID = R.REDO.CONCAT.ACC.NAB
    BAL.TYPE1 = "OFFDB";   REQUEST.TYPE<4> = "ECB"
    START.DATE = YTODAY.DAT; END.DATE = YTODAY.DAT; BAL.DETAILS = 0; ERROR.MESSAGE = ''
    CALL AA.GET.PERIOD.BALANCES(Y.ACCT.ID, BAL.TYPE1,REQUEST.TYPE, START.DATE, END.DATE, '',BAL.DETAILS, ERROR.MESSAGE)
    YCR.AMT = BAL.DETAILS<4>
    YACC.NABBAL = YCR.AMT
    IF YCOM.FLG EQ 1 AND YACC.NABBAL THEN
        Y.FIN.ECB.AMT.COM = Y.FIN.ECB.AMT.COM + YACC.NABBAL
    END
    IF YCON.FLG EQ 1 AND YACC.NABBAL THEN
        Y.FIN.ECB.AMT.CONS = Y.FIN.ECB.AMT.CONS + YACC.NABBAL
    END
    IF YHIP.FLG EQ 1 AND YACC.NABBAL THEN
        Y.FIN.ECB.AMT.HIP = Y.FIN.ECB.AMT.HIP + YACC.NABBAL
    END
    YACC.NABBAL = ''
    RETURN

READ.AA.ACCT.DET:
*****************
    ERR.ACCT.DET = ''; R.AA.ACCT.DET = ''
    CALL F.READ(FN.AA.ACCOUNT.DETAILS,AA.ARR.ID,R.AA.ACCT.DET,F.AA.ACCOUNT.DETAILS,ERR.ACCT.DET)
    RETURN

WRITE.REC.FLE:
**************
    CALL F.WRITE(FN.REDO.APAP.COMMER.DEBT.DET,Y.AA.CUS.ID,YARRY)
    RETURN

GET.LOAN.STATUS:
*--------------*
    ArrangementID = AA.ARR.ID
    idPropertyClass = 'OVERDUE'; Y.LOAN.STATUS = ''
    idProperty = ''; returnIds = ''; returnConditions = ''; returnError = ''; effectiveDate = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    R.AA.OVERDUE = RAISE(returnConditions)
    Y.LOAN.STATUS = R.AA.OVERDUE<AA.OD.LOCAL.REF,Y.L.LOAN.STATUS.1.POS>
    RETURN

GET.CLOSED.LOAN.CHK:
********************
    REQD.MODE = ''; EFF.DATE = Y.MAIN.STRT.DTE; R.AA.ACTIVITY.HISTORY = ''
    CALL AA.READ.ACTIVITY.HISTORY(REC.ID, REQD.MODE, EFF.DATE, R.AA.ACTIVITY.HISTORY)
    Y.CLOSE.LN.FLG = 0; YACT.IS.STAT = ''; YACT.ID.ARR = ''
    IF R.AA.ACTIVITY.HISTORY THEN
        YACT.ID.ARR = R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY>
        YACT.IS.STAT = R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS>
        CHANGE VM TO FM IN YACT.ID.ARR
        CHANGE SM TO FM IN YACT.ID.ARR
        CHANGE VM TO FM IN YACT.IS.STAT
        CHANGE SM TO FM IN YACT.IS.STAT
    END
    ERR.REDO.APAP.PROPERTY.PARAM = ''; R.REDO.APAP.PROPERTY.PARAM = ''; YPAYOFF.ACT = ''; YPAY.CNT = 0
    CALL F.READ(FN.REDO.APAP.PROPERTY.PARAM,Y.MAIN.PROD.GROUP,R.REDO.APAP.PROPERTY.PARAM,F.REDO.APAP.PROPERTY.PARAM,ERR.REDO.APAP.PROPERTY.PARAM)
    IF R.REDO.APAP.PROPERTY.PARAM THEN
        YPAYOFF.ACT = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY>
        YPAY.CNT = DCOUNT(YPAYOFF.ACT,VM)
    END

    YCNT = 1
    LOOP
    WHILE YCNT LE YPAY.CNT
        YPAYOFF.ACT.1 = ''
        YPAYOFF.ACT.1 = R.REDO.APAP.PROPERTY.PARAM<PROP.PARAM.PAYOFF.ACTIVITY,YCNT>
        LOCATE YPAYOFF.ACT.1 IN YACT.ID.ARR<1> SETTING CHG.POSN.1 THEN
            YARR.STAT = YACT.IS.STAT<CHG.POSN.1>
            IF YARR.STAT EQ 'AUTH' THEN
                Y.CLOSE.LN.FLG = 1
                YCNT = YPAY.CNT + 1
                CONTINUE
            END
        END
        YCNT++
    REPEAT
    RETURN
END
