*----------------------------------------------------------------------------
* <Rating>-190</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE DR.REG.TASAS.ACTIVAS.CONCAT(REC.ID)
*----------------------------------------------------------------------------
* Company Name   : APAP
* Company Name   : APAP
* Developed By   : gangadhar@temenos.com
* Program Name   : DR.REG.TASAS.ACTIVAS.CONCAT
* Date           : 27-May-2013
*----------------------------------------------------------------------------
* Description:
*------------
* The Central Bank of the Dominican Republic requires that with a daily frequency  the Financial Institutions submit a summary report with
* the information about lending and deposit rates report of the prior working date
* This job is for Activas
*----------------------------------------------------------------------------
*
* Modification History :
* ----------------------
*   Date       Author              Modification Description
* 25-Jul-2014  Ashokkumar.V.P      PACS00305233:- Changed to consider all month as 30 days
* 09-Oct-2014  Ashokkumar.V.P      PACS00305233:- Added new Loan product. Added MM interest with Spread rate.
* 05-May-2015  Ashokkumar.V.P      PACS00305233:- Changed F.WRITE to WRITE
*----------------------------------------------------------------------------

    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_BATCH.FILES
    $INSERT T24.BP I_TSA.COMMON
    $INSERT T24.BP I_F.CUSTOMER
    $INSERT T24.BP I_F.AA.ARRANGEMENT
    $INSERT T24.BP I_F.AA.TERM.AMOUNT
    $INSERT T24.BP I_F.AA.INTEREST
    $INSERT T24.BP I_F.MM.MONEY.MARKET
    $INSERT T24.BP I_F.BASIC.INTEREST
    $INSERT T24.BP I_F.GROUP.DATE
    $INSERT T24.BP I_AA.APP.COMMON
    $INSERT T24.BP I_F.AA.PRODUCT.DESIGNER
    $INSERT T24.BP I_AA.ID.COMPONENT
    $INSERT T24.BP I_F.AA.ACTIVITY.HISTORY
    $INSERT T24.BP I_F.AA.CUSTOMER
*
    $INCLUDE LAPAP.BP I_DR.REG.TASAS.ACTIVAS.CONCAT.COMMON
    $INCLUDE REGREP.BP I_F.DR.REG.ACTIVAS.GROUP
    $INCLUDE REGREP.BP I_F.DR.REG.ACTIVAS.PARAM
*
    GOSUB PROCESS
    RETURN

PROCESS:
*------*
    YTP.RECID = ''; R.AA.ARRANGEMENT = ''; AA.ARRANGEMENT.ERR = ''; STRT.DATE = ''; AMT.VAL = 0; YACCT.ID = ''
    CALL F.READ(FN.AA.ARRANGEMENT,REC.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,AA.ARRANGEMENT.ERR)
    PROD.GRP = R.AA.ARRANGEMENT<AA.ARR.PRODUCT.GROUP>
    YAA.PROD = R.AA.ARRANGEMENT<AA.ARR.PRODUCT>
    CCY.VAL = R.AA.ARRANGEMENT<AA.ARR.CURRENCY>
    CUS.ID = R.AA.ARRANGEMENT<AA.ARR.CUSTOMER>
    STRT.DATE = R.AA.ARRANGEMENT<AA.ARR.START.DATE>
    YACCT.ID = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID>
    BANK.EMP.FLAG = 'NO'
    GOSUB EXCLUDE.BANK.EMP
    IF BANK.EMP.FLAG EQ 'NO' THEN
        GOSUB UPDATE.GROUPS
    END
    RETURN

EXCLUDE.BANK.EMP:
*---------------*
    R.CUSTOMER = ''; CUSTOMER.ERR = ''
    CALL F.READ(FN.CUSTOMER,CUS.ID,R.CUSTOMER,F.CUSTOMER,CUSTOMER.ERR)
    REL.CODES = ''
    REL.CODES = R.CUSTOMER<EB.CUS.RELATION.CODE>
    CHANGE VM TO FM IN REL.CODES
    IF REL.CODES THEN
        CNT.REL.CODES = DCOUNT(REL.CODES,FM)
        CTR.REL.CODES = 1
        GOSUB CTR.REL.CODE.LOOP
    END ELSE
        BANK.EMP.FLAG = 'NO'
    END
    RETURN

CTR.REL.CODE.LOOP:
******************
    LOOP
    WHILE CTR.REL.CODES LE CNT.REL.CODES
        REL.POS = ''
        LOCATE REL.CODES<CTR.REL.CODES> IN REL.CHK.LIST<1> SETTING REL.POS THEN
            CTR.REL.CODES = CNT.REL.CODES
            BANK.EMP.FLAG = "YES"
        END
        CTR.REL.CODES += 1
    REPEAT
    RETURN

UPDATE.GROUPS:
*------------*
    GOSUB GET.INT.RATE
    GOSUB GET.AA.CUSTOMER
    GOSUB GET.TERM.DAYS

    YST.FLG = 0
    BEGIN CASE
    CASE (PROD.GRP EQ GRP1.VAL AND CCY.VAL EQ LCCY)
        GOSUB UPDATE.GROUP1
        GOSUB UPDATE.GROUP4
    CASE (PROD.GRP EQ GRP2.VAL AND CCY.VAL EQ LCCY)
        GOSUB UPDATE.GROUP2
        GOSUB UPDATE.GROUP4
    CASE (PROD.GRP EQ GRP3.VAL AND CCY.VAL EQ LCCY)
        GOSUB UPDATE.GROUP3
        GOSUB UPDATE.GROUP4
    CASE (PROD.GRP EQ GRP4.VAL AND CCY.VAL EQ LCCY)
        PFM = '';PVM = ''; PSM = ''
        FINDSTR 'COM' IN YAA.PROD SETTING PFM,PVM,PSM THEN
            GOSUB UPDATE.GROUP1
            GOSUB UPDATE.GROUP4
        END
        PFM = '';PVM = ''; PSM = ''
        FINDSTR 'CONS' IN YAA.PROD SETTING PFM,PVM,PSM THEN
            GOSUB UPDATE.GROUP2
            GOSUB UPDATE.GROUP4
        END
    CASE (CCY.VAL NE LCCY)
        IF PROD.GRP EQ GRP4.VAL THEN
            GOSUB CREDIT.LOANS.CHK
        END
    END CASE
    RETURN

CREDIT.LOANS.CHK:
*****************
    PFM = '';PVM = ''; PSM = ''
    FINDSTR 'COM' IN YAA.PROD SETTING PFM,PVM,PSM THEN
        YST.FLG = 1
    END
    PFM = '';PVM = ''; PSM = ''
    FINDSTR 'CONS' IN YAA.PROD SETTING PFM,PVM,PSM THEN
        YST.FLG = 1
    END
    IF YST.FLG EQ 1 THEN
        GOSUB UPDATE.GROUP5
        GOSUB UPDATE.GROUP6
    END
    RETURN

GET.INT.RATE:
************
    ArrangementID = REC.ID
    idPropertyClass = ''
    idProperty = 'PRINCIPALINT'
    effectiveDate = ''
    returnIds = ''
    returnConditions = ''
    returnError = ''; ARR.INT.RATE = ''; INT.REC = ''; CNT.RATE = 0
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    INT.REC = RAISE(returnConditions)
    CNT.RATE = DCOUNT(INT.REC<AA.INT.EFFECTIVE.RATE>,'VM')
    ARR.INT.RATE = INT.REC<AA.INT.EFFECTIVE.RATE,CNT.RATE>
    IF NOT(ARR.INT.RATE) THEN
        ARR.INT.RATE = INT.REC<AA.INT.EFFECTIVE.RATE,1>
    END
    RETURN

GET.AA.CUSTOMER:
****************
    ARRANGEMENT.ID = REC.ID
    R.AA.INTEREST = ''; PROP.CLASS = ''; RET.ERR = ''; returnConditions = ''; YL.AA.CAMP.TY = ''
    PROP.NAME      = 'CUSTOMER'
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ARRANGEMENT.ID,PROP.CLASS,PROP.NAME,'','',returnConditions,RET.ERR)
    R.AA.CUSTOMER = RAISE(returnConditions)
    YL.AA.CAMP.TY = R.AA.CUSTOMER<AA.CUS.LOCAL.REF,L.AA.CAMP.TY.POS>
    RETURN

GET.TERM.DAYS:
*************

    YCONT.FLG = 0; YACTIVITY = ''
    ArrangementID = REC.ID
    effectiveDate = ''; YDATE = ''; YDATE1 = ''; TERM.IN.DAYS = ''
    idPropertyClass = 'TERM.AMOUNT'
    idProperty = ''; returnIds = ''; returnConditions = ''; returnError = ''; TERM = ''; AMT.VAL = ''; MAT.DATE = ''
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ArrangementID, idPropertyClass, idProperty, effectiveDate, returnIds, returnConditions, returnError)
    R.AA.TERM.AMOUNT = RAISE(returnConditions)
    TERM = R.AA.TERM.AMOUNT<AA.AMT.TERM>
    AMT.VAL = R.AA.TERM.AMOUNT<AA.AMT.AMOUNT>
    MAT.DATE = R.AA.TERM.AMOUNT<AA.AMT.MATURITY.DATE>

    Y.REGION = ''; Y.DAYS = ''
    IF MAT.DATE AND STRT.DATE THEN
        YDATE = STRT.DATE
        YDATE1 = MAT.DATE
        GOSUB DATE.30.CHK
        TERM.IN.DAYS = ABS(Y.DAYS)
    END
    RETURN

UPDATE.GROUP2:
*------------*
    IF ARR.INT.RATE EQ 0 THEN
        RETURN
    END
    R.DR.REG.ACTIVAS.GROUP = ''
    YACTIV.ID = 'GROUP2-':ARR.INT.RATE
    GOSUB READ.ACTIVAS.GRP
    IF R.DR.REG.ACTIVAS.GROUP THEN
        GOSUB WRITE.GROUP
    END ELSE
        GOSUB NEW.WRITE.GROUP
    END
*
    IF R.DR.REG.ACTIVAS.GROUP THEN
        YDET.ARRY = YACCT.ID:',':CUS.ID:',':STRT.DATE:',':MAT.DATE:',':ARR.INT.RATE:',':PROD.GRP:',':YAA.PROD:',':TERM.IN.DAYS:',':AMT.VAL:',':YL.AA.CAMP.TY:',':R.DR.REG.ACTIVAS.PARAM<DR.ACTIVAS.PARAM.GRP.REP.NAME,2>
        GOSUB WRITE.CONCAT.PASV
    END
    RETURN
*----------------------------------------------------------------------------
WRITE.GROUP:
************
    BEGIN CASE
    CASE TERM.IN.DAYS LE RANGE1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB1.LOANS> += 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB1.AMT> += AMT.VAL
    CASE TERM.IN.DAYS GT RANGE1 AND TERM.IN.DAYS LE RANGE2
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB2.LOANS> += 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB2.AMT> += AMT.VAL
    CASE TERM.IN.DAYS GT RANGE2 AND TERM.IN.DAYS LE RANGE3
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB3.LOANS> += 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB3.AMT> += AMT.VAL
    CASE TERM.IN.DAYS GT RANGE3 AND TERM.IN.DAYS LE RANGE4
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB4.LOANS> += 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB4.AMT> += AMT.VAL
    CASE TERM.IN.DAYS GT RANGE4 AND TERM.IN.DAYS LE RANGE5
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB5.LOANS> += 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB5.AMT> += AMT.VAL
    CASE TERM.IN.DAYS GT RANGE5
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB6.LOANS> += 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB6.AMT> += AMT.VAL
    END CASE
    RETURN
*----------------------------------------------------------------------------
NEW.WRITE.GROUP:
****************
*
    BEGIN CASE
    CASE TERM.IN.DAYS LE RANGE1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB1.LOANS> = 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB1.AMT> = AMT.VAL
    CASE TERM.IN.DAYS GT RANGE1 AND TERM.IN.DAYS LE RANGE2
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB2.LOANS> = 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB2.AMT> = AMT.VAL
    CASE TERM.IN.DAYS GT RANGE2 AND TERM.IN.DAYS LE RANGE3
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB3.LOANS> = 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB3.AMT> = AMT.VAL
    CASE TERM.IN.DAYS GT RANGE3 AND TERM.IN.DAYS LE RANGE4
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB4.LOANS> = 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB4.AMT> = AMT.VAL
    CASE TERM.IN.DAYS GT RANGE4 AND TERM.IN.DAYS LE RANGE5
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB5.LOANS> = 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB5.AMT> = AMT.VAL
    CASE TERM.IN.DAYS GT RANGE5
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB6.LOANS> = 1
        R.DR.REG.ACTIVAS.GROUP<DR.ACT.GRP.SUB6.AMT> = AMT.VAL
    END CASE
*
    RETURN
*----------------------------------------------------------------------------
UPDATE.GROUP1:
*------------*

    IF ARR.INT.RATE EQ 0 THEN
        RETURN
    END
    R.DR.REG.ACTIVAS.GROUP = ''
    YACTIV.ID = 'GROUP1-':ARR.INT.RATE
    GOSUB READ.ACTIVAS.GRP
    IF R.DR.REG.ACTIVAS.GROUP THEN
        GOSUB WRITE.GROUP
    END ELSE
        GOSUB NEW.WRITE.GROUP
    END
*
    IF R.DR.REG.ACTIVAS.GROUP THEN
        YDET.ARRY = YACCT.ID:',':CUS.ID:',':STRT.DATE:',':MAT.DATE:',':ARR.INT.RATE:',':PROD.GRP:',':YAA.PROD:',':TERM.IN.DAYS:',':AMT.VAL:',':YL.AA.CAMP.TY:',':R.DR.REG.ACTIVAS.PARAM<DR.ACTIVAS.PARAM.GRP.REP.NAME,1>
        GOSUB WRITE.CONCAT.PASV
    END
    RETURN
*----------------------------------------------------------------------------
UPDATE.GROUP3:
*------------*
    IF ARR.INT.RATE EQ 0 THEN
        RETURN
    END
    R.DR.REG.ACTIVAS.GROUP = ''
    YACTIV.ID = 'GROUP3-':ARR.INT.RATE
    GOSUB READ.ACTIVAS.GRP
    IF R.DR.REG.ACTIVAS.GROUP THEN
        GOSUB WRITE.GROUP
    END ELSE
        GOSUB NEW.WRITE.GROUP
    END
*
    IF R.DR.REG.ACTIVAS.GROUP THEN
        YDET.ARRY = YACCT.ID:',':CUS.ID:',':STRT.DATE:',':MAT.DATE:',':ARR.INT.RATE:',':PROD.GRP:',':YAA.PROD:',':TERM.IN.DAYS:',':AMT.VAL:',':YL.AA.CAMP.TY:',':R.DR.REG.ACTIVAS.PARAM<DR.ACTIVAS.PARAM.GRP.REP.NAME,3>
        GOSUB WRITE.CONCAT.PASV
    END
    RETURN
*----------------------------------------------------------------------------
UPDATE.GROUP4:
*------------*
    IF ARR.INT.RATE EQ 0 OR YL.AA.CAMP.TY NE 2 THEN
        R.DR.REG.ACTIVAS.GROUP = ''
        YACTIV.ID = 'GROUP4-':ARR.INT.RATE
        GOSUB READ.ACTIVAS.GRP
        IF R.DR.REG.ACTIVAS.GROUP THEN
            GOSUB WRITE.GROUP
        END ELSE
            GOSUB NEW.WRITE.GROUP
        END
*
        IF R.DR.REG.ACTIVAS.GROUP THEN
            YDET.ARRY = YACCT.ID:',':CUS.ID:',':STRT.DATE:',':MAT.DATE:',':ARR.INT.RATE:',':PROD.GRP:',':YAA.PROD:',':TERM.IN.DAYS:',':AMT.VAL:',':YL.AA.CAMP.TY:',':R.DR.REG.ACTIVAS.PARAM<DR.ACTIVAS.PARAM.GRP.REP.NAME,4>
            GOSUB WRITE.CONCAT.PASV
        END
    END
    RETURN

UPDATE.GROUP5:
*------------*
    IF ARR.INT.RATE EQ 0 THEN
        RETURN
    END
    R.DR.REG.ACTIVAS.GROUP = ''
    YACTIV.ID = 'GROUP5-':ARR.INT.RATE
    GOSUB READ.ACTIVAS.GRP
    IF R.DR.REG.ACTIVAS.GROUP THEN
        GOSUB WRITE.GROUP
    END ELSE
        GOSUB NEW.WRITE.GROUP
    END
*
    IF R.DR.REG.ACTIVAS.GROUP THEN
        YDET.ARRY = YACCT.ID:',':CUS.ID:',':STRT.DATE:',':MAT.DATE:',':ARR.INT.RATE:',':PROD.GRP:',':YAA.PROD:',':TERM.IN.DAYS:',':AMT.VAL:',':YL.AA.CAMP.TY:',':R.DR.REG.ACTIVAS.PARAM<DR.ACTIVAS.PARAM.GRP.REP.NAME,5>
        GOSUB WRITE.CONCAT.PASV
    END
    RETURN

UPDATE.GROUP6:
*------------*
    IF ARR.INT.RATE EQ 0 OR YL.AA.CAMP.TY NE 2 THEN
        R.DR.REG.ACTIVAS.GROUP = ''
        YACTIV.ID = 'GROUP6-':ARR.INT.RATE
        GOSUB READ.ACTIVAS.GRP
        IF R.DR.REG.ACTIVAS.GROUP THEN
            GOSUB WRITE.GROUP
        END ELSE
            GOSUB NEW.WRITE.GROUP
        END
*
        IF R.DR.REG.ACTIVAS.GROUP THEN
            YDET.ARRY = YACCT.ID:',':CUS.ID:',':STRT.DATE:',':MAT.DATE:',':ARR.INT.RATE:',':PROD.GRP:',':YAA.PROD:',':TERM.IN.DAYS:',':AMT.VAL:',':YL.AA.CAMP.TY:',':R.DR.REG.ACTIVAS.PARAM<DR.ACTIVAS.PARAM.GRP.REP.NAME,6>
            GOSUB WRITE.CONCAT.PASV
        END
    END
    RETURN

READ.ACTIVAS.GRP:
*****************
    R.DR.REG.ACTIVAS.GROUP = ''; DR.REG.ACTIVAS.GROUP.ERR = ''
    CALL F.READU(FN.DR.REG.ACTIVAS.GROUP,YACTIV.ID,R.DR.REG.ACTIVAS.GROUP,F.DR.REG.ACTIVAS.GROUP,DR.REG.ACTIVAS.GROUP.ERR,'')
    RETURN

WRITE.CONCAT.PASV:
******************
    WRITE R.DR.REG.ACTIVAS.GROUP ON F.DR.REG.ACTIVAS.GROUP, YACTIV.ID ON ERROR
        CALL OCOMO("Unable to write to the file":F.DR.REG.ACTIVAS.GROUP)
    END
    YTP.RECID = "AA-":REC.ID:"-":YACTIV.ID
    IF YDET.ARRY THEN
        WRITE YDET.ARRY ON F.DR.REG.ACTIVAS.GROUP, YTP.RECID ON ERROR
            CALL OCOMO("Unable to write to the file":F.DR.REG.ACTIVAS.GROUP)
        END
    END
    RETURN

DATE.30.CHK:
*************
    Y.NO.OF.MONTHS = 0; Y.MNTH = ''; YACT.MONTH = 0
    TMP.YDATE1 = ''; TMP.YDATE = ''
    IF LEN(YDATE) <> 8 OR LEN(YDATE1) <> 8 THEN
        Y.DAYS = 0
        RETURN
    END
    IF YDATE[1,4] > YDATE1[1,4] THEN
        TMP.YDATE1 = YDATE1
        TMP.YDATE = YDATE
        YDATE1 = TMP.YDATE
        YDATE = TMP.YDATE1
    END
    Y.GDAYS = 'C'
    CALL EB.NO.OF.MONTHS(YDATE,YDATE1,Y.NO.OF.MONTHS)
    Y.MNTH = Y.NO.OF.MONTHS:'M'
    CALL CALENDAR.DAY(YDATE,'+',Y.MNTH)
    CALL CDD('',Y.MNTH,YDATE1,Y.GDAYS)
    IF Y.NO.OF.MONTHS THEN
        YACT.MONTH = Y.NO.OF.MONTHS * 30
    END
    Y.DAYS =  YACT.MONTH + Y.GDAYS
    RETURN
END
