* @ValidationCode : MjoxMzY3MDAwODYwOkNwMTI1MjoxNjgwNzU4NzM1NjI5OklUU1M6LTE6LTE6MDowOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 06 Apr 2023 10:55:35
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOAPAP
SUBROUTINE REDO.APAP.NOFILE.PL.CALL.LIST(Y.ARRAY)
***********************************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: SHANKAR RAJU
* PROGRAM NAME: REDO.APAP.NOFILE.PL.CALL.LIST
* ODR NO      : ODR-2010-07-0079
*----------------------------------------------------------------------
*DESCRIPTION: This routine is attached in NOFILE ENQUIRY REDO.APAP.PL.CALL.LIST
*             This enquiry should select all the records from the live and history
*             file, from the application Money Market (MM)

*IN PARAMETER:  NA
*OUT PARAMETER: Y.ARRAY
*LINKED WITH: STANDARD.SELECTION>REDO.APAP.PL.CALL.LIST & STANDARD.SELECTION>REDO.APAP.TK.CALL.LIST
*----------------------------------------------------------------------

*Modification Details:
*=====================
*      Date                 Who                  Reference                 Description
*     ------               -----               -------------              -------------
* 31 March  2011         Pradeep S              PACS00052347                PACS Fix
* 19 April  2011         Pradeep S              PACS00055015                For Place contracts
* 29 June   2011         Pradeep S              PACS00075192                Changes for Floating interest rates
* 04 Auguest2011         Pradeep S              PACS00099904                Select command changed for live records
* Date                   who                   Reference              
* 06-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION FM TO @FM AND SM TO @SM AND CONVERT TO CHANGE AND F.READ TO CACHE.READ AND REMOVED F.INT
* 06-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*********************************************************************************************************

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.MM.MONEY.MARKET
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.ENQUIRY
    $INSERT I_F.CUSTOMER
    $INSERT I_F.INTEREST.BASIS
    $INSERT I_F.REDO.CALL.LIST.CATEG

    GOSUB INIT
    GOSUB PROCESS
    GOSUB PROCESS.SEL
    GOSUB PROCESS.ASSIGN

RETURN
*----------------------------------------------------------------------
INIT:
*----------------------------------------------------------------------

    FN.MM.MONEY.MARKET='F.MM.MONEY.MARKET'
    F.MM.MONEY.MARKET=''

    FN.MM.MONEY.MARKET.HIS='F.MM.MONEY.MARKET$HIS'
    F.MM.MONEY.MARKET.HIS=''

    FN.LMM.ACCOUNT.BALANCES = 'F.LMM.ACCOUNT.BALANCES'
    F.LMM.ACCOUNT.BALANCES = ''

    FN.LMM.ACCOUNT.BALANCES.HIST = 'F.LMM.ACCOUNT.BALANCES.HIST'
    F.LMM.ACCOUNT.BALANCES.HIST = ''

    FN.REDO.CALL.LIST.CATEG = 'F.REDO.CALL.LIST.CATEG'
    F.REDO.CALL.LIST.CATEG = ''

    FN.CUSTOMER = 'F.CUSTOMER'
    F.CUSTOMER = ''

    FN.INT.BASIS = 'F.INTEREST.BASIS'
    F.INT.BASIS = ''

    Y.FINAL.HIS.LIST = ''

    FINAL.HIS.LIST = ''

    CALL OPF(FN.REDO.CALL.LIST.CATEG,F.REDO.CALL.LIST.CATEG)
    CALL OPF(FN.MM.MONEY.MARKET,F.MM.MONEY.MARKET)
    CALL OPF(FN.MM.MONEY.MARKET.HIS,F.MM.MONEY.MARKET.HIS)
    CALL OPF(FN.LMM.ACCOUNT.BALANCES,F.LMM.ACCOUNT.BALANCES)
    CALL OPF(FN.LMM.ACCOUNT.BALANCES.HIST,F.LMM.ACCOUNT.BALANCES.HIST)
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)
    CALL OPF(FN.INT.BASIS,F.INT.BASIS)

RETURN

*----------------------------------------------------------------------
PROCESS:
*----------------------------------------------------------------------
* THE SELECTION FIELDS ARE INITIAL.DATE,FINAL.DATE, CURRENCY, USER, STATUS, and COUNTERPARTY

    LOCATE 'INITIAL.DATE' IN D.FIELDS<1> SETTING TRAN.POS THEN
        INITIAL.DATE.ENQ = D.RANGE.AND.VALUE<TRAN.POS>
        INITIAL.DATE.OP = D.LOGICAL.OPERANDS<TRAN.POS>
        INITIAL.DATE.OP = OPERAND.LIST<INITIAL.DATE.OP>
    END
    BEGIN CASE
        CASE  INITIAL.DATE.OP EQ 'EQ' OR INITIAL.DATE.OP EQ 'GE'

            SEL.COND = " AND WITH VALUE.DATE GE ":INITIAL.DATE.ENQ
            SEL.COND.HIS = " AND WITH VALUE.DATE GE ":INITIAL.DATE.ENQ

        CASE INITIAL.DATE.OP EQ 'GT'

            SEL.COND = " AND WITH VALUE.DATE GT ":INITIAL.DATE.ENQ
            SEL.COND.HIS = " AND WITH VALUE.DATE GT ":INITIAL.DATE.ENQ

    END CASE

    LOCATE 'FINAL.DATE' IN D.FIELDS<1> SETTING FINAL.POS THEN
        FINAL.DATE.ENQ = D.RANGE.AND.VALUE<FINAL.POS>
        FINAL.DATE.OP = D.LOGICAL.OPERANDS<FINAL.POS>
        FINAL.DATE.OP = OPERAND.LIST<FINAL.DATE.OP>
    END
    BEGIN CASE
        CASE  FINAL.DATE.OP EQ 'EQ' OR FINAL.DATE.OP EQ 'LE'

            SEL.COND := " AND WITH VALUE.DATE LE ":FINAL.DATE.ENQ
            SEL.COND.HIS := " AND WITH VALUE.DATE LE ":FINAL.DATE.ENQ

        CASE FINAL.DATE.OP EQ 'GT'

            SEL.COND := " AND WITH VALUE.DATE LT ":FINAL.DATE.ENQ
            SEL.COND.HIS := " AND WITH VALUE.DATE LT ":FINAL.DATE.ENQ

    END CASE

    CURRENCY.OP = ''    ; Y.SEL.CCY = "ALL"
    LOCATE 'CURRENCY' IN D.FIELDS<1> SETTING CURR.POS THEN

        CURRENCY.ENQ = D.RANGE.AND.VALUE<CURR.POS>
        CURRENCY.OP = D.LOGICAL.OPERANDS<CURR.POS>
        CURRENCY.OP = OPERAND.LIST<CURRENCY.OP>

    END
    IF CURRENCY.OP EQ 'EQ' THEN

        SEL.COND := " AND WITH CURRENCY EQ ":CURRENCY.ENQ
        SEL.COND.HIS := " AND WITH CURRENCY EQ ":CURRENCY.ENQ
        Y.SEL.CCY = CURRENCY.ENQ  ;*PACS00052347 - S/E

    END



    USER.OP = ''
    LOCATE 'USER' IN D.FIELDS<1> SETTING USER.POS THEN

        USER.ENQ = D.RANGE.AND.VALUE<USER.POS>
        USER.OP = D.LOGICAL.OPERANDS<USER.POS>
        USER.OP = OPERAND.LIST<USER.OP>

    END
    IF USER.OP EQ 'EQ' THEN

        SEL.COND := " AND WITH AUTHORISER LIKE ...":USER.ENQ:"..."
        SEL.COND.HIS := " AND WITH AUTHORISER LIKE ...":USER.ENQ:"..."

    END

    STATUS.OP = '' ; Y.SEL.STATUS = "ALL"
    LOCATE 'STATUS' IN D.FIELDS<1> SETTING STATUS.POS THEN

        STATUS.ENQ = D.RANGE.AND.VALUE<STATUS.POS>
        STATUS.OP = D.LOGICAL.OPERANDS<STATUS.POS>
        STATUS.OP = OPERAND.LIST<STATUS.OP>

    END
*IF STATUS.OP EQ 'EQ' THEN
*SEL.COND := " AND WITH STATUS EQ ":STATUS.ENQ
*END

    CUSTOMER.ID.OP = ''   ; Y.SEL.CNTR = "ALL"
    LOCATE 'COUNTERPARTY' IN D.FIELDS<1> SETTING CUSTOMER.ID.POS THEN

        CUSTOMER.ID.ENQ = D.RANGE.AND.VALUE<CUSTOMER.ID.POS>
        CUSTOMER.ID.OP = D.LOGICAL.OPERANDS<CUSTOMER.ID.POS>
        CUSTOMER.ID.OP = OPERAND.LIST<CUSTOMER.ID.OP>

    END
    IF CUSTOMER.ID.OP EQ 'EQ' THEN

        SEL.COND := " AND WITH CUSTOMER.ID EQ ":CUSTOMER.ID.ENQ
        SEL.COND.HIS := " AND WITH CUSTOMER.ID EQ ":CUSTOMER.ID.ENQ
        Y.SEL.CNTR = CUSTOMER.ID.ENQ        ;* PACS00055015 - S/E

    END

*PACS00055015 - S
    TXN.TYPE.OP = ''   ; Y.SEL.TXN.TYPE = "ALL"  ; TXN.TYPE.ENQ = ''
    LOCATE 'TXN.TYPE' IN D.FIELDS<1> SETTING TXN.TYPE.POS THEN

        TXN.TYPE.ENQ = D.RANGE.AND.VALUE<TXN.TYPE.POS>
        TXN.TYPE.OP = D.LOGICAL.OPERANDS<TXN.TYPE.POS>
        TXN.TYPE.OP = OPERAND.LIST<TXN.TYPE.OP>

    END
    IF TXN.TYPE.OP EQ 'EQ' THEN

        Y.SEL.TXN.TYPE = TXN.TYPE.ENQ

    END
*PACS00055015 - E
RETURN
*----------------------------------------------------------------------
PROCESS.SEL:
*-----------

* SELECTING THE RECORDS BASED ON THE SELECTION

    CALL CACHE.READ(FN.REDO.CALL.LIST.CATEG,'SYSTEM',R.REDO.CALL.LIST.CATEG,ERR.RCLC)

    IF R.REDO.CALL.LIST.CATEG AND ((ENQ.SELECTION<1> EQ 'REDO.APAP.PL.CALL.LIST') OR (ENQ.SELECTION<1> EQ 'REDO.APAP.PL.CALL.RPT')) THEN

        LOCATE 'PLACE' IN R.REDO.CALL.LIST.CATEG<CALL.LIST.CATEG.DESCRIPTION,1> SETTING POS.PLACE THEN
            Y.CATEGORY = R.REDO.CALL.LIST.CATEG<CALL.LIST.CATEG.CATEGORY,POS.PLACE>
        END

    END ELSE

        LOCATE 'TAKE' IN R.REDO.CALL.LIST.CATEG<CALL.LIST.CATEG.DESCRIPTION,1> SETTING POS.TAKE THEN
            Y.CATEGORY = R.REDO.CALL.LIST.CATEG<CALL.LIST.CATEG.CATEGORY,POS.TAKE>
        END

    END

*PACS00055015 - S
    IF TXN.TYPE.ENQ NE '' THEN
        Y.CATEGORY = TXN.TYPE.ENQ
    END
*PACS00055015 - E

    CHANGE @SM TO " " IN Y.CATEGORY       ;*PACS00052347 - S/E ;*R22 AUTO CONVERSTION CONVERT TO CHANGE

*PACS00054884 - S
    BEGIN CASE

        CASE STATUS.ENQ EQ 'MATURED'

            SELECT.CMD.MAT = "SSELECT ":FN.MM.MONEY.MARKET:" WITH CATEGORY EQ ":Y.CATEGORY:SEL.COND:") AND WITH (STATUS EQ 'LIQ')"
            CALL EB.READLIST(SELECT.CMD.MAT,SEL.LIST.MAT,'',NOR.MAT,Y.MAT.ERR)

            SELECT.CMD.HIS = "SSELECT ":FN.MM.MONEY.MARKET.HIS:" WITH (CATEGORY EQ ":Y.CATEGORY:SEL.COND:") AND WITH (RECORD.STATUS EQ 'MAT')"
            CALL EB.READLIST(SELECT.CMD.HIS,SEL.LIST.HIS,'',NOR.HIS,Y.HIS.ERR)
            Y.SEL.STATUS = "MATURED"

        CASE STATUS.ENQ EQ 'LIVE'


            SELECT.CMD.LIVE = "SSELECT ":FN.MM.MONEY.MARKET:" WITH CATEGORY EQ ":Y.CATEGORY:SEL.COND:" WITH STATUS EQ 'CUR'"
            CALL EB.READLIST(SELECT.CMD.LIVE,SEL.LIST.LIVE,'',NOR.LIVE,Y.LIVE.ERR)

            Y.SEL.STATUS = "LIVE"

*SELECT.CMD.HIS = "SSELECT ":FN.MM.MONEY.MARKET.HIS:" WITH (CATEGORY EQ ":Y.CATEGORY:SEL.COND:") AND WITH (RECORD.STATUS EQ 'REVE')"
*CALL EB.READLIST(SELECT.CMD.HIS,SEL.LIST.HIS,'',NOR.HIS,Y.HIS.ERR)

        CASE STATUS.ENQ EQ ''

            SELECT.CMD.LIVE = "SSELECT ":FN.MM.MONEY.MARKET:" WITH CATEGORY EQ ":Y.CATEGORY:SEL.COND
            CALL EB.READLIST(SELECT.CMD.LIVE,SEL.LIST.LIVE,'',NOR.LIVE,Y.LIVE.ERR)

            SELECT.CMD.MAT = "SSELECT ":FN.MM.MONEY.MARKET:" WITH CATEGORY EQ ":Y.CATEGORY:SEL.COND:") AND WITH (STATUS EQ 'LIQ')"
            CALL EB.READLIST(SELECT.CMD.MAT,SEL.LIST.MAT,'',NOR.MAT,Y.MAT.ERR)

            SELECT.CMD.HIS = "SSELECT ":FN.MM.MONEY.MARKET.HIS:" WITH (CATEGORY EQ ":Y.CATEGORY:SEL.COND:") AND WITH (RECORD.STATUS EQ 'MAT')"
            CALL EB.READLIST(SELECT.CMD.HIS,SEL.LIST.HIS,'',NOR.HIS,Y.HIS.ERR)

            SEL.LIST.LIVE = SEL.LIST.LIVE:@FM:SEL.LIST.MAT

            Y.SEL.STATUS = "ALL"

*SELECT.CMD.HIS = "SSELECT ":FN.MM.MONEY.MARKET.HIS:" WITH (CATEGORY EQ ":Y.CATEGORY:SEL.COND.HIS:") AND WITH (RECORD.STATUS EQ 'MAT' OR RECORD.STATUS EQ 'REVE')"
*CALL EB.READLIST(SELECT.CMD.HIS,SEL.LIST.HIS,'',NOR.HIS,Y.HIS.ERR)

    END CASE
*PACS00054884 - E

RETURN
*----------------------------------------------------------------------
PROCESS.ASSIGN:
*--------------

* PROCESS FOR LIVE FILE

    IF SEL.LIST.LIVE NE '' THEN

        LOOP

            REMOVE TEMP.MM.ID FROM SEL.LIST.LIVE SETTING POS.MM

        WHILE TEMP.MM.ID:POS.MM

            CALL F.READ(FN.MM.MONEY.MARKET,TEMP.MM.ID,R.MM.MONEY.MARKET,F.MM.MONEY.MARKET,ERR.MM)

            Y.MM.ID = TEMP.MM.ID    ;*PACS00052347 - S/E

            GOSUB READ.VALUES

        REPEAT

    END


* PROCESS FOR HISTORY FILES

    IF SEL.LIST.HIS NE '' THEN

        LOOP

            REMOVE TEMP.MM.HIS.ID FROM SEL.LIST.HIS SETTING POS.MM.HIS

        WHILE TEMP.MM.HIS.ID:POS.MM.HIS

            CALL F.READ(FN.MM.MONEY.MARKET.HIS,TEMP.MM.HIS.ID,R.MM.MONEY.MARKET.HIS,F.MM.MONEY.MARKET.HIS,ERR.MM.HIS)

            FLAG.HIS = 1

            Y.MM.ID = TEMP.MM.HIS.ID          ;*PACS00052347 - S/E

            Y.MM.ID = FIELD(Y.MM.ID,";",1)

            R.MM.MONEY.MARKET = R.MM.MONEY.MARKET.HIS

            GOSUB READ.VALUES

        REPEAT

    END

RETURN

*----------------------------------------------------------------------
READ.VALUES:
*-----------
*Read and assign the values needed

    IF R.MM.MONEY.MARKET THEN
        Y.TXN.DATE = R.MM.MONEY.MARKET<MM.DEAL.DATE>
        Y.VALUE.DATE = R.MM.MONEY.MARKET<MM.VALUE.DATE>
        Y.COUNTERPARTY = R.MM.MONEY.MARKET<MM.CUSTOMER.ID>
        Y.AMOUNT = R.MM.MONEY.MARKET<MM.PRINCIPAL>
        Y.RATE = R.MM.MONEY.MARKET<MM.INTEREST.RATE>
        IF Y.RATE EQ '' THEN
            Y.MM.CURRENCY = R.MM.MONEY.MARKET<MM.CURRENCY>
            Y.MM.INT.KEY = R.MM.MONEY.MARKET<MM.INTEREST.KEY>
            Y.BI.ID = Y.MM.INT.KEY:Y.MM.CURRENCY:TODAY
            CALL EB.GET.INTEREST.RATE(Y.BI.ID,BASIC.RATE)
            Y.RATE = BASIC.RATE
        END
        Y.MATURITY.DATE = R.MM.MONEY.MARKET<MM.MATURITY.DATE>
        Y.CURRENCY = R.MM.MONEY.MARKET<MM.CURRENCY>
        Y.REGION = Y.CURRENCY[1,2]
        Y.REGION = Y.REGION:00
        Y.REC.STATUS = R.MM.MONEY.MARKET<MM.RECORD.STATUS>
        Y.BASE = R.MM.MONEY.MARKET<MM.INTEREST.BASIS>

*PACS00055015 - E
        R.BASE = ''
        CALL CACHE.READ(FN.INT.BASIS, Y.BASE, R.BASE, BASIS.ERR) ;*R22 AUTO CONVERSTION F TO CACHE AND REMOVED F.INT
        IF R.BASE THEN
            Y.BASE = R.BASE<IB.INT.BASIS>
            Y.BASE = FIELD(Y.BASE,"/",2)
        END
*PACS00055015 - E

*PACS00052347 - S
        R.CUS = ''
        CALL F.READ(FN.CUSTOMER,Y.COUNTERPARTY,R.CUS,F.CUSTOMER,CUS.ERR)
        IF R.CUS THEN
            Y.COUNTERPARTY = R.CUS<EB.CUS.SHORT.NAME>
        END
*PACS00052347 - E

        IF Y.MATURITY.DATE LT TODAY THEN
*IF Y.REC.STATUS THEN  ;* PACS00055015 - S/E
            Y.REC.STATUS = "MATURED"
            Y.STRT.DT = Y.MATURITY.DATE
            Y.END.DT = Y.VALUE.DATE
            Y.DIFF = 'C'  ;*PACS00052347 - S/E  - Should calcualte calender days not working days

            CALL CDD(Y.REGION, Y.STRT.DT, Y.END.DT, Y.DIFF)

        END ELSE
            Y.REC.STATUS = "LIVE"
            Y.STRT.DT = TODAY
            Y.END.DT = Y.VALUE.DATE
            Y.DIFF = 'C'  ;*PACS00052347 - S/E  - Should calcualte calender days not working days

            CALL CDD(Y.REGION, Y.STRT.DT, Y.END.DT, Y.DIFF)

        END

        Y.DIFF=ABS(Y.DIFF)

        GOSUB INT.RATE.CALC

        Y.AMT.RECEIVED = R.MM.MONEY.MARKET<MM.PRINCIPAL> + R.MM.MONEY.MARKET<MM.TOT.INTEREST.AMT>

        Y.STATUS = R.MM.MONEY.MARKET<MM.STATUS>

        Y.INT.ACCRUED = ''
* Y.INT.ACCRUED = R.LMM.ACCOUNT.BALANCES<LD27.OUTS.ACCRUED.INT>

*Y.AMT.PAID = R.MM.MONEY.MARKET<MM.PRINCIPAL> + R.MM.MONEY.MARKET<MM.TOT.INTEREST.AMT>
        Y.AMT.PAID = Y.AMOUNT + Y.INT.GENERATED

        GOSUB FORM.ARRAY

    END
RETURN

INT.RATE.CALC:
*---------------
*New Section for rate Interest calculation

    BEGIN CASE
        CASE R.MM.MONEY.MARKET<MM.INT.RATE.TYPE> EQ 1
*PACS00055015 - S
            Y.INT.GENERATED = 0
            IF Y.DIFF GE 1 THEN
                Y.INT.GENERATED = ( Y.AMOUNT*(Y.RATE/100))* (Y.DIFF/Y.BASE)
            END
*PACS00055015 - E
        CASE R.MM.MONEY.MARKET<MM.INT.RATE.TYPE> EQ 3
            R.LMM.ACCOUNT.BALANCES = ''
            Y.LMM.ID = Y.MM.ID:'00'
            CALL F.READ(FN.LMM.ACCOUNT.BALANCES,Y.LMM.ID,R.LMM.ACCOUNT.BALANCES,F.LMM.ACCOUNT.BALANCES,ERR.AC.BAL)
            IF NOT(R.LMM.ACCOUNT.BALANCES) THEN
                CALL F.READ(FN.LMM.ACCOUNT.BALANCES.HIST,Y.LMM.ID,R.LMM.ACCOUNT.BALANCES,F.LMM.ACCOUNT.BALANCES.HIST,ERR.AC.BAL)
                IF R.LMM.ACCOUNT.BALANCES THEN
                    GOSUB CALC.INT.ACC
                END
            END ELSE
                GOSUB CALC.INT.ACC
            END
    END CASE

RETURN


CALC.INT.ACC:
*-------------
*New Section for Flating rate Interest

    IF Y.MATURITY.DATE LT TODAY THEN
        Y.INT.GENERATED = R.LMM.ACCOUNT.BALANCES<LD27.COMMITTED.INT>
    END ELSE
        Y.INT.GENERATED = R.LMM.ACCOUNT.BALANCES<LD27.OUTS.CUR.ACC.I.PAY>
        IF NOT(Y.INT.GENERATED) THEN
            Y.INT.GENERATED = SUM(R.LMM.ACCOUNT.BALANCES<LD27.INT.AMT.TODATE>)
        END
    END

    Y.INT.GENERATED = ABS(Y.INT.GENERATED)

RETURN

*----------------------------------------------------------------------
FORM.ARRAY:
*----------
*Form the final array to return

    Y.DATE = ICONV(TODAY,'D')
    Y.DATE = OCONV(Y.DATE,'D4')

    LOCATE 'USER' IN D.FIELDS<1> SETTING USER.POS THEN

        Y.USER = D.RANGE.AND.VALUE<USER.POS>

    END ELSE

        Y.USER = 'ALL'

    END

    Y.TIME = OCONV(TIME(), "MTS")

    TEMP.RANGE.AND.VALUE = D.RANGE.AND.VALUE
    CHANGE @FM TO ',' IN TEMP.RANGE.AND.VALUE

    Y.CLASSIFICATION = TEMP.RANGE.AND.VALUE

*VALUE NO :         1                2                3                4           5               6              7             8                     9             10                11             12            13           14        15          16              17              18           19             20               21              22                23
    Y.ARRAY<-1>=Y.TXN.DATE:"*":Y.VALUE.DATE:"*":Y.COUNTERPARTY:"*":Y.AMOUNT:"*":Y.RATE:"*":Y.MATURITY.DATE:"*":Y.DIFF:"*":Y.INT.GENERATED:"*":Y.AMT.RECEIVED:"*":Y.STATUS:"*":Y.INT.ACCRUED:"*":Y.AMT.PAID:"*":Y.CURRENCY:"*":Y.DATE:"*":Y.TIME:"*":Y.USER:"*":Y.CLASSIFICATION:"*":Y.MM.ID:"*":Y.SEL.CCY:"*":Y.SEL.STATUS:"*":Y.SEL.CNTR:"*":Y.SEL.TXN.TYPE:"*":Y.REC.STATUS


RETURN
*-----------------------------------------------------------------------
END
