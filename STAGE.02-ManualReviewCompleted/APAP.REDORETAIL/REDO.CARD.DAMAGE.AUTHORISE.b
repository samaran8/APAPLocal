* @ValidationCode : MjoyMDUwMzExMDY2OkNwMTI1MjoxNjgxODI4MDAyOTYzOklUU1M6LTE6LTE6MjI2NjoxOmZhbHNlOk4vQTpERVZfMjAyMTA4LjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 18 Apr 2023 19:56:42
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 2266
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*11-04-2023            CONVERSION TOOL                AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM
*11-04-2023          jayasurya H                       MANUAL R22 CODE CONVERSION            NO CHANGES
SUBROUTINE REDO.CARD.DAMAGE.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.CARD.DAMAGE.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Description  : This is a authorisation routine to update the status of damaged cards in STOCK.REGISTER and
*               REDO.CARD.NUMBERS
*Linked With  : Application REDO.CARD.DAMAGE
*In Parameter : N/A
*Out Parameter: N/A
*--------------------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 29 Jul 2010    Mohammed Anies K      ODR-2010-03-0400         Initial Creation
* 6 Apr 2011     Kavitha               PACS00052984             Logic changes done for multiple entry of damage cards
* 20 MAR 2011    Kavitha               PACS00024249             ISSUE FIX
* 12 JUL 2011    Kavitha               PACS00082671             ISSUE FIX FOR PACS00082671
* 15 JUL 2011    Kavitha               PACS00082440             ISSUE FIX FOR PACS00082440
* 03-AUG-2011    JEEVA T               TDN7 - change            TDN7 Update
* 8 AUG 2011     KAVITHA               PACS00093181             FIX FOR PACS00093181
*--------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.STOCK.ENTRY
    $INSERT I_F.DATES
    $INSERT I_F.COMPANY
    $INSERT I_F.USER
    $INSERT I_F.REDO.CARD.DAMAGE
    $INSERT I_F.REDO.CARD.NO.LOCK
    $INSERT I_F.REDO.CARD.NUMBERS
    $INSERT I_F.REDO.STOCK.QTY.COUNT
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.BRANCH.REQ.STOCK
    $INSERT I_F.REDO.CARD.REG.STOCK
    $INSERT I_F.REDO.PREEMBOSS.STOCK
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.LATAM.CARD.ORDER

*--------------------------------------------------------------------------------------------------------
**********
MAIN.PARA:
**********



    GOSUB OPEN.PARA
    GOSUB PROCESS.PARA
RETURN
*--------------------------------------------------------------------------------------------------------

**********
OPEN.PARA:
**********
* In this para of code file variables are initialised and opened

*PACS00082440-S
    REQ.CARD.TYPE = ''
    FN.REDO.PREEMBOSS.STOCK = 'F.REDO.PREEMBOSS.STOCK'
    F.REDO.PREEMBOSS.STOCK = ''
    CALL OPF(FN.REDO.PREEMBOSS.STOCK,F.REDO.PREEMBOSS.STOCK)
*PACS00082440 -E

    FN.CARD.LOCK = 'F.REDO.CARD.NO.LOCK'
    F.CARD.LOCK = ''
    CALL OPF(FN.CARD.LOCK,F.CARD.LOCK)
    FN.REDO.BRANCH.REQ.STOCK = 'F.REDO.BRANCH.REQ.STOCK'
    F.REDO.BRANCH.REQ.STOCK = ''
    CALL OPF(FN.REDO.BRANCH.REQ.STOCK,F.REDO.BRANCH.REQ.STOCK)

    FN.REDO.CARD.NUMBERS = 'F.REDO.CARD.NUMBERS'
    F.REDO.CARD.NUMBERS = ''
    CALL OPF(FN.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS)

    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)


    FN.STOCK.REG = 'F.REDO.STOCK.REGISTER'
    F.STOCK.REG = ''
    CALL OPF(FN.STOCK.REG,F.STOCK.REG)

    FN.STOCK.ENTRY = 'F.REDO.STOCK.ENTRY'
    F.STOCK.ENTRY  = ''
    CALL OPF(FN.STOCK.ENTRY,F.STOCK.ENTRY)

    FN.REDO.STOCK.QTY.COUNT = 'F.REDO.STOCK.QTY.COUNT'
    F.REDO.STOCK.QTY.COUNT = ''
    R.REDO.STOCK.QTY.COUNT = ''
    CALL OPF(FN.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT)

    FN.REDO.CARD.SERIES.PARAM = 'F.REDO.CARD.SERIES.PARAM'
    F.REDO.CARD.SERIES.PARAM = ''
    CALL OPF(FN.REDO.CARD.SERIES.PARAM,F.REDO.CARD.SERIES.PARAM)

    FINAL.COMP = R.COMPANY(EB.COM.FINANCIAL.COM)
    Y.ID.CARD.SERIES = 'SYSTEM'
    CALL CACHE.READ('F.REDO.CARD.SERIES.PARAM',Y.ID.CARD.SERIES,R.REDO.CARD.SERIES.PARAM,PARAM.ERR)
    RECD.DEPT.CODE = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.RECEIVE.DEPT.CODE>

    FN.DATES = 'F.DATES'
    F.DATES = ''
    CALL OPF(FN.DATES,F.DATES)

*PACS00093181 -S
    FN.REDO.CARD.REQ = 'F.REDO.CARD.REQUEST'
    F.REDO.CARD.REQ = ''
    CALL OPF(FN.REDO.CARD.REQ,F.REDO.CARD.REQ)
*PACS00093181 -E

    Y.ID.NEW=ID.NEW

RETURN
*--------------------------------------------------------------------------------------------------------
*************
PROCESS.PARA:
*************
* Main processing section

*PACS00093181-S
    CALL F.READ(FN.REDO.CARD.REQ,Y.ID.NEW,R.REDO.CARD.REQUEST,F.REDO.CARD.REQ,REQ.ERR)
    IF R.REDO.CARD.REQUEST THEN
        RENEWAL.FLAG = R.REDO.CARD.REQUEST<REDO.CARD.REQ.RENEWAL.FLAG>
    END

*PACS00093181-E


    Y.STOCK.REGISTER.ID = 'CARD.':ID.COMPANY:"-":RECD.DEPT.CODE
    GOSUB READ.STOCK.REGISTER

    Y.CARD.SERIES.LIST = R.NEW(REDO.CARD.DAM.CARD.SERIES)
    Y.TOTAL.CARD.SERIES = DCOUNT(Y.CARD.SERIES.LIST,@VM) ;* AUTO R22 CONVERSION

    Y.INT.MV.COUNT = 1


    LOOP
    WHILE Y.INT.MV.COUNT LE Y.TOTAL.CARD.SERIES
        Y.LOST.VAL = ''
        Y.DAMAGE = ''

        GOSUB UPDATE.STOCK.REGISTER
        Y.REDO.CARD.NUMBERS.ID = ''
        IN.USE.FLAG = ''
        Y.REDO.CARD.NUMBERS.ID = R.NEW(REDO.CARD.DAM.CARD.TYPE)<1,Y.INT.MV.COUNT>:'.':ID.COMPANY
        GOSUB UPDATE.DESTROY.STATUS

        IF IN.USE.FLAG EQ 1 THEN ;* AUTO R22 CONVERSION
            GOSUB UPD.CARD.LOCK
        END

*PACS00082440-S
        GOSUB PREEMBOSS.STOCK.QTY
**PACS00082440-E
        GOSUB STOCK.QTY.COUNT

*PACS00052984 -S
        Y.CARD.NUMBERS = R.NEW(REDO.CARD.DAM.CARD.NUMBER)<1,Y.INT.MV.COUNT>
        Y.TOT.CARD.NOS = DCOUNT(Y.CARD.NUMBERS,@SM)

        DAM.REASON = R.NEW(REDO.CARD.DAM.REASON)<1,Y.INT.MV.COUNT>
        DAM.REMARKS = R.NEW(REDO.CARD.DAM.REMARKS)<1,Y.INT.MV.COUNT>
        DAM.CARD.NUMBER = R.NEW(REDO.CARD.DAM.CARD.NUMBER)<1,Y.INT.MV.COUNT>

        CHANGE @SM TO @FM IN DAM.REASON
        CHANGE @SM TO @FM IN DAM.REMARKS
        CHANGE @SM TO @FM IN DAM.CARD.NUMBER

        Y.INT.SM.COUNT = 1
        LOOP
        WHILE Y.INT.SM.COUNT LE Y.TOT.CARD.NOS

            Y.CARD.NUMBER.OLD = R.NEW(REDO.CARD.DAM.CARD.NUMBER.OLD)<1,Y.INT.MV.COUNT>
            Y.TOT.CARD.OLD = DCOUNT(Y.CARD.NUMBER.OLD,@SM)
            Y.TOT.CARD.OLD += 1

            R.NEW(REDO.CARD.DAM.REASON.OLD)<1,Y.INT.MV.COUNT,Y.TOT.CARD.OLD> = DAM.REASON<Y.INT.SM.COUNT>

            R.NEW(REDO.CARD.DAM.REMARKS.OLD)<1,Y.INT.MV.COUNT,Y.TOT.CARD.OLD> =  DAM.REMARKS<Y.INT.SM.COUNT>
            R.NEW(REDO.CARD.DAM.CARD.NUMBER.OLD)<1,Y.INT.MV.COUNT,Y.TOT.CARD.OLD> = DAM.CARD.NUMBER<Y.INT.SM.COUNT>

            DEL R.NEW(REDO.CARD.DAM.TOT.LOST.DAMAGE)<1,Y.INT.MV.COUNT>
            DEL R.NEW(REDO.CARD.DAM.REASON)<1,Y.INT.MV.COUNT,1>
            DEL R.NEW(REDO.CARD.DAM.REMARKS)<1,Y.INT.MV.COUNT,1>
            DEL R.NEW(REDO.CARD.DAM.CARD.NUMBER)<1,Y.INT.MV.COUNT,1>
            Y.INT.SM.COUNT+=1
        REPEAT
*************

        TOT.DAM.LOS = DCOUNT(R.NEW(REDO.CARD.DAM.REASON.OLD)<1,Y.INT.MV.COUNT>,@SM)
*        R.NEW(REDO.CARD.DAM.TOT.LOST.DAMAGE)<1,Y.INT.MV.COUNT> = TOT.DAM.LOS

        Y.INT.MV.COUNT +=1


        CALL F.WRITE(FN.REDO.CARD.NUMBERS,Y.REDO.CARD.NUMBERS.ID,R.REDO.CARD.NUMBERS)
        CALL F.WRITE(FN.CARD.LOCK,Y.REDO.CARD.NUMBERS.ID,R.REDO.CARD.NO.LOCK)
    REPEAT

* PACS00755208 - S
    IF R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> LT '0' THEN
        R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> = '0'
    END
* PACS00755208 - E


    CALL F.WRITE(FN.STOCK.REG,Y.STOCK.REGISTER.ID,R.STOCK.REGISTER)
*   CALL F.WRITE(FN.STOCK.REG,Y.STOCK.REG.VIRGIN.ID,R.STOCK.REGISTER.VIRGIN)
**********

*PACS00052984 -E



RETURN
*--------------------------------------------------------------------------------------------------------
*********************
UPDATE.STOCK.REGISTER:
*********************

    Y.SERIES.ID = Y.CARD.SERIES.LIST<1,Y.INT.MV.COUNT>

*Y.SERIES.ID = "*":Y.SERIES.ID:"*"

***
*STOCK.ENTRY.ID
*locate Stock Entry id in Stock Register record and reduce the value from it. If the number of cards given in this is not valid for this request system wil throw error
***

    Y.DAMAGE.REASON = R.NEW(REDO.CARD.DAM.REASON)<1,Y.INT.MV.COUNT>

    Y.TOT.DAMAGES.LOST =  COUNT(Y.DAMAGE.REASON,"DAMAGE") + COUNT(Y.DAMAGE.REASON,"LOST")

    STOCK.SERIES.ID = R.STOCK.REGISTER<STK.REG.SERIES.ID>

    STOCK.ENT.ID=R.NEW(REDO.CARD.DAM.STOCK.ENTRY.ID)


    CHANGE @VM TO @FM IN STOCK.SERIES.ID

    LOCATE Y.SERIES.ID IN STOCK.SERIES.ID SETTING Y.SERIES.ID.POS THEN

* series count in stock register will be always imcrementing in nature in from side

*        LOCATE STOCK.ENT.ID IN R.STOCK.REGISTER<STO.REG.STO.ENTRY.ID,Y.SERIES.ID.POS,1> SETTING STK.ENTRY.POS THEN

        Y.NEW.SERIES.BAL = R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> - Y.TOT.DAMAGES.LOST

        R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> = Y.NEW.SERIES.BAL

*        Y.SERIES.NO = FIELD(R.STOCK.REGISTER<STO.REG.SERIES.NO,Y.SERIES.ID.POS,STK.ENTRY.POS>,'-',1)

*       Y.NEW.SERIES.NO  = Y.SERIES.NO + Y.TOT.DAMAGES.LOST

*       R.STOCK.REGISTER<STO.REG.SERIES.NO,Y.SERIES.ID.POS,1> = Y.NEW.SERIES.NO: '-' : FIELD(R.STOCK.REGISTER<STO.REG.SERIES.NO,Y.SERIES.ID.POS,1>,'-',2)

        R.STOCK.REGISTER<STK.REG.STO.REG.BAL> = R.STOCK.REGISTER<STK.REG.STO.REG.BAL> - Y.TOT.DAMAGES.LOST

*    END
    END

* Y.STOCK.ENTRY.ID = R.NEW(REDO.CARD.DAM.STOCK.ENTRY.ID)

* CALL F.READ(FN.STOCK.ENTRY,Y.STOCK.ENTRY.ID,R.STOCK.ENTRY,F.STOCK.ENTRY,STOCK.ENTRY.ERR)

* Y.CARD.REG.STOCK.ID = R.STOCK.ENTRY<STO.ENT.TO.REGISTER>

* Y.STOCK.SERIES =  Y.CARD.SERIES.LIST<1,Y.INT.MV.COUNT>

RETURN
*--------------------------------------------------------------------------------------------------------
*********************
UPDATE.DESTROY.STATUS:
*********************
*    FOR ALL CARDS IN EACH SERIES UPDATE THE STATUS AS DESTROYED
    GOSUB READ.REDO.CARD.NUMBERS
    Y.CARD.NUMBERS = R.NEW(REDO.CARD.DAM.CARD.NUMBER)<1,Y.INT.MV.COUNT>
    Y.TOT.CARD.NOS = DCOUNT(Y.CARD.NUMBERS,@SM)
    Y.INT.SM.COUNT = 1
    LOOP
    WHILE Y.INT.SM.COUNT LE Y.TOT.CARD.NOS
        Y.IND.CARD.NO = R.NEW(REDO.CARD.DAM.CARD.NUMBER)<1,Y.INT.MV.COUNT,Y.INT.SM.COUNT>
        REDO.CARD.NO = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER>
        CHANGE @VM TO @FM IN REDO.CARD.NO

        DMG.TYPE=R.NEW(REDO.CARD.DAM.REASON)<1,Y.INT.MV.COUNT,Y.INT.SM.COUNT>

        LOCATE Y.IND.CARD.NO IN REDO.CARD.NO SETTING Y.CARD.POS THEN
            REQ.CARD.STATUS = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,Y.CARD.POS>
            REQ.CARD.TYPE = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.EMBOSS.TYPE,Y.CARD.POS>

            IF REQ.CARD.STATUS EQ "AVAILABLE" THEN
                R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,Y.CARD.POS> = DMG.TYPE
                GOSUB DESTROY.CARD.USE
            END


            IF REQ.CARD.STATUS EQ "INUSE" THEN
                GOSUB DESTROY.CARD.USE
                R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,Y.CARD.POS> = DMG.TYPE
            END

*PACS00093181 -S
            GOSUB LOST.ACTIVE.CARD
*PACS00093181 -E

        END
        Y.INT.SM.COUNT+=1
    REPEAT

RETURN
*--------------------------------------------------------------------------------------------------------
*****************
READ.STOCK.REGISTER:
*****************
*STOCK.REGISTER record is read for the given stock entry id
    R.STOCK.REGISTER   =''
    STOCK.REGISTER.ERR = ''
    CALL F.READ(FN.STOCK.REG,Y.STOCK.REGISTER.ID,R.STOCK.REGISTER,F.STOCK.REG,STOCK.REGISTER.ERR)

RETURN
*--------------------------------------------------------------------------------------------------------
***********************
READ.REDO.CARD.NUMBERS:
***********************
*REDO.CARD.NUMBERS record is read for the given stock entry id
    R.REDO.CARD.NUMBERS   =''
    REDO.CARD.NUMBERS.ERR = ''

    CALL F.READU(FN.REDO.CARD.NUMBERS,Y.REDO.CARD.NUMBERS.ID,R.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS,REDO.CARD.NUMBERS.ERR,'P')
    CALL F.READU(FN.CARD.LOCK,Y.REDO.CARD.NUMBERS.ID,R.CARD.LOCK,F.CARD.LOCK,LOCK.ERR,'P')
    R.REDO.CARD.NO.LOCK=R.CARD.LOCK
RETURN
*--------------------------------------------------------------------------------------------------------
DESTROY.CARD.USE:
    IF R.CARD.LOCK THEN
        LOCATE Y.IND.CARD.NO IN R.CARD.LOCK SETTING CARD.LOC.POS THEN
            IN.USE.FLAG=1
            DEL R.CARD.LOCK<CARD.LOC.POS>
        END
    END

RETURN
*------------------------------------------------------------------------------
UPD.CARD.LOCK:

    NEW.STATUS = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS>
    CHANGE @VM TO @FM IN NEW.STATUS

    R.REDO.CARD.NO.LOCK=R.CARD.LOCK

    CRD.AVAIL=R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1>

    IF CRD.AVAIL EQ '' THEN
        LOCATE "AVAILABLE" IN R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,1> SETTING AVL.POS THEN
*           INS R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,AVL.POS> IN R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1>
            R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1>=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,AVL.POS>
        END
        RETURN
    END

    LOCATE CRD.AVAIL IN R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,1> SETTING POS.CARD THEN

        STATUS.CRD=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,POS.CARD>
        IF STATUS.CRD NE 'AVAILABLE' THEN
            LOCATE "AVAILABLE" IN R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,1> SETTING AVL.POS THEN
                INS R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,AVL.POS> BEFORE R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1>
            END
        END

    END

    R.CARD.LOCK=R.REDO.CARD.NO.LOCK


RETURN
*---------------------
STOCK.QTY.COUNT:
*PACS00082671-S

    Y.DATE = TODAY
    Y.SERIES = R.NEW(REDO.CARD.DAM.CARD.SERIES)<1,Y.INT.MV.COUNT>
    Y.YY = Y.DATE[1,4]

*******************************TDN7 - change starts ***************************

*Y.STOCK.QTY.COUNT.ID = TODAY:'-':Y.SERIES

    Y.STOCK.QTY.COUNT.ID = Y.ID.NEW:'-':Y.SERIES
    Y.AGENECY = R.NEW(REDO.CARD.DAM.AGENCY)
    Y.STK.CARD.TYPE = R.NEW(REDO.CARD.DAM.CARD.TYPE)<1,Y.INT.MV.COUNT>
*******************************TDN7 - change ends ***************************


    Y.DAMAGE.REASON = R.NEW(REDO.CARD.DAM.REASON)<1,Y.INT.MV.COUNT>
    Y.DAMAGE = COUNT(Y.DAMAGE.REASON,"DAMAGE")
    Y.LOST =   COUNT(Y.DAMAGE.REASON,"LOST")

    IF Y.DAMAGE GT 0 OR Y.LOST GT 0 THEN

        Y.QTY.RECD = R.NEW(REDO.CARD.DAM.QTY.RECEIVED)<1,Y.INT.MV.COUNT>

*       CARD.TYPE.FETCH = Y.SERIES:'-TDN7'
*      CALL F.READU(FN.REDO.CARD.REG.STOCK,CARD.TYPE.FETCH,R.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK,STOCK.ERR,"")
*     IF R.REDO.CARD.REG.STOCK THEN
*        CARD.AVAIL.BAL = R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL>
*       R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL - Y.DAMAGE - Y.LOST
*   END

        CALL F.READU(FN.REDO.STOCK.QTY.COUNT,Y.STOCK.QTY.COUNT.ID,R.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT,Y.ERR.QTY,"")
        Y.STK.COUNT.VM = DCOUNT(R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY>,@VM)

        LOCATE Y.DATE IN R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,1> SETTING POS.DAM THEN
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DAMAGE,POS.DAM> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DAMAGE,POS.DAM> + Y.DAMAGE
            IF R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DAMAGE,POS.DAM> LE 0 THEN
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DAMAGE,POS.DAM> = ''
            END
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.LOST,POS.DAM> =  R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.LOST,POS.DAM> + Y.LOST
            IF R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.LOST,POS.DAM> LE 0 THEN
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.LOST,POS.DAM> = ''
            END
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.DAM> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.DAM> - Y.DAMAGE - Y.LOST
        END ELSE
            Y.STK.COUNT.VM.1 = Y.STK.COUNT.VM + 1
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,Y.STK.COUNT.VM.1> = Y.DATE
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DAMAGE,Y.STK.COUNT.VM.1> = Y.DAMAGE
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.LOST,Y.STK.COUNT.VM.1> = Y.LOST
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM.1> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM>- Y.DAMAGE - Y.LOST
        END

        CALL F.WRITE(FN.REDO.STOCK.QTY.COUNT,Y.STOCK.QTY.COUNT.ID,R.REDO.STOCK.QTY.COUNT)

* CALL F.WRITE(FN.REDO.CARD.REG.STOCK,CARD.TYPE.FETCH,R.REDO.CARD.REG.STOCK)
    END
*PACS00082671-E
RETURN
******************************************************************************************
PREEMBOSS.STOCK.QTY:
*PACS00082440 -S

    IF REQ.CARD.TYPE EQ 'PREEMBOZADA' THEN
        PREEMB.ID = ID.COMPANY:"-":Y.SERIES.ID
        CALL F.READU(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,R.REDO.PREEMBOSS.STOCK,F.REDO.PREEMBOSS.STOCK,PRE.ERROR,"")
        IF R.REDO.PREEMBOSS.STOCK THEN
            R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL> = R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL> - Y.TOT.DAMAGES.LOST
        END
        CALL F.WRITE(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,R.REDO.PREEMBOSS.STOCK)
    END


*PACS00082440 -E
RETURN
*------------------
LOST.ACTIVE.CARD:

    R.LCO = ''
    IF RENEWAL.FLAG EQ "YES" THEN

        VAULT.QUANTITY =   R.REDO.CARD.REQUEST<REDO.CARD.REQ.VAULT.QTY,1>
        LATAM.CARD.ID = FIELD(VAULT.QUANTITY,":",2)
        LATAM.CARD.ID = TRIM(LATAM.CARD.ID)

        IF DMG.TYPE EQ "LOST" THEN
            R.LCO<CARD.IS.CARD.STATUS> = "52"
        END

        R.LCO<CARD.IS.RENEW.CARD.LOST> = "YES"
        R.LCO<CARD.IS.RENEW.STATUS> = DMG.TYPE


        OFS.SOURCE.ID = 'REDO.OFS.LATAM.UPD'
        APPLICATION.NAME = 'LATAM.CARD.ORDER'
        TRANS.FUNC.VAL = 'I'
        TRANS.OPER.VAL = 'PROCESS'
        APPLICATION.NAME.VERSION = 'LATAM.CARD.ORDER,ADDITIONAL'
        NO.AUT = ''
        OFS.MSG.ID = ''
        APPLICATION.ID = LATAM.CARD.ID
        OFS.POST.MSG = ''
        OFS.ERR = ''

        CALL OFS.BUILD.RECORD(APPLICATION.NAME,TRANS.FUNC.VAL,TRANS.OPER.VAL,APPLICATION.NAME.VERSION,"",NO.AUT,APPLICATION.ID,R.LCO,OFS.REQ.MSG)
        CALL OFS.POST.MESSAGE(OFS.REQ.MSG,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)

    END


RETURN
*------------
END
