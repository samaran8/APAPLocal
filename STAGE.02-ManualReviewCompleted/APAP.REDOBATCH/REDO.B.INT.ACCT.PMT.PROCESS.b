* @ValidationCode : MjotMTQ0NDA1NzE0MTpDcDEyNTI6MTY4MTE5MzAyMTg3MjpJVFNTOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 11 Apr 2023 11:33:41
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.INT.ACCT.PMT.PROCESS
*-------------------------------------------------------------------------
* Company Name  : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* Developed By  : Sakthi Sellappillai
* Program Name  : REDO.B.TRANS.PROCESS
* ODR           : ODR-2010-08-0031
*------------------------------------------------------------------------------------------
*DESCRIPTION  : REDO.B.TRANS.PROCESS Multithreading routine responsible for generates

*------------------------------------------------------------------------------------------
* Linked with:
* In parameter : None
* out parameter : None
*------------------------------------------------------------------------------------------
* Modification History :
*------------------------------------------------------------------------------------------
* DATE             WHO                         REFERENCE            DESCRIPTION
*==============    ==============              =================    =================
* 19.10.2010       Sakthi Sellappillai         ODR-2010-08-0031     INITIAL CREATION
* Date                   who                   Reference              
* 11-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION - FM TO @FM AND VM TO @VM  AND F.READ TO CACHE.READ AND REMOVED F.EB.EXTERNAL.USER
* 11-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_BATCH.FILES
    $INSERT I_REDO.B.TRANS.PROCESS.COMMON
    $INSERT I_F.REDO.SUPPLIER.PAYMENT
    $INSERT I_F.REDO.FILE.DATE.PROCESS
    $INSERT I_F.AI.REDO.ARCIB.PARAMETER
    $INSERT I_F.EB.EXTERNAL.USER
    $INSERT I_EB.EXTERNAL.COMMON

    GOSUB INIT.PROCESS
    GOSUB MAIN.PROCESS
    GOSUB GOEND
RETURN

*------------------------------------------------------------------------------------------
INIT.PROCESS:
*------------------------------------------------------------------------------------------
    FN.AI.REDO.ARCIB.PARAMETER = 'F.AI.REDO.ARCIB.PARAMETER'
    F.AI.REDO.ARCIB.PARAMETER  = ''
    CALL OPF(FN.AI.REDO.ARCIB.PARAMETER,F.AI.REDO.ARCIB.PARAMETER)
    CALL CACHE.READ(FN.AI.REDO.ARCIB.PARAMETER,'SYSTEM',R.AI.REDO.ARCIB.PARAMETER,AI.REDO.ARCIB.PARAMETER.ERR)

    FN.REDO.SUPPLIER.PAYMENT = 'F.REDO.SUPPLIER.PAYMENT'
    F.REDO.SUPPLIER.PAYMENT = ''
    CALL OPF(FN.REDO.SUPPLIER.PAYMENT,F.REDO.SUPPLIER.PAYMENT)
    R.REDO.SUPPLIER.PAYMENT = ''

    FN.REDO.FILE.DATE.PROCESS = 'F.REDO.FILE.DATE.PROCESS'
    F.REDO.FILE.DATE.PROCESS  = ''
    CALL OPF(FN.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT  = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.EB.EXTERNAL.USER = 'F.EB.EXTERNAL.USER'
    F.EB.EXTERNAL.USER  = ''
    CALL OPF(FN.EB.EXTERNAL.USER,F.EB.EXTERNAL.USER)

    APPL.ARRAY = "FUNDS.TRANSFER":@FM:"ACCOUNT"
    FIELD.ARRAY = "L.COMMENTS":@FM:"L.AC.AV.BAL"
    FIELD.POS = ''
    CALL MULTI.GET.LOC.REF(APPL.ARRAY,FIELD.ARRAY,FIELD.POS)
    Y.LOC.COMMENTS.POS = FIELD.POS<1,1>
    Y.LOC.L.AC.AV.BAL.POS = FIELD.POS<2,1>


    IF NOT(AI.REDO.ARCIB.PARAMETER.ERR) THEN
        Y.SUPPLIER.INT.ACCT = R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.SUPPLIER.INT.ACCT>
        Y.SUPPLIER.TXN.CODE = R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.SUPPLIER.TXN.CODE>

        Y.PAYROLL.INT.ACCT = R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.PAYROLL.INT.ACCT>
        Y.PAYROLL.TXN.CODE = R.AI.REDO.ARCIB.PARAMETER<AI.PARAM.PAYROLL.TXN.CODE>
    END
RETURN
*------------------------------------------------------------------------------------------
MAIN.PROCESS:
*------------------------------------------------------------------------------------------

    Y.THIRD.DAY.VAL = TODAY
    SEL.CMD   = "SELECT " :FN.REDO.FILE.DATE.PROCESS: " WITH @ID LIKE " :" ...":Y.THIRD.DAY.VAL:" AND OFS.PROCESS EQ ''"
*  SEL.CMD   = "SELECT " :FN.REDO.FILE.DATE.PROCESS: " WITH @ID LIKE " :" ...OFS.PROCESS EQ ''"
    CALL EB.READLIST(SEL.CMD,FILE.LIST,'',Y.SEL.CNT,Y.ERR)
    LOOP
        REMOVE Y.FILE.ID FROM FILE.LIST SETTING Y.OFS.MSG.POS
    WHILE Y.FILE.ID : Y.OFS.MSG.POS
        CALL F.READ(FN.REDO.FILE.DATE.PROCESS,Y.FILE.ID,R.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS,REDO.FILE.DATE.PROCESS.ERR)
        Y.SUPPLIER.PAY.LIST = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.PAY.RECORD.ID>
        Y.FILE.TOT.AMT  = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.FILE.TOT.AMOUNT>
        Y.FILE.COM.AMT  = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.FILE.COM.AMOUNT>
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.OFS.PROCESS> =  'PROCESS'
        CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,Y.FILE.ID,R.REDO.FILE.DATE.PROCESS)
        Y.TOTAL.AMT  = Y.FILE.TOT.AMT + Y.FILE.COM.AMT
        CHANGE @VM TO @FM IN Y.SUPPLIER.PAY.LIST
        IF Y.SUPPLIER.PAY.LIST THEN
            Y.REDO.SUPPLIER.ID = Y.SUPPLIER.PAY.LIST<1>
            Y.FILE.CURRENCY = FIELD(Y.REDO.SUPPLIER.ID,'.',4)
            Y.FILE.DEB.ACCT = FIELD(Y.REDO.SUPPLIER.ID,'.',5)
            GOSUB OFS.PROCESS.PARA
        END

    REPEAT
RETURN
*------------------------------------------------------------------------------------------
OFS.PROCESS.PARA:
*------------------------------------------------------------------------------------------

    CALL REDO.UPLOAD.DEBIT.ACCOUNT.CHECK(Y.FILE.DEB.ACCT,Y.DR.ACCT.STATUS)
    IF Y.DR.ACCT.STATUS THEN
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.DEB.ACCT.STATUS> = Y.DR.ACCT.STATUS
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.OFS.PROCESS> =  'FAILURE'
        CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,Y.FILE.ID,R.REDO.FILE.DATE.PROCESS)
        RETURN
    END

    CALL F.READ(FN.ACCOUNT,Y.FILE.DEB.ACCT,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERR)
    Y.DEBIT.BAL.AMT = R.ACCOUNT<AC.LOCAL.REF,Y.LOC.L.AC.AV.BAL.POS>
    Y.DEB.CUSTOMER  = R.ACCOUNT<AC.CUSTOMER>

    IF Y.DEBIT.BAL.AMT LT Y.TOTAL.AMT THEN
        Y.DR.ACCT.STATUS = "INSUFFICIANT BALANCE"
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.DEB.ACCT.STATUS> = Y.DR.ACCT.STATUS
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.OFS.PROCESS> =  'FAILURE'
        CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,Y.FILE.ID,R.REDO.FILE.DATE.PROCESS)
        RETURN
    END

    Y.CREDIT.INT.ACCT = ''
    CALL F.READ(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT,F.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.PAY.ERR)
    Y.BANK.CODE        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BANK.CODE>
    IF Y.BANK.CODE THEN
        Y.CREDIT.INT.ACCT = Y.SUPPLIER.INT.ACCT
        Y.YXN.CODE = Y.SUPPLIER.TXN.CODE
        OFSVERSION = 'FUNDS.TRANSFER,AI.SUPPLIER.UPLOAD'
    END ELSE
        Y.CREDIT.INT.ACCT = Y.PAYROLL.INT.ACCT
        Y.YXN.CODE = Y.PAYROLL.TXN.CODE
        OFSVERSION = 'FUNDS.TRANSFER,AI.PAYROLL.UPLOAD'
    END

    R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO> = Y.FILE.DEB.ACCT
    R.FUNDS.TRANSFER.REC<FT.DEBIT.VALUE.DATE> = TODAY
    R.FUNDS.TRANSFER.REC<FT.CREDIT.VALUE.DATE> = TODAY
    R.FUNDS.TRANSFER.REC<FT.DEBIT.CURRENCY> = Y.FILE.CURRENCY
* R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO> = Y.CREDIT.INT.ACCT
    R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT> = Y.FILE.TOT.AMT
    R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = Y.YXN.CODE
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.COMMENTS.POS>= Y.FILE.ID
*    R.FUNDS.TRANSFER.REC<FT.CHARGES.ACCT.NO> = Y.FILE.DEB.ACCT
    Y.EXT.USER =FIELD(Y.FILE.ID,'.',1)
    CALL CACHE.READ(FN.EB.EXTERNAL.USER, Y.EXT.USER, R.EB.EXTERNAL.USER, EEU.ERR) ;*R22 AUTO CONVERSTION F.READ TO CACHE.READ AND REMOVED F.EB.EXTERNAL.USER
    Y.EXT.CUS.ID  = R.EB.EXTERNAL.USER<EB.XU.CUSTOMER>
    R.FUNDS.TRANSFER.REC<FT.SIGNATORY> = Y.EXT.CUS.ID


    OFS.SOURCE.ID = 'OFSUPDATE'

    APP.NAME = 'FUNDS.TRANSFER'
    OFS.FUNCTION = 'I'
    PROCESS = 'PROCESS'
    GTS.MODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    R.APP.RECORD=R.FUNDS.TRANSFER.REC
    OFS.STRING=''
    OFS.MSG.ID = ''
    OFS.ERR = ''

    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
    Y.RUNNING.UNDER.BATCH = RUNNING.UNDER.BATCH
    RUNNING.UNDER.BATCH = 0
    CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,Y.theResponse, Y.txnCommitted)
    RUNNING.UNDER.BATCH = Y.RUNNING.UNDER.BATCH

    CALL OCOMO("File upload Transaction String   - ":OFS.STRING)
    CALL OCOMO("File upload Transaction Response - ":Y.theResponse)
    CALL OCOMO("File upload Transaction Status   - ":Y.txnCommitted)

    IF NOT(Y.txnCommitted) THEN
        IF Y.BANK.CODE THEN
            OFSVERSION = 'FUNDS.TRANSFER,AI.SUPPLIER.UPLOAD.OVR'
        END ELSE
            OFSVERSION = 'FUNDS.TRANSFER,AI.PAYROLL.UPLOAD.OVR'
        END

        CHANGE ',' TO @FM IN OFS.STRING
        Y.LEN.OFS.STRING = DCOUNT(OFS.STRING,@FM)
        DEL OFS.STRING<Y.LEN.OFS.STRING-1>
        CHANGE @FM TO ',' IN OFS.STRING

        Y.RUNNING.UNDER.BATCH = RUNNING.UNDER.BATCH
        RUNNING.UNDER.BATCH = 0
        CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,Y.theResponse, Y.txnCommitted)
        RUNNING.UNDER.BATCH = Y.RUNNING.UNDER.BATCH
    END

    CALL OCOMO("File upload Transaction String   - ":OFS.STRING)
    CALL OCOMO("File upload Transaction Response - ":Y.theResponse)
    CALL OCOMO("File upload Transaction Status   - ":Y.txnCommitted)

RETURN
GOEND:
END
*-----------------------------------------*END OF SUBROUTINE*------------------------------
