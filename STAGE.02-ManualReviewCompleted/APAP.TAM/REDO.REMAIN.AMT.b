* @ValidationCode : MjoxNTYyMDEyNDAyOkNwMTI1MjoxNjgxMzc0Njg5NzI3OjMzM3N1Oi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 13 Apr 2023 14:01:29
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : 333su
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
SUBROUTINE  REDO.REMAIN.AMT(VAR.ACCT.AMT)
*--------------------------------------------------------------------------------
*Company   Name    :Asociacion Popular de Ahorros y Prestamos
*Developed By      :PRABHU.N
*Program   Name    :REDO.REMAIN.AMT
*---------------------------------------------------------------------------------

*DESCRIPTION       :It is a deal slip routine for FT and TT payment
*LINKED WITH       :

* ----------------------------------------------------------------------------------
*Modification Details:
*=====================
*   Date               who           Reference            Description
* 3-JUN-2010        Prabhu.N       ODR-2010-01-0081    Initial Creation
*Modification History:
*DATE                 WHO                  REFERENCE                     DESCRIPTION
*13/04/2023      CONVERSION TOOL     AUTO R22 CODE CONVERSION         FM TO @FM, VM TO @VM, SM TO @SM
*13/04/2023         SURESH           MANUAL R22 CODE CONVERSION           NOCHANGE
*-------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.TELLER
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.EB.CONTRACT.BALANCES
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.ACCOUNT

    GOSUB INIT
RETURN
*----
INIT:
*----
    FN.EB.CONTRACT.BALANCES='F.EB.CONTRACT.BALANCES'
    F.EB.CONTRACT.BALANCES=''
    CALL OPF(FN.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES)

    FN.AA.ACCOUNT.DETAILS='F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS=''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)

    FN.AA.ARRANGEMENT='F.AA.ARRANGEMENT'
    F.AA.ARRANGEMENT=''
    CALL OPF(FN.AA.ARRANGEMENT,F.AA.ARRANGEMENT)

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.AA.BILL.DETAILS='F.AA.BILL.DETAILS'
    F.AA.BILL.DETAILS=''
    CALL OPF(FN.AA.BILL.DETAILS,F.AA.BILL.DETAILS)
    LREF.APP=APPLICATION
    LREF.FIELDS='L.NO.OF.INSTAL'
    LREF.POS=''
    CALL MULTI.GET.LOC.REF(LREF.APP,LREF.FIELDS,LREF.POS)

    IF APPLICATION EQ 'FUNDS.TRANSFER' THEN
        VAR.NO.INSTAL=R.NEW(FT.LOCAL.REF)<1,LREF.POS>
        GOSUB PROCESS
    END

    IF APPLICATION EQ 'TELLER' THEN
        VAR.NO.INSTAL=R.NEW(TT.TE.LOCAL.REF)<1,LREF.POS>
        GOSUB PROCESS

    END
RETURN
*-------
PROCESS:
*-------
    VAR.ACCOUNT.ID=VAR.ACCT.AMT
    CALL F.READ(FN.ACCOUNT,VAR.ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR)
    VAR.AA.ID=R.ACCOUNT<AC.ARRANGEMENT.ID>
    CALL F.READ(FN.AA.ARRANGEMENT,VAR.AA.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,READ.ERR)
    VAR.ACCT.AMT=''
    BALANCE.TYPE='CURACCOUNT'
    Y.BAL.AMOUNT=''
    Y.REQ.TYPE = ''
    START.DATE= R.AA.ARRANGEMENT<AA.ARR.START.DATE>
    END.DATE=TODAY
    EFFECTIVE.DATE = TODAY
    CHARGEOFF.TYPE = ''
    CALL AC.GET.PERIOD.BALANCES(VAR.ACCOUNT.ID,BALANCE.TYPE, Y.REQ.TYPE, START.DATE, END.DATE ,EFFECTIVE.DATE,CHARGEOFF.TYPE, Y.BAL.AMOUNT, ERR.MSG)
    Y.LIM.BALANCE = Y.BAL.AMOUNT<4>
    CHANGE @VM TO @FM IN Y.LIM.BALANCE
    Y.LIM.BALANCE.SIZE=DCOUNT(Y.LIM.BALANCE,@FM)
    Y.LIM.BALANCE=Y.LIM.BALANCE<Y.LIM.BALANCE.SIZE>
    Y.LIM.BALANCE = ABS(Y.LIM.BALANCE)
    VAR.COMMIT.BALANCE=Y.LIM.BALANCE
    CALL F.READ(FN.ACCOUNT,VAR.ACCOUNT.ID,R.ACCOUNT,F.ACCOUNT,ERR)
    VAR.AA.ID=R.ACCOUNT<AC.ARRANGEMENT.ID>
    CALL F.READ(FN.AA.ARRANGEMENT,VAR.AA.ID,R.AA.ARRANGEMENT,F.AA.ARRANGEMENT,ERR)
    CALL F.READ(FN.AA.ACCOUNT.DETAILS,VAR.AA.ID,R.AA.ACCOUNT.DETAILS ,F.AA.ACCOUNT.DETAILS ,ERR)
    VAR.SET.LIST=R.AA.ACCOUNT.DETAILS<AA.AD.SET.STATUS>
    VAR.AGE.LIST=R.AA.ACCOUNT.DETAILS<AA.AD.AGING.STATUS>
    CHANGE @VM TO @FM IN VAR.SET.LIST
    CHANGE @SM TO @FM IN VAR.SET.LIST
    CHANGE @VM TO @FM IN VAR.AGE.LIST
    CHANGE @SM TO @FM IN VAR.AGE.LIST
    VAR.SET.LIST.SIZE=DCOUNT(VAR.SET.LIST,@FM)

    FOR VAR.CNT=1 TO VAR.SET.LIST.SIZE
        IF VAR.SET.LIST<VAR.CNT> EQ 'UNPAID' THEN
            VAR.CNT.UNPAID+=1
        END
    NEXT VAR.CNT

    IF VAR.CNT.UNPAID EQ 2  AND VAR.NO.INSTAL EQ 1 THEN
        VAR.BILL.LIST=R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID>
        CHANGE @VM  TO @FM IN VAR.BILL.LIST
        VAR.BILL.LIST.SIZE=DCOUNT(VAR.BILL.LIST,@FM)

        VAR.BILL=VAR.BILL.LIST<VAR.BILL.LIST.SIZE>
        CALL F.READ(FN.AA.BILL.DETAILS,VAR.BILL,R.AA.BILL.DETAILS,F.AA.BILL.DETAILS,ERR)
        VAR.BILL.AMOUNT=R.AA.BILL.DETAILS<AA.BD.OS.PROP.AMOUNT>
        VAR.COMMIT.BALANCE += VAR.BILL.AMOUNT
    END
    VAR.ACCT.AMT=VAR.COMMIT.BALANCE
RETURN
END
