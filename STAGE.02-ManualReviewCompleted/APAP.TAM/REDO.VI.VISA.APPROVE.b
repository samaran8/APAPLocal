$PACKAGE APAP.TAM
SUBROUTINE REDO.VI.VISA.APPROVE
******************************************************************************
*  Company   Name    :Asociacion Popular de Ahorros y Prestamos
*  Developed By      :DHAMU.S
*  Program   Name    :REDO.VI.VISA.APPROVE
***********************************************************************************
*Description: This routine is to settle the transaction when it is approved manually
*             This is a version routine attached to VERSION REDO.VISA.SETTLEMENT.05TO37,APPROVE as
*             input routine
*****************************************************************************
*linked with:
*In parameter:
*Out parameter:
**********************************************************************
* Modification History :
*-----------------------
*DATE           WHO           REFERENCE         DESCRIPTION
*03.12.2010   S DHAMU       ODR-2010-08-0469  INITIAL CREATION
** 18-04-2023 R22 Auto Conversion - FM TO @FM, VM to @VM, SM to @SM
** 18-04-2023 Skanda R22 Manual Conversion - No changes
*----------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CURRENCY
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.AC.LOCKED.EVENTS
    $INSERT I_F.ATM.REVERSAL
    $INSERT I_F.REDO.VISA.OUTGOING
    $INSERT I_F.REDO.MERCHANT.CATEG
    $INSERT I_F.REDO.APAP.H.PARAMETER
    $INSERT I_F.REDO.VISA.STLMT.05TO37
    $INSERT I_F.REDO.VISA.STLMT.PARAM


    GOSUB INIT
    GOSUB PROCESS
RETURN

*****
INIT:
******

    TRANSACTION.ID = ''
    PROCESS = ''
    GTSMODE  =''
    OFSRECORD  = ''
    OFS.MSG.ID = ''
    OFS.ERR = ''
    OFS.STRING = ''
    OFS.ERR = ''

    FN.ATM.REVERSAL = 'F.ATM.REVERSAL'
    F.ATM.REVERSAL  =''
    CALL OPF(FN.ATM.REVERSAL,F.ATM.REVERSAL)

    FN.ACCOUNT ='F.ACCOUNT'
    F.ACCOUNT =''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)


    FN.AC.LOCKED.EVENTS='F.AC.LOCKED.EVENTS'
    F.AC.LOCKED.EVENTS=''
    CALL OPF(FN.AC.LOCKED.EVENTS,F.AC.LOCKED.EVENTS)

    FN.REDO.APAP.H.PARAMETER='F.REDO.APAP.H.PARAMETER'
    FN.REDO.VISA.STLMT.PARAM='F.REDO.VISA.STLMT.PARAM'

RETURN

********
PROCESS:
********

    CARD.NUMBER=R.NEW(VISA.SETTLE.ACCOUNT.NUMBER)
    CARD.NUM.EXT=R.NEW(VISA.SETTLE.ACCT.NUM.EXT)

    IF CARD.NUM.EXT EQ 0 THEN
        CARD.NUMBER = R.NEW(VISA.SETTLE.ACCOUNT.NUMBER)
    END ELSE
        CARD.NUMBER = CARD.NUMBER:FMT(CARD.NUM.EXT,"R0%3")
    END

    ATM.REV.ID=CARD.NUMBER:'.':R.NEW(VISA.SETTLE.AUTH.CODE)
    CALL F.READ(FN.ATM.REVERSAL,ATM.REV.ID,R.ATM.REVERSAL,F.ATM.REVERSAL,ATM.REVERSAL.ERR)

    IF R.ATM.REVERSAL EQ '' THEN
        ETEXT = "EB-NO.TXN.DETAILS"
        CALL STORE.END.ERROR
    END


    IF R.ATM.REVERSAL<AT.REV.TXN.REF> NE '' AND R.ATM.REVERSAL<AT.REV.TXN.REF>[1,4] NE 'ACLK' THEN
        ETEXT = 'EB-SETTLED.TXN'
        CALL STORE.END.ERROR
    END

    GOSUB PROCESS.NEXT

RETURN
************************************************
PROCESS.NEXT:
************************************************
    GOSUB GET.LOCAL.REF

    PARAMETER.ID = 'SYSTEM'
    CALL CACHE.READ(FN.REDO.APAP.H.PARAMETER,PARAMETER.ID,R.REDO.APAP.H.PARAMETER,PARAMETER.ERROR)

    TC.CODE = R.NEW(VISA.SETTLE.TRANSACTION.CODE)

    BEGIN CASE
        CASE TC.CODE EQ '05'
            TC.CODE.ALTERNATE='15'
        CASE TC.CODE EQ '06'
            TC.CODE.ALTERNATE='16'
        CASE TC.CODE EQ '07'
            TC.CODE.ALTERNATE='17'
    END CASE

*    IF R.NEW(VISA.SETTLE.CARD.ACCEPTOR.ID)[15,1] NE 'P' THEN


    LOCATE TC.CODE.ALTERNATE IN R.REDO.APAP.H.PARAMETER<PARAM.TC.CODE,1> SETTING POS THEN
        IF R.NEW(VISA.SETTLE.DEST.CCY.CODE) EQ C$R.LCCY<EB.CUR.NUMERIC.CCY.CODE> THEN
            CR.ACCT=R.REDO.APAP.H.PARAMETER<PARAM.DR.ACCT,POS>
            DR.ACCT=R.REDO.APAP.H.PARAMETER<PARAM.CR.ACCT,POS>
        END ELSE
            CR.ACCT=R.REDO.APAP.H.PARAMETER<PARAM.FOR.DR.ACCT,POS>
            DR.ACCT=R.REDO.APAP.H.PARAMETER<PARAM.FOR.CR.ACCT,POS>
        END

    END
    LOCATE TC.CODE IN R.REDO.APAP.H.PARAMETER<PARAM.TC.CODE,1> SETTING POS THEN
        MODIFY.RTN=R.REDO.APAP.H.PARAMETER<PARAM.MODIFY.RTN,POS>
        FT.CHRG.TYPE=R.REDO.APAP.H.PARAMETER<PARAM.FTTC,POS>
    END

*    END ELSE

*        Y.TC.CODE.LOCATE=TC.CODE : "P"

*        GOSUB GET.DR.CR.ACCT.CERITOS

*    END
    IF R.NEW(VISA.SETTLE.CARD.ACCEPTOR.ID)[15,1] EQ 'P' THEN
        Y.TC.CODE.LOCATE=TC.CODE : "P"
    END
    IF MODIFY.RTN NE '' THEN
        CALL @MODIFY.RTN(OUT.PARAM)
        DR.ACCT = OUT.PARAM<1>
        CR.ACCT = OUT.PARAM<2>
    END

    IF TC.CODE NE 06 AND Y.TC.CODE.LOCATE NE '05P' THEN
        DR.ACCT = R.ATM.REVERSAL<AT.REV.ACCOUNT.NUMBER>
*    R.FUNDS.TRANSFER<FT.DEBIT.VALUE.DATE> = R.ATM.REVERSAL<AT.REV.T24.DATE>
*        R.FUNDS.TRANSFER<FT.DEBIT.VALUE.DATE> =TODAY
    END
    ELSE
        IF Y.TC.CODE.LOCATE EQ '05P' THEN
            GOSUB GET.DR.CR.ACCT.CERITOS
        END
    END
    R.FUNDS.TRANSFER<FT.DEBIT.ACCT.NO>=DR.ACCT
    R.FUNDS.TRANSFER<FT.CREDIT.ACCT.NO>=CR.ACCT

    CALL F.READ(FN.ACCOUNT,CR.ACCT,R.CR.ACC,F.ACCOUNT,ACCT.ERR)
    CALL F.READ(FN.ACCOUNT,DR.ACCT,R.DR.ACC,F.ACCOUNT,ACCT.ERR)
    Y.ACC.AVL.BAL=R.DR.ACC<AC.LOCAL.REF,POS.L.AC.AV.BAL>
    Y.CHARGE.AMT =R.ATM.REVERSAL<AT.REV.TXN.CHRG>
    CALL F.READ(FN.AC.LOCKED.EVENTS,R.ATM.REVERSAL<AT.REV.TXN.REF>,R.AC.LOCKED.EVENTS,F.AC.LOCKED.EVENTS,AC.LCK.ERR)
    IF R.AC.LOCKED.EVENTS THEN
        Y.LOCKED.AMT = R.AC.LOCKED.EVENTS<AC.LCK.LOCKED.AMOUNT>
        Y.ACC.AVL.BAL += Y.LOCKED.AMT ;* R22 Auto conversion
    END

    IF TC.CODE NE 06 AND Y.TC.CODE.LOCATE NE '05P' THEN
        GOSUB FUND.CHECK
    END

*    R.FUNDS.TRANSFER<FT.DEBIT.CURRENCY> = R.DR.ACC<AC.CURRENCY>
    R.FUNDS.TRANSFER<FT.CREDIT.CURRENCY> = R.CR.ACC<AC.CURRENCY>

*IF R.DR.ACC<AC.CURRENCY> EQ LCCY AND R.CR.ACC<AC.CURRENCY> EQ LCCY THEN
    CR.AMT = R.NEW(VISA.SETTLE.DEST.AMT)

    R.FUNDS.TRANSFER<FT.TRANSACTION.TYPE>=R.ATM.REVERSAL<AT.REV.FTTC.ID>
    R.FUNDS.TRANSFER<FT.CREDIT.AMOUNT>=CR.AMT
    R.FUNDS.TRANSFER<FT.CREDIT.VALUE.DATE> = TODAY
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.AT.UNIQUE.ID>=ATM.REV.ID
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.POS.COND>=R.ATM.REVERSAL<AT.REV.POS.COND>
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.BIN.NO>=CARD.NUMBER[1,6]
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.AT.AUTH.CODE>=FIELD(ATM.REV.ID,'.',2)
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.ATM.TERM.ID>=R.NEW(VISA.SETTLE.TERMINAL.ID)
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.STLMT.ID>=ID.NEW
    R.FUNDS.TRANSFER<FT.LOCAL.REF,POS.STLMT.APPL>="REDO.VISA.STLMT.05TO37"

    APP.NAME =  'FUNDS.TRANSFER'
    OFSVERSION = R.REDO.APAP.H.PARAMETER<PARAM.FT.VERSION,POS>
    OFSFUNCT = 'I'
    OFS.SOURCE.ID = 'REDO.VISA.OUTGOING'
    NO.OF.AUTH = '0'

    CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCT,PROCESS,OFSVERSION,GTSMODE,NO.OF.AUTH,TRANSACTION.ID,R.FUNDS.TRANSFER,OFS.STRING)


    OFS.STRING1=''
    IF R.AC.LOCKED.EVENTS NE '' THEN
        APP.NAME = 'AC.LOCKED.EVENTS'
        OFSFUNCT = 'R'
        TRANSACTION.ID = R.ATM.REVERSAL<AT.REV.TXN.REF>
        OFSVERSION  = R.REDO.APAP.H.PARAMETER<PARAM.AC.LCK.REV.VERSION,POS>
        R.AC.LOCKED.EVENTS=''
        CALL OFS.BUILD.RECORD(APP.NAME,OFSFUNCT,PROCESS,OFSVERSION,GTSMODE,NO.OF.AUTH,TRANSACTION.ID,R.AC.LOCKED.EVENTS,OFS.STRING1)
    END

    OFS.STRING.FINAL = OFS.STRING1:@FM:OFS.STRING
    CALL OFS.POST.MESSAGE(OFS.STRING.FINAL,OFS.MSG.ID,OFS.SOURCE.ID,OFS.ERR)

RETURN
************************************************
FUND.CHECK:
************************************************
* Here we need to check the whether debit account suffient fund


    Y.DEST.AMT=R.NEW(VISA.SETTLE.DEST.AMT)

    BEGIN CASE
        CASE R.NEW(VISA.SETTLE.DEST.CCY.CODE) EQ C$R.LCCY<EB.CUR.NUMERIC.CCY.CODE>
            Y.AMT=Y.DEST.AMT+Y.CHARGE.AMT
            IF Y.ACC.AVL.BAL LT Y.AMT THEN
                ETEXT = "EB-INSUFFICIENT"
                CALL STORE.END.ERROR
            END

        CASE R.NEW(VISA.SETTLE.DEST.CCY.CODE) NE C$R.LCCY<EB.CUR.NUMERIC.CCY.CODE>

            Y.FIN.SRC.AMT=(Y.DEST.AMT*R.ATM.REVERSAL<AT.REV.EXCH.RATE>)+Y.CHARGE.AMT

            IF Y.ACC.AVL.BAL LT Y.FIN.SRC.AMT THEN
                ETEXT = "EB-INSUFFICIENT"
                CALL STORE.END.ERROR
            END
    END CASE

RETURN
*-----------------------------------------------------------------------
GET.LOCAL.REF:
*-----------------------------------------------------------------------
    LOC.REF.APPLICATION="FUNDS.TRANSFER":@FM:"ACCOUNT"
    LOC.REF.FIELDS='AT.UNIQUE.ID':@VM:'POS.COND':@VM:'BIN.NO':@VM:'AT.AUTH.CODE':@VM:'ATM.TERM.ID':@VM:'L.STLMT.ID':@VM:'L.STLMT.APPL':@FM:'L.AC.AV.BAL'
    LOC.REF.POS=''
    CALL MULTI.GET.LOC.REF(LOC.REF.APPLICATION,LOC.REF.FIELDS,LOC.REF.POS)
    POS.AT.UNIQUE.ID=LOC.REF.POS<1,1>
    POS.POS.COND=LOC.REF.POS<1,2>
    POS.BIN.NO=LOC.REF.POS<1,3>
    POS.AT.AUTH.CODE=LOC.REF.POS<1,4>
    POS.ATM.TERM.ID=LOC.REF.POS<1,5>
    POS.STLMT.ID=LOC.REF.POS<1,6>
    POS.STLMT.APPL=LOC.REF.POS<1,7>
    POS.L.AC.AV.BAL=LOC.REF.POS<2,1>

RETURN
***********************
GET.DR.CR.ACCT.CERITOS:
***********************

    LOCATE Y.TC.CODE.LOCATE IN R.REDO.APAP.H.PARAMETER<PARAM.TC.CODE,1> SETTING POS THEN
        IF R.NEW(VISA.SETTLE.DEST.CCY.CODE) EQ C$R.LCCY<EB.CUR.NUMERIC.CCY.CODE> THEN
            DR.ACCT=R.REDO.APAP.H.PARAMETER<PARAM.DR.ACCT,POS>
        END ELSE
            DR.ACCT=R.REDO.APAP.H.PARAMETER<PARAM.FOR.DR.ACCT,POS>
        END
    END

RETURN


END
