* @ValidationCode : MjotMjAzNjM4OTAwMjpDcDEyNTI6MTY4MTcyNzcwNjk5MTozMzNzdTotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 17 Apr 2023 16:05:06
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : 333su
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
SUBROUTINE REDO.TXN.INP.CCY.POSN.UPD
*********************************************************************************************************
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Program   Name    : REDO.TXN.INP.CCY.POSN.UPD
*--------------------------------------------------------------------------------------------------------
*Description       :FX, FT, TT involving currency exchange transactions are madePosition of currencies involved
*                   in the transactions are maintained in a local table each time a transaction is made
**In Parameter     :  N/A
*Out Parameter     :  N/A
*
*--------------------------------------------------------------------------------------------------------
*Modification Details:
*=====================
*  Date            Who                 Reference                    Description
*  ------          ------              -------------                -------------
*  09/08/2010      MD.PREETHI          ODR-2010-07-0073 FX-002      Initial Creation
*  15/04/2011      Pradeep S           PACS00051758                 Fix Patch
*  01/11/2011      Pradeep S           PACS00157021                 Transaction deletion handled
*  14/08/2014      Vignesh Kumaar R    PACS00395700                 FT REVERSE NOT UPDATING THE TOTAL POSITION

*Modification History:
*DATE                 WHO                  REFERENCE                     DESCRIPTION
*17/04/2023      CONVERSION TOOL     AUTO R22 CODE CONVERSION             ++ TO +=, - Y.OLD.FX.AMT.BOUGHT TO Y.OLD.FX.AMT.BOUGHT, X TO X.WAR
*17/04/2023         SURESH           MANUAL R22 CODE CONVERSION           NOCHANGE
*********************************************************************************************************

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FOREX
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.TELLER
    $INSERT I_F.REDO.FX.CCY.POSN

    GOSUB PERF.PRE.VAL          ;* PERFORMANCE FIX TO EXCLUDE THE CALL FOR FX POSITION

    IF Y.PERF.FLAG ELSE
        GOSUB INIT
        GOSUB OPEN
        GOSUB PROCESS
    END

RETURN

INIT:
*****
    FN.REDO.FX.CCY.POSN='F.REDO.FX.CCY.POSN'
    F.REDO.FX.CCY.POSN=''
    R.REDO.FX.CCY.POSN=''

    Y.TOD.BUY.POSN.DR=0
    Y.TOD.SELL.POSN.DR=0
    Y.TOD.BUY.POSN.CR=0
    Y.TOD.SELL.POSN.CR=0
    Y.TOTAL.POSN.DR=0
    Y.TOTAL.POSN.CR=0

*    TODAY=20091224
    Y.LASTWORKING.DATE=TODAY
    Y.INIT=1
    Y.CHK.DAYS=732
    Y.BUY.POSN.CR =''
    Y.SELL.POSN.DR=''
    Y.TOT.POSN.DR=''
    Y.TOT.POSN.CR=''
RETURN

OPEN:
******
    CALL OPF(FN.REDO.FX.CCY.POSN,F.REDO.FX.CCY.POSN)
RETURN

PROCESS:
********

    Y.TXN.PREFIX=ID.NEW[1,2]

    BEGIN CASE
        CASE Y.TXN.PREFIX EQ "FX"
            GOSUB FOREX
        CASE Y.TXN.PREFIX EQ "FT"
            GOSUB FUNDTRANSFER
        CASE Y.TXN.PREFIX EQ "TT"
            GOSUB TELLERTRANSACTION
    END CASE
RETURN

FOREX:
******
    Y.CURR.NO = R.NEW(FX.CURR.NO)
    Y.RECORD.STATUS=R.NEW(FX.RECORD.STATUS)

    IF (V$FUNCTION EQ 'I' AND Y.CURR.NO EQ '') OR (V$FUNCTION EQ 'D' AND Y.RECORD.STATUS EQ 'RNAU') THEN
        GOSUB CCYBOUGHT
        GOSUB LASTWORKINGDAYCCYBOUGHT
        GOSUB UPDATETODAYRECORDCCYBOUGHT
        GOSUB CCYSOLD
        GOSUB LASTWORKINGDAYCCYSOLD
        GOSUB UPDATETODAYRECORDCCYSOLD
    END


    GOSUB INAU.CHANGES.PARA

    IF (V$FUNCTION EQ 'D' AND Y.RECORD.STATUS EQ 'INAU') OR (V$FUNCTION EQ 'R' AND Y.RECORD.STATUS EQ '') THEN
        Y.FX.CCY.BOUGHT=R.NEW(FX.CURRENCY.BOUGHT)
        Y.FX.AMT.BOUGHT=R.NEW(FX.AMOUNT.BOUGHT)
        Y.ID.BOUGHT = Y.FX.CCY.BOUGHT:TODAY
        GOSUB CCYBOUGHTREVERSE
        GOSUB CCYSOLDREVERSE
* GOSUB LASTWORKINGDAYCCYSOLDREVERSE
        GOSUB UPDATETODAYRECORDCCYSOLDREVERSE
    END


RETURN

******************
INAU.CHANGES.PARA:
******************

    IF V$FUNCTION EQ 'I' AND Y.CURR.NO EQ '1' AND Y.RECORD.STATUS EQ 'INAU' THEN

        GOSUB CCYBOUGHT
        GOSUB UPDATETODAYRECORDCCYBOUGHT
        GOSUB CCYSOLD
        GOSUB UPDATETODAYRECORDCCYSOLD
    END
RETURN
**************
CCYBOUGHT:
**************

    Y.FX.CCY.BOUGHT=R.NEW(FX.CURRENCY.BOUGHT)
    Y.FX.AMT.BOUGHT=R.NEW(FX.AMOUNT.BOUGHT)

    Y.OLD.FX.AMT.BOUGHT  = R.NEW.LAST(FX.AMOUNT.BOUGHT)

    IF Y.OLD.FX.AMT.BOUGHT THEN
        Y.FX.AMT.BOUGHT -= Y.OLD.FX.AMT.BOUGHT ;*AUTO R22 CODE CONVERSION
    END

    Y.ID.BOUGHT = Y.FX.CCY.BOUGHT:TODAY

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT,R.REDO.FX.CCY.POSN.BOUGHT,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN = R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN = R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.SELL.POSITION>
    Y.TOD.POSN = R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.TOTAL.POSN>
    Y.BUY.POSN = Y.FX.AMT.BOUGHT + Y.TOD.BUY.POSN

RETURN

*****************************
LASTWORKINGDAYCCYBOUGHT:
*****************************
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)

        R.REDO.FX.CCY.POSN.LAST.BOUGHT=''

        Y.ID.LASTWORKING.DATE.BOUGHT = Y.FX.CCY.BOUGHT:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.BOUGHT,R.REDO.FX.CCY.POSN.LAST.BOUGHT,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.BOUGHT NE '' THEN
            Y.TOTAL.POSN.BOUGHT = R.REDO.FX.CCY.POSN.LAST.BOUGHT<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN = Y.TOTAL.POSN.BOUGHT + Y.BUY.POSN -Y.TOD.SELL.POSN
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.BOUGHT THEN
        Y.TOTAL.POSN.BOUGHT = 0
    END

* IF R.REDO.FX.CCY.POSN.LAST.BOUGHT EQ '' THEN
* Y.TOT.POSN = Y.TOTAL.POSN.BOUGHT + Y.BUY.POSN -Y.TOD.SELL.POSN
* END

RETURN

***************************************
UPDATETODAYRECORDCCYBOUGHT:
****************************************

*PACS00051758 - S
    IF Y.FX.CCY.BOUGHT EQ LCCY THEN
        R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.SELL.POSITION> += Y.FX.AMT.BOUGHT
        Y.TOT.POSN = Y.TOTAL.POSN.BOUGHT + Y.TOD.POSN - Y.FX.AMT.BOUGHT
    END ELSE
        R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.BUY.POSITION> += Y.FX.AMT.BOUGHT
        Y.TOT.POSN = Y.TOTAL.POSN.BOUGHT + Y.TOD.POSN + Y.FX.AMT.BOUGHT
    END
*PACS00051758 - E

* R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.BUY.POSITION>=Y.BUY.POSN
    R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.TOTAL.POSN>=Y.TOT.POSN

    IF (R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.BOUGHT<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT)          ;* PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT,R.REDO.FX.CCY.POSN.BOUGHT)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT,F.REDO.FX.CCY.POSN.BOUGHT)
    END

RETURN

**********
CCYSOLD:
**********
    Y.FX.CCY.SOLD=R.NEW(FX.CURRENCY.SOLD)
    Y.FX.AMT.SOLD= R.NEW(FX.AMOUNT.SOLD)

    Y.OLD.FX.AMT.SOLD  = R.NEW.LAST(FX.AMOUNT.SOLD)

    IF Y.OLD.FX.AMT.SOLD THEN
        Y.FX.AMT.SOLD -= Y.OLD.FX.AMT.SOLD ;*AUTO R22 CODE CONVERSION
    END
    Y.ID.SOLD=Y.FX.CCY.SOLD:TODAY

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.SOLD,R.REDO.FX.CCY.POSN.SOLD,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN1=R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN1=R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION>
    Y.TOD.POSN1 = R.REDO.FX.CCY.POSN.SOLD<REDO.FX.TOTAL.POSN>
    Y.SELL.POSN=Y.FX.AMT.SOLD + Y.TOD.SELL.POSN1

RETURN

***************************
LASTWORKINGDAYCCYSOLD:
***************************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.LASTWORKING.DATE.SOLD = Y.FX.CCY.SOLD:Y.LASTWORKING.DATE
        R.REDO.FX.CCY.POSN.LAST.SOLD=''
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.SOLD,R.REDO.FX.CCY.POSN.LAST.SOLD,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.SOLD NE '' THEN

            Y.TOTAL.POSN.SOLD = R.REDO.FX.CCY.POSN.LAST.SOLD<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN1=Y.TOTAL.POSN.SOLD + Y.TOD.BUY.POSN1 -Y.SELL.POSN

            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.SOLD THEN
        Y.TOTAL.POSN.SOLD = 0
    END

* IF R.REDO.FX.CCY.POSN.LAST.SOLD EQ '' THEN
* Y.TOT.POSN1=Y.TOTAL.POSN.SOLD + Y.TOD.BUY.POSN1 -Y.SELL.POSN
* END
RETURN

*******************************
UPDATETODAYRECORDCCYSOLD:
********************************

*PACS00051758 - S
    IF Y.FX.CCY.SOLD EQ LCCY THEN
        R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION> += Y.FX.AMT.SOLD
        Y.TOT.POSN1 = Y.TOTAL.POSN.SOLD + Y.TOD.POSN1 + Y.FX.AMT.SOLD
    END ELSE
        R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION> += Y.FX.AMT.SOLD
        Y.TOT.POSN1 = Y.TOTAL.POSN.SOLD + Y.TOD.POSN1 - Y.FX.AMT.SOLD
    END
*PACS00051758 - E

* R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION>=Y.SELL.POSN
    R.REDO.FX.CCY.POSN.SOLD<REDO.FX.TOTAL.POSN> =Y.TOT.POSN1

    IF (R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.SOLD)  ;* PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.SOLD,R.REDO.FX.CCY.POSN.SOLD)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.SOLD,F.REDO.FX.CCY.POSN.SOLD)
    END

RETURN

************
*REVERSAL:
***************


*    IF (V$FUNCTION EQ 'D' AND Y.RECORD.STATUS EQ 'INAU') OR (V$FUNCTION EQ 'R' AND Y.RECORD.STATUS EQ '') THEN
*       Y.FX.CCY.BOUGHT=R.NEW(FX.CURRENCY.BOUGHT)
*      Y.FX.AMT.BOUGHT=R.NEW(FX.AMOUNT.BOUGHT)
*     Y.ID.BOUGHT = Y.FX.CCY.BOUGHT:TODAY

*    GOSUB CCYBOUGHTREVERSE
*    GOSUB CCYSOLDREVERSE
*    GOSUB LASTWORKINGDAYCCYSOLDREVERSE
*    GOSUB UPDATETODAYRECORDCCYSOLDREVERSE
* END

********************
CCYBOUGHTREVERSE:
********************

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT,R.REDO.FX.CCY.POSN.BOUGHT.RV,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN=R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN=R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN=R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.TOTAL.POSN>
    Y.BUY.POSN = Y.TOD.BUY.POSN - Y.FX.AMT.BOUGHT

*LASTWORKING DAY REVERSE
**************************
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        R.REDO.FX.CCY.POSN.LAST.BOUGHT=''
        Y.ID.LASTWORKING.DATE.BOUGHT = Y.FX.CCY.BOUGHT:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.BOUGHT,R.REDO.FX.CCY.POSN.LAST.BOUGHT.RV,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.BOUGHT.RV NE '' THEN
            Y.TOTAL.POSN.BOUGHT = R.REDO.FX.CCY.POSN.LAST.BOUGHT.RV<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN = Y.TOTAL.POSN.BOUGHT + Y.BUY.POSN - Y.TOD.SELL.POSN
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT
    IF R.REDO.FX.CCY.POSN.LAST.BOUGHT.RV EQ '' THEN
        Y.TOT.POSN = Y.TOTAL.POSN.BOUGHT + Y.BUY.POSN - Y.TOD.SELL.POSN
    END

*UPDATE
*******

*PACS00051758 - S
    IF Y.FX.CCY.BOUGHT EQ LCCY THEN
        R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.SELL.POSITION> -= Y.FX.AMT.BOUGHT
        Y.TOT.POSN = Y.TOD.TOT.POSN + Y.FX.AMT.BOUGHT
    END ELSE
        R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.BUY.POSITION> -= Y.FX.AMT.BOUGHT
        Y.TOT.POSN = Y.TOD.TOT.POSN - Y.FX.AMT.BOUGHT
    END
*PACS00051758 - E

* R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.BUY.POSITION>=Y.BUY.POSN
    R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.TOTAL.POSN>=Y.TOT.POSN

    IF (R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.BOUGHT.RV<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT)          ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT,R.REDO.FX.CCY.POSN.BOUGHT.RV)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.BOUGHT,F.REDO.FX.CCY.POSN.BOUGHT.RV)
    END

RETURN
******************
CCYSOLDREVERSE:
******************
    Y.FX.CCY.SOLD=R.NEW(FX.CURRENCY.SOLD)
    Y.FX.AMT.SOLD= R.NEW(FX.AMOUNT.SOLD)
    Y.ID.SOLD=Y.FX.CCY.SOLD:TODAY

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.SOLD,R.REDO.FX.CCY.POSN.SOLD,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN1=R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN1=R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN1=R.REDO.FX.CCY.POSN.SOLD<REDO.FX.TOTAL.POSN>
    Y.SELL.POSN1=Y.TOD.SELL.POSN1-Y.FX.AMT.SOLD

RETURN
***************************
LASTWORKINGDAYCCYSOLDREVERSE:
**************************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.LASTWORKING.DATE.SOLD = Y.FX.CCY.SOLD:Y.LASTWORKING.DATE
        R.REDO.FX.CCY.POSN.LAST.SOLD=''
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.SOLD,R.REDO.FX.CCY.POSN.LAST.SOLD,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.SOLD NE '' THEN
            Y.TOTAL.POSN.SOLD = R.REDO.FX.CCY.POSN.LAST.SOLD<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN1=Y.TOTAL.POSN.SOLD+Y.TOD.BUY.POSN1-Y.SELL.POSN1
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT
    IF R.REDO.FX.CCY.POSN.LAST.SOLD EQ '' THEN
        Y.TOT.POSN1=Y.TOTAL.POSN.SOLD+Y.TOD.BUY.POSN1-Y.SELL.POSN1
    END
RETURN

********************************
UPDATETODAYRECORDCCYSOLDREVERSE:
********************************

*PACS00051758 - S
    IF Y.FX.CCY.SOLD EQ LCCY THEN
        R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION> -= Y.FX.AMT.SOLD
        Y.TOT.POSN1 = Y.TOD.TOT.POSN1 - Y.FX.AMT.SOLD
    END ELSE
        R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION> -= Y.FX.AMT.SOLD
        Y.TOT.POSN1 = Y.TOD.TOT.POSN1 + Y.FX.AMT.SOLD
    END
*PACS00051758 - E

* R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION>=Y.SELL.POSN1
    R.REDO.FX.CCY.POSN.SOLD<REDO.FX.TOTAL.POSN> =Y.TOT.POSN1

    IF (R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.SOLD<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.SOLD<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.SOLD)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.SOLD,R.REDO.FX.CCY.POSN.SOLD)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.SOLD,F.REDO.FX.CCY.POSN.SOLD)
    END

RETURN


************************************************************************************************************
FUNDTRANSFER:
**************

    Y.CURR.NO = R.NEW(FT.CURR.NO)
    Y.DEBIT.CURRENCY=R.NEW(FT.DEBIT.CURRENCY)
    Y.CREDIT.CURRENCY= R.NEW(FT.CREDIT.CURRENCY)
    Y.RECORD.STATUS=R.NEW(FT.RECORD.STATUS)
    IF Y.DEBIT.CURRENCY NE Y.CREDIT.CURRENCY THEN
        X.VAR=V$FUNCTION ;*AUTO R22 CODE CONVERSION
        IF (V$FUNCTION EQ 'I' AND Y.CURR.NO EQ '') OR (V$FUNCTION EQ 'D' AND Y.RECORD.STATUS EQ 'RNAU') THEN
            GOSUB DEBIT
            GOSUB LASTWORKINGDATEDR
            GOSUB UPDATEDR
            GOSUB CREDIT
            GOSUB LASTWORKINGDATECR
            GOSUB UPDATECR
        END
        GOSUB DEBITREVERSE
*      GOSUB CREDITREVERSE
    END
RETURN

********
DEBIT:
*********
    Y.DR.AMT = R.NEW(FT.AMOUNT.DEBITED)
    Y.DR.AMT = Y.DR.AMT[LEN(Y.DR.AMT)-3]
    Y.CR.AMT = R.NEW(FT.AMOUNT.CREDITED)
    Y.CR.AMT = Y.CR.AMT[LEN(Y.CR.AMT)-3]
    Y.DR.CCY = R.NEW(FT.DEBIT.CURRENCY)

    Y.DR.CCY.ID=Y.DR.CCY:TODAY

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID,R.REDO.FX.CCY.POSN.DR,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
    Y.TOD.BUY.POSN.DR= R.REDO.FX.CCY.POSN.DR<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.DR= R.REDO.FX.CCY.POSN.DR<REDO.FX.SELL.POSITION>
    Y.TOD.POSN.DR = R.REDO.FX.CCY.POSN.DR<REDO.FX.TOTAL.POSN> ;* PACS00051758 - S/E
    Y.BUY.POSN.DR = Y.DR.AMT + Y.TOD.BUY.POSN.DR
RETURN

***********************
LASTWORKINGDATEDR:
***********************
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.LASTWORKING.DATE.DR=Y.DR.CCY:Y.LASTWORKING.DATE
        R.REDO.FX.CCY.POSN.LAST.DR = ''
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.DR,R.REDO.FX.CCY.POSN.LAST.DR,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

        IF R.REDO.FX.CCY.POSN.LAST.DR NE '' THEN
            Y.TOTAL.POSN.DR=R.REDO.FX.CCY.POSN.LAST.DR<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN.DR = Y.TOTAL.POSN.DR + Y.BUY.POSN.DR -Y.TOD.SELL.POSN.DR
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.DR THEN
        Y.TOTAL.POSN.DR = 0
    END


* IF R.REDO.FX.CCY.POSN.LAST.DR EQ '' THEN
* Y.TOT.POSN.DR = Y.TOTAL.POSN.DR + Y.BUY.POSN.DR -Y.TOD.SELL.POSN.DR
* END

RETURN

*************
UPDATEDR:
*************

*PACS00051758 - S
    IF Y.DR.CCY EQ LCCY THEN
        R.REDO.FX.CCY.POSN.DR<REDO.FX.SELL.POSITION> += Y.DR.AMT
        Y.TOT.POSN.DR = Y.TOTAL.POSN.DR + Y.TOD.POSN.DR - Y.DR.AMT
    END ELSE
        R.REDO.FX.CCY.POSN.DR<REDO.FX.BUY.POSITION> += Y.DR.AMT
        Y.TOT.POSN.DR = Y.TOTAL.POSN.DR + Y.TOD.POSN.DR + Y.DR.AMT
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.DR<REDO.FX.BUY.POSITION>=Y.BUY.POSN.DR
    R.REDO.FX.CCY.POSN.DR<REDO.FX.TOTAL.POSN> =Y.TOT.POSN.DR
    IF (R.REDO.FX.CCY.POSN.DR<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.DR<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.DR<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.DR<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID)          ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID,R.REDO.FX.CCY.POSN.DR)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID,F.REDO.FX.CCY.POSN.DR)
    END
RETURN

************
CREDIT:
*************
    Y.CR.CCY=R.NEW(FT.CREDIT.CURRENCY)
    Y.CR.CCY.ID=Y.CR.CCY:TODAY
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID,R.REDO.FX.CCY.POSN.CR,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
    Y.TOD.BUY.POSN.CR = R.REDO.FX.CCY.POSN.CR<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.CR = R.REDO.FX.CCY.POSN.CR<REDO.FX.SELL.POSITION>
    Y.TOD.POSN.CR = R.REDO.FX.CCY.POSN.CR<REDO.FX.TOTAL.POSN> ;* PACS00051758 - S/E
    Y.SELL.POSN.CR = Y.CR.AMT + Y.TOD.SELL.POSN.CR
RETURN

***********************
LASTWORKINGDATECR:
***********************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ1 = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ1)
        Y.ID.LASTWORKING.DATE.CR=Y.CR.CCY:Y.LASTWORKING.DATE
        R.REDO.FX.CCY.POSN.LAST.CR = ''
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.CR,R.REDO.FX.CCY.POSN.LAST.CR,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.CR NE '' THEN
            Y.TOTAL.POSN.CR = R.REDO.FX.CCY.POSN.LAST.CR<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN.CR = Y.TOTAL.POSN.CR + Y.TOD.BUY.POSN.CR -Y.SELL.POSN.CR
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.CR THEN
        Y.TOTAL.POSN.CR = 0
    END

*IF R.REDO.FX.CCY.POSN.LAST.CR EQ '' THEN
*Y.TOT.POSN.CR = Y.TOTAL.POSN.CR + Y.TOD.BUY.POSN.CR -Y.SELL.POSN.CR
*END

RETURN

***********
UPDATECR:
***********

*PACS00051758 - S
    IF Y.CR.CCY EQ LCCY THEN
        R.REDO.FX.CCY.POSN.CR<REDO.FX.BUY.POSITION> += Y.CR.AMT
        Y.TOT.POSN.CR = Y.TOTAL.POSN.CR + Y.TOD.POSN.CR + Y.CR.AMT
    END ELSE
        R.REDO.FX.CCY.POSN.CR<REDO.FX.SELL.POSITION> += Y.CR.AMT
        Y.TOT.POSN.CR = Y.TOTAL.POSN.CR + Y.TOD.POSN.CR - Y.CR.AMT
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.CR<REDO.FX.SELL.POSITION>= Y.SELL.POSN.CR
    R.REDO.FX.CCY.POSN.CR<REDO.FX.TOTAL.POSN> = Y.TOT.POSN.CR
    IF (R.REDO.FX.CCY.POSN.CR<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.CR<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.CR<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.CR<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID)          ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID,R.REDO.FX.CCY.POSN.CR)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID,F.REDO.FX.CCY.POSN.CR)
    END
RETURN

***************
DEBITREVERSE:
***************
    IF (V$FUNCTION EQ 'D' AND Y.RECORD.STATUS EQ 'INAU') OR (V$FUNCTION EQ 'D' AND Y.RECORD.STATUS EQ 'INAO')OR (V$FUNCTION EQ 'R' AND Y.RECORD.STATUS EQ '') THEN
        Y.DR.AMT1 = R.NEW(FT.AMOUNT.DEBITED)
        Y.DR.AMT1 = Y.DR.AMT1[LEN(Y.DR.AMT1)-3]
        Y.DR.CCY1=R.NEW(FT.DEBIT.CURRENCY)
*
        Y.DR.CCY.ID1=Y.DR.CCY1:TODAY
*
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID1,R.REDO.FX.CCY.POSN.DR1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

        Y.TOD.BUY.POSN.DR1= R.REDO.FX.CCY.POSN.DR1<REDO.FX.BUY.POSITION>
        Y.TOD.SELL.POSN.DR1= R.REDO.FX.CCY.POSN.DR1<REDO.FX.SELL.POSITION>
        Y.TOD.TOT.POSN.DR1=R.REDO.FX.CCY.POSN.DR1<REDO.FX.TOTAL.POSN>
        Y.BUY.POSN.DR1=Y.TOD.BUY.POSN.DR1-Y.DR.AMT1

*GOSUB LASTWORKINGDATEDR.REVERSE
        GOSUB UPDATEDR.REVERSAL
        GOSUB CREDITREVERSE
*GOSUB LASTWORKINGDATECR.REVERSAL
        GOSUB UPDATECR.REVERSAL
    END
RETURN
******************************
LASTWORKINGDATEDR.REVERSE:
******************************
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.LASTWORKING.DATE.DR1=Y.DR.CCY1:Y.LASTWORKING.DATE
        R.REDO.FX.CCY.POSN.LAST.DR1 = ''
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.DR1,R.REDO.FX.CCY.POSN.LAST.DR1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.DR1 NE '' THEN
            Y.TOT.POSN.DR1=R.REDO.FX.CCY.POSN.LAST.DR1<REDO.FX.TOTAL.POSN>
            Y.TOTAL.POSN.DR1 = Y.TOT.POSN.DR1 + Y.BUY.POSN.DR1 - Y.TOD.SELL.POSN.DR1
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT
    IF R.REDO.FX.CCY.POSN.LAST.DR1 EQ '' THEN
        Y.TOTAL.POSN.DR1 = Y.TOT.POSN.DR1 + Y.BUY.POSN.DR1-Y.TOD.SELL.POSN.DR1
    END
RETURN
********************
UPDATEDR.REVERSAL:
********************

*PACS00051758 - S
    IF Y.DR.CCY1 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.DR1<REDO.FX.SELL.POSITION> -= Y.DR.AMT1
        Y.TOT.POSN.DR1 = Y.TOD.TOT.POSN.DR1 + Y.DR.AMT1
    END ELSE
        R.REDO.FX.CCY.POSN.DR1<REDO.FX.BUY.POSITION> -= Y.DR.AMT1
        Y.TOT.POSN.DR1 = Y.TOD.TOT.POSN.DR1 - Y.DR.AMT1
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.DR1<REDO.FX.BUY.POSITION>=Y.BUY.POSN.DR1
    R.REDO.FX.CCY.POSN.DR1<REDO.FX.TOTAL.POSN> =Y.TOT.POSN.DR1

    IF (R.REDO.FX.CCY.POSN.DR1<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.DR1<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.DR1<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.DR1<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID1)         ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID1,R.REDO.FX.CCY.POSN.DR1)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.DR.CCY.ID1,F.REDO.FX.CCY.POSN.DR1)
    END
RETURN

****************
CREDITREVERSE:
****************
    Y.CR.AMT2 = R.NEW(FT.AMOUNT.CREDITED)
    Y.CR.AMT2 = Y.CR.AMT2[LEN(Y.CR.AMT2)-3]
    Y.CR.CCY2=R.NEW(FT.CREDIT.CURRENCY)
    Y.CR.CCY.ID2=Y.CR.CCY2:TODAY
*
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID2,R.REDO.FX.CCY.POSN.CR2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
*
    Y.TOD.BUY.POSN.CR2= R.REDO.FX.CCY.POSN.CR2<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.CR2= R.REDO.FX.CCY.POSN.CR2<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN.CR2=R.REDO.FX.CCY.POSN.CR2<REDO.FX.TOTAL.POSN>
    Y.SELL.POSN.CR2=Y.TOD.SELL.POSN.CR2-Y.CR.AMT2
RETURN

*******************************
LASTWORKINGDATECR.REVERSAL:
*******************************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        R.REDO.FX.CCY.POSN.LAST.CR2 = ''
        Y.ID.LASTWORKING.DATE.CR2=Y.CR.CCY2:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.LASTWORKING.DATE.CR2,R.REDO.FX.CCY.POSN.LAST.CR2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.CR2 NE '' THEN
            Y.TOT.POSN.CR2=R.REDO.FX.CCY.POSN.LAST.CR2<REDO.FX.TOTAL.POSN>
            Y.TOTAL.POSN.CR2=Y.TOT.POSN.CR2+ Y.TOD.BUY.POSN.CR2 -Y.SELL.POSN.CR2
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT
    IF R.REDO.FX.CCY.POSN.LAST.CR2 EQ '' THEN
        Y.TOTAL.POSN.CR2=Y.TOT.POSN.CR2+ Y.TOD.BUY.POSN.CR2 -Y.SELL.POSN.CR2
    END
RETURN

*********************
UPDATECR.REVERSAL:
*********************

*PACS00051758 - S
    IF Y.CR.CCY2 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.CR2<REDO.FX.BUY.POSITION> -= Y.CR.AMT2
        Y.TOT.POSN.CR2 = Y.TOD.TOT.POSN.CR2 - Y.CR.AMT2
    END ELSE
        R.REDO.FX.CCY.POSN.CR2<REDO.FX.SELL.POSITION> -= Y.CR.AMT2
        Y.TOT.POSN.CR2 = Y.TOD.TOT.POSN.CR2 + Y.CR.AMT2
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.CR2<REDO.FX.SELL.POSITION>=Y.SELL.POSN.CR2
    R.REDO.FX.CCY.POSN.CR2<REDO.FX.TOTAL.POSN> = Y.TOT.POSN.CR2         ;* Fix for PACS00395700 [FT REVERSE NOT UPDATING TOTAL POSITION]

    IF (R.REDO.FX.CCY.POSN.CR2<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.CR2<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.CR2<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.CR2<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID2)         ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID2,R.REDO.FX.CCY.POSN.CR2)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.CR.CCY.ID2,F.REDO.FX.CCY.POSN.CR2)
    END
RETURN

*******************
TELLERTRANSACTION:
*******************

    Y.CURR.NO = R.NEW(TT.TE.CURR.NO)
    Y.RECORD.STATUS=R.NEW(TT.TE.RECORD.STATUS)
    Y.AMT.LOCAL.1=R.NEW(TT.TE.AMOUNT.LOCAL.1)
    Y.AMT.LOCAL.2=R.NEW(TT.TE.AMOUNT.LOCAL.2)
    Y.AMT.FCY.2=R.NEW(TT.TE.AMOUNT.FCY.2)
    Y.AMT.FCY.1=R.NEW(TT.TE.AMOUNT.FCY.1)

    Y.CCY.1=R.NEW(TT.TE.CURRENCY.1)
    Y.CCY.2=R.NEW(TT.TE.CURRENCY.2)

    Y.DR.CR.MARKER=R.NEW(TT.TE.DR.CR.MARKER)
    Y.ID.TT.1=Y.CCY.1:TODAY
    Y.ID.TT.2=Y.CCY.2:TODAY

    Y.LASTWORKING.DATE=TODAY
* CALL CDT('',Y.LASTWORKING.DATE,'-1W')

*************
*CCYID
***************

*    Y.ID.TT.LAST.2=Y.CCY.2:Y.LASTWORKING.DATE
*    Y.ID.TT.LAST.1=Y.CCY.1:Y.LASTWORKING.DATE

    GOSUB TELLER.MAIN.PROCESS

RETURN

TELLER.MAIN.PROCESS:
*-------------------

    IF Y.CCY.1 NE Y.CCY.2 THEN
        IF (V$FUNCTION EQ "I" AND Y.CURR.NO EQ "") OR (V$FUNCTION EQ "D" AND Y.RECORD.STATUS EQ "RNAU") THEN
            IF Y.DR.CR.MARKER EQ "CREDIT" THEN
                GOSUB TT.CCY.1
            END
            IF Y.DR.CR.MARKER EQ "DEBIT" THEN
                GOSUB TT.CCY.2
            END
        END

* Fix for PACS00395700 [TELLER REVERSE NOT UPDATING THE CCY POSITION]

        IF (V$FUNCTION EQ "D" AND Y.RECORD.STATUS EQ "INAU") OR (V$FUNCTION EQ "D" AND Y.RECORD.STATUS EQ "INAO") OR (V$FUNCTION EQ "R" AND Y.RECORD.STATUS EQ "") THEN

* End of Fix

            IF Y.DR.CR.MARKER EQ "CREDIT" THEN
                GOSUB TT.CCY.3
            END
            IF Y.DR.CR.MARKER EQ "DEBIT" THEN
                GOSUB TT.CCY.4
            END
        END
    END
RETURN

TT.CCY.1:
*-----------
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.CR1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN.CR1=R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.CR1=R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.SELL.POSITION>
    Y.TOD.POSN.CR1 = R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.TOTAL.POSN>      ;*PACS00051758 - S/E

    IF Y.CCY.1 EQ LCCY THEN
        Y.SELL.POSN.CR1 = Y.AMT.LOCAL.1
    END ELSE
        Y.SELL.POSN.CR1 = Y.AMT.FCY.1
    END

*LASTWORKING
**************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-1C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.TT.LAST.1 = Y.CCY.1:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.LAST.1,R.REDO.FX.CCY.POSN.LAST.TT.CR1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.TT.CR1 NE '' THEN
            Y.TOTAL.POSN.TT.CR1 = R.REDO.FX.CCY.POSN.LAST.TT.CR1<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN.TT.CR1 = Y.TOTAL.POSN.TT.CR1+Y.TOD.BUY.POSN.CR1-Y.SELL.POSN.CR1
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.TT.CR1 THEN
        Y.TOTAL.POSN.TT.CR1 = 0
    END

*IF R.REDO.FX.CCY.POSN.LAST.TT.CR1 EQ '' THEN
*Y.TOT.POSN.TT.CR1 = Y.TOTAL.POSN.TT.CR1 + Y.TOD.BUY.POSN.CR1 - Y.SELL.POSN.CR1
*END

*UPDATE
*********

*PACS00051758 - S
    IF Y.CCY.1 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.BUY.POSITION> += Y.SELL.POSN.CR1
        Y.TOT.POSN.TT.CR1 = Y.TOTAL.POSN.TT.CR1 + Y.TOD.POSN.CR1 + Y.SELL.POSN.CR1
    END ELSE
        R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.SELL.POSITION> += Y.SELL.POSN.CR1
        Y.TOT.POSN.TT.CR1 = Y.TOTAL.POSN.TT.CR1 + Y.TOD.POSN.CR1 - Y.SELL.POSN.CR1
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.SELL.POSITION>=Y.SELL.POSN.CR1
    R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.TOTAL.POSN>=Y.TOT.POSN.TT.CR1

    IF (R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.CR1<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.CR1)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,F.REDO.FX.CCY.POSN.TT.CR1)
    END

*

*TT.CCY.1.BUY:
**************
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.CR2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
    Y.TOD.BUY.POSN.CR2 = R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.CR2 = R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.SELL.POSITION>
    Y.TOD.POSN.CR2 = R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.TOTAL.POSN>

    IF Y.CCY.2 EQ LCCY THEN
        Y.BUY.POSN.CR2 = Y.AMT.LOCAL.2
    END ELSE
        Y.BUY.POSN.CR2 = Y.AMT.FCY.2
    END

*LASTWORKING
*************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.TT.LAST.2 = Y.CCY.2:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.LAST.2,R.REDO.FX.CCY.POSN.LAST.TT.CR2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.TT.CR2 NE '' THEN
            Y.TOTAL.POSN.TT.CR2 = R.REDO.FX.CCY.POSN.LAST.TT.CR2<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN.TT.CR2 = Y.TOTAL.POSN.TT.CR2+Y.BUY.POSN.CR2-Y.TOD.SELL.POSN.CR2
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.TT.CR2 THEN
        Y.TOTAL.POSN.TT.CR2 = 0
    END

*IF R.REDO.FX.CCY.POSN.LAST.TT.CR2 EQ '' THEN
*Y.TOT.POSN.TT.CR2 = Y.TOTAL.POSN.TT.CR2+Y.BUY.POSN.CR2-Y.TOD.SELL.POSN.CR2
*END

*UPDATE
*********

*PACS00051758 - S
    IF Y.CCY.2 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.SELL.POSITION> += Y.BUY.POSN.CR2
        Y.TOT.POSN.TT.CR2 = Y.TOTAL.POSN.TT.CR2 + Y.TOD.POSN.CR2 - Y.BUY.POSN.CR2
    END ELSE
        R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.BUY.POSITION> += Y.BUY.POSN.CR2
        Y.TOT.POSN.TT.CR2 = Y.TOTAL.POSN.TT.CR2 + Y.TOD.POSN.CR2 + Y.BUY.POSN.CR2
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.BUY.POSITION>=Y.BUY.POSN.CR2
    R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.TOTAL.POSN>=Y.TOT.POSN.TT.CR2

    IF (R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.CR2<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.CR2)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,F.REDO.FX.CCY.POSN.TT.CR2)
    END

RETURN

**************************************
*DR.CR.MAKER:DEBIT:
****************************************

TT.CCY.2:
*********
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.DB1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN.DB1=R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.DB1=R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.SELL.POSITION>
    Y.TOD.POSN.DB1 = R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.TOTAL.POSN>      ;*PACS00051758 - S/E

    IF Y.CCY.1 EQ LCCY THEN
        Y.BUY.POSN.DB1= Y.AMT.LOCAL.1
    END ELSE
        Y.BUY.POSN.DB1= Y.AMT.FCY.1
    END

*LASTWORKING
*************
    Y.LASTWORKING.DATE=TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.TT.LAST.1 = Y.CCY.1:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.LAST.1,R.REDO.FX.CCY.POSN.LAST.TT.DB1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.TT.DB1 NE '' THEN
            Y.TOTAL.POSN.TT.DB1 = R.REDO.FX.CCY.POSN.LAST.TT.DB1<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN.TT.DB1 = Y.TOTAL.POSN.TT.DB1+Y.BUY.POSN.DB1-Y.TOD.SELL.POSN.DB1
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.TT.DB1 THEN
        Y.TOTAL.POSN.TT.DB1 = 0
    END

*IF R.REDO.FX.CCY.POSN.LAST.TT.DB1 NE '' THEN
*Y.TOT.POSN.TT.DB1 = Y.TOTAL.POSN.TT.DB1+Y.BUY.POSN.DB1-Y.TOD.SELL.POSN.DB1
*END

*UPDATE TT BUY:
***************

*PACS00051758 - S
    IF Y.CCY.1 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.SELL.POSITION> += Y.BUY.POSN.DB1
        Y.TOT.POSN.TT.DB1 = Y.TOTAL.POSN.TT.DB1+ Y.TOD.POSN.DB1 - Y.BUY.POSN.DB1
    END ELSE
        R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.BUY.POSITION> += Y.BUY.POSN.DB1
        Y.TOT.POSN.TT.DB1 = Y.TOTAL.POSN.TT.DB1 + Y.TOD.POSN.DB1 + Y.BUY.POSN.DB1
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.BUY.POSITION> = Y.BUY.POSN.DB1
    R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.TOTAL.POSN> = Y.TOT.POSN.TT.DB1

    IF (R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.DB1<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.DB1)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,F.REDO.FX.CCY.POSN.TT.DB1)
    END


*TT.CCY.2:SELL:
***************
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.DB2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN.DB2=R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.DB2=R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.SELL.POSITION>
    Y.TOD.POSN.DB2 = R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.TOTAL.POSN>      ;*PACS00051758 - S/E

    IF Y.CCY.2 EQ LCCY THEN
        Y.SELL.POSN.DB2= Y.AMT.LOCAL.2
    END ELSE
        Y.SELL.POSN.DB2= Y.AMT.FCY.2
    END

*LASTWORKING DAY:
*****************
    Y.LASTWORKING.DATE = TODAY
    Y.INIT = 1
    LOOP
    WHILE Y.INIT LE Y.CHK.DAYS
        Y.FREQ = '-':'1':'C'
        CALL CDT('',Y.LASTWORKING.DATE,Y.FREQ)
        Y.ID.TT.LAST.2=Y.CCY.2:Y.LASTWORKING.DATE
        CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.LAST.2,R.REDO.FX.CCY.POSN.LAST.TT.DB2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
        IF R.REDO.FX.CCY.POSN.LAST.TT.DB2 NE '' THEN
            Y.TOTAL.POSN.TT.DB2 = R.REDO.FX.CCY.POSN.LAST.TT.DB2<REDO.FX.TOTAL.POSN>
            Y.TOT.POSN.TT.DB2 = Y.TOTAL.POSN.TT.DB2+Y.TOD.BUY.POSN.DB2-Y.SELL.POSN.DB2
            EXIT
        END
        Y.INIT += 1 ;*AUTO R22 CODE CONVERSION
    REPEAT

    IF R.REDO.FX.CCY.POSN.TT.DB2 THEN
        Y.TOTAL.POSN.TT.DB2 = 0
    END

*IF R.REDO.FX.CCY.POSN.LAST.TT.DB2 EQ '' THEN
*Y.TOT.POSN.TT.DB2 = Y.TOTAL.POSN.TT.DB2+Y.TOD.BUY.POSN.DB2-Y.SELL.POSN.DB2
*END

*UPDATE
********

*PACS00051758 - S
    IF Y.CCY.2 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.BUY.POSITION> += Y.SELL.POSN.DB2
        Y.TOT.POSN.TT.DB2 = Y.TOTAL.POSN.TT.DB2+ Y.TOD.POSN.DB2 + Y.SELL.POSN.DB2
    END ELSE
        R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.SELL.POSITION> += Y.SELL.POSN.DB2
        Y.TOT.POSN.TT.DB2 = Y.TOTAL.POSN.TT.DB2 + Y.TOD.POSN.DB2 - Y.SELL.POSN.DB2
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.SELL.POSITION> =Y.SELL.POSN.DB2
    R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.TOTAL.POSN> = Y.TOT.POSN.TT.DB2

    IF (R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.DB2<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.DB2)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,F.REDO.FX.CCY.POSN.TT.DB2)
    END
RETURN

**************************************
*TELLER DR.CR.MARKER :CREDIT REVERSAL:
***************************************

TT.CCY.3:
********

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.RV.CR1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN.RV.CR1=R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.RV.CR1=R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN.RV.CR1= R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.TOTAL.POSN>

    IF Y.CCY.1 EQ LCCY THEN
        Y.SELL.POSN.RV.CR1= Y.AMT.LOCAL.1
    END ELSE
        Y.SELL.POSN.RV.CR1= Y.AMT.FCY.1
    END

*UPDATE TT SELL:
*****************

*PACS00051758 - S
    IF Y.CCY.1 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.BUY.POSITION> -= Y.SELL.POSN.RV.CR1
        Y.TOT.POSN.TT.RV.CR1 = Y.TOD.TOT.POSN.RV.CR1 - Y.SELL.POSN.RV.CR1
    END ELSE
        R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.SELL.POSITION> -= Y.SELL.POSN.RV.CR1
        Y.TOT.POSN.TT.RV.CR1 = Y.TOD.TOT.POSN.RV.CR1 + Y.SELL.POSN.RV.CR1
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.SELL.POSITION> = Y.SELL.POSN.RV.CR1
    R.REDO.FX.CCY.POSN.TT.RV.CR1<REDO.FX.TOTAL.POSN> = Y.TOT.POSN.TT.RV.CR1
    CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.RV.CR1)
    CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,F.REDO.FX.CCY.POSN.TT.RV.CR1)

*TT.CCY.CR.RV:BUY:
******************

    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.RV.CR2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')

    Y.TOD.BUY.POSN.RV.CR2=R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.RV.CR2=R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN.RV.CR2=R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.TOTAL.POSN>

    IF Y.CCY.2 EQ LCCY THEN
        Y.BUY.POSN.RV.CR2= Y.AMT.LOCAL.2
    END ELSE
        Y.BUY.POSN.RV.CR2= Y.AMT.FCY.2
    END

*UPDATE
********

*PACS00051758 - S
    IF Y.CCY.2 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.SELL.POSITION> -= Y.BUY.POSN.RV.CR2
        Y.TOT.POSN.TT.RV.CR2 = Y.TOD.TOT.POSN.RV.CR2 + Y.BUY.POSN.RV.CR2
    END ELSE
        R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.BUY.POSITION> -= Y.BUY.POSN.RV.CR2
        Y.TOT.POSN.TT.RV.CR2 = Y.TOD.TOT.POSN.RV.CR2 - Y.BUY.POSN.RV.CR2
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.BUY.POSITION>=Y.BUY.POSN.RV.CR2
    R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.TOTAL.POSN>=Y.TOT.POSN.TT.RV.CR2

    IF (R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.RV.CR2<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.RV.CR2)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,F.REDO.FX.CCY.POSN.TT.RV.CR2)
    END
RETURN

**************************************
*DR.CR.MAKER:DEBIT REVERSE:
****************************************
TT.CCY.4:
*********
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.RV.DB1,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
    Y.TOD.BUY.POSN.RV.DB1=R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.RV.DB1=R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN.RV.DB1=R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.TOTAL.POSN>

    IF Y.CCY.1 EQ LCCY THEN
        Y.BUY.POSN.RV.DB1 = Y.AMT.LOCAL.1
    END ELSE
        Y.BUY.POSN.RV.DB1 = Y.AMT.FCY.1
    END

*UPDATE TT BUY:
****************

*PACS00051758 - S
    IF Y.CCY.1 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.SELL.POSITION> -= Y.BUY.POSN.RV.DB1
        Y.TOT.POSN.TT.RV.DB1 = Y.TOD.TOT.POSN.RV.DB1 + Y.BUY.POSN.RV.DB1
    END ELSE
        R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.BUY.POSITION> -= Y.BUY.POSN.RV.DB1
        Y.TOT.POSN.TT.RV.DB1 = Y.TOD.TOT.POSN.RV.DB1 - Y.BUY.POSN.RV.DB1
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.BUY.POSITION> = Y.BUY.POSN.RV.DB1
    R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.TOTAL.POSN> = Y.TOT.POSN.TT.RV.DB1

    IF (R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.RV.DB1<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,R.REDO.FX.CCY.POSN.TT.RV.DB1)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.1,F.REDO.FX.CCY.POSN.TT.RV.DB1)
    END


*TT.CCY.4 SELL:
***************
    CALL F.READU(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.RV.DB2,F.REDO.FX.CCY.POSN,E.REDO.ERR,'')
    Y.TOD.BUY.POSN.RV.DB2=R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.BUY.POSITION>
    Y.TOD.SELL.POSN.RV.DB2=R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.SELL.POSITION>
    Y.TOD.TOT.POSN.RV.DB2=R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.TOTAL.POSN>

    IF Y.CCY.2 EQ LCCY THEN
        Y.SELL.POSN.RV.DB2 = Y.AMT.LOCAL.2
    END ELSE
        Y.SELL.POSN.RV.DB2 = Y.AMT.FCY.2
    END

*UPDATE TT RV DB:SELL:
************************

*PACS00051758 - S
    IF Y.CCY.2 EQ LCCY THEN
        R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.BUY.POSITION> -= Y.SELL.POSN.RV.DB2
        Y.TOT.POSN.TT.RV.DB2 = Y.TOD.TOT.POSN.RV.DB2 - Y.SELL.POSN.RV.DB2
    END ELSE
        R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.SELL.POSITION> -= Y.SELL.POSN.RV.DB2
        Y.TOT.POSN.TT.RV.DB2 = Y.TOD.TOT.POSN.RV.DB2 + Y.SELL.POSN.RV.DB2
    END
*PACS00051758 - E

*R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.SELL.POSITION>=Y.SELL.POSN.RV.DB2
    R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.TOTAL.POSN>=Y.TOT.POSN.TT.RV.DB2

    IF (R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.BUY.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.BUY.POSITION> EQ 0) AND (R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.SELL.POSITION> EQ '' OR R.REDO.FX.CCY.POSN.TT.RV.DB2<REDO.FX.SELL.POSITION> EQ 0) THEN
        CALL F.DELETE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2)  ;*PACS00157021 - S/E
    END ELSE
        CALL F.WRITE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,R.REDO.FX.CCY.POSN.TT.RV.DB2)
        CALL F.RELEASE(FN.REDO.FX.CCY.POSN,Y.ID.TT.2,F.REDO.FX.CCY.POSN.TT.RV.DB2)
    END

RETURN

*-----------*
PERF.PRE.VAL:
*-----------*

    Y.PERF.FLAG = ''

    BEGIN CASE
        CASE APPLICATION EQ 'FOREX'
            Y.PERF.DCCY = R.NEW(FX.CURRENCY.SOLD)
            Y.PERF.CCCY = R.NEW(FX.CURRENCY.BOUGHT)

        CASE APPLICATION EQ 'FUNDS.TRANSFER'
            Y.PERF.DCCY = R.NEW(FT.DEBIT.CURRENCY)
            Y.PERF.CCCY = R.NEW(FT.CREDIT.CURRENCY)

        CASE APPLICATION EQ 'TELLER'
            Y.PERF.DCCY = R.NEW(TT.TE.CURRENCY.1)
            Y.PERF.CCCY = R.NEW(TT.TE.CURRENCY.2)

    END CASE

    IF Y.PERF.DCCY EQ LCCY AND Y.PERF.CCCY EQ LCCY THEN
        Y.PERF.FLAG = '1'
    END

RETURN
END
