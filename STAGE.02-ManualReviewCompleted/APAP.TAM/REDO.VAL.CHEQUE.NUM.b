* @ValidationCode : MjoxNjMwNjMyMDgxOkNwMTI1MjoxNjgxMTI1Mjc1Mjc0OklUU1M6LTE6LTE6MDoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 10 Apr 2023 16:44:35
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
SUBROUTINE REDO.VAL.CHEQUE.NUM
*-----------------------------------------------------------------------------
*DESCRIPTION:
*------------
* This subroutine is used to validate the cheque number , Upon input of the Cheque No in the PAYMENT.STOP
*Application, the Routine has to check the PAYMENT.STOP.HIST file and if an entry is there in this file, then
*default the value .CONFIRMED. to the field .STOPPAYMENT.STATUS. (newly created local reference field).  In
*this case, rest of the fields should be made non-modifiable, and the data to the fields in the Application to be
*populated from the History file

* Input/Output:
*--------------
* IN : -NA-
* OUT : -NA-
*
* Dependencies:
*---------------
* CALLS : -NA-
* CALLED BY : -NA-
*
* Revision History:
*-----------------------------------------------------------------------------------------
*   Date               who           Reference            Description
* 27-Nov-2009          HARISH.Y                            Initial Creation
* 20-10- 2011          PRABHU N       PACS00102015
* 08-May-2012          Pradeep S      PACS00195882        Error message changed
* 10.04.2023       Conversion Tool       R22            Auto Conversion     - ! TO *,FM TO @FM, VM TO @VM, = FIRST.CHEQ.NUM + TO +=, F TO CACHE
* 10.04.2023       Shanmugapriya M       R22            Manual Conversion   - No changes
*
*------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.PAYMENT.STOP
    $INSERT I_F.PAYMENT.STOP.HIST
*$INSERT I_F.CHEQUES.STOPPED ;*Tus S/E
    $INSERT I_F.ACCOUNT
    $INSERT I_F.FT.COMMISSION.TYPE
*$INSERT I_F.CHEQUES.PRESENTED ;*Tus S/E
    $INSERT I_F.CHEQUE.REGISTER
    $INSERT I_F.REDO.PAYMENT.STOP.ACCOUNT
    $INSERT I_F.REDO.CHARGE.TYPE
    $INSERT I_EB.EXTERNAL.COMMON
    $INSERT I_F.STOCK.ENTRY
    $INSERT I_F.CHEQUE.REGISTER.SUPPLEMENT ;*Tus S/E
    $INSERT I_F.CHEQUE.TYPE.ACCOUNT ;*Tus S/E

    IF MESSAGE EQ 'VAL' THEN
        RETURN
    END
    GOSUB INIT

    GOSUB PROCESSCHEQ
    GOSUB PROCESS1

RETURN

***************
INIT:
**************
    Y.SYSTEM = ''
    Y.ACC.ID = ''
    ACC.ID = ''
    ALL.FIRST.CHEQ.NUM = ''
    CHQ.OCCUR = ''
    START.COUNT = ''
    FIRST.CHEQ.NUM = ''
    LAST.CHEQ.NUM = ''
    STOP.CHEQUE.ID = ''
    R.STOP.CHEQUE = ''
    Y.VALUE = ''
*Tus Start
*FN.CHEQUES.STOP = 'F.CHEQUES.STOPPED'
*F.CHEQUES.STOP = ''
*CALL OPF(FN.CHEQUES.STOP,F.CHEQUES.STOP)

*FN.CHEQUES.PRESENTED = 'F.CHEQUES.PRESENTED'
*F.CHEQUES.PRESENTED = ''
*CALL OPF(FN.CHEQUES.PRESENTED,F.CHEQUES.PRESENTED)

    FN.CHEQUE.REGISTER.SUPPLEMENT="F.CHEQUE.REGISTER.SUPPLEMENT"
    F.CHEQUE.REGISTER.SUPPLEMENT=""
    CALL OPF(FN.CHEQUE.REGISTER.SUPPLEMENT,F.CHEQUE.REGISTER.SUPPLEMENT)

    FN.CHEQUE.TYPE.ACCOUNT = "FBNK.CHEQUE.TYPE.ACCOUNT"
    F.CHEQUE.TYPE.ACCOUNT = ""
    CALL OPF(FN.CHEQUE.TYPE.ACCOUNT,F.CHEQUE.TYPE.ACCOUNT)

*Tus End

    FN.CHEQUE.REGISTER = 'F.CHEQUE.REGISTER'
    F.CHEQUE.REGISTER = ''
    CALL OPF(FN.CHEQUE.REGISTER,F.CHEQUE.REGISTER)


    FN.REDO.CHARGE.TYPE = 'F.REDO.CHARGE.TYPE'
    F.REDO.CHARGE.TYPE = ''
    CALL OPF(FN.REDO.CHARGE.TYPE,F.REDO.CHARGE.TYPE)

    FN.FTTC = 'F.FT.COMMISSION.TYPE'
    F.FTTC = ''
    CALL OPF(FN.FTTC,F.FTTC)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    FN.STK.FILE = 'F.REDO.SAVE.STOCK.DETAILS'
    F.STK.FILE = ''
    CALL OPF(FN.STK.FILE,F.STK.FILE)

    FN.STK.ENTRY = 'F.STOCK.ENTRY'
    F.STK.ENTRY = ''
    CALL OPF(FN.STK.ENTRY,F.STK.ENTRY)

*PACS00195882 - S
    LOC.REF.APPLICATION = "ACCOUNT"
    LOC.REF.FIELDS = "L.AC.AV.BAL"
    LOC.REF.POS = ''

    CALL MULTI.GET.LOC.REF(LOC.REF.APPLICATION, LOC.REF.FIELDS, LOC.REF.POS)

    Y.AC.AV.BAL.POS = LOC.REF.POS<1,1>
*PACS00195882 - E

RETURN

****************
PROCESSCHEQ:
****************
    Y.ACC.ID = ID.NEW
    ACC.ID = FIELD(ID.NEW,".",1)

*PACS00102015 -S                   ;** R22 Auto conversion - ! TO *
    IF EB.EXTERNAL$CHANNEL EQ 'INTERNET' THEN

        CALL F.READ(FN.STK.FILE,ACC.ID,R.STK.REC,F.STK.FILE,STK.FILE.ERR)

        IF NOT(STK.FILE.ERR) THEN
            LOOP
                REMOVE STOCK.ID FROM R.STK.REC SETTING STOCK.POS
            WHILE STOCK.ID : STOCK.POS
                CALL F.READ(FN.STK.ENTRY,STOCK.ID,R.STOCK.REC,F.STK.ENTRY,STK.ERR)
                Y.TYPE = R.STOCK.REC<STO.ENT.CHEQUE.TYPE>
            REPEAT
        END

        R.NEW(REDO.PS.ACCT.CHEQUE.TYPE)=Y.TYPE
    END
*PACS00102015 -E                           ;** R22 Auto conversion - ! TO *
    ALL.FIRST.CHEQ.NUM = R.NEW(REDO.PS.ACCT.CHEQUE.FIRST)
    CHQ.OCCUR = DCOUNT(ALL.FIRST.CHEQ.NUM,@VM)
    START.COUNT = 1

    LOOP
    WHILE START.COUNT LE CHQ.OCCUR
        IF ETEXT THEN
            EXIT
        END
        FIRST.CHEQ.NUM = R.NEW(REDO.PS.ACCT.CHEQUE.FIRST)<1,START.COUNT>
        LAST.CHEQ.NUM = R.NEW(REDO.PS.ACCT.CHEQUE.LAST)<1,START.COUNT>
        Y.VALUE = R.OLD(REDO.PS.ACCT.PAY.STOP.STATUS)<1,START.COUNT>
        Y.TYPE= R.NEW(REDO.PS.ACCT.CHEQUE.TYPE)<1,START.COUNT>
        IF LAST.CHEQ.NUM EQ '' THEN
            LAST.CHEQ.NUM = FIRST.CHEQ.NUM
        END
        LOOP
        WHILE FIRST.CHEQ.NUM LE LAST.CHEQ.NUM
            GOSUB PAID.CHEQUES
            GOSUB ISSUED.CHEQUES
            GOSUB STOPPED.CHEQUES
            FIRST.CHEQ.NUM += 1       ;** R22 Auto conversion - = FIRST.CHEQ.NUM + TO +=
        REPEAT

        START.COUNT += 1              ;** R22 Auto conversion - = START.COUNT + TO +=
    REPEAT

RETURN
*-------------------------------------------
STOPPED.CHEQUES:
*-------------------------------------------
*Tus Start
*STOP.CHEQUE.ID = ACC.ID:'*':FIRST.CHEQ.NUM
    CALL F.READ(FN.CHEQUE.TYPE.ACCOUNT,ACC.ID,REC.CHEQUE.TYPE.ACCOUNT,F.CHEQUE.TYPE.ACCOUNT,CHQ.TYPE.ERR)
    CHQ.TYPE = REC.CHEQUE.TYPE.ACCOUNT<CHQ.TYP.CHEQUE.TYPE,1>
    STOP.CHEQUE.ID = CHQ.TYPE:".":ACC.ID:".":FIRST.CHEQ.NUM

*CALL F.READ(FN.CHEQUES.STOP,STOP.CHEQUE.ID,R.STOP.CHEQUE,F.CHEQUES.STOP,CHEQUE.ERR)
    CALL F.READ(FN.CHEQUE.REGISTER.SUPPLEMENT,STOP.CHEQUE.ID,R.CHEQUE.REGISTER.SUPPLEMENT,F.CHEQUE.REGISTER.SUPPLEMENT,ERR.CH.STOPPED)
    CHQ.STATUS = R.CHEQUE.REGISTER.SUPPLEMENT<CC.CRS.STATUS>

    IF CHQ.STATUS EQ 'STOPPED' THEN
*IF NOT(CHEQUE.ERR) AND Y.VALUE EQ '' THEN
        IF NOT(ERR.CH.STOPPED) AND Y.VALUE EQ '' THEN
*IF R.STOP.CHEQUE THEN
            IF R.CHEQUE.REGISTER.SUPPLEMENT THEN
                AF = REDO.PS.ACCT.CHEQUE.FIRST
                ETEXT = 'EB-CHQ.SUSPENDED':@FM:FIRST.CHEQ.NUM
                CALL STORE.END.ERROR
            END
        END
    END ;*Tus End
RETURN
*-------------------------------------------
PAID.CHEQUES:
*-------------------------------------------
*Tus Start
    CALL F.READ(FN.CHEQUE.TYPE.ACCOUNT,R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER),REC.CHEQUE.TYPE.ACCOUNT.PRSNT, F.CHEQUE.TYPE.ACCOUNT,CHQ.TYPE.ERR.PRSNT)
    CHQ.TYPE.PRES = REC.CHEQUE.TYPE.ACCOUNT.PRSNT<CHQ.TYP.CHEQUE.TYPE,1>
*CHEQUE.PRE.ID = Y.TYPE:'.':R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER):'-':FIRST.CHEQ.NUM
    PRESENTED.CHEQUE.ID = CHQ.TYPE.PRES:".":R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER):".":FIRST.CHEQ.NUM

*R.CHEQUES.PRESENTED = ''
    R.CHEQUE.REGISTER.SUPPLEMENT.PRSNT = ''

*CALL F.READ(FN.CHEQUES.PRESENTED,CHEQUE.PRE.ID,R.CHEQUES.PRESENTED,F.CHEQUES.PRESENTED,CHEQUE.PRE.ERR)
    CALL F.READ(FN.CHEQUE.REGISTER.SUPPLEMENT,PRESENTED.CHEQUE.ID,R.CHEQUE.REGISTER.SUPPLEMENT.PRSNT,F.CHEQUE.REGISTER.SUPPLEMENT,ERR.CH.PRESENTED)
    CHQ.STATUS.PRSNT = R.CHEQUE.REGISTER.SUPPLEMENT.PRSNT<CC.CRS.STATUS>

    IF CHQ.STATUS.PRSNT EQ "PRESENTED" THEN
*IF R.CHEQUES.PRESENTED THEN
        IF R.CHEQUE.REGISTER.SUPPLEMENT.PRSNT THEN
            AF = REDO.PS.ACCT.CHEQUE.FIRST
            ETEXT = 'EB-CHQ.ALRDY.PRESENTED':@FM:FIRST.CHEQ.NUM
            CALL STORE.END.ERROR
        END
    END ;*Tus End
RETURN
*-------------------------------------------
ISSUED.CHEQUES:
*-------------------------------------------
    Y.ERROR.FLG = ''
    CHEQUE.REG.ID = Y.TYPE:'.':R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER)
    R.CHEQUES.REG = ''
    CALL F.READ(FN.CHEQUE.REGISTER,CHEQUE.REG.ID,R.CHEQUES.REGISTER,F.CHEQUE.REGISTER,Y.ERR.REG)
    IF R.CHEQUES.REGISTER THEN
        Y.CHEQ.VAL.FMT = FMT(FIRST.CHEQ.NUM,'R%30')
        Y.CHEQ.LIST = R.CHEQUES.REGISTER<CHEQUE.REG.CHEQUE.NOS>
        Y.CHE.CNT = 1
        Y.DCNT.CHEQ = DCOUNT(Y.CHEQ.LIST,@VM)
        LOOP
        WHILE Y.CHE.CNT LE Y.DCNT.CHEQ
            Y.FROM.CHE.REQ = FIELD(Y.CHEQ.LIST<1,Y.CHE.CNT>,'-',1)
            Y.TO.CHE.REQ = FIELD(Y.CHEQ.LIST<1,Y.CHE.CNT>,'-',2)
            Y.FROM.CHE.REQ = FMT(Y.FROM.CHE.REQ,'R%30')
            Y.TO.CHE.REQ =   FMT(Y.TO.CHE.REQ,'R%30')
            IF Y.TO.CHE.REQ THEN
                IF Y.CHEQ.VAL.FMT GE Y.FROM.CHE.REQ AND Y.CHEQ.VAL.FMT LE Y.TO.CHE.REQ THEN
                    Y.ERROR.FLG = '1'
                END
            END ELSE
                IF Y.CHEQ.VAL.FMT EQ Y.FROM.CHE.REQ THEN
                    Y.ERROR.FLG = '1'
                END
            END
            Y.CHE.CNT += 1                       ;** R22 Auto conversion - = Y.CHE.CNT + TO +=
        REPEAT
    END ELSE
        AF = REDO.PS.ACCT.CHEQUE.FIRST
        AV = START.COUNT
*ETEXT = 'XT-NOT.PRESENT'        ;* PACS00195882 - S/E
        ETEXT = "EB-REDO.CHQ.NOT.PRESENT":@FM:FIRST.CHEQ.NUM
        CALL STORE.END.ERROR
    END

    IF NOT(Y.ERROR.FLG) THEN
        AF = REDO.PS.ACCT.CHEQUE.FIRST
        AV = START.COUNT
        ETEXT = 'XT-NOT.PRESENT'  ;* PACS00195882 S/E
        ETEXT = "EB-REDO.CHQ.NOT.PRESENT":@FM:FIRST.CHEQ.NUM
        CALL STORE.END.ERROR
    END

RETURN

*-------------------------------------------
PROCESS1:
*-------------------------------------------
    Y.CCY.LOCAL = ''
    Y.SYSTEM = R.NEW(REDO.PS.ACCT.CHARGE.CODE)
    IF NOT(Y.SYSTEM) THEN
        Y.SYSTEM = 'CKSUSPPAGO'
    END
    CALL CACHE.READ(FN.FTTC, Y.SYSTEM, R.FTTC, Y.ERR)           ;** R22 Auto conversion - F TO CACHE
    Y.ACCT.ID = R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER)
    CALL F.READ(FN.ACCOUNT,Y.ACCT.ID,R.ACCOUNT,F.ACCOUNT,Y.ERR.ACC)
    Y.CCY.LOCAL = R.ACCOUNT<AC.CURRENCY>
    Y.AC.AV.BAL = R.ACCOUNT<AC.LOCAL.REF,Y.AC.AV.BAL.POS>     ;* PACS00195882 - S/E

    Y.COUNT.VAL = R.NEW(REDO.PS.ACCT.WAIVE.CHARGES)
    Y.COUNT = DCOUNT(Y.COUNT.VAL,@VM)
    Y.CNT = 1
    LOOP
    WHILE Y.CNT LE Y.COUNT
        IF R.NEW(REDO.PS.ACCT.WAIVE.CHARGES)<1,Y.CNT> NE 'YES' THEN
            Y.SYSTEM = R.NEW(REDO.PS.ACCT.CHARGE.CODE)<1,Y.CNT>
            IF NOT(Y.SYSTEM) THEN
                Y.SYSTEM = 'CKSUSPPAGO'
            END
            CALL CACHE.READ(FN.FTTC, Y.SYSTEM, R.FTTC, Y.ERR)                ;** R22 Auto conversion - F TO CACHE
            R.NEW(REDO.PS.ACCT.CHARGE.CODE)<1,Y.CNT> = Y.SYSTEM
            R.NEW(REDO.PS.ACCT.CHARGE.ACCOUNT)<1,Y.CNT> = R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER)
            IF Y.CCY.LOCAL THEN
                R.NEW(REDO.PS.ACCT.CHARGE.CURRENCY)<1,Y.CNT>  = Y.CCY.LOCAL
            END ELSE
                R.NEW(REDO.PS.ACCT.CHARGE.CURRENCY)<1,Y.CNT>  = R.NEW(REDO.PS.ACCT.CURRENCY)
            END
*            IF NOT(R.NEW(REDO.PS.ACCT.CHARGE.AMOUNT)<1,Y.CNT>) THEN
            R.NEW(REDO.PS.ACCT.CHARGE.AMOUNT)<1,Y.CNT> = R.FTTC<FT4.FLAT.AMT> * R.NEW(REDO.PS.ACCT.NO.OF.LEAVES)
*            END
        END ELSE
            R.NEW(REDO.PS.ACCT.CHARGE.CODE)<1,Y.CNT> = ''
            R.NEW(REDO.PS.ACCT.CHARGE.ACCOUNT)<1,Y.CNT> = ''
            R.NEW(REDO.PS.ACCT.CHARGE.CURRENCY)<1,Y.CNT>  = ''
            R.NEW(REDO.PS.ACCT.CHARGE.AMOUNT)<1,Y.CNT> = ''
        END
        Y.CNT += 1                ;** R22 Auto conversion - = Y.CNT + TO +=
    REPEAT

*PACS00195882 - S
    CURR.NO = DCOUNT(R.NEW(REDO.PS.ACCT.OVERRIDE),@VM)
    Y.TOT.CHG.AMT = SUM(R.NEW(REDO.PS.ACCT.CHARGE.AMOUNT))
    YCCY = R.NEW(REDO.PS.ACCT.CURRENCY)

    IF Y.TOT.CHG.AMT AND Y.TOT.CHG.AMT GT Y.AC.AV.BAL THEN
        YCOMP.BAL = Y.TOT.CHG.AMT - Y.AC.AV.BAL
        TEXT = "ACCT.UNAUTH.OD":@FM:YCCY:@VM:ABS(YCOMP.BAL):@VM:R.NEW(REDO.PS.ACCT.ACCOUNT.NUMBER)
        CALL STORE.OVERRIDE(CURR.NO+1)
    END

*PACS00195882 -E

RETURN
END
