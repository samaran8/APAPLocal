component APAP.TAM
# Component Isolation Definition
metamodelVersion 1.6
# -------------------------------------------------



public method redoChqReturnCharges (
)
{
    jBC: REDO.CHQ.RETURN.CHARGES
}



public method redoCompGenEnq (
)
{
    jBC: REDO.COMP.GEN.ENQ
}



public method redoCompareKey (
)
{
    jBC: REDO.COMPARE.KEY
}



public method redoComputeSecPercent (
)
{
    jBC: REDO.COMPUTE.SEC.PERCENT
}



public method redoConGetTime (
)
{
    jBC: REDO.CON.GET.TIME
}



public method redoConsularPdfGen (
    INOUT yArray string
)
{
    jBC: REDO.CONSULAR.PDF.GEN
}






public method redoConvertAccount (
    INOUT inAccId string,
    INOUT inArrId string,
    INOUT outId string,
    INOUT errText string
)
{
    jBC: REDO.CONVERT.ACCOUNT
}



public method redoConvertAzAccount (
)
{
    jBC: REDO.CONVERT.AZ.ACCOUNT
}



public method redoCrSStatusValue (
)
{
    jBC: REDO.CR.S.STATUS.VALUE
}



public method redoCreArrLimitSeq (
)
{
    jBC: REDO.CRE.ARR.LIMIT.SEQ
}



public method redoCreArrLimitSeqFields (
)
{
    jBC: REDO.CRE.ARR.LIMIT.SEQ.FIELDS
}




public method redoCreateArrangementFieldsCollDeFs (
)
{
    jBC: REDO.CREATE.ARRANGEMENT.FIELDS.COLL.DE.FS
}



public method redoCreateArrangementFieldsCollTpDi (
)
{
    jBC: REDO.CREATE.ARRANGEMENT.FIELDS.COLL.TP.DI
}



public method redoCreateArrangementFieldsSecDis (
)
{
    jBC: REDO.CREATE.ARRANGEMENT.FIELDS.SEC.DIS
}



public method redoCreateArrangementId (
)
{
    jBC: REDO.CREATE.ARRANGEMENT.ID
}



public method redoCreditTransTeller (
)
{
    jBC: REDO.CREDIT.TRANS.TELLER
}



public method redoCreditTransTellerFields (
)
{
    jBC: REDO.CREDIT.TRANS.TELLER.FIELDS
}



public method redoCrmDocumentationProcess (
    INOUT yReqId string
)
{
    jBC: REDO.CRM.DOCUMENTATION.PROCESS
}



public method redoCrmDocumentationProcessLoad (
)
{
    jBC: REDO.CRM.DOCUMENTATION.PROCESS.LOAD
}



public method redoCurrencyCheck (
)
{
    jBC: REDO.CURRENCY.CHECK
}



public method redoDPendCharges (
)
{
    jBC: REDO.D.PEND.CHARGES
}



public method redoDcFttcSelAdj (
    INOUT enqData string
)
{
    jBC: REDO.DC.FTTC.SEL.ADJ
}



public method redoDcStlmtErrCode (
)
{
    jBC: REDO.DC.STLMT.ERR.CODE
}



public method redoDealRejReason (
    INOUT yRejCode string
)
{
    jBC: REDO.DEAL.REJ.REASON
}



public method redoDealRelName (
    INOUT yOutput string
)
{
    jBC: REDO.DEAL.REL.NAME
}



public method redoDefCustomerType (
)
{
    jBC: REDO.DEF.CUSTOMER.TYPE
}



public method redoDefaultChannelAccess (
)
{
    jBC: REDO.DEFAULT.CHANNEL.ACCESS
}



public method redoDisbChain (
)
{
    jBC: REDO.DISB.CHAIN
}



public method redoDisbChainFields (
)
{
    jBC: REDO.DISB.CHAIN.FIELDS
}



public method redoDisbChar (
    INOUT dataOut string
)
{
    jBC: REDO.DISB.CHAR
}



public method redoEncSapKey (
)
{
    jBC: REDO.ENC.SAP.KEY
}



public method redoEncUserpwd (
)
{
    jBC: REDO.ENC.USERPWD
}





public method redoFileDateProcess (
)
{
    jBC: REDO.FILE.DATE.PROCESS
}



public method redoFileDateProcessFields (
)
{
    jBC: REDO.FILE.DATE.PROCESS.FIELDS
}



public method redoFindCustOfac (
    INOUT ofacTipoCl string,
    INOUT yCustName string,
    INOUT ofacGivenNames string,
    INOUT ofacFamilyName string,
    INOUT ofacCusName1 string,
    INOUT ofacCusName2 string,
    INOUT ofacCusText string,
    INOUT ofacRet string
)
{
    jBC: REDO.FIND.CUST.OFAC
}



public method redoForexSellSeqNumFields (
)
{
    jBC: REDO.FOREX.SELL.SEQ.NUM.FIELDS
}



public method redoForexSellSeqNumId (
)
{
    jBC: REDO.FOREX.SELL.SEQ.NUM.ID
}






public method redoForexSeqNum (
)
{
    jBC: REDO.FOREX.SEQ.NUM
}



public method redoFormOfPaymentFields (
)
{
    jBC: REDO.FORM.OF.PAYMENT.FIELDS
}



public method redoFormatChqDate (
    INOUT yDate string
)
{
    jBC: REDO.FORMAT.CHQ.DATE
}



public method redoFormatMessage (
    INOUT yMessage string,
    INOUT yDataOrder string,
    INOUT yValues string,
    INOUT yMessageFormat string
)
{
    jBC: REDO.FORMAT.MESSAGE
}



public method redoFrontComplaintsFields (
)
{
    jBC: REDO.FRONT.COMPLAINTS.FIELDS
}



public method redoFrontComplaintsId (
)
{
    jBC: REDO.FRONT.COMPLAINTS.ID
}





public method redoFrontRequests (
)
{
    jBC: REDO.FRONT.REQUESTS
}



public method redoFtChargeAmt (
)
{
    jBC: REDO.FT.CHARGE.AMT
}



public method redoFtDefCommChg (
)
{
    jBC: REDO.FT.DEF.COMM.CHG
}



public method redoFtDsName (
    INOUT yFieldName string
)
{
    jBC: REDO.FT.DS.NAME
}



public method redoFtTtTransactionId (
)
{
    jBC: REDO.FT.TT.TRANSACTION.ID
}



public method redoFtUpdateAchParameter (
    INOUT yFtId string,
    INOUT yFtStatus string
)
{
    jBC: REDO.FT.UPDATE.ACH.PARAMETER
}



public method redoFxCcyPosn (
)
{
    jBC: REDO.FX.CCY.POSN
}



public method redoGarCreditProcessFields (
)
{
    jBC: REDO.GAR.CREDIT.PROCESS.FIELDS
}



public method redoGarGenTaxEntry (
)
{
    jBC: REDO.GAR.GEN.TAX.ENTRY
}



public method redoGarLockAle (
)
{
    jBC: REDO.GAR.LOCK.ALE
}



public method redoGenPaymColSlip (
)
{
    jBC: REDO.GEN.PAYM.COL.SLIP
}



public method redoGenTaxEntry (
)
{
    jBC: REDO.GEN.TAX.ENTRY
}





public method redoGenerateWofAccountingSelect (
)
{
    jBC: REDO.GENERATE.WOF.ACCOUNTING.SELECT
}




public method redoGetAccountIntRate (
)
{
    jBC: REDO.GET.ACCOUNT.INT.RATE
}



public method redoGetBenficName (
    INOUT varBenName string
)
{
    jBC: REDO.GET.BENFIC.NAME
}



public method redoGetBenficName2 (
    INOUT varBenName2 string
)
{
    jBC: REDO.GET.BENFIC.NAME2
}

