* @ValidationCode : Mjo4MTU5OTkyNDg6Q3AxMjUyOjE2ODEzNjM1OTc1OTg6SVRTUzotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 13 Apr 2023 10:56:37
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.TRANS.PROCESS(BUILD.LIST)
*-------------------------------------------------------------------------
* Company Name  : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* Developed By  : Riyas
* Program Name  : REDO.B.TRANS.PROCESS
* ODR           : ODR-2010-08-0031
*------------------------------------------------------------------------------------------
*DESCRIPTION  : REDO.B.TRANS.PROCESS Multithreading routine responsible for generates
*FUNDS.TRANSFER Record
*------------------------------------------------------------------------------------------
* In parameter : None
* out parameter : None
*------------------------------------------------------------------------------------------
* Modification History :
*------------------------------------------------------------------------------------------
* DATE             WHO                         REFERENCE            DESCRIPTION
*==============    ==============              =================    =================
* 19.10.2010       Sakthi Sellappillai         ODR-2010-08-0031     INITIAL CREATION
* Date                   who                   Reference              
* 13-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION - FM TO @FM AND VM TO @VM AND COMMENTED I_F.FUNDS.TRANSFER
* 13-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.ACCOUNT
    $INSERT I_BATCH.FILES
    $INSERT I_REDO.B.TRANS.PROCESS.COMMON
    $INSERT I_F.REDO.SUPPLIER.PAYMENT
    $INSERT I_F.REDO.FILE.DATE.PROCESS
    $INSERT I_F.REDO.NCF.ISSUED
    $INSERT I_F.REDO.L.NCF.UNMAPPED
*   $INSERT I_F.FUNDS.TRANSFER  ;*R22 AUTO CONVERSTION COMMENTED I_F.FUNDS.TRANSFER 
    $INSERT I_F.REDO.L.NCF.STATUS
    $INSERT I_F.REDO.L.NCF.CANCELLED

    GOSUB INIT.PROCESS
    GOSUB GOEND
RETURN

*------------------------------------------------------------------------------------------
INIT.PROCESS:
*------------------------------------------------------------------------------------------


    Y.PROCESSED.AMT = 0
    Y.REMAIN.AMT = 0
    CALL F.READ(FN.REDO.FILE.DATE.PROCESS,BUILD.LIST,R.REDO.FILE.DATE.PROCESS,F.REDO.FILE.DATE.PROCESS,REDO.FILE.DATE.PROCESS.ERR)
    Y.SUPPLIER.PAY.LIST = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.PAY.RECORD.ID>
    Y.FILE.TOT.AMT  = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.FILE.TOT.AMOUNT>
    Y.DR.ACCT.STATUS = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.DEB.ACCT.STATUS>
    Y.OFS.PROCESS = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.OFS.PROCESS>
    Y.PARENT.FT.REF = R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.PARENT.FT.REF>
    CHANGE @VM TO @FM IN Y.SUPPLIER.PAY.LIST
    IF Y.SUPPLIER.PAY.LIST THEN
        Y.SUPPLIER.PAY.CNT = DCOUNT(Y.SUPPLIER.PAY.LIST,@FM)
        Y.SUP.PAY.INIT = 1
        LOOP
            Y.RECORD.DETAILS = '';Y.FAIL.CNT='';Y.SUCCESS.CNT='';
            REMOVE Y.REDO.SUPPLIER.ID FROM Y.SUPPLIER.PAY.LIST SETTING Y.OFS.MSG.POS
        WHILE Y.REDO.SUPPLIER.ID : Y.OFS.MSG.POS
            Y.CR.ACCT.STATUS = ''
*            Y.DR.ACCT.STATUS = ''
            Y.FILE.CURRENCY = FIELD(Y.REDO.SUPPLIER.ID,'.',4)
            Y.FILE.DEB.ACCT = FIELD(Y.REDO.SUPPLIER.ID,'.',5)
            CALL F.READ(FN.ACCOUNT,Y.FILE.DEB.ACCT,R.ACCOUNT,F.ACCOUNT,ACCOUNT.ERR)
            Y.FILE.DEB.CUST = R.ACCOUNT<AC.CUSTOMER>
            GOSUB PROCESS
        REPEAT
    END
    R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.FILE.PROCESS.AMT> = Y.PROCESSED.AMT
    Y.REMAIN.AMT  = Y.PROCESSED.AMT

    IF Y.REMAIN.AMT GT 0 AND Y.OFS.PROCESS EQ 'SUCCESS' THEN
        GOSUB BAL.SETTLE.PARA
    END
    R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.OFS.PROCESS> =  'COMPLETED'
    R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.FILE.PROCESS.AMT> = 0
    CALL F.WRITE(FN.REDO.FILE.DATE.PROCESS,BUILD.LIST,R.REDO.FILE.DATE.PROCESS)

RETURN
*------------------------------------------------------------------------------------------
PROCESS:
*------------------------------------------------------------------------------------------


    CALL F.READ(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT,F.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.PAY.ERR)
    Y.BANK.CODE        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BANK.CODE>
    IF Y.BANK.CODE THEN
        Y.FILE.TYPE =  'SUPPLIER'
        GOSUB GET.SUPPLIER.PROCESS
    END ELSE
        Y.FILE.TYPE =  'PAYROLL'
        GOSUB GET.PAYROLL.PROCESS
    END
RETURN
*------------------------------------------------------------------------------------------
GET.PAYROLL.PROCESS:
*------------------------------------------------------------------------------------------
    Y.FILE.NAME        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.FILE.NAME>
    Y.SOURCE.ACCOUNT   =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.SOURCE.ACCOUNT>
    Y.PAYMENT.DATE     =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.PAYMENT.DATE>
    Y.BEN.ACCOUNT      =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BEN.ACCOUNT>
    Y.IDENTIFY.TYPE    =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.IDENTIFY.TYPE>
    Y.BEN.ID.NO        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BEN.ID.NO>
    Y.BEN.CUSTOMER     =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BEN.CUSTOMER>
    Y.CURRENCY         =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.CURRENCY>
    Y.AMOUNT           =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.AMOUNT>
* Y.FILE.TOT.AMT     =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.FILE.TOT.AMT>
    Y.SUP.PAY.OFS.MESSAGE.ID = R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.OFS.MESSAGE.ID>

    IF Y.SUP.PAY.OFS.MESSAGE.ID THEN
        RETURN
    END

    IF Y.DR.ACCT.STATUS THEN
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.DR.STATUS> = Y.DR.ACCT.STATUS
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END
    Y.DR.ACCT.STATUS.1 = ''
    IF Y.FILE.CURRENCY NE Y.CURRENCY THEN
        Y.DR.ACCT.STATUS.1 = "CURRENCY MISMATCH"
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.DR.STATUS> = Y.DR.ACCT.STATUS.1
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END
    Y.DR.ACCT.STATUS.2 = ''
    IF Y.FILE.DEB.ACCT NE Y.SOURCE.ACCOUNT THEN
        Y.DR.ACCT.STATUS.2 = "ACCOUNT MISMATCH"
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.DR.STATUS> = Y.DR.ACCT.STATUS.2
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END



    CALL REDO.UPLOAD.CREDIT.ACCOUNT.CHECK(Y.BEN.ACCOUNT,Y.FILE.TYPE,Y.REDO.SUPPLIER.ID,Y.CR.ACCT.STATUS,Y.BEN.ID)

    IF Y.CR.ACCT.STATUS THEN
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.CR.STATUS> = Y.CR.ACCT.STATUS
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END
    R.FUNDS.TRANSFER.REC = ''
    R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO> = Y.PAYROLL.INT.ACCT
    R.FUNDS.TRANSFER.REC<FT.DEBIT.VALUE.DATE> = Y.PAYMENT.DATE
    R.FUNDS.TRANSFER.REC<FT.CREDIT.VALUE.DATE> = Y.PAYMENT.DATE
    R.FUNDS.TRANSFER.REC<FT.DEBIT.CURRENCY> = Y.CURRENCY
    R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT> = Y.AMOUNT
    R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO> = Y.BEN.ACCOUNT
    R.FUNDS.TRANSFER.REC<FT.ORDERING.CUST>  = Y.BEN.CUSTOMER
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.COMMENTS.POS>= BUILD.LIST
*    R.FUNDS.TRANSFER.REC<FT.BENEFICIARY.ID> = Y.BEN.ID
*    R.FUNDS.TRANSFER.REC<FT.CHARGES.ACCT.NO>= Y.PAYROLL.INT.ACCT
*    R.FUNDS.TRANSFER.REC<FT.COMMISSION.CODE>= 'DEBIT PLUS CHARGES'
*    R.FUNDS.TRANSFER.REC<FT.PROFIT.CENTRE.DEPT> = 1
*   R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.ACH.B.NAM.POS,1> = Y.BEN.CUSTOMER
*   R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.IDEN.TYPE.POS,1> = Y.IDENTIFY.TYPE


    APP.NAME = 'FUNDS.TRANSFER'
    OFS.FUNCTION = 'I'
    OFSVERSION='FUNDS.TRANSFER,REDO.PAYROLL.TRANS'
    PROCESS = 'PROCESS'
    GTS.MODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    R.APP.RECORD=R.FUNDS.TRANSFER.REC
    OFS.STRING=''
    OFS.MSG.ID = ''
    OFS.ERR = ''
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
    OFS.SOURCE.ID<1> = 'OFSUPDATE'
    OFS.RESP   = ""
    TXN.COMMIT = ""
    CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,OFS.RESP,TXN.COMMIT)

    M.VALIDA = FIELD(OFS.RESP,"//",1)
    YERROR.POS = INDEX(M.VALIDA,"-1",1)

    IF YERROR.POS GT 0 THEN
        DATA.OUT<1> = "TRANSACTION FAILURE"
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.CR.STATUS> = DATA.OUT<1>
    END ELSE
        DATA.OUT<1> = "SUCCESS"
        Y.FT.ID = FIELD(M.VALIDA,"//",1)
        DATA.OUT<2> = Y.FT.ID
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.OFS.MESSAGE.ID> = DATA.OUT<2>
        Y.OFS.MSG.ID.VAL<-1>= DATA.OUT<2>
    END
    CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)

RETURN
*------------------------------------------------------------------------------------------
GET.SUPPLIER.PROCESS:
*------------------------------------------------------------------------------------------
    Y.FILE.NAME        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.FILE.NAME>
    Y.SOURCE.ACCOUNT   =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.SOURCE.ACCOUNT>
    Y.PAYMENT.DATE     =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.PAYMENT.DATE>
    Y.BANK.CODE        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BANK.CODE>
    Y.BANK.NAME        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BANK.NAME>
    Y.BEN.ACCOUNT      =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BEN.ACCOUNT>
    Y.IDENTIFY.TYPE    =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.IDENTIFY.TYPE>
    Y.BEN.ID.NO        =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BEN.ID.NO>
    Y.BEN.CUSTOMER     =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.BEN.CUSTOMER>
    Y.INVOICE.NO       =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.INVOICE.NO>
    Y.NCF.NO           =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.NCF.NO>
    Y.CURRENCY         =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.CURRENCY>
    Y.AMOUNT           =  R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.AMOUNT>
    Y.SUP.PAY.OFS.MESSAGE.ID = R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.OFS.MESSAGE.ID>

    IF Y.SUP.PAY.OFS.MESSAGE.ID THEN
        RETURN
    END

    IF Y.DR.ACCT.STATUS THEN
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.DR.STATUS> = Y.DR.ACCT.STATUS
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END

    Y.DR.ACCT.STATUS.1 = ''
    IF Y.FILE.CURRENCY NE Y.CURRENCY THEN
        Y.DR.ACCT.STATUS.1 = "CURRENCY MISMATCH"
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.DR.STATUS> = Y.DR.ACCT.STATUS.1
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END
    Y.DR.ACCT.STATUS.2 = ''
    IF Y.FILE.DEB.ACCT NE Y.SOURCE.ACCOUNT THEN
        Y.DR.ACCT.STATUS.2 = "ACCOUNT MISMATCH"
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.DR.STATUS> = Y.DR.ACCT.STATUS.2
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END


    CALL REDO.UPLOAD.CREDIT.ACCOUNT.CHECK(Y.BEN.ACCOUNT,Y.FILE.TYPE,Y.REDO.SUPPLIER.ID,Y.CR.ACCT.STATUS,Y.BEN.ID)

    IF Y.CR.ACCT.STATUS THEN
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.CR.STATUS> = Y.CR.ACCT.STATUS
        CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
        Y.PROCESSED.AMT + = Y.AMOUNT
        RETURN
    END


    R.FUNDS.TRANSFER.REC = ''
    R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO> = Y.SUPPLIER.INT.ACCT
    R.FUNDS.TRANSFER.REC<FT.DEBIT.VALUE.DATE> = Y.PAYMENT.DATE
    R.FUNDS.TRANSFER.REC<FT.CREDIT.VALUE.DATE> = Y.PAYMENT.DATE
    R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO> = Y.SUP.CR.ACCT.NO
    R.FUNDS.TRANSFER.REC<FT.DEBIT.CURRENCY> = Y.CURRENCY
    R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT> = Y.AMOUNT
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.ACH.B.ACC.POS,1> = Y.BEN.ACCOUNT
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.ACH.PART.POS,1> = Y.BANK.CODE
    R.FUNDS.TRANSFER.REC<FT.ORDERING.CUST>  = Y.BEN.CUSTOMER
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.ACH.PART.ID.POS,1> = Y.BEN.ID.NO
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.ACH.B.NAM.POS,1> = Y.BEN.CUSTOMER
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.NCF.NUM.POS,1> = Y.NCF.NO
*   R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.IDEN.TYPE.POS,1> = Y.IDENTIFY.TYPE
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.FT.INV.NO.POS,1> = Y.INVOICE.NO
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.COMMENTS.POS>= BUILD.LIST
    R.FUNDS.TRANSFER.REC<FT.BENEFICIARY.ID> = Y.BEN.ID
*   R.FUNDS.TRANSFER.REC<FT.CHARGES.ACCT.NO>= Y.SUPPLIER.INT.ACCT
*   R.FUNDS.TRANSFER.REC<FT.COMMISSION.CODE>= 'DEBIT PLUS CHARGES'
*   R.FUNDS.TRANSFER.REC<FT.PROFIT.CENTRE.DEPT> = 1
*

    APP.NAME = 'FUNDS.TRANSFER'
    OFS.FUNCTION = 'I'
    OFSVERSION='FUNDS.TRANSFER,REDO.OTHER.BNK.TRANS'
    PROCESS = 'PROCESS'
    GTS.MODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    R.APP.RECORD=R.FUNDS.TRANSFER.REC
    OFS.STRING=''
    OFS.MSG.ID = ''
    OFS.ERR = ''
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)

    OFS.SOURCE.ID<1> = 'OFSUPDATE'
    OFS.RESP   = ""
    TXN.COMMIT = ""
    CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,OFS.RESP,TXN.COMMIT)

    M.VALIDA = FIELD(OFS.RESP,"//",1)
    YERROR.POS = INDEX(M.VALIDA,"-1",1)

    IF YERROR.POS GT 0 THEN
        DATA.OUT<1> = "TRANSACTION FAILURE"
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.CR.STATUS> = DATA.OUT<1>
    END ELSE
        DATA.OUT<1> = "SUCCESS"
        Y.FT.ID = FIELD(M.VALIDA,"//",1)
        DATA.OUT<2> = Y.FT.ID
        R.REDO.SUPPLIER.PAYMENT<REDO.SUP.PAY.OFS.MESSAGE.ID> = DATA.OUT<2>
        Y.OFS.MSG.ID.VAL<-1>= DATA.OUT<2>
    END

    CALL F.WRITE(FN.REDO.SUPPLIER.PAYMENT,Y.REDO.SUPPLIER.ID,R.REDO.SUPPLIER.PAYMENT)
RETURN
*-------------------------
BAL.SETTLE.PARA:
*-------------------------


    R.FUNDS.TRANSFER.REC = ''
    Y.DEBIT.INT.ACCT = ''
    IF Y.BANK.CODE THEN
        Y.DEBIT.INT.ACCT = Y.SUPPLIER.INT.ACCT
        Y.PERCENTAGE     = Y.PAY.COM.PERCENT
        Y.CATEG.ACCOUNT  = Y.PAY.CATEG.ACCOUNT
    END ELSE
        Y.DEBIT.INT.ACCT = Y.PAYROLL.INT.ACCT
        Y.PERCENTAGE     = Y.SUP.COM.PERCENT
        Y.CATEG.ACCOUNT  = Y.SUP.CATEG.ACCOUNT

    END

    R.FUNDS.TRANSFER.REC<FT.DEBIT.VALUE.DATE>  = TODAY
    R.FUNDS.TRANSFER.REC<FT.CREDIT.VALUE.DATE> = TODAY
    R.FUNDS.TRANSFER.REC<FT.DEBIT.CURRENCY>    = Y.FILE.CURRENCY
    R.FUNDS.TRANSFER.REC<FT.ORDERING.CUST>     = Y.FILE.DEB.CUST
    R.FUNDS.TRANSFER.REC<FT.LOCAL.REF,Y.LOC.COMMENTS.POS>= BUILD.LIST

    OFS.SOURCE.ID = 'OFSUPDATE'
    APP.NAME = 'FUNDS.TRANSFER'
    OFS.FUNCTION = 'I'
    PROCESS = 'PROCESS'
    GTS.MODE=''
    NO.OF.AUTH='0'
    TRANSACTION.ID= ''
    OFS.STRING=''
    OFS.MSG.ID = ''
    OFS.ERR = ''
    Y.COMMISSION.AMT = ''



* Settle Back the Failed Transaction Amount from Internal Account to Customer Account

    R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = Y.RET.TXN.CODE
    R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO>    = Y.DEBIT.INT.ACCT
    R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO>   = Y.FILE.DEB.ACCT
    R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT>     = Y.REMAIN.AMT
    R.APP.RECORD = R.FUNDS.TRANSFER.REC
    OFSVERSION   = 'FUNDS.TRANSFER,AI.REDO.FILE.AMT.ADJUSTMENT'
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
    OFS.RESP   = ""
    TXN.COMMIT = ""
    CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,OFS.RESP,TXN.COMMIT)


* Settle Back the Complete Tax Amount from Tax Account to Customer Account

    CALL F.READ(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER.SETTLE,F.FUNDS.TRANSFER,FT.ERR)
    Y.PARENT.TAX.AMT  = R.FUNDS.TRANSFER.SETTLE<FT.LOCAL.REF,Y.L.TT.TAX.AMT.POS>
    Y.FT.TXN.DATE     = R.FUNDS.TRANSFER.SETTLE<FT.DATE.TIME>
    Y.FT.TXN.DATE     = 20:Y.FT.TXN.DATE[1,6]

    R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = Y.RET.TAX.CODE
    R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO>    = Y.CATEG.ACCOUNT
    R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO>   = Y.FILE.DEB.ACCT
    R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT>     = Y.PARENT.TAX.AMT
    R.APP.RECORD = R.FUNDS.TRANSFER.REC
    OFSVERSION = 'FUNDS.TRANSFER,AI.REDO.FILE.TAX.SETTLE'
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
    OFS.RESP   = ""
    TXN.COMMIT = ""
    CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,OFS.RESP,TXN.COMMIT)


* Generate the New Transaction so settle the Tax Amount for Successful Transactions

    Y.SUCCESS.AMT     = Y.FILE.TOT.AMT - Y.REMAIN.AMT
    IF Y.SUCCESS.AMT GT 0 THEN
        Y.SUCCESS.TAX.AMT = Y.SUCCESS.AMT * (Y.PERCENTAGE/100)
        CALL EB.ROUND.AMOUNT(Y.FILE.CURRENCY,Y.SUCCESS.TAX.AMT,"","")
        R.FUNDS.TRANSFER.REC<FT.TRANSACTION.TYPE> = ''
        R.FUNDS.TRANSFER.REC<FT.DEBIT.ACCT.NO>    = Y.FILE.DEB.ACCT
        R.FUNDS.TRANSFER.REC<FT.CREDIT.ACCT.NO>   = Y.CATEG.ACCOUNT
        R.FUNDS.TRANSFER.REC<FT.DEBIT.AMOUNT>     = Y.SUCCESS.TAX.AMT
        R.APP.RECORD = R.FUNDS.TRANSFER.REC
        OFSVERSION   = 'FUNDS.TRANSFER,AI.REDO.FILE.TAX.GENERATION'
        CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,PROCESS,OFSVERSION,GTS.MODE,NO.OF.AUTH,TRANSACTION.ID,R.APP.RECORD,OFS.STRING)
        OFS.RESP   = ""
        TXN.COMMIT = ""
        CALL OFS.CALL.BULK.MANAGER(OFS.SOURCE.ID,OFS.STRING,OFS.RESP,TXN.COMMIT)

        M.VALIDA = FIELD(OFS.RESP,"//",1)
        Y.FT.ID = FIELD(M.VALIDA,"//",1)
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,-1>  = Y.FT.ID
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,-1> = Y.SUCCESS.TAX.AMT
    END ELSE
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.FT,-1>  = 0
        R.REDO.FILE.DATE.PROCESS<REDO.FILE.PRO.ADJUST.TAX.AMT,-1> = 0
        R.FUNDS.TRANSFER.SETTLE<FT.LOCAL.REF,Y.L.TT.TAX.AMT.POS>  = 0
        R.FUNDS.TRANSFER.SETTLE<FT.LOCAL.REF,POS.L.NCF.TAX.NUM>   = ''
        CALL F.WRITE(FN.FUNDS.TRANSFER,Y.PARENT.FT.REF,R.FUNDS.TRANSFER.SETTLE)
        GOSUB NCF.UPDATE.PARA
    END

RETURN

*-----------------------------------------------------------------------------
NCF.UPDATE.PARA:
*-----------------------------------------------------------------------------


    REC.ID = Y.FILE.DEB.CUST:'.':Y.FT.TXN.DATE:'.':Y.PARENT.FT.REF
* Delete the Existing NCF Record

    CALL F.READ(FN.REDO.NCF.ISSUED,REC.ID,R.REDO.NCF.ISSUED,F.REDO.NCF.ISSUED,NCF.ISS.ERR)

    IF R.REDO.NCF.ISSUED THEN
        CALL F.DELETE(FN.REDO.NCF.ISSUED,REC.ID)
    END ELSE
        CALL F.READ(FN.REDO.L.NCF.UNMAPPED,REC.ID,R.REDO.L.NCF.UNMAPPED,F.REDO.L.NCF.UNMAPPED,NCF.UNMAP.ERR)
        IF R.REDO.L.NCF.UNMAPPED ELSE
            RETURN
        END
        CALL F.DELETE(FN.REDO.L.NCF.UNMAPPED,REC.ID)
    END

* Moved to NCF Cancellation Table

    CALL F.READ(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED,F.REDO.L.NCF.CANCELLED,ERR.CANCEL)
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.ID> = R.REDO.NCF.ISSUED<ST.IS.TXN.ID>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TXN.TYPE> = R.REDO.NCF.ISSUED<ST.IS.TXN.TYPE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.DATE> = R.REDO.NCF.ISSUED<ST.IS.DATE>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CHARGE.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.CHARGE.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.TAX.AMOUNT> = R.REDO.NCF.ISSUED<ST.IS.TAX.AMOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.NCF> = R.REDO.NCF.ISSUED<ST.IS.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.MODIFIED.NCF> = R.REDO.NCF.ISSUED<ST.IS.MODIFIED.NCF>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.ACCOUNT> = R.REDO.NCF.ISSUED<ST.IS.ACCOUNT>
    R.REDO.L.NCF.CANCELLED<NCF.CAN.CAN.TYPE>= '05'
    CALL F.WRITE(FN.REDO.L.NCF.CANCELLED,REC.ID,R.REDO.L.NCF.CANCELLED)

* Updating NCF status

    CALL F.READ(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS,F.REDO.L.NCF.STATUS,ERR.STATUS)
    IF R.REDO.L.NCF.STATUS THEN
        R.REDO.L.NCF.STATUS<NCF.ST.STATUS>='CANCELLED'
        CALL F.WRITE(FN.REDO.L.NCF.STATUS,REC.ID,R.REDO.L.NCF.STATUS)
    END
RETURN
*-------------------------
GOEND:
*-----------------------------
END
*-----------------------------------------*END OF SUBROUTINE*------------------------------
