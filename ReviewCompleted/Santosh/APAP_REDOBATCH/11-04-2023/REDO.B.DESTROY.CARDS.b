* @ValidationCode : MjotMTgxNDg4NjcwMzpDcDEyNTI6MTY4MTE5MDEzNzk4NDpJVFNTOi0xOi0xOjA6MDpmYWxzZTpOL0E6UjIxX0FNUi4wOi0xOi0x
* @ValidationInfo : Timestamp         : 11 Apr 2023 10:45:37
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.B.DESTROY.CARDS(Y.DH.SEL.LIST)
********************************************************
* COMPANY NAME: ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
* DEVELOPED BY: Swaminathan.S.R
* PROGRAM NAME: REDO.B.DESTROY.CARDS
*------------------------------------------------------------------------------
*DESCRIPTION:This routine is COB routine to select all STOCK.ENTRY and calculate destruction date. Attach to D990 stage
*-------------------------------------------------------------------------------
*-----------------------
* Modification History :
*-----------------------
*DATE             WHO                    REFERENCE            DESCRIPTION
*02-08-2010    Swaminathan.S.R        ODR-2010-03-0400      INITIAL CREATION
*16 MAY 2011     KAVITHA              ODR-2010-03-0400      PACS00056667 FIX
*15 JUN 2011     KAVITHA              PACS00082440          PACS00082440 FIX
* Date                   who                   Reference              
* 11-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION - FM TO @FM AND VM TO @VM AND SM TO @SM AND ++ TO += 1 AND CONVERT TO CHANGE
* 11-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*---------------------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_BATCH.FILES
    $INSERT I_GTS.COMMON
    $INSERT I_F.DATES
    $INSERT I_REDO.B.DESTROY.CARDS.COMMON
    $INSERT I_F.REDO.CARD.DES.HIS
    $INSERT I_F.REDO.CARD.GENERATION
    $INSERT I_F.REDO.CARD.NUMBERS
    $INSERT I_F.REDO.CARD.NO.LOCK
    $INSERT I_F.LATAM.CARD.ORDER
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.PREEMBOSS.STOCK
    $INSERT I_F.REDO.STOCK.QTY.COUNT

    GOSUB PROCESS

RETURN

*---------
PROCESS:
*---------
* Read REDO.CARD.NUMBERS and locate the all the numbers one by one and check if status is "AVAILABLE" if so then change status as "DESTROY"
    Y.TOT.DEST=''
    R.REDO.CARD.GENERATION= ''
    GEN.POS = ''

    DESTROY.QTY = ''

    Y.REDO.DES.HIS.ID = FIELD(Y.DH.SEL.LIST,'-',1,1)
    CARD.STATUS = FIELD(Y.DH.SEL.LIST,'-',2,1)
    CALL F.READ(FN.REDO.CARD.HIS,Y.DH.SEL.LIST,R.REDO.CARD.HIS,F.REDO.CARD.HIS,Y.ERR.CARD.GEN)

    AGENCY =  R.REDO.CARD.HIS<REDO.DES.HIS.AGENCY>

    CALL F.READ(FN.REDO.CARD.GENERATION,Y.REDO.DES.HIS.ID,R.REDO.CARD.GENERATION,F.REDO.CARD.GENERATION,Y.ERR.CARD.GEN)
    IF R.REDO.CARD.GENERATION THEN
        CARD.GEN.STATUS = R.REDO.CARD.GENERATION<REDO.CARD.GEN.CARD.TYPE>
        GET.Y.SERIES.ID = R.REDO.CARD.GENERATION<REDO.CARD.GEN.CARD.SERIES>
        CHANGE @VM TO @FM IN CARD.GEN.STATUS
        CHANGE @VM TO @FM IN GET.Y.SERIES.ID

        LOCATE CARD.STATUS IN CARD.GEN.STATUS SETTING GEN.POS THEN
            Y.CARD.NUMBERS = R.REDO.CARD.GENERATION<REDO.CARD.GEN.CARD.NUMBERS,GEN.POS>
            Y.SERIES.ID = GET.Y.SERIES.ID<GEN.POS>
            Y.CARD.NUMBERS.TOTAL = DCOUNT(Y.CARD.NUMBERS,@SM)

            Y.CTL = 1

            Y.CNT.CARD.NO = ''

            GOSUB READ.STOCK.REGISTER
            GOSUB LOOP.PROCESS

            IF R.REDO.CARD.NUMBERS THEN
                CALL F.WRITE(FN.REDO.CARD.NUMBERS,CARD.NO.ID,R.REDO.CARD.NUMBERS)
            END
            R.REDO.CARD.HIS<REDO.DES.HIS.DESTROY.QTY> = DESTROY.QTY
            IF R.REDO.CARD.HIS THEN
                CALL F.WRITE(FN.REDO.CARD.HIS,Y.DH.SEL.LIST,R.REDO.CARD.HIS)
            END
            IF R.STOCK.REGISTER THEN
                CALL F.WRITE(FN.STOCK.REGISTER,STOCK.REG.ID,R.STOCK.REGISTER)
            END
            IF EMBOSS.TYPE EQ 'PREEMBOZADA' THEN
                IF R.REDO.PREEMBOSS.STOCK THEN
                    CALL F.WRITE(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,R.REDO.PREEMBOSS.STOCK)
                END
            END
            CALL F.RELEASE(FN.REDO.CARD.NUMBERS,CARD.NO.ID,F.REDO.CARD.NUMBERS)
            CALL F.RELEASE(FN.STOCK.REGISTER,STOCK.REG.ID,F.STOCK.REGISTER)
            CALL F.RELEASE(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,F.REDO.PREEMBOSS.STOCK)
        END
    END

    Y.ID.ST.QTY.COUNT=Y.REDO.DES.HIS.ID:'-':FETCH.SERIES
    CALL F.READ(FN.REDO.STOCK.QTY.COUNT,Y.ID.ST.QTY.COUNT,R.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT,ERR)

    IF R.REDO.STOCK.QTY.COUNT THEN
        Y.STK.COUNT.VM = DCOUNT(R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY>,@VM)
        Y.DATE=TODAY
        LOCATE Y.DATE IN R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,1> SETTING POS.ISSU THEN
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DESTROYED,POS.ISSU>    = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DESTROYED,POS.ISSU>  + Y.TOT.DEST
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.ISSU>   = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.ISSU> - Y.TOT.DEST
        END ELSE
            Y.STK.COUNT.VM.1 = Y.STK.COUNT.VM + 1
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DESTROYED,Y.STK.COUNT.VM.1>  = Y.TOT.DEST
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,Y.STK.COUNT.VM.1>      = Y.DATE
            R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM.1> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM> - Y.TOT.DEST
        END
    END
    CALL F.WRITE(FN.REDO.STOCK.QTY.COUNT,Y.ID.ST.QTY.COUNT,R.REDO.STOCK.QTY.COUNT)

RETURN

*-----------
LOOP.PROCESS:
*-----------

    CARD.NO.ID = CARD.STATUS:".":AGENCY
    CALL F.READU(FN.REDO.CARD.NUMBERS,CARD.NO.ID,R.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS,Y.ERR.CAR.NO,'')

    LIST.CARDS = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER>
    FETCH.CARD.STATUS = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS>

    CHANGE @VM TO @FM IN LIST.CARDS   ;*R22 AUTO CONVERSTION CONVERT TO CHANGE
    CHANGE @VM TO @FM IN FETCH.CARD.STATUS  ;*R22 AUTO CONVERSTION CONVERT TO CHANGE


    PREEMB.ID = AGENCY:"-":Y.SERIES.ID
    CALL F.READU(FN.REDO.PREEMBOSS.STOCK,PREEMB.ID,R.REDO.PREEMBOSS.STOCK,F.REDO.PREEMBOSS.STOCK,PRE.ERROR,"")

    LOOP
    WHILE Y.CTL LE Y.CARD.NUMBERS.TOTAL
        Y.CARD.NO = Y.CARD.NUMBERS<1,1,Y.CTL>

*PACS00082440-S
        LOCATE Y.CARD.NO IN LIST.CARDS SETTING CARD.NO.POS THEN
            Y.CARD.STATUS = R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,CARD.NO.POS>
            EMBOSS.TYPE =  R.REDO.CARD.NUMBERS<REDO.CARD.NUM.EMBOSS.TYPE,CARD.NO.POS>
            IF Y.CARD.STATUS EQ "AVAILABLE" THEN
                Y.CNT.CARD.NO += 1
                GOSUB CARD.NUM.DESTROY
                GOSUB UPDATE.STOCK.REGISTER
                GOSUB PREEMBOSS.STK.UPD
            END

            IF Y.CARD.STATUS EQ "INUSE" THEN
                GOSUB CARD.ISSUE.CHECK
                IF NOT(R.LCO) THEN
                    Y.CNT.CARD.NO += 1
                    GOSUB CARD.NUM.DESTROY
                    GOSUB UPDATE.STOCK.REGISTER
                    GOSUB PREEMBOSS.STK.UPD
                END

            END
        END

*PACS00082440-E

        Y.CTL += 1
    REPEAT

RETURN
*------------------------------------
CARD.NUM.DESTROY:


    R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,CARD.NO.POS> = "DESTROY"

    DESTROY.QTY += 1

    R.REDO.CARD.HIS<REDO.DES.HIS.CARD.NUMBER,-1> = Y.CARD.NO

    CALL F.READ(FN.REDO.CARD.NO.LOCK,CARD.NO.ID,R.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK,Y.ERR.CARD.LOCK)

*LOCATE Y.CARD.NO IN R.REDO.CARD.NO.LOCK<1,1> SETTING CARD.NO.POS THEN ;*Tus Start
    LOCATE Y.CARD.NO IN R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1> SETTING CARD.NO.POS THEN ;*Tus End
        DEL R.REDO.CARD.NO.LOCK<1,CARD.NO.POS>

        LOCATE "AVAILABLE" IN  R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS,CARD.NO.POS> SETTING STAT.POS THEN
            R.REDO.CARD.NO.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1>=  R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER,STAT.POS>
        END

        CALL F.WRITE(FN.REDO.CARD.NO.LOCK,CARD.NO.ID,R.REDO.CARD.NO.LOCK)
    END

RETURN
*---------------------------------------
CARD.ISSUE.CHECK:

    LATAM.CARD.ORDER.ID = CARD.STATUS:".":Y.CARD.NO

    CALL F.READ(FN.LCO,LATAM.CARD.ORDER.ID,R.LCO,F.LCO,LCO.ERR)

RETURN

*----------------
READ.STOCK.REGISTER:

    GET.CARD.TYPE = R.REDO.CARD.HIS<REDO.DES.HIS.CARD.TYPE>


    PARAM.CARD.TYPE = R.REDO.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.TYPE>
    PARAM.CARD.SERIES = R.REDO.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.SERIES>
    RECEIVE.DEPT = R.REDO.SERIES.PARAM<REDO.CARD.SERIES.PARAM.RECEIVE.DEPT.CODE>

    CHANGE @VM TO @FM IN PARAM.CARD.TYPE  ;*R22 AUTO CONVERSTION CONVERT TO CHANGE
    CHANGE @VM TO @FM IN PARAM.CARD.SERIES  ;*R22 AUTO CONVERSTION CONVERT TO CHANGE

    LOCATE GET.CARD.TYPE IN PARAM.CARD.TYPE SETTING LOC.POS THEN
        FETCH.SERIES = PARAM.CARD.SERIES<LOC.POS>

    END

    STOCK.REG.ID = 'CARD.':AGENCY:'-':RECEIVE.DEPT

    R.STOCK.REGISTER = ''
    STOCK.REGISTER.ERR = ''
    CALL F.READU(FN.STOCK.REGISTER,STOCK.REG.ID,R.STOCK.REGISTER,F.STOCK.REGISTER,STOCK.REGISTER.ERR,'')

RETURN

*-----------------------
UPDATE.STOCK.REGISTER:
*-----------------------
    IF R.STOCK.REGISTER THEN
        LOCATE FETCH.SERIES IN R.STOCK.REGISTER<STK.REG.SERIES.ID,1> SETTING POS THEN
            Y.SERIES.BAL = R.STOCK.REGISTER<STK.REG.SERIES.BAL,POS> - 1
            R.STOCK.REGISTER<STK.REG.SERIES.BAL,POS> = Y.SERIES.BAL
            GET.REG.BAL = R.STOCK.REGISTER<STK.REG.STO.REG.BAL>
            R.STOCK.REGISTER<STK.REG.STO.REG.BAL> = GET.REG.BAL - 1
            Y.TOT.DEST+=1
        END
    END
RETURN

*----------------
PREEMBOSS.STK.UPD:
*----------------
    IF EMBOSS.TYPE EQ 'PREEMBOZADA' THEN
        IF R.REDO.PREEMBOSS.STOCK THEN
            R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL> = R.REDO.PREEMBOSS.STOCK<PREEMB.STK.SERIES.BAL> - 1
        END
    END
RETURN
END
