* @ValidationCode : Mjo2NjQ3MTU2OTY6Q3AxMjUyOjE2ODE3MTEwMjkwMjM6SVRTUzotMTotMTowOjA6ZmFsc2U6Ti9BOlIyMV9BTVIuMDotMTotMQ==
* @ValidationInfo : Timestamp         : 17 Apr 2023 11:27:09
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDOBATCH
SUBROUTINE REDO.BRANCH.CARD.RETURN.PROCESS
*--------------------------------------------------------------------------------------------------------
*Company   Name    : ASOCIACION POPULAR DE AHORROS Y PRESTAMOS
*Developed By      : Temenos Application Management
*Program   Name    : REDO.CARD.DAMAGE.AUTHORISE
*--------------------------------------------------------------------------------------------------------
*Description  : This is a authorisation routine to update the status of damaged cards in STOCK.REGISTER and
*               REDO.CARD.NUMBERS
*Linked With  : Application REDO.CARD.DAMAGE
*In Parameter : N/A
*Out Parameter: N/A
*--------------------------------------------------------------------------------------------------------
* Modification History :
*-----------------------
*    Date            Who                  Reference               Description
*   ------         ------               -------------            -------------
* 29 Jul 2010    Mohammed Anies K      ODR-2010-03-0400         Initial Creation
*13-MAY-2011       KAVITHA             ODR-2010-08-0467          PACS00055017  FIX
* Date                   who                   Reference              
* 17-04-2023         CONVERSTION TOOL     R22 AUTO CONVERSTION - FM TO @FM AND VM TO @VM AND ++ TO += 1 AND = TO EQ AND VAR1- TO -= AND VAR1+ TO += 
* 17-04-2023          ANIL KUMAR B        R22 MANUAL CONVERSTION -NO CHANGES
*--------------------------------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.STOCK.ENTRY
    $INSERT I_F.DATES
    $INSERT I_F.COMPANY
    $INSERT I_F.USER
    $INSERT I_F.REDO.BRANCH.CARD.RETURN
    $INSERT I_F.REDO.CARD.REG.STOCK
    $INSERT I_F.REDO.CARD.NO.LOCK
    $INSERT I_F.REDO.CARD.NUMBERS
    $INSERT I_F.REDO.STOCK.QTY.COUNT
    $INSERT I_F.REDO.CARD.SERIES.PARAM
    $INSERT I_F.REDO.CARD.BIN
    $INSERT I_F.REDO.BRANCH.REQ.STOCK


    GOSUB MAIN.PARA
    GOSUB PROCESS.STOCK.QTY
RETURN
*--------------------------------------------------------------------------------------------------------
**********
MAIN.PARA:
**********

    GOSUB OPEN.PARA
    GOSUB PROCESS.PARA

RETURN
*--------------------------------------------------------------------------------------------------------

**********
OPEN.PARA:
**********
* In this para of code file variables are initialised and opened
    LOC.RET.FLAG = ''

    FN.REDO.CARD.REG.STOCK = 'F.REDO.CARD.REG.STOCK'
    F.REDO.CARD.REG.STOCK = ''
    CALL OPF(FN.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK)

    CARD.TYPE.CNTR = ''
    AVAIL.NO.FLAG = ''
    R.REDO.CRD.NOS = ''
    CARD.TYPE.RETURN = ''
    R.REDO.CRD.NO.LCK = ''
    CARD.LIST =''
    STORE.REQ.IDS = ''

    Y.TOT.DAMAGES.LOST = ''

    FN.REDO.CARD.NUMBERS = 'F.REDO.CARD.NUMBERS'
    F.REDO.CARD.NUMBERS = ''
    CALL OPF(FN.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS)


    FN.SERIES.PARAM = 'F.REDO.CARD.SERIES.PARAM'
    F.SERIES.PARAM = ''
    CALL OPF(FN.SERIES.PARAM,F.SERIES.PARAM)

    FN.REDO.CARD.BIN = 'F.REDO.CARD.BIN'
    F.REDO.CARD.BIN = ''
    CALL OPF(FN.REDO.CARD.BIN,F.REDO.CARD.BIN)

    FN.STOCK.REG = 'F.REDO.STOCK.REGISTER'
    F.STOCK.REG = ''
    CALL OPF(FN.STOCK.REG,F.STOCK.REG)

    FN.BRANCH.REQ.STOCK = 'F.REDO.BRANCH.REQ.STOCK'
    F.BRANCH.REQ.STOCK = ''
    CALL OPF(FN.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK)

    FN.REDO.CARD.NO.LOCK='F.REDO.CARD.NO.LOCK'
    F.REDO.CARD.NO.LOCK=''
    CALL OPF(FN.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK)

    FINAL.COMP = R.COMPANY(EB.COM.FINANCIAL.COM)
    Y.ID.CARD.SERIES = 'SYSTEM'
    CALL CACHE.READ(FN.SERIES.PARAM,Y.ID.CARD.SERIES,R.REDO.CARD.SERIES.PARAM,PARAM.ERR)

    Y.CARD.ALL = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.TYPE>
    Y.SERIES.CARD = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.SERIES>
    CHANGE @VM TO @FM IN Y.CARD.ALL

    VIRGIN.DEPT.CODE = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.VIRGIN.DEPT.CODE>
    RECD.DEPT.CODE = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.RECEIVE.DEPT.CODE>
    EMBOSS.DEPT.CODE = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.EMBOSS.DEPT.CODE>


    FN.CARD.TYPE='F.CARD.TYPE'
    F.CARD.TYPE=''
    CALL OPF(FN.CARD.TYPE,F.CARD.TYPE)

    FN.REDO.STOCK.QTY.COUNT='F.REDO.STOCK.QTY.COUNT'
    F.REDO.STOCK.QTY.COUNT =''
    CALL OPF(FN.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT)

    Y.CLUB.CARD = ''
    CARD.COUNT = ''
    Y.LOCAL.ID.CLUB = ''
    Y.SERIES.ID.CLUB =''


RETURN
*--------------------------------------------------------------------------------------------------------
*************
PROCESS.PARA:
*************
* Main processing section


    Y.STOCK.REGISTER.ID = 'CARD.':ID.COMPANY:'-':RECD.DEPT.CODE
    GOSUB READ.STOCK.REGISTER

    GOSUB SUBPROCESS

RETURN
*--------------------------------------------------------------------------------------------------------
*********************
UPDATE.STOCK.REGISTER:
*********************
    STOCK.RET.SUM = SUM(Y.TOT.DAMAGES.LOST)
    STOCK.SERIES.ID = R.STOCK.REGISTER<STK.REG.SERIES.ID>
    CHANGE @VM TO @FM IN STOCK.SERIES.ID
    LOCATE Y.SERIES.ID IN STOCK.SERIES.ID SETTING Y.SERIES.ID.POS THEN

        Y.NEW.SERIES.BAL = R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> - STOCK.RET.SUM
        R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> = Y.NEW.SERIES.BAL

        Y.TOT.DAMAGES.LOST.BCK=STOCK.RET.SUM

        R.STOCK.REGISTER<STK.REG.STO.REG.BAL> = R.STOCK.REGISTER<STK.REG.STO.REG.BAL> - STOCK.RET.SUM

    END

* PACS00755208 - S
    IF R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> LT '0' THEN
        R.STOCK.REGISTER<STK.REG.SERIES.BAL,Y.SERIES.ID.POS> = '0'
    END
* PACS00755208 - E

    CALL F.WRITE(FN.STOCK.REG,Y.STOCK.REGISTER.ID,R.STOCK.REGISTER)

RETURN
*--------------------------------------------------------------------------------------------------------
*********************
READ.STOCK.REGISTER:
*****************
*STOCK.REGISTER record is read for the given stock entry id
    R.STOCK.REGISTER   =''
    STOCK.REGISTER.ERR = ''
    CALL F.READU(FN.STOCK.REG,Y.STOCK.REGISTER.ID,R.STOCK.REGISTER,F.STOCK.REG,STOCK.REGISTER.ERR,'P')

RETURN
*--------------------------------------------------------------------------------------------------------
SUBPROCESS:
******************************************************************************************

    DIM R.REDO.CRD.NOS(100)
    DIM R.REDO.CRD.NO.LCK(100)
    DIM STORE.REQ.IDS(100)
    DIM CARD.TYPE.RETURN(100)

    Y.CARD.NUMBER = R.NEW(REDO.BRA.RTN.CARD.NUMBER)
    Y.COUNT = DCOUNT(Y.CARD.NUMBER,@VM)
    CHANGE @VM TO @FM IN Y.CARD.NUMBER
    Y.CNT = 1
    LOOP
    WHILE Y.CNT LE Y.COUNT
        Y.CARD.NUM = Y.CARD.NUMBER<Y.CNT>
        GOSUB CARD.NUM.UPDATE

        Y.CNT += 1
    REPEAT



    CNT.CARD.TYPES = DCOUNT(CARD.LIST,@FM)

    CNT.LOOP=1
    LOOP
    WHILE CNT.LOOP LE CNT.CARD.TYPES

        REDO.CARD.ID= CARD.LIST<CNT.LOOP>
        R.FETCH.CARD.NO =  R.REDO.CRD.NOS(CNT.LOOP)
        R.FETCH.CARD.NO.LOCK = R.REDO.CRD.NO.LCK(CNT.LOOP)

        CALL F.WRITE(FN.REDO.CARD.NUMBERS,REDO.CARD.ID,R.FETCH.CARD.NO)
        CALL F.WRITE(FN.REDO.CARD.NO.LOCK,REDO.CARD.ID,R.FETCH.CARD.NO.LOCK)

        Y.CARD.TYPE.NAME = FIELD(REDO.CARD.ID,'.',1)
        LOCATE Y.CARD.TYPE.NAME IN Y.CARD.ALL SETTING POS1 THEN
            Y.LOCAL.ID = Y.SERIES.CARD<1,POS1>
            Y.SERIES.ID= Y.SERIES.CARD<1,POS1>
        END

        Y.REQ.ID.CLUB = STORE.REQ.IDS(CNT.LOOP)
        Y.TOT.DAMAGES.LOST = CARD.TYPE.RETURN(CNT.LOOP)
        GOSUB LOCAL.TABLE.UPDATE
        GOSUB UPDATE.STOCK.REGISTER

        CNT.LOOP += 1
    REPEAT

RETURN
******************************************************************************************
LOCAL.TABLE.UPDATE:
******************************************************************************************

    Y.LOCAL.ID = TODAY:"-":Y.LOCAL.ID
    CALL F.READU(FN.BRANCH.REQ.STOCK,Y.LOCAL.ID,R.BRANCH.REQ.STOCK,F.BRANCH.REQ.STOCK,STK.ENT.ERR,'P')

    Y.SERIES.VAL = Y.SERIES.ID
    CALL F.READU(FN.REDO.CARD.REG.STOCK,Y.SERIES.VAL,R.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK,STOCK.ERR,"")
    CARD.AVAIL.BAL = R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL>

    TOT.REQ.IDS = DCOUNT(Y.REQ.ID.CLUB,@FM)
    LOOP.RQ.CNT  = 1

    LOOP
    WHILE LOOP.RQ.CNT LE TOT.REQ.IDS

        IF R.BRANCH.REQ.STOCK THEN
            LOC.RET.FLAG = 'Y'
            FETCH.REQ.ID = R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID>
            CHANGE @VM TO @FM IN FETCH.REQ.ID
            ASS.FETCH.REQ.ID = FETCH.REQ.ID

            FETCH.SERIES = R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE>
            CHANGE @VM TO @FM IN FETCH.SERIES
            TOT.RET.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK>,@VM)

            IF TOT.RET.CNTR LT 1 THEN
                TOT.RET.CNTR = DCOUNT(R.BRANCH.REQ.STOCK<BRAN.STK.VIRGIN.LOAD>,@VM)
            END

            LOOP.REST.CNT = TOT.RET.CNTR

            LOCATE Y.REQ.ID.CLUB<LOOP.RQ.CNT> IN ASS.FETCH.REQ.ID SETTING REQ.POS THEN
                GET.INT.STK = R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,REQ.POS>
                FETCH.RET.VAL = R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,REQ.POS>

                IF FETCH.RET.VAL THEN
                    FETCH.RET.VAL += Y.TOT.DAMAGES.LOST<LOOP.RQ.CNT>
                END ELSE
                    FETCH.RET.VAL = Y.TOT.DAMAGES.LOST<LOOP.RQ.CNT>
                END

                R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,REQ.POS> = FETCH.RET.VAL

                CURR.QTY = R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS>
                FINAL.AVAIL.QTY = CURR.QTY - Y.TOT.DAMAGES.LOST<LOOP.RQ.CNT>
                R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REQ.POS> = FINAL.AVAIL.QTY

                GOSUB UPDATE.REST.MV

            END ELSE
                GOSUB UPDATE.NEW.REC
            END
        END ELSE
            GOSUB UPDATE.NEW.REC
        END
        LOOP.RQ.CNT += 1
    REPEAT

    CALL F.WRITE(FN.BRANCH.REQ.STOCK,Y.LOCAL.ID,R.BRANCH.REQ.STOCK)

    R.REDO.CARD.REG.STOCK<REDO.CARD.REG.STOCK.SERIES.BAL> = CARD.AVAIL.BAL
    CALL F.READU(FN.REDO.CARD.REG.STOCK,Y.SERIES.VAL,R.REDO.CARD.REG.STOCK,F.REDO.CARD.REG.STOCK,STOCK.ERR,"")



RETURN
******************************************************************************************
UPDATE.NEW.REC:

    IF LOC.RET.FLAG EQ 'Y' THEN
        TOT.RET.CNTR += 1
    END ELSE
        TOT.RET.CNTR = 1
    END

    R.BRANCH.REQ.STOCK<BRAN.STK.CARD.TYPE> = Y.CARD.TYPE.NAME
    R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,TOT.RET.CNTR> = CARD.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,TOT.RET.CNTR> = Y.TOT.DAMAGES.LOST<LOOP.RQ.CNT>
    R.BRANCH.REQ.STOCK<BRAN.STK.AGENCY,TOT.RET.CNTR> = ID.COMPANY
    R.BRANCH.REQ.STOCK<BRAN.STK.REQUEST.ID,TOT.RET.CNTR> = Y.REQ.ID.CLUB<LOOP.RQ.CNT>
    CARD.AVAIL.BAL = CARD.AVAIL.BAL - Y.TOT.DAMAGES.LOST<LOOP.RQ.CNT>
    R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,TOT.RET.CNTR> = CARD.AVAIL.BAL
    R.BRANCH.REQ.STOCK<BRAN.STK.TXN.DATE> = TODAY
RETURN
*------------
UPDATE.REST.MV:

    REST.MV.CNTR = REQ.POS + 1
    LOOP
    WHILE REST.MV.CNTR LE LOOP.REST.CNT

        REST.QTY.REQUEST = ''
        REST.LOST.VALUE = ''
        REST.DAMAGE.VAL = ''
        REST.RETURN.VALUE = ''
        REST.DELIVERED =  ''
        REST.CURRENT.QTY = ''

        R.BRANCH.REQ.STOCK<BRAN.STK.INITIAL.STK,REST.MV.CNTR> = FINAL.AVAIL.QTY
        REST.QTY.REQUEST = R.BRANCH.REQ.STOCK<BRAN.STK.QTY.REQUEST,REST.MV.CNTR>
        REST.LOST.VALUE = R.BRANCH.REQ.STOCK<BRAN.STK.LOST,REST.MV.CNTR>
        REST.DAMAGE.VAL = R.BRANCH.REQ.STOCK<BRAN.STK.DAMAGE,REST.MV.CNTR>
        REST.RETURN.VALUE = R.BRANCH.REQ.STOCK<BRAN.STK.RETURN,REST.MV.CNTR>
        REST.DELIVERED = R.BRANCH.REQ.STOCK<BRAN.STK.DELIVERED,REST.MV.CNTR>
        REST.CURRENT.QTY = FINAL.AVAIL.QTY + REST.QTY.REQUEST - REST.LOST.VALUE - REST.DAMAGE.VAL - REST.RETURN.VALUE - REST.DELIVERED
        R.BRANCH.REQ.STOCK<BRAN.STK.CURRENT.QTY,REST.MV.CNTR> = REST.CURRENT.QTY
        FINAL.AVAIL.QTY = REST.CURRENT.QTY

        REST.MV.CNTR += 1

    REPEAT

RETURN
*----------------------------------------
CARD.NUM.UPDATE:
******************************************************************************************

    Y.BIN.NUMBER = Y.CARD.NUM[1,6]
    CALL F.READ(FN.REDO.CARD.BIN,Y.BIN.NUMBER,R.REDO.CARD.BIN,F.REDO.CARD.BIN,Y.BIN.ERR)
    Y.CARD.TYPE = R.REDO.CARD.BIN<REDO.CARD.BIN.CARD.TYPE>

    CNT.TYPE=DCOUNT(Y.CARD.TYPE,@VM)

    FLAG.CARD=0
    FOR TYPE.LOOP=1 TO CNT.TYPE

        GOSUB PROCESS.CARD.NOS
    NEXT

    IF FLAG.CARD EQ 0 THEN
        AF=REDO.BRA.RTN.CARD.NUMBER
        AV=Y.CNT
        ETEXT='ST-NOT.VALID.CARD'
        CALL STORE.END.ERROR
    END

RETURN

*----------------
PROCESS.CARD.NOS:
*----------------
    Y.CARD.TYPE.NAME=Y.CARD.TYPE<1,TYPE.LOOP>
    Y.CARD.NUMBER.ID = Y.CARD.TYPE.NAME:'.':ID.COMPANY

    LOCATE Y.CARD.NUMBER.ID IN CARD.LIST SETTING LOC.AVAIL.ID THEN
        R.REDO.CARD.NUMBER =  R.REDO.CRD.NOS(LOC.AVAIL.ID)
        R.REDO.CARD.NUMBER.LOCK =  R.REDO.CRD.NO.LCK(LOC.AVAIL.ID)
        AVAIL.NO.FLAG = 1
    END ELSE
        CALL F.READU(FN.REDO.CARD.NUMBERS,Y.CARD.NUMBER.ID,R.REDO.CARD.NUMBER,F.REDO.CARD.NUMBERS,Y.CARD.ERR,'P')
        CALL F.READU(FN.REDO.CARD.NO.LOCK,Y.CARD.NUMBER.ID,R.REDO.CARD.NUMBER.LOCK,F.REDO.CARD.NO.LOCK,Y.CARD.ERR,'P')
        CARD.TYPE.CNTR += 1
    END


    NUMBER.REAL=R.REDO.CARD.NUMBER<REDO.CARD.NUM.CARD.NUMBER>
    LOCATE Y.CARD.NUM IN NUMBER.REAL<1,1> SETTING POS.NUM THEN

**PACS00055017-S
        IF R.REDO.CARD.NUMBER<REDO.CARD.NUM.STATUS,POS.NUM> EQ 'AVAILABLE' AND R.REDO.CARD.NUMBER<REDO.CARD.NUM.EMBOSS.TYPE,POS.NUM> EQ 'PREEMBOZADA' THEN
**PACS00055017-E
            R.REDO.CARD.NUMBER<REDO.CARD.NUM.STATUS,POS.NUM> =  'RETURN'
            Y.TOT.DAMAGES.LOST += 1

            FLAG.CARD=1

            Y.CARD.TYPE= Y.CARD.TYPE.NAME
            Y.REQ.ID.CHECK = R.REDO.CARD.NUMBER<REDO.CARD.NUM.CRD.REQ.ID,POS.NUM>

            GOSUB AVAIL.FLAG.PROCESS
        END ELSE
            AF=REDO.BRA.RTN.CARD.NUMBER
            AV=Y.CNT
            ETEXT='ST-CARD.IN.USE'
            CALL STORE.END.ERROR
            FLAG.CARD=1
        END

    END

RETURN

*-----------------
AVAIL.FLAG.PROCESS:
*-----------------

    LOCATE Y.CARD.NUM IN R.REDO.CARD.NUMBER.LOCK SETTING POS.LOCK THEN
        DEL R.REDO.CARD.NUMBER.LOCK<REDO.CARD.LOCK.CARD.NUMBER,POS.LOCK>

        LOCATE "AVAILABLE" IN R.REDO.CARD.NUMBER<REDO.CARD.NUM.STATUS,1> SETTING AVL.POS THEN
            R.REDO.CARD.NUMBER.LOCK<REDO.CARD.LOCK.CARD.NUMBER,1>= R.REDO.CARD.NUMBER<REDO.CARD.NUM.CARD.NUMBER,AVL.POS>
        END

    END
    IF AVAIL.NO.FLAG EQ 1 THEN
        CARD.LIST<LOC.AVAIL.ID> = Y.CARD.NUMBER.ID
        R.REDO.CRD.NOS(LOC.AVAIL.ID) =  R.REDO.CARD.NUMBER
        R.REDO.CRD.NO.LCK(LOC.AVAIL.ID) = R.REDO.CARD.NUMBER.LOCK

        LOCATE Y.REQ.ID.CHECK IN STORE.REQ.IDS(LOC.AVAIL.ID) SETTING REQ.ID.AVAIL THEN
            CARD.TYPE.RETURN(LOC.AVAIL.ID)<REQ.ID.AVAIL> = CARD.TYPE.RETURN(LOC.AVAIL.ID)<REQ.ID.AVAIL> + 1
        END ELSE
            CARD.TYPE.RETURN(LOC.AVAIL.ID)<-1> = 1
            STORE.REQ.IDS(LOC.AVAIL.ID)<-1> = Y.REQ.ID.CHECK
        END

    END ELSE
        CARD.LIST<CARD.TYPE.CNTR> = Y.CARD.NUMBER.ID
        R.REDO.CRD.NOS(CARD.TYPE.CNTR) =  R.REDO.CARD.NUMBER
        R.REDO.CRD.NO.LCK(CARD.TYPE.CNTR) = R.REDO.CARD.NUMBER.LOCK
        CARD.TYPE.RETURN(CARD.TYPE.CNTR) = 1
        STORE.REQ.IDS(CARD.TYPE.CNTR) = Y.REQ.ID.CHECK
    END
RETURN
******************************************************************************************
*---------------------
PROCESS.STOCK.QTY:
*--------------------
    Y.CARD.NUMBER = R.NEW(REDO.BRA.RTN.CARD.NUMBER)
    Y.COUNT       = DCOUNT(Y.CARD.NUMBER,@VM)
    CHANGE @VM TO @FM IN Y.CARD.NUMBER
    Y.CNT = 1
    LOOP
    WHILE Y.CNT LE Y.COUNT
        Y.CARD.NUM = Y.CARD.NUMBER<Y.CNT>

        Y.BIN.NUMBER = Y.CARD.NUM[1,6]
        CALL F.READ(FN.REDO.CARD.BIN,Y.BIN.NUMBER,R.REDO.CARD.BIN,F.REDO.CARD.BIN,Y.BIN.ERR)
        Y.CARD.TYPE.LIST = R.REDO.CARD.BIN<REDO.CARD.BIN.CARD.TYPE>
        Y.CARD.TYPE.TOT=DCOUNT(Y.CARD.TYPE.LIST,@VM)
        Y.CARD.TYPE.CNT=1
        LOOP
        WHILE Y.CARD.TYPE.CNT LE Y.CARD.TYPE.TOT
            Y.CARD.NUMBER.ID = Y.CARD.TYPE.LIST<1,Y.CARD.TYPE.CNT>:'.':ID.COMPANY
            CALL F.READ(FN.REDO.CARD.NUMBERS,Y.CARD.NUMBER.ID,R.REDO.CARD.NUMBER,F.REDO.CARD.NUMBERS,Y.CARD.ERR)
            Y.ALL.CARD       = R.REDO.CARD.NUMBER<REDO.CARD.NUM.CARD.NUMBER>
            CHANGE @VM TO @FM IN Y.ALL.CARD
            LOCATE Y.CARD.NUM IN Y.ALL.CARD SETTING POS THEN
                Y.REQ.NO=R.REDO.CARD.NUMBER<REDO.CARD.NUM.CRD.REQ.ID,POS>

                Y.CARD.ALL    = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.TYPE>
                Y.SERIES.CARD = R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.CARD.SERIES>
                CHANGE @VM TO @FM IN Y.CARD.ALL
                Y.SERIES.ID=''
                LOCATE Y.CARD.TYPE.LIST<1,Y.CARD.TYPE.CNT> IN Y.CARD.ALL SETTING POS1 THEN
                    Y.SERIES.ID = Y.SERIES.CARD<1,POS1>
                END
                Y.REQ.NO=Y.REQ.NO:'-':Y.SERIES.ID
                LOCATE Y.REQ.NO IN Y.REQ.NO.LIST SETTING Y.REQ.NO.POS THEN
                    Y.RET.LIST<Y.REQ.NO.POS>+=1
                END
                ELSE
                    Y.REQ.NO.LIST<-1>=Y.REQ.NO
                    Y.RET.LIST<-1>   =1
                END
            END
            Y.CARD.TYPE.CNT+=1
        REPEAT
        Y.CNT += 1
    REPEAT
    Y.REQ.LIST.TOT=DCOUNT(Y.RET.LIST,@FM)
    Y.DATE=TODAY
    Y.REQ.LIST.CNT=1
    LOOP
    WHILE Y.REQ.LIST.CNT LE Y.REQ.LIST.TOT
        CALL F.READU(FN.REDO.STOCK.QTY.COUNT,Y.REQ.NO.LIST<Y.REQ.LIST.CNT>,R.REDO.STOCK.QTY.COUNT,F.REDO.STOCK.QTY.COUNT,Y.ERR.QTY,'')
        IF R.REDO.STOCK.QTY.COUNT THEN
            Y.STK.COUNT.VM = DCOUNT(R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY>,@VM)
            LOCATE Y.DATE IN R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,1> SETTING POS.ISSU THEN
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.RETURNED,POS.ISSU>    = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.RETURNED,POS.ISSU> + Y.RET.LIST<Y.REQ.LIST.CNT>
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.ISSU>   = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,POS.ISSU> - Y.RET.LIST<Y.REQ.LIST.CNT>
            END ELSE
                Y.STK.COUNT.VM.1 = Y.STK.COUNT.VM + 1
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.RETURNED,Y.STK.COUNT.VM.1>  = Y.RET.LIST<Y.REQ.LIST.CNT>
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.DATE,Y.STK.COUNT.VM.1>      = Y.DATE
                R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM.1> = R.REDO.STOCK.QTY.COUNT<REDO.STOCK.QTY.COUNT.STOCK.QTY,Y.STK.COUNT.VM> - Y.RET.LIST<Y.REQ.LIST.CNT>
            END
        END
        CALL F.WRITE(FN.REDO.STOCK.QTY.COUNT,Y.REQ.NO.LIST<Y.REQ.LIST.CNT>,R.REDO.STOCK.QTY.COUNT)
        Y.REQ.LIST.CNT += 1
    REPEAT
RETURN
END
