$PACKAGE APAP.LAPAP
SUBROUTINE REDO.B.SAP.EXTRA.PAYMENT.UPLD

** 24-04-2023 R22 Auto Conversion - FM TO @FM, VM to @VM, SM to @SM
** 24-04-2023 Skanda R22 Manual Conversion - No changes

    $INSERT I_COMMON ;* R22 Auto conversion
    $INSERT I_EQUATE ;* R22 Auto conversion
    $INSERT I_F.RE.STAT.REP.LINE ;* R22 Auto conversion
    $INSERT I_F.EB.CONTRACT.BALANCES ;* R22 Auto conversion
    $INSERT I_F.CUSTOMER ;* R22 Auto conversion
    $INSERT I_F.COMPANY ;* R22 Auto conversion
    $INSERT I_F.DATES ;* R22 Auto conversion
    $INSERT I_F.REDO.AA.OVERPAYMENT ;* R22 Auto conversion
    $INSERT I_F.REDO.H.REPORTS.PARAM ;* R22 Auto conversion

    GOSUB INIT
    GOSUB GET.LOCAL.POS
    GOSUB GET.PARAM.DET
    GOSUB SEL.EXTRA.PAY
RETURN

INIT:
******
    BAL.TYPE1 = "CURACCOUNT"; ENQ.DAT = ''; ENQ.DATA = ''; L.CO.EXT.GL.CC.POS = ''
    FLD.POS = ''; L.CU.CIDENT.POS = ''; L.CU.PASS.NAT.POS = ''; FN.TMP.DIR = ''; YACT.DATE = ''
    L.CU.RNC.POS = ''; L.CU.NOUNICO.POS = ''; L.CU.ACTANAC.POS = ''; F.TMP.DIR = ''
    R.REDO.H.REPORTS.PARAM = ''; PARAM.ERR = ''; F.CHK.DIR = ''; FN.CHK.DIR = ''
    FN.REDO.AA.OVERPAYMENT = 'F.REDO.AA.OVERPAYMENT'; F.REDO.AA.OVERPAYMENT = ''
    CALL OPF(FN.REDO.AA.OVERPAYMENT,F.REDO.AA.OVERPAYMENT)
    R.EB.CONTRACT.BALANCES = ''; EB.CONTRACT.BALANCES.ERR = ''; YTMP.ARRY = ''
    FN.EB.CONTRACT.BALANCES = 'F.EB.CONTRACT.BALANCES'; F.EB.CONTRACT.BALANCES = ''
    CALL OPF(FN.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES)
    FN.RE.STAT.REP.LINE = 'F.RE.STAT.REP.LINE'; F.RE.STAT.REP.LINE = ''
    CALL OPF(FN.RE.STAT.REP.LINE,F.RE.STAT.REP.LINE)
    FN.CUSTOMER = 'F.CUSTOMER'; F.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)
    FN.COMPANY = 'F.COMPANY'; F.COMPANY = ''
    CALL OPF(FN.COMPANY,F.COMPANY)
    FN.REDO.H.REPORTS.PARAM = "F.REDO.H.REPORTS.PARAM"; F.REDO.H.REPORTS.PARAM  = ""
    CALL OPF(FN.REDO.H.REPORTS.PARAM,F.REDO.H.REPORTS.PARAM)
    Y.TODAY = TODAY
    Y.LSTW.DATE = R.DATES(EB.DAT.LAST.WORKING.DAY)
    YACT.DATE = Y.LSTW.DATE[7,2]:Y.LSTW.DATE[5,2]:Y.LSTW.DATE[1,4]
    YSEPER = "  / "
    FIN.TXT = "Pago Extra Capital"
RETURN

GET.LOCAL.POS:
***************
    APP.LIST = 'CUSTOMER':@FM:'COMPANY'
    FLD.LIST = 'L.CU.CIDENT':@VM:'L.CU.RNC':@VM:'L.CU.NOUNICO':@VM:'L.CU.ACTANAC':@VM:'L.CU.PASS.NAT':@FM:'L.CO.EXT.GL.CC'
    CALL MULTI.GET.LOC.REF(APP.LIST,FLD.LIST,FLD.POS)
    L.CU.CIDENT.POS = FLD.POS<1,1>
    L.CU.RNC.POS = FLD.POS<1,2>
    L.CU.NOUNICO.POS = FLD.POS<1,3>
    L.CU.ACTANAC.POS = FLD.POS<1,4>
    L.CU.PASS.NAT.POS = FLD.POS<1,5>
    L.CO.EXT.GL.CC.POS = FLD.POS<2,1>
RETURN

GET.PARAM.DET:
**************
    Y.REPORT.PARAM.ID = "REDO.SAP.EXT.PAYM"
    CALL CACHE.READ(FN.REDO.H.REPORTS.PARAM,Y.REPORT.PARAM.ID,R.REDO.H.REPORTS.PARAM,PARAM.ERR)
    IF R.REDO.H.REPORTS.PARAM THEN
        FN.CHK.DIR = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.DIR>
        Y.OUT.FILE.NAME = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.OUT.FILE.NAME>
        FN.TMP.DIR = R.REDO.H.REPORTS.PARAM<REDO.REP.PARAM.TEMP.DIR>
    END

    CALL OPF(FN.CHK.DIR,F.CHK.DIR)
    EXTRACT.FILE.ID = Y.OUT.FILE.NAME:TODAY:'.txt'
    R.FIL = ''; FIL.ERR = ''
    CALL F.READ(FN.CHK.DIR,EXTRACT.FILE.ID,R.FIL,F.CHK.DIR,READ.FIL.ERR)
    IF R.FIL THEN
        DELETE F.CHK.DIR,EXTRACT.FILE.ID
    END
    CALL OPF(FN.TMP.DIR,F.TMP.DIR)
    EXTRACT.FILETMP.ID = Y.OUT.FILE.NAME:'.USER.':TODAY:'.txt'
    R.FILTMP = ''; FILTMP.ERR = ''
    CALL F.READ(FN.TMP.DIR,EXTRACT.FILETMP.ID,R.FILTMP,F.TMP.DIR,READ.FILTMP.ERR)
    IF R.FILTMP THEN
        DELETE F.TMP.DIR,EXTRACT.FILETMP.ID
    END
RETURN

SEL.EXTRA.PAY:
**************
    SEL.PCMD = ''; SEL.PLIST =''; SEL.PCNT = ''; SEL.PERR = ''; YMAIN.TOTAL = 0; YMAIN.AMT = 0
    SEL.PCMD = "SELECT ":FN.REDO.AA.OVERPAYMENT:" WITH STATUS EQ 'PENDIENTE' OR (STATUS EQ 'APLICADO' AND NEXT.DUE.DATE GT ":Y.LSTW.DATE:" AND NEXT.DUE.DATE LE ":Y.TODAY:") AND CUSTOMER.ID NE '' BY COMP.CODE"
    CALL EB.READLIST(SEL.PCMD,SEL.PLIST,'',SEL.PCNT,SEL.PERR)
    IF SEL.PLIST THEN
        YFIN.ARRY = "0,":YACT.DATE:",DOP,0,CONTROL OPERACIONES"
        YFIN.ARRY<-1> = "1,900101"
        YTMP.ARRY = YFIN.ARRY
* Changed to avoid blank file creation /S.
        GOSUB PROCESS
* Changed to avoid blank file creation /E.
    END
RETURN

PROCESS:
********
    LOOP
        REMOVE SEL.ID FROM SEL.PLIST SETTING SEL.POSN
    WHILE SEL.ID:SEL.POSN
        ERR.REDO.AA.OVERPAYMENT = ''; R.REDO.AA.OVERPAYMENT = ''; YCOST.CENT = ''
        YFLD1 = ''; YFLD2 = ''; YFLD3 = ''; YFMT.AMT = 0; YFLD4 = ''; YIDENTY.VAL = ''
        Y.IN.CONSOL.KEY = ''; Y.CONSOL.PART = ''; Y.CONSOL.KEY = ''
        CALL F.READ(FN.REDO.AA.OVERPAYMENT,SEL.ID,R.REDO.AA.OVERPAYMENT,F.REDO.AA.OVERPAYMENT,ERR.REDO.AA.OVERPAYMENT)
        YFLD1 = R.REDO.AA.OVERPAYMENT<REDO.OVER.LOAN.NO>
        YFLD2 = R.REDO.AA.OVERPAYMENT<REDO.OVER.COMP.CODE>
        IF YFLD2 THEN
            GOSUB READ.COMPANY
        END
        YFLD4 = R.REDO.AA.OVERPAYMENT<REDO.OVER.CUSTOMER.ID>
        IF YFLD4 THEN
            GOSUB READ.CUSTOMER
        END
        YFLD3 = R.REDO.AA.OVERPAYMENT<REDO.OVER.AMOUNT>
        YFMT.AMT = FMT(YFLD3,"R2#19")
        CHANGE '.' TO '' IN YFMT.AMT
        GOSUB SUB.PROCESS
        YFIN.ARRY<-1> = "2,50,":YSAP.ACC.NO:",":YFMT.AMT:",":YCOST.CENT:",":FMT(YFLD1,'L#12'):YSEPER:FMT(YIDENTY.VAL,'L#50'):YSEPER:FMT(FIN.TXT,'L#20')
        YTMP.ARRY<-1> = "2,50,":YSAP.ACC.NO:",":YFLD3:",":YCOST.CENT:",":YFLD2:",":YFLD1:",":YFLD4:",":Y.CUS.IDEN:",":YGL.ACC.NO:",":FMT(FIN.TXT,'L#20')
        YMAIN.TOTAL += YFLD3
    REPEAT
    YMAIN.AMT = FMT(YMAIN.TOTAL,"R2#19")
    CHANGE '.' TO '' IN YMAIN.AMT
    YFIN.ARRY<-1> = "2,40,2419910001,":YMAIN.AMT:",900101,":FMT(' ','L#12'):YSEPER:FMT(' ','L#50'):YSEPER:FMT(FIN.TXT,'L#20')
    YTMP.ARRY<-1> = "2,40,2419910001,":YMAIN.TOTAL:",900101,,,,,,":FMT(FIN.TXT,'L#20')
    WRITE YFIN.ARRY ON F.CHK.DIR, EXTRACT.FILE.ID ON ERROR
        CALL OCOMO("Unable to write to the file":F.CHK.DIR)
    END
    WRITE YTMP.ARRY ON F.TMP.DIR, EXTRACT.FILETMP.ID ON ERROR
        CALL OCOMO("Unable to write to the file":F.TMP.DIR)
    END
RETURN

READ.COMPANY:
*************
    RL.COMPANY = ''; ERR.COMPANY = ''
    CALL CACHE.READ(FN.COMPANY, YFLD2, RL.COMPANY, ERR.COMPANY) ;* R22 Auto conversion
    YCOST.CENT = RL.COMPANY<EB.COM.LOCAL.REF,L.CO.EXT.GL.CC.POS>
RETURN

SUB.PROCESS:
************
    R.EB.CONTRACT.BALANCES = ''; EB.CONTRACT.BALANCES.ERR = ''; YSAP.ACC.NO = ''; YGL.ACC.NO = ''
    CALL F.READ(FN.EB.CONTRACT.BALANCES,YFLD1,R.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES,EB.CONTRACT.BALANCES.ERR)
    IF NOT(R.EB.CONTRACT.BALANCES) THEN
        RETURN
    END
    Y.CONSOL.KEY = R.EB.CONTRACT.BALANCES<ECB.CONSOL.KEY>
    Y.CONSOL.PART = FIELD(Y.CONSOL.KEY,'.',1,16)
    Y.IN.CONSOL.KEY = Y.CONSOL.PART:'.':BAL.TYPE1
    Y.VARIABLE = ''; Y.RPRTS = ''; Y.LINES = ''; Y.LINE = ''
    CALL RE.CALCUL.REP.AL.LINE(Y.IN.CONSOL.KEY,Y.RPRTS,Y.LINES,Y.VARIABLE)
    Y.LINE = Y.RPRTS:'.':Y.LINES
    REP.ERR = ''; R.LINE = ''
    CALL F.READ(FN.RE.STAT.REP.LINE,Y.LINE,R.LINE,F.RE.STAT.REP.LINE,REP.ERR)
    YGL.ACC.NO = R.LINE<RE.SRL.DESC,1>
    YSAP.ACC.NO = R.LINE<RE.SRL.DESC,3>
RETURN

READ.CUSTOMER:
**************
    ERR.CUSTOMER = ''; R.CUSTOMER = ''; Y.CUS.IDEN = ''; Y.CUS.CIDENT = ''; Y.ID.VAL = ''; Y.LEGAL.ID = ''
    Y.CUS.RNC = ''; Y.CUS.NONICO = ''; Y.CUS.ACTANAC = ''; Y.CUS.PASSNAT = ''; YIDENTY.VAL = ''; Y.NATIONALITY = ''
    CALL F.READ(FN.CUSTOMER,YFLD4,R.CUSTOMER,F.CUSTOMER,ERR.CUSTOMER)
    Y.CUS.CIDENT = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.CIDENT.POS>
    Y.CUS.RNC = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.RNC.POS>
    Y.CUS.NONICO = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.NOUNICO.POS>
    Y.CUS.ACTANAC = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.ACTANAC.POS>
    Y.CUS.PASSNAT = R.CUSTOMER<EB.CUS.LOCAL.REF,L.CU.PASS.NAT.POS>
    Y.LEGAL.ID = R.CUSTOMER<EB.CUS.LEGAL.ID>
    Y.NATIONALITY = R.CUSTOMER<EB.CUS.NATIONALITY>

    BEGIN CASE
        CASE Y.CUS.CIDENT NE ''
            Y.CUS.IDEN = Y.CUS.CIDENT
            Y.ID.VAL = "CEDULA"
        CASE Y.CUS.RNC NE ''
            Y.CUS.IDEN = Y.CUS.RNC
            Y.ID.VAL = "RNC"
        CASE Y.CUS.PASSNAT NE ''
            Y.CUS.IDEN = Y.CUS.PASSNAT
            Y.ID.VAL = "PASAPORTE"
        CASE Y.CUS.NONICO NE ''
            Y.CUS.IDEN = Y.CUS.NONICO
            Y.ID.VAL = "NACIMIENTO"
        CASE Y.CUS.ACTANAC NE ''
            Y.CUS.IDEN = Y.CUS.ACTANAC
            Y.ID.VAL = "ACTA DE"
    END CASE
    IF NOT(Y.CUS.IDEN) AND Y.LEGAL.ID THEN
        Y.CUS.IDEN = Y.NATIONALITY:Y.LEGAL.ID<1,1>
        Y.ID.VAL = ''
    END
    YIDENTY.VAL = Y.ID.VAL:Y.CUS.IDEN
RETURN
END
