* @ValidationCode : MjotMjcyODA5NDQ3OkNwMTI1MjoxNjgyNTE4ODc2OTM5OklUU1M6LTE6LTE6MTEzNzoxOmZhbHNlOk4vQTpSMjFfQU1SLjA6LTE6LTE=
* @ValidationInfo : Timestamp         : 26 Apr 2023 19:51:16
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1137
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R21_AMR.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.TAM
*---------------------------------------------------------------------------------------
*MODIFICATION HISTORY:
*DATE           WHO                 REFERENCE               DESCRIPTION
*24-APR-2023    CONVERSION TOOL     R22 AUTO CONVERSION     VM TO @VM, = TO EQ
*24-APR-2023    VICTORIA S          R22 MANUAL CONVERSION   NO CHANGE
*----------------------------------------------------------------------------------------
SUBROUTINE REDO.UPD.FT.RESUB(FT.ID,FT.STATUS)
*-------------------------------------------------------------------------------------------
*DESCRIPTION:
*             This routine is attached in the STANDING ORDER record for the field FT.ROUTINE
* This routine will update the FT record in hold to the local table REDO.STO.PENDING.RESUBMISSION for retry process
* ------------------------------------------------------------------------------------------
* Input/Output:
*--------------
* IN  :
*   FT.ID - ID of the FT generated by the Standing Order
*   FT.STATUS - Status of the FT generated by the Standing Order
* OUT : - NA-
*
* Dependencies:
*---------------
* CALLS     : -NA-
* CALLED BY : -NA-
*
* Revision History:
*------------------
*   Date               who           Reference            Description
* 07-JUN-2010   N.Satheesh Kumar   ODR-2009-10-0331      Initial Creation
*---------------------------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.FUNDS.TRANSFER
    $INSERT I_F.STANDING.ORDER
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.ACTIVITY.HISTORY
    $INSERT I_RC.COMMON
    $INSERT I_F.REDO.STO.PENDING.RESUBMISSION
    $INSERT I_F.REDO.RESUBMIT.FT.DET

    GOSUB GENERATE.DEAL.SLIP

    IF FT.STATUS NE 'IHLD' THEN
        RETURN
    END

    GOSUB OPEN.FILES
    GOSUB GET.LRF.POS
    GOSUB PROCESS
RETURN

*----------
OPEN.FILES:
*----------
*---------------------------------------
* This section opens the necessary files
*---------------------------------------

    FN.REDO.STO.PENDING.RESUBMISSION = 'F.REDO.STO.PENDING.RESUBMISSION'
    F.REDO.STO.PENDING.RESUBMISSION = ''
    CALL OPF(FN.REDO.STO.PENDING.RESUBMISSION,F.REDO.STO.PENDING.RESUBMISSION)

    FN.STANDING.ORDER = 'F.STANDING.ORDER'
    F.STANDING.ORDER = ''
    CALL OPF(FN.STANDING.ORDER,F.STANDING.ORDER)

    FN.REDO.RESUBMIT.FT.DET = 'F.REDO.RESUBMIT.FT.DET'
    F.REDO.RESUBMIT.FT.DET = ''
    CALL OPF(FN.REDO.RESUBMIT.FT.DET,F.REDO.RESUBMIT.FT.DET)

RETURN

*-----------
GET.LRF.POS:
*-----------
*----------------------------------------------------------------------
* This section gets the position of the local reference field positions
*----------------------------------------------------------------------

    LR.APP = 'STANDING.ORDER'
    LR.FLDS = 'L.LOAN.ARR.ID':@VM:'L.RETRY.DAYS' ;*R22 AUTO CONVERSION
    LR.POS = ''
    CALL MULTI.GET.LOC.REF(LR.APP,LR.FLDS,LR.POS)
    STO.ARR.ID.POS = LR.POS<1,1>
    STO.RETRY.DAYS.POS = LR.POS<1,2>
RETURN

*-------
PROCESS:
*-------
*------------------------------------------------------------------------------------------------------------------
* This section updates the FT record put on HOLD in the local table REDO.STO.PENDING.RESUBMISSION for retry process
*------------------------------------------------------------------------------------------------------------------

    MATBUILD R.FUNDS.TRANSFER.NAU FROM R.NEW,1,FT.AUDIT.DATE.TIME
    INWARD.PAY.TYPE = R.NEW(FT.INWARD.PAY.TYPE)
    STO.ID = FIELD(INWARD.PAY.TYPE,'-',3,2)
    CHANGE '-' TO '.' IN STO.ID
    CALL F.READ(FN.STANDING.ORDER,STO.ID,R.STANDING.ORDER,F.STANDING.ORDER,STO.ERR)

    ARR.ID = R.STANDING.ORDER<STO.LOCAL.REF,STO.ARR.ID.POS>
    IF ARR.ID EQ '' THEN
        RETURN
    END

    R.REDO.STO.PENDING.RESUBMISSION  = R.FUNDS.TRANSFER.NAU
    END.DATE = TODAY
    DAYS = R.STANDING.ORDER<STO.LOCAL.REF,STO.RETRY.DAYS.POS>:'C'
    CALL CDT('',END.DATE,DAYS)
    INS END.DATE BEFORE R.REDO.STO.PENDING.RESUBMISSION<FT.RESERVED.1>
    CALL F.WRITE(FN.REDO.STO.PENDING.RESUBMISSION,FT.ID,R.REDO.STO.PENDING.RESUBMISSION)
    GOSUB UPDATE.CONCAT.FILE
RETURN

*------------------
UPDATE.CONCAT.FILE:
*------------------
*------------------------------------------------------------------------------------------------
* This section updates the concat file with bill id and FT date for the FT updated in RETRY TABLE
*------------------------------------------------------------------------------------------------

    CALL F.READ(FN.REDO.RESUBMIT.FT.DET,ARR.ID,R.REDO.RESUBMIT.FT.DET,F.REDO.RESUBMIT.FT.DET,FT.RESUB.ERR)
    IF R.REDO.RESUBMIT.FT.DET EQ '' THEN ;*R22 AUTO CONVERSION
        R.REDO.RESUBMIT.FT.DET<REDO.RESUB.DET.FT.ID> = FT.ID
        R.REDO.RESUBMIT.FT.DET<REDO.RESUB.DET.DATE> = TODAY
        R.REDO.RESUBMIT.FT.DET<REDO.RESUB.DET.BILL.AMT> = R.FUNDS.TRANSFER.NAU<FT.DEBIT.AMOUNT>
    END ELSE
        R.REDO.RESUBMIT.FT.DET<REDO.RESUB.DET.FT.ID,-1> = FT.ID
        R.REDO.RESUBMIT.FT.DET<REDO.RESUB.DET.DATE,-1> = TODAY
        R.REDO.RESUBMIT.FT.DET<REDO.RESUB.DET.BILL.AMT,-1> = R.FUNDS.TRANSFER.NAU<FT.DEBIT.AMOUNT>
    END
    CALL F.WRITE(FN.REDO.RESUBMIT.FT.DET,ARR.ID,R.REDO.RESUBMIT.FT.DET)
RETURN

*------------------------------------------------------------------------------------------------
GENERATE.DEAL.SLIP:
*------------------------------------------------------------------------------------------------

    FN.AA.ACTIVITY.HISTORY = 'F.AA.ACTIVITY.HISTORY'
    F.AA.ACTIVITY.HISTORY = ''
    CALL OPF(FN.AA.ACTIVITY.HISTORY,F.AA.ACTIVITY.HISTORY)

    FN.REDO.NOTIFY.RATE.CHANGE = 'F.REDO.NOTIFY.RATE.CHANGE'
    F.REDO.NOTIFY.RATE.CHANGE = ''
    CALL OPF(FN.REDO.NOTIFY.RATE.CHANGE,F.REDO.NOTIFY.RATE.CHANGE)

    R.NOTIFY.DETAIL = ''
    Y.ARR.ACC.ID = R.NEW(FT.CREDIT.ACCT.NO)
    Y.ARR.ID = ''
    CALL REDO.CONVERT.ACCOUNT(Y.ARR.ACC.ID,Y.ARR.ID,OUT.ID,ERR.TEXT)

    VAR.AA.ID = OUT.ID
    CALL F.READ(FN.REDO.NOTIFY.RATE.CHANGE,VAR.AA.ID,R.NOTIFY.DETAIL,F.REDO.NOTIFY.RATE.CHANGE,NOTIFY.ERR)
    IF R.NOTIFY.DETAIL ELSE
        RETURN
    END


    GOSUB GET.LAST.PAYMENT.DATE

    IF Y.DATE THEN
        IF Y.DATE LE R.NOTIFY.DETAIL<2> THEN
            GOSUB FORM.MSG
        END
    END ELSE
        GOSUB FORM.MSG
    END


RETURN

*------------------------------------------------------
GET.LAST.PAYMENT.DATE:
*------------------------------------------------------

    CALL F.READ(FN.AA.ACTIVITY.HISTORY,VAR.AA.ID,R.AA.HIST,F.AA.ACTIVITY.HISTORY,AA.HIST.ERR)
    Y.EFFECTIVE.DATE = R.AA.HIST<AA.AH.EFFECTIVE.DATE>
    Y.ACTIVITY = R.AA.HIST<AA.AH.ACTIVITY>
    Y.ACTIVITY.STATUS = R.AA.HIST<AA.AH.ACT.STATUS>
    Y.DATE = ''
    Y.COND = 1
    LOOP
    WHILE Y.COND
        FINDSTR "LENDING-APPLYPAYMENT" IN Y.ACTIVITY SETTING Y.AF, Y.AV, Y.AS THEN
            IF Y.ACTIVITY.STATUS<1,Y.AV,Y.AS> EQ 'AUTH' THEN
                Y.DATE = Y.EFFECTIVE.DATE<Y.AF,Y.AV>
                Y.COND = ''
            END ELSE
                Y.ACTIVITY<Y.AF,Y.AV,Y.AS> = ''
            END
        END ELSE
            Y.COND = ''
        END

    REPEAT
RETURN
*------------------------------------------------------
FORM.MSG:
*------------------------------------------------------
    TEMP.ID.NEW = ID.NEW
    ID.NEW = FT.ID
    CALL PRODUCE.DEAL.SLIP("LOAN.RATE.CHNG")
    ID.NEW = TEMP.ID.NEW

    R.NOTIFY.DETAIL<7,-1> = '&HOLD&>':C$LAST.HOLD.ID
    R.NOTIFY.DETAIL<8,-1> = TODAY

    CALL F.WRITE(FN.REDO.NOTIFY.RATE.CHANGE,VAR.AA.ID,R.NOTIFY.DETAIL)

RETURN
END
