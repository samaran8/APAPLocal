* @ValidationCode : Mjo3NTQzOTQ4MTk6Q3AxMjUyOjE2ODE4MjgwMDU2NTM6SVRTUzotMTotMToxMjcyOjE6ZmFsc2U6Ti9BOkRFVl8yMDIxMDguMDotMTotMQ==
* @ValidationInfo : Timestamp         : 18 Apr 2023 19:56:45
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : ITSS
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : 1272
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : true
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : DEV_202108.0
* @ValidationInfo : Copyright Temenos Headquarters SA 1993-2021. All rights reserved.
$PACKAGE APAP.REDORETAIL
* Modification History:
* Date                 Who                              Reference                            DESCRIPTION
*11-04-2023            CONVERSION TOOL                AUTO R22 CODE CONVERSION           VM TO @VM ,FM TO @FM SM TO @SM and I++ to I=+1
*11-04-2023          jayasurya H                       MANUAL R22 CODE CONVERSION            NO CHANGES
SUBROUTINE REDO.CARD.PRINT.LOST.PROCESS


* this routine is to validate and mark the card as lost in printing department
* Basic checks to be done is
* Entered Card Type is in requested or not
* Entered Card number is generated in the request
* entered card number is available status in redo card numbers
* entered card is related card lock or not
* reducing stock register for the stock entry raised


    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.REDO.CARD.PRINT.LOST
    $INSERT I_F.REDO.CARD.GENERATION
    $INSERT I_F.REDO.CARD.REQUEST
    $INSERT I_F.REDO.CARD.NUMBERS
    $INSERT I_F.REDO.CARD.NO.LOCK
    $INSERT I_F.REDO.STOCK.REGISTER
    $INSERT I_F.REDO.CARD.SERIES.PARAM



    GOSUB OPEN.FILES

    GOSUB PROCES.LOST

    CALL F.RELEASE(FN.REDO.CARD.GENERATION,ID.NEW,F.REDO.CARD.GENERATION)
    CALL F.RELEASE(FN.REDO.CARD.REQUEST,ID.NEW,F.REDO.CARD.REQUEST)
    CALL F.RELEASE(FN.REDO.STOCK.REGISTER,STK.ID,F.REDO.STOCK.REGISTER)


RETURN

************
OPEN.FILES:
************

    ERR.FLAG=1

    FN.REDO.CARD.REQUEST='F.REDO.CARD.REQUEST'
    F.REDO.CARD.REQUEST=''
    CALL OPF(FN.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST)

    FN.REDO.CARD.GENERATION='F.REDO.CARD.GENERATION'
    F.REDO.CARD.GENERATION=''
    CALL OPF(FN.REDO.CARD.GENERATION,F.REDO.CARD.GENERATION)

    FN.REDO.CARD.NUMBERS='F.REDO.CARD.NUMBERS'
    F.REDO.CARD.NUMBERS=''
    CALL OPF(FN.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS)

    FN.REDO.CARD.NO.LOCK='F.REDO.CARD.NO.LOCK'
    F.REDO.CARD.NO.LOCK=''
    CALL OPF(FN.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK)

    FN.REDO.CARD.SERIES.PARAM='F.REDO.CARD.SERIES.PARAM'

    FN.REDO.STOCK.REGISTER='F.REDO.STOCK.REGISTER'
    F.REDO.STOCK.REGISTER=''
    CALL OPF(FN.REDO.STOCK.REGISTER,F.REDO.STOCK.REGISTER)

    CALL F.READU(FN.REDO.CARD.REQUEST,ID.NEW,R.REDO.CARD.REQUEST,F.REDO.CARD.REQUEST,ERR,'P')
    AGENCY=R.REDO.CARD.REQUEST<REDO.CARD.REQ.AGENCY>
    STOCK.ENT.ID=R.REDO.CARD.REQUEST<REDO.CARD.REQ.PRINTING.SE.ID>
    Y.STATUS    =R.REDO.CARD.REQUEST<REDO.CARD.REQ.STATUS>

    IF Y.STATUS NE '4' AND V$FUNCTION EQ 'I' THEN
        AF=REDO.PRN.LST.CRD.TYPE
        AV=1
        ETEXT='EB-INPUT.NOT.ALLOW'
        CALL STORE.END.ERROR
    END

    CALL F.READU(FN.REDO.CARD.GENERATION,ID.NEW,R.REDO.CARD.GENERATION,F.REDO.CARD.GENERATION,ERR.GEN,'P')

    CALL CACHE.READ(FN.REDO.CARD.SERIES.PARAM,'SYSTEM',R.REDO.CARD.SERIES.PARAM,ERR)

    STK.ID='CARD':'.':ID.COMPANY:'-':R.REDO.CARD.SERIES.PARAM<REDO.CARD.SERIES.PARAM.EMBOSS.DEPT.CODE>

    CALL F.READU(FN.REDO.STOCK.REGISTER,STK.ID,R.STOCK.REGISTER,F.REDO.STOCK.REGISTER,ERR.STOCK,'P')

    Y.CARD.NUMBERS=''
    Y.CARD.TYPE=''

RETURN

*************
PROCES.LOST:
*************

    GEN.CARD.TYPE = R.REDO.CARD.GENERATION<REDO.CARD.REQ.CARD.TYPE>
    CRD.TYPE      = R.NEW(REDO.PRN.LST.CRD.TYPE)
    CNT.TYPE      = DCOUNT(CRD.TYPE,@VM)
    FLAG.TYPE     =0
    POS.TYPE      =1

    FOR POS.TYPE=1 TO CNT.TYPE
        CRD.TYP=CRD.TYPE<1,POS.TYPE>
        LOCATE CRD.TYP IN Y.CARD.TYPE<1> SETTING POS.DUP.TYPE THEN
            AF=REDO.PRN.LST.CRD.TYPE
            AV=POS.TYPE
            ETEXT='ST-REDO.DUPLICATE'
            CALL STORE.END.ERROR
            CONTINUE
        END ELSE
            Y.CARD.TYPE<-1>=CRD.TYP
        END

        GOSUB VALIDATE.TYPE

        IF FLAG.TYPE EQ 0 THEN
            CONTINUE
        END
        GOSUB VALIDATE.CARD
        IF NOT(ERR.FLAG)  THEN
            CONTINUE
        END
    NEXT

RETURN

***************
VALIDATE.TYPE:
***************

    LOCATE CRD.TYP IN GEN.CARD.TYPE<1,1> SETTING POS.GEN THEN

        FLAG.TYPE=1

    END ELSE

        AF=REDO.PRN.LST.CRD.TYPE
        AV=POS.TYPE
        ETEXT='ST-TYPE.NOT.REQUEST'
        CALL STORE.END.ERROR
        FLAG.TYPE=0

    END

RETURN

***************
VALIDATE.CARD:
***************

    CRD.NUMBERS.LOST=R.NEW(REDO.PRN.LST.CRD.NUMBER.LOST)<1,POS.TYPE>

    GEN.NUMBERS     =R.REDO.CARD.GENERATION<REDO.CARD.GEN.CARD.NUMBERS,POS.GEN>

    LOST.CNT        =DCOUNT(CRD.NUMBERS.LOST,@SM)

    POS.CNT=1

    REDO.NUMBERS.ID=CRD.TYP:'.':AGENCY

    CALL F.READU(FN.REDO.CARD.NUMBERS,REDO.NUMBERS.ID,R.REDO.CARD.NUMBERS,F.REDO.CARD.NUMBERS,ERR.NUMBRS,'P')

    CALL F.READU(FN.REDO.CARD.NO.LOCK,REDO.NUMBERS.ID,R.REDO.CARD.NO.LOCK,F.REDO.CARD.NO.LOCK,ERR.LOCK,'P')
    CRD.NUMBERS=R.REDO.CARD.NUMBERS<REDO.CARD.NUM.CARD.NUMBER>
    CRD.STATUS =R.REDO.CARD.NUMBERS<REDO.CARD.NUM.STATUS>

    Y.REDO.CARD.NUMBERS=''
    LOOP
        REMOVE CRD.NUM FROM CRD.NUMBERS.LOST SETTING POS.CRD
    WHILE CRD.NUM NE ''
        LOCATE CRD.NUM IN Y.REDO.CARD.NUMBERS<1> SETTING POS.DUP.CARD THEN
            AF=REDO.PRN.LST.CRD.NUMBER.LOST
            AV=POS.TYPE
            AS=POS.CNT
            ETEXT='ST-REDO.DUPLICATE'
            CALL STORE.END.ERROR
            ERR.FLAG=0

            CONTINUE

        END ELSE
            Y.REDO.CARD.NUMBERS<-1>=CRD.NUM

        END

        LOCATE CRD.NUM IN GEN.NUMBERS<1,1,1> SETTING POS.GEN.NUM THEN

            LOCATE CRD.NUM IN CRD.NUMBERS<1,1> SETTING CRD.NUM.POS THEN

                BEGIN CASE

                    CASE CRD.STATUS<1,CRD.NUM.POS> EQ 'AVAILABLE' AND R.REDO.CARD.NUMBERS<REDO.CARD.NUM.EMBOSS.TYPE,CRD.NUM.POS> EQ 'PREEMBOZADA'


                    CASE CRD.STATUS<1,CRD.NUM.POS> EQ 'INUSE' AND R.REDO.CARD.NUMBERS<REDO.CARD.NUM.EMBOSS.TYPE,CRD.NUM.POS> EQ 'PERSONALIZADA'


                    CASE OTHERWISE

                        AF=REDO.PRN.LST.CRD.NUMBER.LOST
                        AV=POS.TYPE
                        AS=POS.CNT
                        ETEXT='ST-CARD.IN.USE'
                        CALL STORE.END.ERROR
                        ERR.FLAG=0

                END CASE

            END ELSE
                CONTINUE
            END

        END ELSE
            AF=REDO.PRN.LST.CRD.NUMBER.LOST
            AV=POS.TYPE
            AS= POS.CNT
            ETEXT='ST-CRD.NOT.REQUESTED'
            CALL STORE.END.ERROR
            ERR.FLAG=0
        END

        POS.CNT += 1
        CRD.NUM=''
    REPEAT

RETURN

END
